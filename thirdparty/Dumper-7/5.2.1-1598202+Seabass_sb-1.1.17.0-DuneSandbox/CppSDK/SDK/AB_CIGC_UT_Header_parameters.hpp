#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CIGC_UT_Header

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function AB_CIGC_UT_Header.AB_CIGC_UT_Header_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_CIGC_UT_Header_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CIGC_UT_Header_C_AnimGraph) == 0x000008, "Wrong alignment on AB_CIGC_UT_Header_C_AnimGraph");
static_assert(sizeof(AB_CIGC_UT_Header_C_AnimGraph) == 0x000010, "Wrong size on AB_CIGC_UT_Header_C_AnimGraph");
static_assert(offsetof(AB_CIGC_UT_Header_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_CIGC_UT_Header_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AB_CIGC_UT_Header.AB_CIGC_UT_Header_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_CIGC_UT_Header_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_UT_Header_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_CIGC_UT_Header_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_CIGC_UT_Header_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_CIGC_UT_Header_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_CIGC_UT_Header_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_CIGC_UT_Header_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_CIGC_UT_Header.AB_CIGC_UT_Header_C.ExecuteUbergraph_AB_CIGC_UT_Header
// 0x00B8 (0x00B8 - 0x0000)
struct AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IKSolver_Offset;                          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IKSolver_bIsGrounded;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IKSolver_Offset_1;                        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IKSolver_bIsGrounded_1;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType;                           // 0x0088(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_HarvestingVFX_Output_VacuumVFX;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Delta_Time_X_ImplicitCast;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header) == 0x000008, "Wrong alignment on AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header");
static_assert(sizeof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header) == 0x0000B8, "Wrong size on AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, EntryPoint) == 0x000000, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x00000C, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000014, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Array_Get_Item) == 0x000018, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, K2Node_Event_DeltaTimeX) == 0x000020, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_IKSolver_Offset) == 0x000028, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_IKSolver_Offset' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_IKSolver_bIsGrounded) == 0x000040, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_IKSolver_bIsGrounded' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_FInterpTo_ReturnValue) == 0x000048, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_FInterpTo_ReturnValue_1) == 0x000050, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x000058, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00005C, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_IKSolver_Offset_1) == 0x000060, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_IKSolver_Offset_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_IKSolver_bIsGrounded_1) == 0x000078, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_IKSolver_bIsGrounded_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_FInterpTo_ReturnValue_2) == 0x000080, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, K2Node_Event_ModuleType) == 0x000088, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::K2Node_Event_ModuleType' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_HarvestingVFX_Output_VacuumVFX) == 0x000090, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_HarvestingVFX_Output_VacuumVFX' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, K2Node_VariableSet_Delta_Time_X_ImplicitCast) == 0x0000A8, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::K2Node_VariableSet_Delta_Time_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0000B0, "Member 'AB_CIGC_UT_Header_C_ExecuteUbergraph_AB_CIGC_UT_Header::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function AB_CIGC_UT_Header.AB_CIGC_UT_Header_C.IKSolver
// 0x02D0 (0x02D0 - 0x0000)
struct AB_CIGC_UT_Header_C_IKSolver final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGrounded_0;                                     // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3[0x1];                                      // 0x01D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_UT_Header_C_IKSolver) == 0x000008, "Wrong alignment on AB_CIGC_UT_Header_C_IKSolver");
static_assert(sizeof(AB_CIGC_UT_Header_C_IKSolver) == 0x0002D0, "Wrong size on AB_CIGC_UT_Header_C_IKSolver");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, SocketName) == 0x000000, "Member 'AB_CIGC_UT_Header_C_IKSolver::SocketName' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, Offset) == 0x000008, "Member 'AB_CIGC_UT_Header_C_IKSolver::Offset' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, bIsGrounded_0) == 0x000020, "Member 'AB_CIGC_UT_Header_C_IKSolver::bIsGrounded_0' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, Temp_object_Variable) == 0x000028, "Member 'AB_CIGC_UT_Header_C_IKSolver::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_GetOwningComponent_ReturnValue) == 0x000058, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_MakeVector_ReturnValue_1) == 0x000060, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_GetSocketLocation_ReturnValue) == 0x000080, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_MakeVector_ReturnValue_2) == 0x0000B8, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_LineTraceSingle_OutHit) == 0x0000E8, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_LineTraceSingle_ReturnValue) == 0x0001D0, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D1, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D2, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_Time) == 0x0001D4, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_Distance) == 0x0001D8, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002A8, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Header_C_IKSolver, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0002C8, "Member 'AB_CIGC_UT_Header_C_IKSolver::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AB_CIGC_UT_Header.AB_CIGC_UT_Header_C.OnVehicleModuleBroken
// 0x0001 (0x0001 - 0x0000)
struct AB_CIGC_UT_Header_C_OnVehicleModuleBroken final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_UT_Header_C_OnVehicleModuleBroken) == 0x000001, "Wrong alignment on AB_CIGC_UT_Header_C_OnVehicleModuleBroken");
static_assert(sizeof(AB_CIGC_UT_Header_C_OnVehicleModuleBroken) == 0x000001, "Wrong size on AB_CIGC_UT_Header_C_OnVehicleModuleBroken");
static_assert(offsetof(AB_CIGC_UT_Header_C_OnVehicleModuleBroken, ModuleType) == 0x000000, "Member 'AB_CIGC_UT_Header_C_OnVehicleModuleBroken::ModuleType' has a wrong offset!");

}

