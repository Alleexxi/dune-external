#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TensionLevel_BaseArild

#include "Basic.hpp"

#include "BP_TensionLevel_BaseArild_classes.hpp"
#include "BP_TensionLevel_BaseArild_parameters.hpp"


namespace SDK
{

// Function BP_TensionLevel_BaseArild.BP_TensionLevel_BaseArild_C.BlueprintShouldDeactivate
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAudioThreatInfo&          CurrentThreatInfo                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const float                             TimeSinceActivated                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_TensionLevel_BaseArild_C::BlueprintShouldDeactivate(const struct FAudioThreatInfo& CurrentThreatInfo, const float TimeSinceActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TensionLevel_BaseArild_C", "BlueprintShouldDeactivate");

	Params::BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate Parms{};

	Parms.CurrentThreatInfo = std::move(CurrentThreatInfo);
	Parms.TimeSinceActivated = TimeSinceActivated;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TensionLevel_BaseArild.BP_TensionLevel_BaseArild_C.BlueprintShouldActivate
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioThreatLevel*                PreviousThreatLevel                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FAudioThreatInfo&          CurrentThreatInfo                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_TensionLevel_BaseArild_C::BlueprintShouldActivate(class UAudioThreatLevel* PreviousThreatLevel, const struct FAudioThreatInfo& CurrentThreatInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TensionLevel_BaseArild_C", "BlueprintShouldActivate");

	Params::BP_TensionLevel_BaseArild_C_BlueprintShouldActivate Parms{};

	Parms.PreviousThreatLevel = PreviousThreatLevel;
	Parms.CurrentThreatInfo = std::move(CurrentThreatInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TensionLevel_BaseArild.BP_TensionLevel_BaseArild_C.Activation Logic
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAudioThreatInfo&                Current_Threat_Info                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   Should_Activate                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TensionLevel_BaseArild_C::Activation_Logic(struct FAudioThreatInfo& Current_Threat_Info, bool* Should_Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TensionLevel_BaseArild_C", "Activation Logic");

	Params::BP_TensionLevel_BaseArild_C_Activation_Logic Parms{};

	Parms.Current_Threat_Info = std::move(Current_Threat_Info);

	UObject::ProcessEvent(Func, &Parms);

	Current_Threat_Info = std::move(Parms.Current_Threat_Info);

	if (Should_Activate != nullptr)
		*Should_Activate = Parms.Should_Activate;
}

}

