#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightConeSpotlight_Component

#include "Basic.hpp"

#include "BP_LightConeSpotlight_Component_classes.hpp"
#include "BP_LightConeSpotlight_Component_parameters.hpp"


namespace SDK
{

// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.ScaleSpotlightConeMeshToFitSpotlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpotLightComponent*              SpotLight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Spotlight_Cone_Mesh                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_LightConeSpotlight_Component_C::ScaleSpotlightConeMeshToFitSpotlight(class USpotLightComponent* SpotLight, class USceneComponent* Spotlight_Cone_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightConeSpotlight_Component_C", "ScaleSpotlightConeMeshToFitSpotlight");

	Params::BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight Parms{};

	Parms.SpotLight = SpotLight;
	Parms.Spotlight_Cone_Mesh = Spotlight_Cone_Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.SetAtmosphericMaterialValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpotLightComponent*              SpotLight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              SpotlightConeMesh                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  AtmosphericIntensity                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AtmosphericSourceIntensity                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurnOffLightConeDuringDay_                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LengthOfTransition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HourShift                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MinimumDayIntensity                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        DynamicMaterialInstance                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_LightConeSpotlight_Component_C::SetAtmosphericMaterialValues(class USpotLightComponent* SpotLight, class UPrimitiveComponent* SpotlightConeMesh, double AtmosphericIntensity, double AtmosphericSourceIntensity, bool TurnOffLightConeDuringDay_, double LengthOfTransition, double HourShift, double MinimumDayIntensity, class UMaterialInstanceDynamic** DynamicMaterialInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightConeSpotlight_Component_C", "SetAtmosphericMaterialValues");

	Params::BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues Parms{};

	Parms.SpotLight = SpotLight;
	Parms.SpotlightConeMesh = SpotlightConeMesh;
	Parms.AtmosphericIntensity = AtmosphericIntensity;
	Parms.AtmosphericSourceIntensity = AtmosphericSourceIntensity;
	Parms.TurnOffLightConeDuringDay_ = TurnOffLightConeDuringDay_;
	Parms.LengthOfTransition = LengthOfTransition;
	Parms.HourShift = HourShift;
	Parms.MinimumDayIntensity = MinimumDayIntensity;

	UObject::ProcessEvent(Func, &Parms);

	if (DynamicMaterialInstance != nullptr)
		*DynamicMaterialInstance = Parms.DynamicMaterialInstance;
}


// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.SetEmissiveMaterialValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpotLightComponent*              SpotLight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   EmissiveMaterialIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EmissiveColorParameterName                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EmissiveIntensityParameterName                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 MaxEmissiveIntensity                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        DynamicMaterialInstance                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_LightConeSpotlight_Component_C::SetEmissiveMaterialValues(class USpotLightComponent* SpotLight, class UPrimitiveComponent* StaticMesh, int32 EmissiveMaterialIndex, class FName EmissiveColorParameterName, class FName EmissiveIntensityParameterName, double* MaxEmissiveIntensity, class UMaterialInstanceDynamic** DynamicMaterialInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightConeSpotlight_Component_C", "SetEmissiveMaterialValues");

	Params::BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues Parms{};

	Parms.SpotLight = SpotLight;
	Parms.StaticMesh = StaticMesh;
	Parms.EmissiveMaterialIndex = EmissiveMaterialIndex;
	Parms.EmissiveColorParameterName = EmissiveColorParameterName;
	Parms.EmissiveIntensityParameterName = EmissiveIntensityParameterName;

	UObject::ProcessEvent(Func, &Parms);

	if (MaxEmissiveIntensity != nullptr)
		*MaxEmissiveIntensity = Parms.MaxEmissiveIntensity;

	if (DynamicMaterialInstance != nullptr)
		*DynamicMaterialInstance = Parms.DynamicMaterialInstance;
}


// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.SetLightValues
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpotLightComponent*              SpotLight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LightColor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxLightIntensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AttenuationRadius                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InnerConeAngle                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OuterConeAngle                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LightConeSpotlight_Component_C::SetLightValues(class USpotLightComponent* SpotLight, const struct FLinearColor& LightColor, double MaxLightIntensity, double AttenuationRadius, double InnerConeAngle, double OuterConeAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightConeSpotlight_Component_C", "SetLightValues");

	Params::BP_LightConeSpotlight_Component_C_SetLightValues Parms{};

	Parms.SpotLight = SpotLight;
	Parms.LightColor = std::move(LightColor);
	Parms.MaxLightIntensity = MaxLightIntensity;
	Parms.AttenuationRadius = AttenuationRadius;
	Parms.InnerConeAngle = InnerConeAngle;
	Parms.OuterConeAngle = OuterConeAngle;

	UObject::ProcessEvent(Func, &Parms);
}

}

