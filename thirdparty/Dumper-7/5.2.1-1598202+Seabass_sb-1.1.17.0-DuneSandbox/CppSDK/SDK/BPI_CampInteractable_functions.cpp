#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CampInteractable

#include "Basic.hpp"

#include "BPI_CampInteractable_classes.hpp"
#include "BPI_CampInteractable_parameters.hpp"


namespace SDK
{

// Function BPI_CampInteractable.BPI_CampInteractable_C.TrySabotageCampActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_CampInteractable_C::TrySabotageCampActor(class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CampInteractable_C", "TrySabotageCampActor");

	Params::BPI_CampInteractable_C_TrySabotageCampActor Parms{};

	Parms.Instigator = Instigator;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_CampInteractable.BPI_CampInteractable_C.TryTriggerCampActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_CampInteractable_C::TryTriggerCampActor(class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CampInteractable_C", "TryTriggerCampActor");

	Params::BPI_CampInteractable_C_TryTriggerCampActor Parms{};

	Parms.Instigator = Instigator;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_CampInteractable.BPI_CampInteractable_C.GetSystemState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// ECampSystemStates*                      State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CampInteractable_C::GetSystemState(ECampSystemStates* State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CampInteractable_C", "GetSystemState");

	Params::BPI_CampInteractable_C_GetSystemState Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}

}

