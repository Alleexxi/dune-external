#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerEventsComponent

#include "Basic.hpp"

#include "BP_PlayerEventsComponent_classes.hpp"
#include "BP_PlayerEventsComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.TryTriggerNearestPvEDescriptor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerEventsComponent_C::TryTriggerNearestPvEDescriptor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "TryTriggerNearestPvEDescriptor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.SetPvEComposition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    NewComposition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::SetPvEComposition(const class FString& NewComposition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "SetPvEComposition");

	Params::BP_PlayerEventsComponent_C_SetPvEComposition Parms{};

	Parms.NewComposition = std::move(NewComposition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.RequestPvEDebugInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerEventsComponent_C::RequestPvEDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "RequestPvEDebugInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.RequestPvECompositionLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerEventsComponent_C::RequestPvECompositionLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "RequestPvECompositionLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.ReportEventMsg
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Msg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::ReportEventMsg(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "ReportEventMsg");

	Params::BP_PlayerEventsComponent_C_ReportEventMsg Parms{};

	Parms.Msg = std::move(Msg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.ReceivePOIs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FFPlayerEventsPOI>& POIs                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_PlayerEventsComponent_C::ReceivePOIs(const TArray<struct FFPlayerEventsPOI>& POIs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "ReceivePOIs");

	Params::BP_PlayerEventsComponent_C_ReceivePOIs Parms{};

	Parms.POIs = std::move(POIs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.ParseAndAddPOI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFPlayerEventsPOI>&       POIs                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class FName                             InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FFTeleportMapPOITypes&     POIType                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::ParseAndAddPOI(class AActor* InActor, TArray<struct FFPlayerEventsPOI>& POIs, class FName InType, const struct FFTeleportMapPOITypes& POIType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "ParseAndAddPOI");

	Params::BP_PlayerEventsComponent_C_ParseAndAddPOI Parms{};

	Parms.InActor = InActor;
	Parms.POIs = std::move(POIs);
	Parms.InType = InType;
	Parms.POIType = std::move(POIType);

	UObject::ProcessEvent(Func, &Parms);

	POIs = std::move(Parms.POIs);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.OnOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Admin_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::OnOpen(bool Admin_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "OnOpen");

	Params::BP_PlayerEventsComponent_C_OnOpen Parms{};

	Parms.Admin_ = Admin_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.LogFoundPOIs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumberOfPOIs                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::LogFoundPOIs(int32 NumberOfPOIs, class FName Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "LogFoundPOIs");

	Params::BP_PlayerEventsComponent_C_LogFoundPOIs Parms{};

	Parms.NumberOfPOIs = NumberOfPOIs;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.GetPOIs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::GetPOIs(class UObject* Instigator, class FName Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "GetPOIs");

	Params::BP_PlayerEventsComponent_C_GetPOIs Parms{};

	Parms.Instigator = Instigator;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.GetCachedPOIs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFPlayerEventsPOI>*       POIs                                                   (Parm, OutParm, ContainsInstancedReference)

void UBP_PlayerEventsComponent_C::GetCachedPOIs(class FName InType, class UObject* Instigator, TArray<struct FFPlayerEventsPOI>* POIs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "GetCachedPOIs");

	Params::BP_PlayerEventsComponent_C_GetCachedPOIs Parms{};

	Parms.InType = InType;
	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);

	if (POIs != nullptr)
		*POIs = std::move(Parms.POIs);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.FindItemDrivenContractPOIs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFPlayerEventsPOI>&       POIs                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_PlayerEventsComponent_C::FindItemDrivenContractPOIs(class UObject* Instigator, class FName InType, TArray<struct FFPlayerEventsPOI>& POIs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "FindItemDrivenContractPOIs");

	Params::BP_PlayerEventsComponent_C_FindItemDrivenContractPOIs Parms{};

	Parms.Instigator = Instigator;
	Parms.InType = InType;
	Parms.POIs = std::move(POIs);

	UObject::ProcessEvent(Func, &Parms);

	POIs = std::move(Parms.POIs);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.FindContractsLocationsPOIs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFPlayerEventsPOI>&       POIs                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_PlayerEventsComponent_C::FindContractsLocationsPOIs(class UObject* Instigator, class FName InType, TArray<struct FFPlayerEventsPOI>& POIs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "FindContractsLocationsPOIs");

	Params::BP_PlayerEventsComponent_C_FindContractsLocationsPOIs Parms{};

	Parms.Instigator = Instigator;
	Parms.InType = InType;
	Parms.POIs = std::move(POIs);

	UObject::ProcessEvent(Func, &Parms);

	POIs = std::move(Parms.POIs);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.ExecuteUbergraph_BP_PlayerEventsComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::ExecuteUbergraph_BP_PlayerEventsComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "ExecuteUbergraph_BP_PlayerEventsComponent");

	Params::BP_PlayerEventsComponent_C_ExecuteUbergraph_BP_PlayerEventsComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.AddPOI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFPlayerEventsPOI>&       POIs                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::AddPOI(TArray<struct FFPlayerEventsPOI>& POIs, const class FString& Name_0, class FName Type, uint8 SubType, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "AddPOI");

	Params::BP_PlayerEventsComponent_C_AddPOI Parms{};

	Parms.POIs = std::move(POIs);
	Parms.Name_0 = std::move(Name_0);
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	POIs = std::move(Parms.POIs);
}


// Function BP_PlayerEventsComponent.BP_PlayerEventsComponent_C.AddLocationPOI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFPlayerEventsPOI>&       POIs                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const class FString&                    Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   SubType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerEventsComponent_C::AddLocationPOI(TArray<struct FFPlayerEventsPOI>& POIs, const class FString& Name_0, class FName Type, uint8 SubType, class AActor* Actor, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerEventsComponent_C", "AddLocationPOI");

	Params::BP_PlayerEventsComponent_C_AddLocationPOI Parms{};

	Parms.POIs = std::move(POIs);
	Parms.Name_0 = std::move(Name_0);
	Parms.Type = Type;
	Parms.SubType = SubType;
	Parms.Actor = Actor;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	POIs = std::move(Parms.POIs);
}

}

