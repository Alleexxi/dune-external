#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Debug_Green

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GC_Debug_Green.GC_Debug_Green_C.ExecuteUbergraph_GC_Debug_Green
// 0x0038 (0x0038 - 0x0000)
struct GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green) == 0x000008, "Wrong alignment on GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green");
static_assert(sizeof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green) == 0x000038, "Wrong size on GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green");
static_assert(offsetof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green, EntryPoint) == 0x000000, "Member 'GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'GC_Debug_Green_C_ExecuteUbergraph_GC_Debug_Green::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function GC_Debug_Green.GC_Debug_Green_C.OnActive
// 0x00E8 (0x00E8 - 0x0000)
struct GC_Debug_Green_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Debug_Green_C_OnActive) == 0x000008, "Wrong alignment on GC_Debug_Green_C_OnActive");
static_assert(sizeof(GC_Debug_Green_C_OnActive) == 0x0000E8, "Wrong size on GC_Debug_Green_C_OnActive");
static_assert(offsetof(GC_Debug_Green_C_OnActive, MyTarget) == 0x000000, "Member 'GC_Debug_Green_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_OnActive, Parameters) == 0x000008, "Member 'GC_Debug_Green_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GC_Debug_Green_C_OnActive::ReturnValue' has a wrong offset!");

// Function GC_Debug_Green.GC_Debug_Green_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GC_Debug_Green_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Debug_Green_C_OnRemove) == 0x000008, "Wrong alignment on GC_Debug_Green_C_OnRemove");
static_assert(sizeof(GC_Debug_Green_C_OnRemove) == 0x0000E8, "Wrong size on GC_Debug_Green_C_OnRemove");
static_assert(offsetof(GC_Debug_Green_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_Debug_Green_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_OnRemove, Parameters) == 0x000008, "Member 'GC_Debug_Green_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Debug_Green_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GC_Debug_Green_C_OnRemove::ReturnValue' has a wrong offset!");

// Function GC_Debug_Green.GC_Debug_Green_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GC_Debug_Green_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Debug_Green_C_ReceiveTick) == 0x000004, "Wrong alignment on GC_Debug_Green_C_ReceiveTick");
static_assert(sizeof(GC_Debug_Green_C_ReceiveTick) == 0x000004, "Wrong size on GC_Debug_Green_C_ReceiveTick");
static_assert(offsetof(GC_Debug_Green_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GC_Debug_Green_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

