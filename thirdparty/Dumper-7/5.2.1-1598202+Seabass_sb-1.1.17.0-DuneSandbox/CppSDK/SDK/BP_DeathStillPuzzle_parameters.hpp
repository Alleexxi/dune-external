#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeathStillPuzzle

#include "Basic.hpp"

#include "E_OuterCircleStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_MidCircleStates_structs.hpp"
#include "E_InnerCircleStates_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature final
{
public:
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteraction*                     Interaction;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature");
static_assert(sizeof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature) == 0x000010, "Wrong size on BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature");
static_assert(offsetof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature, DuneCharacter) == 0x000000, "Member 'BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature::DuneCharacter' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature, Interaction) == 0x000008, "Member 'BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature::Interaction' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature final
{
public:
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteraction*                     Interaction;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature");
static_assert(sizeof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature) == 0x000010, "Wrong size on BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature");
static_assert(offsetof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature, DuneCharacter) == 0x000000, "Member 'BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature::DuneCharacter' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature, Interaction) == 0x000008, "Member 'BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature::Interaction' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature final
{
public:
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteraction*                     Interaction;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature");
static_assert(sizeof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature) == 0x000010, "Wrong size on BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature");
static_assert(offsetof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature, DuneCharacter) == 0x000000, "Member 'BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature::DuneCharacter' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature, Interaction) == 0x000008, "Member 'BP_DeathStillPuzzle_C_BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature::Interaction' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.BP_GetJourneyStoryEventComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent final
{
public:
	class UJourneyStoryEventComponent*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent");
static_assert(sizeof(BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent) == 0x000008, "Wrong size on BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent");
static_assert(offsetof(BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent, ReturnValue) == 0x000000, "Member 'BP_DeathStillPuzzle_C_BP_GetJourneyStoryEventComponent::ReturnValue' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.ExecuteUbergraph_BP_DeathStillPuzzle
// 0x0420 (0x0420 - 0x0000)
struct BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          K2Node_DynamicCast_AsFc_Audio_Event;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          K2Node_DynamicCast_AsFc_Audio_Event_1;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_ComponentBoundEvent_DuneCharacter_2;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteraction*                     K2Node_ComponentBoundEvent_Interaction_2;          // 0x0050(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_ComponentBoundEvent_DuneCharacter_1;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteraction*                     K2Node_ComponentBoundEvent_Interaction_1;          // 0x0060(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_ComponentBoundEvent_DuneCharacter;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteraction*                     K2Node_ComponentBoundEvent_Interaction;            // 0x0070(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_TargetRotation_2;               // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_CustomEvent_TargetRotation_1;               // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               K2Node_CustomEvent_TargetRotation;                 // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x01E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue_2;                      // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x02E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x03D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue;             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x03EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue_1;               // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue_1;           // 0x03FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x03FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue_2;               // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue_2;           // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x0403(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue_1;          // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue_3;               // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue_4;               // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue_3;           // 0x0407(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Percent_ByteByte_ReturnValue_4;           // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_3;              // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_4;              // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x040E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x040F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0413(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0417(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle");
static_assert(sizeof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle) == 0x000420, "Wrong size on BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, EntryPoint) == 0x000000, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CustomEvent_Loaded_1) == 0x000008, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, Temp_object_Variable) == 0x000010, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_DynamicCast_AsFc_Audio_Event) == 0x000018, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_DynamicCast_AsFc_Audio_Event' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CustomEvent_Loaded) == 0x000028, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, Temp_object_Variable_1) == 0x000030, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_DynamicCast_AsFc_Audio_Event_1) == 0x000038, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_DynamicCast_AsFc_Audio_Event_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_ComponentBoundEvent_DuneCharacter_2) == 0x000048, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_ComponentBoundEvent_DuneCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_ComponentBoundEvent_Interaction_2) == 0x000050, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_ComponentBoundEvent_Interaction_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_ComponentBoundEvent_DuneCharacter_1) == 0x000058, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_ComponentBoundEvent_DuneCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_ComponentBoundEvent_Interaction_1) == 0x000060, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_ComponentBoundEvent_Interaction_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_ComponentBoundEvent_DuneCharacter) == 0x000068, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_ComponentBoundEvent_DuneCharacter' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_ComponentBoundEvent_Interaction) == 0x000070, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_ComponentBoundEvent_Interaction' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CustomEvent_TargetRotation_2) == 0x000078, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CustomEvent_TargetRotation_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CustomEvent_TargetRotation_1) == 0x000090, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CustomEvent_TargetRotation_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_RLerp_ReturnValue) == 0x0000A8, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000C0, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CustomEvent_TargetRotation) == 0x0001A8, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CustomEvent_TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_RLerp_ReturnValue_1) == 0x0001C0, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Not_PreBool_ReturnValue) == 0x0001D8, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0001E0, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002C8, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_RLerp_ReturnValue_2) == 0x0002D0, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_RLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x0002E8, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003D0, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CreateDelegate_OutputDelegate) == 0x0003D4, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0003E4, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Not_PreBool_ReturnValue_2) == 0x0003E5, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0003E6, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Add_ByteByte_ReturnValue) == 0x0003E7, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Percent_ByteByte_ReturnValue) == 0x0003E8, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Percent_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003EC, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_GetValidValue_ReturnValue) == 0x0003FC, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Add_ByteByte_ReturnValue_1) == 0x0003FD, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Add_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Percent_ByteByte_ReturnValue_1) == 0x0003FE, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Percent_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_GetValidValue_ReturnValue_1) == 0x0003FF, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000400, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Add_ByteByte_ReturnValue_2) == 0x000401, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Add_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Percent_ByteByte_ReturnValue_2) == 0x000402, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Percent_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_GetValidValue_ReturnValue_2) == 0x000403, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Subtract_ByteByte_ReturnValue_1) == 0x000404, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Subtract_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Add_ByteByte_ReturnValue_3) == 0x000405, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Add_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Add_ByteByte_ReturnValue_4) == 0x000406, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Add_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Percent_ByteByte_ReturnValue_3) == 0x000407, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Percent_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Percent_ByteByte_ReturnValue_4) == 0x000408, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Percent_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_GetValidValue_ReturnValue_3) == 0x000409, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_GetValidValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_GetValidValue_ReturnValue_4) == 0x00040A, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_GetValidValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00040B, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00040C, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_BooleanAND_ReturnValue) == 0x00040D, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00040E, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_BooleanAND_ReturnValue_1) == 0x00040F, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000410, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000411, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000412, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000413, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000414, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Not_PreBool_ReturnValue_3) == 0x000415, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Not_PreBool_ReturnValue_4) == 0x000416, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000417, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle, CallFunc_Not_PreBool_ReturnValue_5) == 0x000418, "Member 'BP_DeathStillPuzzle_C_ExecuteUbergraph_BP_DeathStillPuzzle::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.OnLoaded_2C1765F14C54D8E72AD514845D50C925
// 0x0008 (0x0008 - 0x0000)
struct BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925");
static_assert(sizeof(BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925) == 0x000008, "Wrong size on BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925, Loaded) == 0x000000, "Member 'BP_DeathStillPuzzle_C_OnLoaded_2C1765F14C54D8E72AD514845D50C925::Loaded' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06
// 0x0008 (0x0008 - 0x0000)
struct BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06");
static_assert(sizeof(BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06) == 0x000008, "Wrong size on BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06, Loaded) == 0x000000, "Member 'BP_DeathStillPuzzle_C_OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06::Loaded' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.OnRep_InnerCircleState
// 0x00E0 (0x00E0 - 0x0000)
struct BP_DeathStillPuzzle_C_OnRep_InnerCircleState final
{
public:
	E_InnerCircleStates                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_3;                            // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_4;                            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_5;                            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_6;                            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_7;                            // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_OnRep_InnerCircleState");
static_assert(sizeof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState) == 0x0000E0, "Wrong size on BP_DeathStillPuzzle_C_OnRep_InnerCircleState");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_byte_Variable) == 0x000000, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable) == 0x000008, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_1) == 0x000020, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_2) == 0x000038, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_3) == 0x000050, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_4) == 0x000068, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_5) == 0x000080, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_6) == 0x000098, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, Temp_struct_Variable_7) == 0x0000B0, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_InnerCircleState, K2Node_Select_Default) == 0x0000C8, "Member 'BP_DeathStillPuzzle_C_OnRep_InnerCircleState::K2Node_Select_Default' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.OnRep_MidCircleState
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DeathStillPuzzle_C_OnRep_MidCircleState final
{
public:
	E_MidCircleStates                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_3;                            // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_4;                            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_5;                            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathStillPuzzle_C_OnRep_MidCircleState) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_OnRep_MidCircleState");
static_assert(sizeof(BP_DeathStillPuzzle_C_OnRep_MidCircleState) == 0x0000B0, "Wrong size on BP_DeathStillPuzzle_C_OnRep_MidCircleState");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_byte_Variable) == 0x000000, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_struct_Variable) == 0x000008, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_struct_Variable_1) == 0x000020, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_struct_Variable_2) == 0x000038, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_struct_Variable_3) == 0x000050, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_struct_Variable_4) == 0x000068, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, Temp_struct_Variable_5) == 0x000080, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_MidCircleState, K2Node_Select_Default) == 0x000098, "Member 'BP_DeathStillPuzzle_C_OnRep_MidCircleState::K2Node_Select_Default' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.OnRep_OuterCircleState
// 0x0140 (0x0140 - 0x0000)
struct BP_DeathStillPuzzle_C_OnRep_OuterCircleState final
{
public:
	E_OuterCircleStates                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_3;                            // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_4;                            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_5;                            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_6;                            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_7;                            // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_8;                            // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_9;                            // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_10;                           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_11;                           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_OnRep_OuterCircleState");
static_assert(sizeof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState) == 0x000140, "Wrong size on BP_DeathStillPuzzle_C_OnRep_OuterCircleState");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_byte_Variable) == 0x000000, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable) == 0x000008, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_1) == 0x000020, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_2) == 0x000038, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_3) == 0x000050, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_4) == 0x000068, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_5) == 0x000080, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_6) == 0x000098, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_7) == 0x0000B0, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_8) == 0x0000C8, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_9) == 0x0000E0, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_10) == 0x0000F8, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, Temp_struct_Variable_11) == 0x000110, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_DeathStillPuzzle_C_OnRep_OuterCircleState, K2Node_Select_Default) == 0x000128, "Member 'BP_DeathStillPuzzle_C_OnRep_OuterCircleState::K2Node_Select_Default' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.RotateInnerCircle
// 0x0018 (0x0018 - 0x0000)
struct BP_DeathStillPuzzle_C_RotateInnerCircle final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathStillPuzzle_C_RotateInnerCircle) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_RotateInnerCircle");
static_assert(sizeof(BP_DeathStillPuzzle_C_RotateInnerCircle) == 0x000018, "Wrong size on BP_DeathStillPuzzle_C_RotateInnerCircle");
static_assert(offsetof(BP_DeathStillPuzzle_C_RotateInnerCircle, TargetRotation) == 0x000000, "Member 'BP_DeathStillPuzzle_C_RotateInnerCircle::TargetRotation' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.RotateMidCircle
// 0x0018 (0x0018 - 0x0000)
struct BP_DeathStillPuzzle_C_RotateMidCircle final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathStillPuzzle_C_RotateMidCircle) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_RotateMidCircle");
static_assert(sizeof(BP_DeathStillPuzzle_C_RotateMidCircle) == 0x000018, "Wrong size on BP_DeathStillPuzzle_C_RotateMidCircle");
static_assert(offsetof(BP_DeathStillPuzzle_C_RotateMidCircle, TargetRotation) == 0x000000, "Member 'BP_DeathStillPuzzle_C_RotateMidCircle::TargetRotation' has a wrong offset!");

// Function BP_DeathStillPuzzle.BP_DeathStillPuzzle_C.RotateOuterCircle
// 0x0018 (0x0018 - 0x0000)
struct BP_DeathStillPuzzle_C_RotateOuterCircle final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeathStillPuzzle_C_RotateOuterCircle) == 0x000008, "Wrong alignment on BP_DeathStillPuzzle_C_RotateOuterCircle");
static_assert(sizeof(BP_DeathStillPuzzle_C_RotateOuterCircle) == 0x000018, "Wrong size on BP_DeathStillPuzzle_C_RotateOuterCircle");
static_assert(offsetof(BP_DeathStillPuzzle_C_RotateOuterCircle, TargetRotation) == 0x000000, "Member 'BP_DeathStillPuzzle_C_RotateOuterCircle::TargetRotation' has a wrong offset!");

}

