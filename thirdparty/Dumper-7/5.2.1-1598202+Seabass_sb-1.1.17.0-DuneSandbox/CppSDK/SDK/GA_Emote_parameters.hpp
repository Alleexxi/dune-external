#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Emote

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Emote.GA_Emote_C.CanPlayEmote
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Emote_C_CanPlayEmote final
{
public:
	bool                                          Can_Play_Emote;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   Dune_Character;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LimitTags;                                         // 0x0010(0x0020)(Edit, BlueprintVisible)
	class ADunePlayerCharacter*                   DunePlayerCharacter;                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_GetCachedCharacterSubstates_ReturnValue;  // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0048(0x0020)()
	struct FGameplayTag                           CallFunc_GetCachedCharacterState_ReturnValue;      // 0x0068(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetLimitTags_LimitTags;                   // 0x0078(0x0020)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_C_CanPlayEmote) == 0x000008, "Wrong alignment on GA_Emote_C_CanPlayEmote");
static_assert(sizeof(GA_Emote_C_CanPlayEmote) == 0x0000B0, "Wrong size on GA_Emote_C_CanPlayEmote");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, Can_Play_Emote) == 0x000000, "Member 'GA_Emote_C_CanPlayEmote::Can_Play_Emote' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, Dune_Character) == 0x000008, "Member 'GA_Emote_C_CanPlayEmote::Dune_Character' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, LimitTags) == 0x000010, "Member 'GA_Emote_C_CanPlayEmote::LimitTags' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, DunePlayerCharacter) == 0x000030, "Member 'GA_Emote_C_CanPlayEmote::DunePlayerCharacter' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_GetCachedCharacterSubstates_ReturnValue) == 0x000038, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_GetCachedCharacterSubstates_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000048, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_GetCachedCharacterState_ReturnValue) == 0x000068, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_GetCachedCharacterState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_HasAnyTags_ReturnValue) == 0x000070, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_HasTag_ReturnValue) == 0x000071, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_Not_PreBool_ReturnValue_1) == 0x000073, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_GetLimitTags_LimitTags) == 0x000078, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_GetLimitTags_LimitTags' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000098, "Member 'GA_Emote_C_CanPlayEmote::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, K2Node_DynamicCast_AsDune_Player_Character) == 0x0000A0, "Member 'GA_Emote_C_CanPlayEmote::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_CanPlayEmote, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'GA_Emote_C_CanPlayEmote::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Emote.GA_Emote_C.ExecuteUbergraph_GA_Emote
// 0x02A8 (0x02A8 - 0x0000)
struct GA_Emote_C_ExecuteUbergraph_GA_Emote final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayEmote_Can_Play_Emote;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   CallFunc_CanPlayEmote_Dune_Character;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0070(0x00B0)(ConstParm)
	struct FGameplayTagContainer                  CallFunc_GetLimitTags_LimitTags;                   // 0x0120(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0140(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEmoteItemStats                        CallFunc_GetEmoteItemStatsFromTargetDataHandle_OutEmoteItemStats; // 0x01B0(0x0090)()
	bool                                          CallFunc_GetEmoteItemStatsFromTargetDataHandle_ReturnValue; // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_AnimMontage;                    // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_PlayRate;                       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TryPlayEmoteAnimMontage_PlayRate_ImplicitCast; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TryPlayEmoteAnimMontage_PlayRate_ImplicitCast_1; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreatePlayMontageAndWaitProxy_Rate_ImplicitCast; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_C_ExecuteUbergraph_GA_Emote) == 0x000008, "Wrong alignment on GA_Emote_C_ExecuteUbergraph_GA_Emote");
static_assert(sizeof(GA_Emote_C_ExecuteUbergraph_GA_Emote) == 0x0002A8, "Wrong size on GA_Emote_C_ExecuteUbergraph_GA_Emote");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, EntryPoint) == 0x000000, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_Event_bWasCancelled) == 0x000050, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CustomEvent_Loaded) == 0x000058, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_CanPlayEmote_Can_Play_Emote) == 0x000060, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_CanPlayEmote_Can_Play_Emote' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_CanPlayEmote_Dune_Character) == 0x000068, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_CanPlayEmote_Dune_Character' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_Event_EventData) == 0x000070, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_GetLimitTags_LimitTags) == 0x000120, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_GetLimitTags_LimitTags' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000140, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_Array_Get_Item) == 0x000150, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000160, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_IsValid_ReturnValue) == 0x000169, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000170, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_DynamicCast_AsAnim_Montage) == 0x000178, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CreateDelegate_OutputDelegate_4) == 0x000184, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_IsValid_ReturnValue_1) == 0x000194, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000198, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001A0, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_GetEmoteItemStatsFromTargetDataHandle_OutEmoteItemStats) == 0x0001B0, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_GetEmoteItemStatsFromTargetDataHandle_OutEmoteItemStats' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_GetEmoteItemStatsFromTargetDataHandle_ReturnValue) == 0x000240, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_GetEmoteItemStatsFromTargetDataHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CustomEvent_AnimMontage) == 0x000248, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CustomEvent_AnimMontage' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_CustomEvent_PlayRate) == 0x000250, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_CustomEvent_PlayRate' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000258, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000260, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000268, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_IsValid_ReturnValue_2) == 0x000271, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, Temp_object_Variable) == 0x000278, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_DynamicCast_AsAnim_Montage_2) == 0x000280, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, K2Node_DynamicCast_bSuccess_2) == 0x000288, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_TryPlayEmoteAnimMontage_PlayRate_ImplicitCast) == 0x000290, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_TryPlayEmoteAnimMontage_PlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_TryPlayEmoteAnimMontage_PlayRate_ImplicitCast_1) == 0x000298, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_TryPlayEmoteAnimMontage_PlayRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_ExecuteUbergraph_GA_Emote, CallFunc_CreatePlayMontageAndWaitProxy_Rate_ImplicitCast) == 0x0002A0, "Member 'GA_Emote_C_ExecuteUbergraph_GA_Emote::CallFunc_CreatePlayMontageAndWaitProxy_Rate_ImplicitCast' has a wrong offset!");

// Function GA_Emote.GA_Emote_C.GetLimitTags
// 0x0BF8 (0x0BF8 - 0x0000)
struct GA_Emote_C_GetLimitTags final
{
public:
	class ADunePlayerCharacter*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LimitTags;                                         // 0x0008(0x0020)(Parm, OutParm)
	struct FCharacterTemplateRow                  CachedTemplateRow;                                 // 0x0028(0x05D8)(Edit, BlueprintVisible)
	struct FCharacterTemplateRow                  CallFunc_GetCachedCharacterTemplateRow_OutTemplateRow; // 0x0600(0x05D8)()
	bool                                          CallFunc_GetCachedCharacterTemplateRow_ReturnValue; // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0BE0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_C_GetLimitTags) == 0x000008, "Wrong alignment on GA_Emote_C_GetLimitTags");
static_assert(sizeof(GA_Emote_C_GetLimitTags) == 0x000BF8, "Wrong size on GA_Emote_C_GetLimitTags");
static_assert(offsetof(GA_Emote_C_GetLimitTags, Character) == 0x000000, "Member 'GA_Emote_C_GetLimitTags::Character' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_GetLimitTags, LimitTags) == 0x000008, "Member 'GA_Emote_C_GetLimitTags::LimitTags' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_GetLimitTags, CachedTemplateRow) == 0x000028, "Member 'GA_Emote_C_GetLimitTags::CachedTemplateRow' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_GetLimitTags, CallFunc_GetCachedCharacterTemplateRow_OutTemplateRow) == 0x000600, "Member 'GA_Emote_C_GetLimitTags::CallFunc_GetCachedCharacterTemplateRow_OutTemplateRow' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_GetLimitTags, CallFunc_GetCachedCharacterTemplateRow_ReturnValue) == 0x000BD8, "Member 'GA_Emote_C_GetLimitTags::CallFunc_GetCachedCharacterTemplateRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_GetLimitTags, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000BE0, "Member 'GA_Emote_C_GetLimitTags::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_GetLimitTags, CallFunc_Array_IsEmpty_ReturnValue) == 0x000BF0, "Member 'GA_Emote_C_GetLimitTags::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function GA_Emote.GA_Emote_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Emote_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Emote_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Emote_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Emote_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Emote_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Emote_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Emote_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Emote.GA_Emote_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Emote_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Emote_C_K2_OnEndAbility");
static_assert(sizeof(GA_Emote_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Emote_C_K2_OnEndAbility");
static_assert(offsetof(GA_Emote_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Emote_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Emote.GA_Emote_C.OnLoaded_7DFC8D094DC8AB4DE2767F839654487D
// 0x0008 (0x0008 - 0x0000)
struct GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D) == 0x000008, "Wrong alignment on GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D");
static_assert(sizeof(GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D) == 0x000008, "Wrong size on GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D");
static_assert(offsetof(GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D, Loaded) == 0x000000, "Member 'GA_Emote_C_OnLoaded_7DFC8D094DC8AB4DE2767F839654487D::Loaded' has a wrong offset!");

// Function GA_Emote.GA_Emote_C.TryPlayEmoteAnimMontage
// 0x0010 (0x0010 - 0x0000)
struct GA_Emote_C_TryPlayEmoteAnimMontage final
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_C_TryPlayEmoteAnimMontage) == 0x000008, "Wrong alignment on GA_Emote_C_TryPlayEmoteAnimMontage");
static_assert(sizeof(GA_Emote_C_TryPlayEmoteAnimMontage) == 0x000010, "Wrong size on GA_Emote_C_TryPlayEmoteAnimMontage");
static_assert(offsetof(GA_Emote_C_TryPlayEmoteAnimMontage, AnimMontage) == 0x000000, "Member 'GA_Emote_C_TryPlayEmoteAnimMontage::AnimMontage' has a wrong offset!");
static_assert(offsetof(GA_Emote_C_TryPlayEmoteAnimMontage, PlayRate) == 0x000008, "Member 'GA_Emote_C_TryPlayEmoteAnimMontage::PlayRate' has a wrong offset!");

}

