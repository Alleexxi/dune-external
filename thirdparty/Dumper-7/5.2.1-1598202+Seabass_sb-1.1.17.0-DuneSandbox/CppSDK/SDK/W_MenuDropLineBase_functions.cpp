#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MenuDropLineBase

#include "Basic.hpp"

#include "W_MenuDropLineBase_classes.hpp"
#include "W_MenuDropLineBase_parameters.hpp"


namespace SDK
{

// Function W_MenuDropLineBase.W_MenuDropLineBase_C.SetElementVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          TargetElement                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    True_Or_False                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MenuDropLineBase_C::SetElementVisibility(class UWidget* TargetElement, bool True_Or_False)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MenuDropLineBase_C", "SetElementVisibility");

	Params::W_MenuDropLineBase_C_SetElementVisibility Parms{};

	Parms.TargetElement = TargetElement;
	Parms.True_Or_False = True_Or_False;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MenuDropLineBase.W_MenuDropLineBase_C.SetAngledLineEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MenuDropLineBase_C::SetAngledLineEnabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MenuDropLineBase_C", "SetAngledLineEnabled");

	Params::W_MenuDropLineBase_C_SetAngledLineEnabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MenuDropLineBase.W_MenuDropLineBase_C.Set Shadow Enabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MenuDropLineBase_C::Set_Shadow_Enabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MenuDropLineBase_C", "Set Shadow Enabled");

	Params::W_MenuDropLineBase_C_Set_Shadow_Enabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MenuDropLineBase.W_MenuDropLineBase_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MenuDropLineBase_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MenuDropLineBase_C", "PreConstruct");

	Params::W_MenuDropLineBase_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MenuDropLineBase.W_MenuDropLineBase_C.ExecuteUbergraph_W_MenuDropLineBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MenuDropLineBase_C::ExecuteUbergraph_W_MenuDropLineBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MenuDropLineBase_C", "ExecuteUbergraph_W_MenuDropLineBase");

	Params::W_MenuDropLineBase_C_ExecuteUbergraph_W_MenuDropLineBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

