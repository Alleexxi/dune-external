#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PEvents

#include "Basic.hpp"

#include "FPlayerEventsPOI_structs.hpp"


namespace SDK::Params
{

// Function BPI_PEvents.BPI_PEvents_C.SetPvEComposition
// 0x0010 (0x0010 - 0x0000)
struct BPI_PEvents_C_SetPvEComposition final
{
public:
	class FString                                 NewComposition;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PEvents_C_SetPvEComposition) == 0x000008, "Wrong alignment on BPI_PEvents_C_SetPvEComposition");
static_assert(sizeof(BPI_PEvents_C_SetPvEComposition) == 0x000010, "Wrong size on BPI_PEvents_C_SetPvEComposition");
static_assert(offsetof(BPI_PEvents_C_SetPvEComposition, NewComposition) == 0x000000, "Member 'BPI_PEvents_C_SetPvEComposition::NewComposition' has a wrong offset!");

// Function BPI_PEvents.BPI_PEvents_C.ReportEventMsg
// 0x0010 (0x0010 - 0x0000)
struct BPI_PEvents_C_ReportEventMsg final
{
public:
	class FString                                 Msg;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PEvents_C_ReportEventMsg) == 0x000008, "Wrong alignment on BPI_PEvents_C_ReportEventMsg");
static_assert(sizeof(BPI_PEvents_C_ReportEventMsg) == 0x000010, "Wrong size on BPI_PEvents_C_ReportEventMsg");
static_assert(offsetof(BPI_PEvents_C_ReportEventMsg, Msg) == 0x000000, "Member 'BPI_PEvents_C_ReportEventMsg::Msg' has a wrong offset!");

// Function BPI_PEvents.BPI_PEvents_C.ReceivePOIs
// 0x0010 (0x0010 - 0x0000)
struct BPI_PEvents_C_ReceivePOIs final
{
public:
	TArray<struct FFPlayerEventsPOI>              POIs;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BPI_PEvents_C_ReceivePOIs) == 0x000008, "Wrong alignment on BPI_PEvents_C_ReceivePOIs");
static_assert(sizeof(BPI_PEvents_C_ReceivePOIs) == 0x000010, "Wrong size on BPI_PEvents_C_ReceivePOIs");
static_assert(offsetof(BPI_PEvents_C_ReceivePOIs, POIs) == 0x000000, "Member 'BPI_PEvents_C_ReceivePOIs::POIs' has a wrong offset!");

// Function BPI_PEvents.BPI_PEvents_C.OnOpen
// 0x0001 (0x0001 - 0x0000)
struct BPI_PEvents_C_OnOpen final
{
public:
	bool                                          Admin_;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PEvents_C_OnOpen) == 0x000001, "Wrong alignment on BPI_PEvents_C_OnOpen");
static_assert(sizeof(BPI_PEvents_C_OnOpen) == 0x000001, "Wrong size on BPI_PEvents_C_OnOpen");
static_assert(offsetof(BPI_PEvents_C_OnOpen, Admin_) == 0x000000, "Member 'BPI_PEvents_C_OnOpen::Admin_' has a wrong offset!");

// Function BPI_PEvents.BPI_PEvents_C.GetPOIs
// 0x0010 (0x0010 - 0x0000)
struct BPI_PEvents_C_GetPOIs final
{
public:
	class UObject*                                Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Type;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PEvents_C_GetPOIs) == 0x000008, "Wrong alignment on BPI_PEvents_C_GetPOIs");
static_assert(sizeof(BPI_PEvents_C_GetPOIs) == 0x000010, "Wrong size on BPI_PEvents_C_GetPOIs");
static_assert(offsetof(BPI_PEvents_C_GetPOIs, Instigator) == 0x000000, "Member 'BPI_PEvents_C_GetPOIs::Instigator' has a wrong offset!");
static_assert(offsetof(BPI_PEvents_C_GetPOIs, Type) == 0x000008, "Member 'BPI_PEvents_C_GetPOIs::Type' has a wrong offset!");

}

