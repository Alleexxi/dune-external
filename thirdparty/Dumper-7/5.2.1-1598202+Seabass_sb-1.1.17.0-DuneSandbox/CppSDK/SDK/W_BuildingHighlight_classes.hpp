#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BuildingHighlight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_BuildingHighlight.W_BuildingHighlight_C
// 0x0070 (0x0460 - 0x03F0)
class UW_BuildingHighlight_C final : public UBuildingHighlightWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseLoop;                                         // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                BuildingSetInputBorder;                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             HighlightedContent;                                // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_IndicatorHighlighting_C*             IndicatorBottom;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_IndicatorHighlighting_C*             IndicatorLeft;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OverlayBorder;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                SizeBlock;                                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        HighlightSizeX;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighlightSizeY;                                    // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBottomDiamondVisible;                           // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLeftDiamondVisible;                             // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPointglow;                                      // 0x0442(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x5];                                      // 0x0443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     BoxGlowMaterial;                                   // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     PointGlowMaterial;                                 // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void SetDiamondVisibility();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_BuildingHighlight(int32 EntryPoint);
	void Construct();
	void BP_OnTutorialBuildIndicator(const bool bVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_BuildingHighlight_C">();
	}
	static class UW_BuildingHighlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_BuildingHighlight_C>();
	}
};
static_assert(alignof(UW_BuildingHighlight_C) == 0x000010, "Wrong alignment on UW_BuildingHighlight_C");
static_assert(sizeof(UW_BuildingHighlight_C) == 0x000460, "Wrong size on UW_BuildingHighlight_C");
static_assert(offsetof(UW_BuildingHighlight_C, UberGraphFrame) == 0x0003F0, "Member 'UW_BuildingHighlight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, PulseLoop) == 0x0003F8, "Member 'UW_BuildingHighlight_C::PulseLoop' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, BuildingSetInputBorder) == 0x000400, "Member 'UW_BuildingHighlight_C::BuildingSetInputBorder' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, HighlightedContent) == 0x000408, "Member 'UW_BuildingHighlight_C::HighlightedContent' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, IndicatorBottom) == 0x000410, "Member 'UW_BuildingHighlight_C::IndicatorBottom' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, IndicatorLeft) == 0x000418, "Member 'UW_BuildingHighlight_C::IndicatorLeft' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, OverlayBorder) == 0x000420, "Member 'UW_BuildingHighlight_C::OverlayBorder' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, SizeBlock) == 0x000428, "Member 'UW_BuildingHighlight_C::SizeBlock' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, HighlightSizeX) == 0x000430, "Member 'UW_BuildingHighlight_C::HighlightSizeX' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, HighlightSizeY) == 0x000438, "Member 'UW_BuildingHighlight_C::HighlightSizeY' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, bIsBottomDiamondVisible) == 0x000440, "Member 'UW_BuildingHighlight_C::bIsBottomDiamondVisible' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, bIsLeftDiamondVisible) == 0x000441, "Member 'UW_BuildingHighlight_C::bIsLeftDiamondVisible' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, bIsPointglow) == 0x000442, "Member 'UW_BuildingHighlight_C::bIsPointglow' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, BoxGlowMaterial) == 0x000448, "Member 'UW_BuildingHighlight_C::BoxGlowMaterial' has a wrong offset!");
static_assert(offsetof(UW_BuildingHighlight_C, PointGlowMaterial) == 0x000450, "Member 'UW_BuildingHighlight_C::PointGlowMaterial' has a wrong offset!");

}

