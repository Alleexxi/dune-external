#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_SandwormDisplacementFunctions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "LandscapeDisplacement_structs.hpp"


namespace SDK::Params
{

// Function BPFL_SandwormDisplacementFunctions.BPFL_SandwormDisplacementFunctions_C.Breach Displacement
// 0x0288 (0x0288 - 0x0000)
struct BPFL_SandwormDisplacementFunctions_C_Breach_Displacement final
{
public:
	class ABP_Crea_SandwormArrakis_C*             Sandworm;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AnimationPosition;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        BreachAnimationState;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BreachAnimationState_0;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SignedNormalizedDistanceToSurface;                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                position;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Crea_SandwormArrakis_C*             Worm;                                              // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDisplacementState                     K2Node_MakeStruct_DisplacementState;               // 0x00D8(0x00A8)()
	bool                                          CallFunc_UpdateDynamicDisplacement_ReturnValue;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement) == 0x000008, "Wrong alignment on BPFL_SandwormDisplacementFunctions_C_Breach_Displacement");
static_assert(sizeof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement) == 0x000288, "Wrong size on BPFL_SandwormDisplacementFunctions_C_Breach_Displacement");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, Sandworm) == 0x000000, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::Sandworm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, AnimationPosition) == 0x000008, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::AnimationPosition' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, __WorldContext) == 0x000010, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, BreachAnimationState) == 0x000018, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::BreachAnimationState' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, BreachAnimationState_0) == 0x000020, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::BreachAnimationState_0' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, SignedNormalizedDistanceToSurface) == 0x000028, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::SignedNormalizedDistanceToSurface' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, Rotation) == 0x000030, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, position) == 0x000048, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::position' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, Worm) == 0x000060, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::Worm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetFloatValue_ReturnValue) == 0x000068, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetFloatValue_ReturnValue_1) == 0x00006C, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetAnimInstance_ReturnValue) == 0x000090, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_BreakVector_X) == 0x000098, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x0000B0, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Montage_GetPosition_ReturnValue) == 0x0000BC, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_SelectFloat_ReturnValue) == 0x0000C0, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, K2Node_MakeStruct_DisplacementState) == 0x0000D8, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::K2Node_MakeStruct_DisplacementState' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_UpdateDynamicDisplacement_ReturnValue) == 0x000180, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_UpdateDynamicDisplacement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetFloatValue_ReturnValue_2) == 0x000184, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetSocketLocation_ReturnValue) == 0x000188, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0001A0, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_VLerp_ReturnValue) == 0x0001B8, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetSocketRotation_ReturnValue) == 0x0001D0, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetSocketRotation_ReturnValue_1) == 0x0001E8, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_BreakRotator_Roll) == 0x000200, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_BreakRotator_Pitch) == 0x000204, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_BreakRotator_Yaw) == 0x000208, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000210, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_MakeRotator_ReturnValue) == 0x000218, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_RLerp_ReturnValue) == 0x000230, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000248, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x00024C, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000250, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000258, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000268, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_RLerp_Alpha_ImplicitCast) == 0x000270, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000278, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Breach_Displacement, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000280, "Member 'BPFL_SandwormDisplacementFunctions_C_Breach_Displacement::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BPFL_SandwormDisplacementFunctions.BPFL_SandwormDisplacementFunctions_C.HorizontalAttackDisplacement
// 0x0270 (0x0270 - 0x0000)
struct BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement final
{
public:
	class ABP_Crea_SandwormArrakis_C*             Sandworm;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Crea_SandwormArrakis_C*             Worm;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDisplacementPointData                 K2Node_MakeStruct_DisplacementPointData;           // 0x00D8(0x0030)()
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDisplacementState                     K2Node_MakeStruct_DisplacementState;               // 0x0128(0x00A8)()
	bool                                          CallFunc_UpdateDynamicDisplacementPoints_ReturnValue; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentSocketDistanceToSurface_ImplicitCast; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement) == 0x000008, "Wrong alignment on BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement");
static_assert(sizeof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement) == 0x000270, "Wrong size on BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, Sandworm) == 0x000000, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::Sandworm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, __WorldContext) == 0x000008, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, Worm) == 0x000010, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::Worm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_BreakVector_X) == 0x000018, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_BreakVector_Y) == 0x000020, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_BreakVector_Z) == 0x000028, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_BreakVector_X_1) == 0x000038, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_GetFloatValue_ReturnValue) == 0x000078, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_GetFloatValue_ReturnValue_1) == 0x000088, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_GetFloatValue_ReturnValue_2) == 0x00008C, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Abs_ReturnValue_1) == 0x000090, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B8, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Lerp_ReturnValue) == 0x0000C0, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, K2Node_MakeStruct_DisplacementPointData) == 0x0000D8, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::K2Node_MakeStruct_DisplacementPointData' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000108, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, K2Node_MakeStruct_DisplacementState) == 0x000128, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::K2Node_MakeStruct_DisplacementState' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_UpdateDynamicDisplacementPoints_ReturnValue) == 0x0001D0, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_UpdateDynamicDisplacementPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, Temp_int_Array_Index_Variable) == 0x0001D4, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F0, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Normal_ReturnValue) == 0x000208, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, Temp_int_Loop_Counter_Variable) == 0x000220, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Add_IntInt_ReturnValue) == 0x000228, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000230, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000238, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000240, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000244, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000248, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000250, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000258, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement, K2Node_VariableSet_CurrentSocketDistanceToSurface_ImplicitCast) == 0x000268, "Member 'BPFL_SandwormDisplacementFunctions_C_HorizontalAttackDisplacement::K2Node_VariableSet_CurrentSocketDistanceToSurface_ImplicitCast' has a wrong offset!");

// Function BPFL_SandwormDisplacementFunctions.BPFL_SandwormDisplacementFunctions_C.JumpingAttackDisplacement
// 0x0270 (0x0270 - 0x0000)
struct BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement final
{
public:
	class ABP_Crea_SandwormArrakis_C*             Sandworm;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Crea_SandwormArrakis_C*             Worm;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDisplacementPointData                 K2Node_MakeStruct_DisplacementPointData;           // 0x00D8(0x0030)()
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDisplacementState                     K2Node_MakeStruct_DisplacementState;               // 0x0128(0x00A8)()
	bool                                          CallFunc_UpdateDynamicDisplacementPoints_ReturnValue; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentSocketDistanceToSurface_ImplicitCast; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement) == 0x000008, "Wrong alignment on BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement");
static_assert(sizeof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement) == 0x000270, "Wrong size on BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, Sandworm) == 0x000000, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::Sandworm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, __WorldContext) == 0x000008, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, Worm) == 0x000010, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::Worm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_BreakVector_X) == 0x000018, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_BreakVector_Y) == 0x000020, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_BreakVector_Z) == 0x000028, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_BreakVector_X_1) == 0x000030, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_GetFloatValue_ReturnValue) == 0x000078, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_GetFloatValue_ReturnValue_1) == 0x000088, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_GetFloatValue_ReturnValue_2) == 0x00008C, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Abs_ReturnValue_1) == 0x000090, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B8, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Lerp_ReturnValue) == 0x0000C0, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, K2Node_MakeStruct_DisplacementPointData) == 0x0000D8, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::K2Node_MakeStruct_DisplacementPointData' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000108, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, K2Node_MakeStruct_DisplacementState) == 0x000128, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::K2Node_MakeStruct_DisplacementState' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_UpdateDynamicDisplacementPoints_ReturnValue) == 0x0001D0, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_UpdateDynamicDisplacementPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, Temp_int_Array_Index_Variable) == 0x0001D4, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F0, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Normal_ReturnValue) == 0x000208, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, Temp_int_Loop_Counter_Variable) == 0x000220, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Add_IntInt_ReturnValue) == 0x000228, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000230, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000238, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000240, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000244, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000248, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000250, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000258, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement, K2Node_VariableSet_CurrentSocketDistanceToSurface_ImplicitCast) == 0x000268, "Member 'BPFL_SandwormDisplacementFunctions_C_JumpingAttackDisplacement::K2Node_VariableSet_CurrentSocketDistanceToSurface_ImplicitCast' has a wrong offset!");

// Function BPFL_SandwormDisplacementFunctions.BPFL_SandwormDisplacementFunctions_C.Set Mouth Displacement By Jaw Opening
// 0x0058 (0x0058 - 0x0000)
struct BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening final
{
public:
	class ABP_Crea_SandwormArrakis_C*             Sandworm;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MouthClosed;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MouthOpen;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Front_Mouth_Lerp_Coefficient;                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Front_Mouth_Lerp_Coefficient_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening) == 0x000008, "Wrong alignment on BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening");
static_assert(sizeof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening) == 0x000058, "Wrong size on BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, Sandworm) == 0x000000, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::Sandworm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, __WorldContext) == 0x000008, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, MouthClosed) == 0x000010, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::MouthClosed' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, MouthOpen) == 0x000018, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::MouthOpen' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, Front_Mouth_Lerp_Coefficient) == 0x000020, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::Front_Mouth_Lerp_Coefficient' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening, K2Node_VariableSet_Front_Mouth_Lerp_Coefficient_ImplicitCast) == 0x000050, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_Jaw_Opening::K2Node_VariableSet_Front_Mouth_Lerp_Coefficient_ImplicitCast' has a wrong offset!");

// Function BPFL_SandwormDisplacementFunctions.BPFL_SandwormDisplacementFunctions_C.Set Mouth Displacement By State
// 0x00A8 (0x00A8 - 0x0000)
struct BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State final
{
public:
	class ABP_Crea_SandwormArrakis_C*             Sandworm;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Top_Jaw_Lerp_Coefficient_0;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Crea_SandwormArrakis_C*             Worm;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        MouthClosed;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MouthOpen;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Front_Mouth_Lerp_Coefficient;                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Front_Mouth_Lerp_Coefficient_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State) == 0x000008, "Wrong alignment on BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State");
static_assert(sizeof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State) == 0x0000A8, "Wrong size on BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, Sandworm) == 0x000000, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::Sandworm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, __WorldContext) == 0x000008, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, Top_Jaw_Lerp_Coefficient_0) == 0x000010, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::Top_Jaw_Lerp_Coefficient_0' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, Worm) == 0x000018, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::Worm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, MouthClosed) == 0x000020, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::MouthClosed' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, MouthOpen) == 0x000028, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::MouthOpen' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, Front_Mouth_Lerp_Coefficient) == 0x000030, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::Front_Mouth_Lerp_Coefficient' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_BreakVector2D_X) == 0x000060, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_FClamp_ReturnValue_1) == 0x000070, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, K2Node_VariableSet_Front_Mouth_Lerp_Coefficient_ImplicitCast) == 0x000090, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::K2Node_VariableSet_Front_Mouth_Lerp_Coefficient_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'BPFL_SandwormDisplacementFunctions_C_Set_Mouth_Displacement_By_State::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BPFL_SandwormDisplacementFunctions.BPFL_SandwormDisplacementFunctions_C.VerticalAttackDisplacement
// 0x0390 (0x0390 - 0x0000)
struct BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement final
{
public:
	class ABP_Crea_SandwormArrakis_C*             Sandworm;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Peak_Z_Distance;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YPositionOffset;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XPositionOffset;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Vertical_Attack_Falling_Curve;                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        SignedNormalizedDistanceToSurface;                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Vertical_Attack_Displacement_Blend_Curve;          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Vertical_Attack_Rising_Curve;                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                position;                                          // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationOffset;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Crea_SandwormArrakis_C*             Worm;                                              // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDisplacementState                     K2Node_MakeStruct_DisplacementState;               // 0x0258(0x00A8)()
	bool                                          CallFunc_UpdateDynamicDisplacement_ReturnValue;    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement) == 0x000008, "Wrong alignment on BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement");
static_assert(sizeof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement) == 0x000390, "Wrong size on BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Sandworm) == 0x000000, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Sandworm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, __WorldContext) == 0x000008, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Peak_Z_Distance) == 0x000010, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Peak_Z_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, YPositionOffset) == 0x000018, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::YPositionOffset' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, XPositionOffset) == 0x000020, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::XPositionOffset' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Vertical_Attack_Falling_Curve) == 0x000028, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Vertical_Attack_Falling_Curve' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, SignedNormalizedDistanceToSurface) == 0x000030, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::SignedNormalizedDistanceToSurface' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Vertical_Attack_Displacement_Blend_Curve) == 0x000038, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Vertical_Attack_Displacement_Blend_Curve' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Vertical_Attack_Rising_Curve) == 0x000040, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Vertical_Attack_Rising_Curve' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Rotation) == 0x000048, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, position) == 0x000060, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::position' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, RotationOffset) == 0x000078, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::RotationOffset' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, Worm) == 0x000080, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::Worm' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_FMax_ReturnValue) == 0x000088, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_MakeVector_ReturnValue_1) == 0x0000A8, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetFloatValue_ReturnValue) == 0x0000C0, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_SelectFloat_ReturnValue) == 0x000100, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetFloatValue_ReturnValue_1) == 0x000108, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_FMax_ReturnValue_1) == 0x000110, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetFloatValue_ReturnValue_2) == 0x000118, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000120, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000128, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetSocketRotation_ReturnValue) == 0x000140, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakRotator_Roll) == 0x000158, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakRotator_Pitch) == 0x00015C, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakRotator_Yaw) == 0x000160, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetAxes_X) == 0x000168, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetAxes_Y) == 0x000180, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetAxes_Z) == 0x000198, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetSocketLocation_ReturnValue) == 0x0001B0, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001C8, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0001E0, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001F8, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000210, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Add_VectorVector_ReturnValue) == 0x000228, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000240, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, K2Node_MakeStruct_DisplacementState) == 0x000258, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::K2Node_MakeStruct_DisplacementState' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_UpdateDynamicDisplacement_ReturnValue) == 0x000300, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_UpdateDynamicDisplacement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetSocketRotation_ReturnValue_1) == 0x000308, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakRotator_Roll_1) == 0x000320, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakRotator_Pitch_1) == 0x000324, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_BreakRotator_Yaw_1) == 0x000328, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000330, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000338, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_MakeRotator_ReturnValue) == 0x000340, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000358, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x00035C, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000360, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000368, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000370, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000378, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000380, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000388, "Member 'BPFL_SandwormDisplacementFunctions_C_VerticalAttackDisplacement::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

}

