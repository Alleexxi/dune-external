#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Throwable_Seeker_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ProjectileThrowableBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Throwable_Seeker_Base.BP_Throwable_Seeker_Base_C
// 0x0020 (0x10B8 - 0x1098)
class ABP_Throwable_Seeker_Base_C : public ABP_ProjectileThrowableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Throwable_Seeker_Base_C;         // 0x1098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        DesiredHeight;                                     // 0x10A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          LaunchSFX;                                         // 0x10A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          LoopSFX;                                           // 0x10B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Activate();
	void ExecuteUbergraph_BP_Throwable_Seeker_Base(int32 EntryPoint);
	void Launch(const struct FVector& Velocity, const struct FTransform& Transform);
	void SimulateTick(const float InDeltaTime);

	bool IsClimbable(const class AActor* InActor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Throwable_Seeker_Base_C">();
	}
	static class ABP_Throwable_Seeker_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Throwable_Seeker_Base_C>();
	}
};
static_assert(alignof(ABP_Throwable_Seeker_Base_C) == 0x000008, "Wrong alignment on ABP_Throwable_Seeker_Base_C");
static_assert(sizeof(ABP_Throwable_Seeker_Base_C) == 0x0010B8, "Wrong size on ABP_Throwable_Seeker_Base_C");
static_assert(offsetof(ABP_Throwable_Seeker_Base_C, UberGraphFrame_BP_Throwable_Seeker_Base_C) == 0x001098, "Member 'ABP_Throwable_Seeker_Base_C::UberGraphFrame_BP_Throwable_Seeker_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_Throwable_Seeker_Base_C, DesiredHeight) == 0x0010A0, "Member 'ABP_Throwable_Seeker_Base_C::DesiredHeight' has a wrong offset!");
static_assert(offsetof(ABP_Throwable_Seeker_Base_C, LaunchSFX) == 0x0010A8, "Member 'ABP_Throwable_Seeker_Base_C::LaunchSFX' has a wrong offset!");
static_assert(offsetof(ABP_Throwable_Seeker_Base_C, LoopSFX) == 0x0010B0, "Member 'ABP_Throwable_Seeker_Base_C::LoopSFX' has a wrong offset!");

}

