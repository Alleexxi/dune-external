#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DbnoRevive_Ability

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function DbnoRevive_Ability.DbnoRevive_Ability_C.ExecuteUbergraph_DbnoRevive_Ability
// 0x0158 (0x0158 - 0x0000)
struct DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReviveFromDownedStateByAbility_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0010(0x00B0)(ConstParm)
	struct FServerHealingInfo                     K2Node_MakeStruct_ServerHealingInfo;               // 0x00C0(0x0060)()
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character_1;             // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x013C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0144(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInStateOrSubstateByTag_ReturnValue;     // 0x014C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInStateOrSubstateByTag_ReturnValue_1;   // 0x014D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_m_BaseHealing_ImplicitCast;      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability) == 0x000008, "Wrong alignment on DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability");
static_assert(sizeof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability) == 0x000158, "Wrong size on DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, EntryPoint) == 0x000000, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::EntryPoint' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_ReviveFromDownedStateByAbility_ReturnValue) == 0x000005, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_ReviveFromDownedStateByAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_Event_EventData) == 0x000010, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_MakeStruct_ServerHealingInfo) == 0x0000C0, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_MakeStruct_ServerHealingInfo' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_DynamicCast_AsDune_Character) == 0x000120, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_DynamicCast_AsDune_Character_1) == 0x000130, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_DynamicCast_AsDune_Character_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_K2_CommitAbility_ReturnValue) == 0x000139, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00013C, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000144, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_IsInStateOrSubstateByTag_ReturnValue) == 0x00014C, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_IsInStateOrSubstateByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, CallFunc_IsInStateOrSubstateByTag_ReturnValue_1) == 0x00014D, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::CallFunc_IsInStateOrSubstateByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability, K2Node_MakeStruct_m_BaseHealing_ImplicitCast) == 0x000150, "Member 'DbnoRevive_Ability_C_ExecuteUbergraph_DbnoRevive_Ability::K2Node_MakeStruct_m_BaseHealing_ImplicitCast' has a wrong offset!");

// Function DbnoRevive_Ability.DbnoRevive_Ability_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'DbnoRevive_Ability_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function DbnoRevive_Ability.DbnoRevive_Ability_C.K2_CommitExecute
// 0x00B0 (0x00B0 - 0x0000)
struct DbnoRevive_Ability_C_K2_CommitExecute final
{
public:
	float                                         CurrentHydration;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationRequirement; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationPenalty; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationRequirement_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationPenalty_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationRequirement_2; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationPenalty_2; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0050(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0060(0x0010)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0078(0x0010)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseHydratingItems_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_HasEnoughHydration_CurrentHydration;      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughHydration_ReturnValue;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HasEnoughHydration_RequiredHydration_ImplicitCast; // 0x00A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DbnoRevive_Ability_C_K2_CommitExecute) == 0x000008, "Wrong alignment on DbnoRevive_Ability_C_K2_CommitExecute");
static_assert(sizeof(DbnoRevive_Ability_C_K2_CommitExecute) == 0x0000B0, "Wrong size on DbnoRevive_Ability_C_K2_CommitExecute");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CurrentHydration) == 0x000000, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CurrentHydration' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetHydrationSettings_RevivalHydrationRequirement) == 0x000008, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetHydrationSettings_RevivalHydrationRequirement' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetHydrationSettings_RevivalHydrationPenalty) == 0x000010, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetHydrationSettings_RevivalHydrationPenalty' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetHydrationSettings_RevivalHydrationRequirement_1) == 0x000018, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetHydrationSettings_RevivalHydrationRequirement_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetHydrationSettings_RevivalHydrationPenalty_1) == 0x000020, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetHydrationSettings_RevivalHydrationPenalty_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetHydrationSettings_RevivalHydrationRequirement_2) == 0x000040, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetHydrationSettings_RevivalHydrationRequirement_2' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetHydrationSettings_RevivalHydrationPenalty_2) == 0x000048, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetHydrationSettings_RevivalHydrationPenalty_2' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000050, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000060, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000070, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000078, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_FTrunc_ReturnValue_1) == 0x000090, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_UseHydratingItems_ReturnValue) == 0x000094, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_UseHydratingItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_HasEnoughHydration_CurrentHydration) == 0x000098, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_HasEnoughHydration_CurrentHydration' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_HasEnoughHydration_ReturnValue) == 0x00009C, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_HasEnoughHydration_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_Not_PreBool_ReturnValue) == 0x00009D, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x0000A0, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_HasEnoughHydration_RequiredHydration_ImplicitCast) == 0x0000A4, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_HasEnoughHydration_RequiredHydration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CommitExecute, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000A8, "Member 'DbnoRevive_Ability_C_K2_CommitExecute::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function DbnoRevive_Ability.DbnoRevive_Ability_C.GetHydrationSettings
// 0x0030 (0x0030 - 0x0000)
struct DbnoRevive_Ability_C_GetHydrationSettings final
{
public:
	double                                        RevivalHydrationRequirement;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RevivalHydrationPenalty;                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHydrationSubsystem*                    CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UHydrationSystemSettings*         CallFunc_GetHydrationSystemSettings_ReturnValue;   // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_RevivalHydrationRequirement_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_RevivalHydrationPenalty_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DbnoRevive_Ability_C_GetHydrationSettings) == 0x000008, "Wrong alignment on DbnoRevive_Ability_C_GetHydrationSettings");
static_assert(sizeof(DbnoRevive_Ability_C_GetHydrationSettings) == 0x000030, "Wrong size on DbnoRevive_Ability_C_GetHydrationSettings");
static_assert(offsetof(DbnoRevive_Ability_C_GetHydrationSettings, RevivalHydrationRequirement) == 0x000000, "Member 'DbnoRevive_Ability_C_GetHydrationSettings::RevivalHydrationRequirement' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_GetHydrationSettings, RevivalHydrationPenalty) == 0x000008, "Member 'DbnoRevive_Ability_C_GetHydrationSettings::RevivalHydrationPenalty' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_GetHydrationSettings, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'DbnoRevive_Ability_C_GetHydrationSettings::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_GetHydrationSettings, CallFunc_GetHydrationSystemSettings_ReturnValue) == 0x000018, "Member 'DbnoRevive_Ability_C_GetHydrationSettings::CallFunc_GetHydrationSystemSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_GetHydrationSettings, K2Node_FunctionResult_RevivalHydrationRequirement_ImplicitCast) == 0x000020, "Member 'DbnoRevive_Ability_C_GetHydrationSettings::K2Node_FunctionResult_RevivalHydrationRequirement_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_GetHydrationSettings, K2Node_FunctionResult_RevivalHydrationPenalty_ImplicitCast) == 0x000028, "Member 'DbnoRevive_Ability_C_GetHydrationSettings::K2Node_FunctionResult_RevivalHydrationPenalty_ImplicitCast' has a wrong offset!");

// Function DbnoRevive_Ability.DbnoRevive_Ability_C.HasRequiredItems
// 0x0068 (0x0068 - 0x0000)
struct DbnoRevive_Ability_C_HasRequiredItems final
{
public:
	class ADuneCharacter*                         Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasItems;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentHydration;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationRequirement; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationPenalty; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationRequirement_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHydrationSettings_RevivalHydrationPenalty_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HasEnoughHydration_CurrentHydration;      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughHydration_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasHydratingItems_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HasEnoughHydration_RequiredHydration_ImplicitCast; // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DbnoRevive_Ability_C_HasRequiredItems) == 0x000008, "Wrong alignment on DbnoRevive_Ability_C_HasRequiredItems");
static_assert(sizeof(DbnoRevive_Ability_C_HasRequiredItems) == 0x000068, "Wrong size on DbnoRevive_Ability_C_HasRequiredItems");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, Character) == 0x000000, "Member 'DbnoRevive_Ability_C_HasRequiredItems::Character' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, HasItems) == 0x000008, "Member 'DbnoRevive_Ability_C_HasRequiredItems::HasItems' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CurrentHydration) == 0x00000C, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CurrentHydration' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_GetHydrationSettings_RevivalHydrationRequirement) == 0x000018, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_GetHydrationSettings_RevivalHydrationRequirement' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_GetHydrationSettings_RevivalHydrationPenalty) == 0x000020, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_GetHydrationSettings_RevivalHydrationPenalty' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_GetHydrationSettings_RevivalHydrationRequirement_1) == 0x000030, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_GetHydrationSettings_RevivalHydrationRequirement_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_GetHydrationSettings_RevivalHydrationPenalty_1) == 0x000038, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_GetHydrationSettings_RevivalHydrationPenalty_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_HasEnoughHydration_CurrentHydration) == 0x000048, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_HasEnoughHydration_CurrentHydration' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_HasEnoughHydration_ReturnValue) == 0x00004C, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_HasEnoughHydration_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_HasHydratingItems_ReturnValue) == 0x000055, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_HasHydratingItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_HasRequiredItems, CallFunc_HasEnoughHydration_RequiredHydration_ImplicitCast) == 0x000060, "Member 'DbnoRevive_Ability_C_HasRequiredItems::CallFunc_HasEnoughHydration_RequiredHydration_ImplicitCast' has a wrong offset!");

// Function DbnoRevive_Ability.DbnoRevive_Ability_C.K2_CanActivateAbility
// 0x0098 (0x0098 - 0x0000)
struct DbnoRevive_Ability_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneNpcCharacter*                      K2Node_DynamicCast_AsDune_Npc_Character;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRequiredItems_HasItems;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DbnoRevive_Ability_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on DbnoRevive_Ability_C_K2_CanActivateAbility");
static_assert(sizeof(DbnoRevive_Ability_C_K2_CanActivateAbility) == 0x000098, "Wrong size on DbnoRevive_Ability_C_K2_CanActivateAbility");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, CallFunc_IsDedicatedServer_ReturnValue) == 0x000071, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, K2Node_DynamicCast_AsDune_Npc_Character) == 0x000078, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::K2Node_DynamicCast_AsDune_Npc_Character' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, K2Node_DynamicCast_AsDune_Player_Character) == 0x000088, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DbnoRevive_Ability_C_K2_CanActivateAbility, CallFunc_HasRequiredItems_HasItems) == 0x000091, "Member 'DbnoRevive_Ability_C_K2_CanActivateAbility::CallFunc_HasRequiredItems_HasItems' has a wrong offset!");

}

