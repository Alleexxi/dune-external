#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mentat_Trance_CameraModifier

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mentat_Trance_CameraModifier.BP_Mentat_Trance_CameraModifier_C
// 0x0040 (0x00E0 - 0x00A0)
class UBP_Mentat_Trance_CameraModifier_C final : public UDuneCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        LocalTime;                                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           TranceControlCurve;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMatPostProcess;                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendables                    Mentat_Trance_Post_Process;                        // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        FOV;                                               // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           VisionControlCurve;                                // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV_0, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
	void BlueprintModifyCameraRemovingPhase(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV_0, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);
	void ExecuteUbergraph_BP_Mentat_Trance_CameraModifier(int32 EntryPoint);
	void OnAddedToCamera();
	void OnRemoveFromCamera();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mentat_Trance_CameraModifier_C">();
	}
	static class UBP_Mentat_Trance_CameraModifier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Mentat_Trance_CameraModifier_C>();
	}
};
static_assert(alignof(UBP_Mentat_Trance_CameraModifier_C) == 0x000008, "Wrong alignment on UBP_Mentat_Trance_CameraModifier_C");
static_assert(sizeof(UBP_Mentat_Trance_CameraModifier_C) == 0x0000E0, "Wrong size on UBP_Mentat_Trance_CameraModifier_C");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_Mentat_Trance_CameraModifier_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, LocalTime) == 0x0000A8, "Member 'UBP_Mentat_Trance_CameraModifier_C::LocalTime' has a wrong offset!");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, TranceControlCurve) == 0x0000B0, "Member 'UBP_Mentat_Trance_CameraModifier_C::TranceControlCurve' has a wrong offset!");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, DynamicMatPostProcess) == 0x0000B8, "Member 'UBP_Mentat_Trance_CameraModifier_C::DynamicMatPostProcess' has a wrong offset!");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, Mentat_Trance_Post_Process) == 0x0000C0, "Member 'UBP_Mentat_Trance_CameraModifier_C::Mentat_Trance_Post_Process' has a wrong offset!");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, FOV) == 0x0000D0, "Member 'UBP_Mentat_Trance_CameraModifier_C::FOV' has a wrong offset!");
static_assert(offsetof(UBP_Mentat_Trance_CameraModifier_C, VisionControlCurve) == 0x0000D8, "Member 'UBP_Mentat_Trance_CameraModifier_C::VisionControlCurve' has a wrong offset!");

}

