#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StatusEffectNotificationEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.UpdateWidgetDirection
// 0x0080 (0x0080 - 0x0000)
struct W_StatusEffectNotificationEntry_C_UpdateWidgetDirection final
{
public:
	bool                                          InvertHorizontalDirection;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0030(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlowDirectionPreference                      Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlowDirectionPreference                      Temp_byte_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFlowDirectionPreference                      K2Node_Select_Default_2;                           // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_UpdateWidgetDirection");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection) == 0x000080, "Wrong size on W_StatusEffectNotificationEntry_C_UpdateWidgetDirection");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, InvertHorizontalDirection) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::InvertHorizontalDirection' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_bool_Variable) == 0x000001, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_struct_Variable) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_struct_Variable_1) == 0x000018, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_bool_Variable_1) == 0x000028, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, K2Node_Select_Default) == 0x000030, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_struct_Variable_2) == 0x000040, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_struct_Variable_3) == 0x000050, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_bool_Variable_2) == 0x000060, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, K2Node_Select_Default_1) == 0x000068, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_byte_Variable) == 0x000078, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, Temp_byte_Variable_1) == 0x000079, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateWidgetDirection, K2Node_Select_Default_2) == 0x00007A, "Member 'W_StatusEffectNotificationEntry_C_UpdateWidgetDirection::K2Node_Select_Default_2' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.UpdateStackCountText
// 0x0100 (0x0100 - 0x0000)
struct W_StatusEffectNotificationEntry_C_UpdateStackCountText final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_UpdateStackCountText) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_UpdateStackCountText");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_UpdateStackCountText) == 0x000100, "Wrong size on W_StatusEffectNotificationEntry_C_UpdateStackCountText");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, Current) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::Current' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, Max) == 0x000004, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::Max' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000020, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateStackCountText, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_StatusEffectNotificationEntry_C_UpdateStackCountText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.UpdateDurationText
// 0x0038 (0x0038 - 0x0000)
struct W_StatusEffectNotificationEntry_C_UpdateDurationText final
{
public:
	double                                        RemainingSeconds;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDuration;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTimeRemainingText_ReturnValue; // 0x0018(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_UpdateDurationText) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_UpdateDurationText");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_UpdateDurationText) == 0x000038, "Wrong size on W_StatusEffectNotificationEntry_C_UpdateDurationText");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationText, RemainingSeconds) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationText::RemainingSeconds' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationText, MaxDuration) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationText::MaxDuration' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationText, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationText::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationText, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000011, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationText::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationText, CallFunc_GetLocalizedTimeRemainingText_ReturnValue) == 0x000018, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationText::CallFunc_GetLocalizedTimeRemainingText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationText, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.UpdateDurationBar
// 0x0040 (0x0040 - 0x0000)
struct W_StatusEffectNotificationEntry_C_UpdateDurationBar final
{
public:
	double                                        SecondsRemaining;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSecondsRemaining;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsUnlimitedDuration_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgress_Progress_ImplicitCast;        // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_UpdateDurationBar) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_UpdateDurationBar");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_UpdateDurationBar) == 0x000040, "Wrong size on W_StatusEffectNotificationEntry_C_UpdateDurationBar");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, SecondsRemaining) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::SecondsRemaining' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, MaxSecondsRemaining) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::MaxSecondsRemaining' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, Temp_bool_Variable) == 0x000010, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, Temp_real_Variable) == 0x000020, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, CallFunc_GetIsUnlimitedDuration_ReturnValue) == 0x000028, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::CallFunc_GetIsUnlimitedDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, K2Node_Select_Default) == 0x000030, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateDurationBar, CallFunc_SetProgress_Progress_ImplicitCast) == 0x000038, "Member 'W_StatusEffectNotificationEntry_C_UpdateDurationBar::CallFunc_SetProgress_Progress_ImplicitCast' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.UpdateBuffDebuffVisuals
// 0x0024 (0x0024 - 0x0000)
struct W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals final
{
public:
	bool                                          bIsDebuffNotification;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals) == 0x000004, "Wrong alignment on W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals) == 0x000024, "Wrong size on W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals, bIsDebuffNotification) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals::bIsDebuffNotification' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'W_StatusEffectNotificationEntry_C_UpdateBuffDebuffVisuals::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.Update Status Effect Stack or Duration Text Visibility
// 0x0007 (0x0007 - 0x0000)
struct W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsUnlimitedDuration_ReturnValue;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility) == 0x000001, "Wrong alignment on W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility) == 0x000007, "Wrong size on W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, Temp_bool_Variable) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, Temp_byte_Variable) == 0x000001, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, CallFunc_GetIsUnlimitedDuration_ReturnValue) == 0x000003, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::CallFunc_GetIsUnlimitedDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility, K2Node_Select_Default) == 0x000006, "Member 'W_StatusEffectNotificationEntry_C_Update_Status_Effect_Stack_or_Duration_Text_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.SetRenderPosition
// 0x0030 (0x0030 - 0x0000)
struct W_StatusEffectNotificationEntry_C_SetRenderPosition final
{
public:
	bool                                          bShouldTween;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              position;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_TweenWidgetRenderTranslationFromValue_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TweenWidgetRenderTranslationFromValue_Duration_ImplicitCast; // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_SetRenderPosition) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_SetRenderPosition");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_SetRenderPosition) == 0x000030, "Wrong size on W_StatusEffectNotificationEntry_C_SetRenderPosition");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_SetRenderPosition, bShouldTween) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_SetRenderPosition::bShouldTween' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_SetRenderPosition, position) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_SetRenderPosition::position' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_SetRenderPosition, Duration) == 0x000018, "Member 'W_StatusEffectNotificationEntry_C_SetRenderPosition::Duration' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_SetRenderPosition, CallFunc_TweenWidgetRenderTranslationFromValue_ReturnValue) == 0x000020, "Member 'W_StatusEffectNotificationEntry_C_SetRenderPosition::CallFunc_TweenWidgetRenderTranslationFromValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_SetRenderPosition, CallFunc_TweenWidgetRenderTranslationFromValue_Duration_ImplicitCast) == 0x000028, "Member 'W_StatusEffectNotificationEntry_C_SetRenderPosition::CallFunc_TweenWidgetRenderTranslationFromValue_Duration_ImplicitCast' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.SetInvertHorizontalDirection
// 0x0001 (0x0001 - 0x0000)
struct W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection final
{
public:
	bool                                          InvertHorizontalDirection;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection) == 0x000001, "Wrong alignment on W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection) == 0x000001, "Wrong size on W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection, InvertHorizontalDirection) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_SetInvertHorizontalDirection::InvertHorizontalDirection' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_StatusEffectNotificationEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_StatusEffectNotificationEntry_C_PreConstruct");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_PreConstruct) == 0x000001, "Wrong size on W_StatusEffectNotificationEntry_C_PreConstruct");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.OnTimeRemainingChanged
// 0x0008 (0x0008 - 0x0000)
struct W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged final
{
public:
	float                                         SecondsRemaining;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSecondsRemaining;                               // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged) == 0x000004, "Wrong alignment on W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged) == 0x000008, "Wrong size on W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged, SecondsRemaining) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged::SecondsRemaining' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged, MaxSecondsRemaining) == 0x000004, "Member 'W_StatusEffectNotificationEntry_C_OnTimeRemainingChanged::MaxSecondsRemaining' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.OnStacksChanged
// 0x0008 (0x0008 - 0x0000)
struct W_StatusEffectNotificationEntry_C_OnStacksChanged final
{
public:
	int32                                         CurrentStackCount;                                 // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStackCount;                                     // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_OnStacksChanged) == 0x000004, "Wrong alignment on W_StatusEffectNotificationEntry_C_OnStacksChanged");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_OnStacksChanged) == 0x000008, "Wrong size on W_StatusEffectNotificationEntry_C_OnStacksChanged");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_OnStacksChanged, CurrentStackCount) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_OnStacksChanged::CurrentStackCount' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_OnStacksChanged, MaxStackCount) == 0x000004, "Member 'W_StatusEffectNotificationEntry_C_OnStacksChanged::MaxStackCount' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.OnNotificationDataSet
// 0x0008 (0x0008 - 0x0000)
struct W_StatusEffectNotificationEntry_C_OnNotificationDataSet final
{
public:
	const class UNotificationData*                NotificationData;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_OnNotificationDataSet) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_OnNotificationDataSet");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_OnNotificationDataSet) == 0x000008, "Wrong size on W_StatusEffectNotificationEntry_C_OnNotificationDataSet");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_OnNotificationDataSet, NotificationData) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_OnNotificationDataSet::NotificationData' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.OnDeathThreatWarningActiveChanged
// 0x0001 (0x0001 - 0x0000)
struct W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged final
{
public:
	bool                                          bIsWarningActive;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged) == 0x000001, "Wrong alignment on W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged) == 0x000001, "Wrong size on W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged, bIsWarningActive) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_OnDeathThreatWarningActiveChanged::bIsWarningActive' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.FadeText
// 0x0020 (0x0020 - 0x0000)
struct W_StatusEffectNotificationEntry_C_FadeText final
{
public:
	bool                                          FadeIn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_FadeText) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_FadeText");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_FadeText) == 0x000020, "Wrong size on W_StatusEffectNotificationEntry_C_FadeText");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, FadeIn) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_FadeText::FadeIn' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, Temp_byte_Variable) == 0x000001, "Member 'W_StatusEffectNotificationEntry_C_FadeText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, Temp_byte_Variable_1) == 0x000002, "Member 'W_StatusEffectNotificationEntry_C_FadeText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, Temp_bool_Variable) == 0x000003, "Member 'W_StatusEffectNotificationEntry_C_FadeText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, Temp_real_Variable) == 0x000004, "Member 'W_StatusEffectNotificationEntry_C_FadeText::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, Temp_bool_Variable_1) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_FadeText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, K2Node_Select_Default) == 0x000009, "Member 'W_StatusEffectNotificationEntry_C_FadeText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00000C, "Member 'W_StatusEffectNotificationEntry_C_FadeText::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'W_StatusEffectNotificationEntry_C_FadeText::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, K2Node_Select_Default_1) == 0x000014, "Member 'W_StatusEffectNotificationEntry_C_FadeText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_FadeText, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'W_StatusEffectNotificationEntry_C_FadeText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.ExecuteUbergraph_W_StatusEffectNotificationEntry
// 0x00D8 (0x00D8 - 0x0000)
struct W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          K2Node_Event_bIsWarningActive;                     // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0028(0x0018)()
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UNotificationData*                K2Node_Event_NotificationData;                     // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_SecondsRemaining;                     // 0x0054(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxSecondsRemaining;                  // 0x0058(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentStackCount;                    // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxStackCount;                        // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)(ConstParm)
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0080(0x0014)()
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_StatusEffectsText;                    // 0x0098(0x0018)(ConstParm)
	float                                         CallFunc_SetProgress_Progress_ImplicitCast;        // 0x00B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateDurationText_RemainingSeconds_ImplicitCast; // 0x00B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDurationBar_SecondsRemaining_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDurationText_MaxDuration_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDurationBar_MaxSecondsRemaining_ImplicitCast; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry) == 0x0000D8, "Wrong size on W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, EntryPoint) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_bIsWarningActive) == 0x000020, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_bIsWarningActive' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_GetText_ReturnValue) == 0x000028, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_NotificationData) == 0x000048, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_NotificationData' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_IsDesignTime) == 0x000050, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_SecondsRemaining) == 0x000054, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_SecondsRemaining' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_MaxSecondsRemaining) == 0x000058, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_MaxSecondsRemaining' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_CurrentStackCount) == 0x00005C, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_CurrentStackCount' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_MaxStackCount) == 0x000060, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_MaxStackCount' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, Temp_bool_Variable) == 0x000064, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, Temp_bool_Variable_1) == 0x000065, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Select_Default) == 0x000068, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Select_Default_1) == 0x000080, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, K2Node_Event_StatusEffectsText) == 0x000098, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::K2Node_Event_StatusEffectsText' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_SetProgress_Progress_ImplicitCast) == 0x0000B0, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_SetProgress_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_UpdateDurationText_RemainingSeconds_ImplicitCast) == 0x0000B8, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_UpdateDurationText_RemainingSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_UpdateDurationBar_SecondsRemaining_ImplicitCast) == 0x0000C0, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_UpdateDurationBar_SecondsRemaining_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_UpdateDurationText_MaxDuration_ImplicitCast) == 0x0000C8, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_UpdateDurationText_MaxDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry, CallFunc_UpdateDurationBar_MaxSecondsRemaining_ImplicitCast) == 0x0000D0, "Member 'W_StatusEffectNotificationEntry_C_ExecuteUbergraph_W_StatusEffectNotificationEntry::CallFunc_UpdateDurationBar_MaxSecondsRemaining_ImplicitCast' has a wrong offset!");

// Function W_StatusEffectNotificationEntry.W_StatusEffectNotificationEntry_C.BP_OnStatusEffectsInfoTextUpdated
// 0x0018 (0x0018 - 0x0000)
struct W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated final
{
public:
	class FText                                   StatusEffectsText;                                 // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated) == 0x000008, "Wrong alignment on W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated");
static_assert(sizeof(W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated) == 0x000018, "Wrong size on W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated");
static_assert(offsetof(W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated, StatusEffectsText) == 0x000000, "Member 'W_StatusEffectNotificationEntry_C_BP_OnStatusEffectsInfoTextUpdated::StatusEffectsText' has a wrong offset!");

}

