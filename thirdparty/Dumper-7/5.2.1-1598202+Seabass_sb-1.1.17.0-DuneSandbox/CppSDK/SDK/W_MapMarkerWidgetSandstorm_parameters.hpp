#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapMarkerWidgetSandstorm

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_MapMarkerWidgetSandstorm.W_MapMarkerWidgetSandstorm_C.ExecuteUbergraph_W_MapMarkerWidgetSandstorm
// 0x0250 (0x0250 - 0x0000)
struct W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEMapMarker                            K2Node_Event_MarkerType;                           // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FFullscreenMapMarkerRowBase            K2Node_Event_MarkerStaticData;                     // 0x0048(0x0158)(ConstParm)
	struct FMapMarkerGuiData                      K2Node_Event_MarkerDynamicData;                    // 0x01A0(0x0098)(ConstParm)
	class FText                                   CallFunc_GetStormOwnerLevel_ReturnValue;           // 0x0238(0x0018)()
};
static_assert(alignof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm) == 0x000008, "Wrong alignment on W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm");
static_assert(sizeof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm) == 0x000250, "Wrong size on W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, EntryPoint) == 0x000000, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, K2Node_Event_MarkerType) == 0x000040, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::K2Node_Event_MarkerType' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, K2Node_Event_MarkerStaticData) == 0x000048, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::K2Node_Event_MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, K2Node_Event_MarkerDynamicData) == 0x0001A0, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::K2Node_Event_MarkerDynamicData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm, CallFunc_GetStormOwnerLevel_ReturnValue) == 0x000238, "Member 'W_MapMarkerWidgetSandstorm_C_ExecuteUbergraph_W_MapMarkerWidgetSandstorm::CallFunc_GetStormOwnerLevel_ReturnValue' has a wrong offset!");

// Function W_MapMarkerWidgetSandstorm.W_MapMarkerWidgetSandstorm_C.GetStormOwnerLevel
// 0x0048 (0x0048 - 0x0000)
struct W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class ASandStormBase*                         CallFunc_GetSandstormOwner_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStormLevelIndex_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel) == 0x000008, "Wrong alignment on W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel");
static_assert(sizeof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel) == 0x000048, "Wrong size on W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel, ReturnValue) == 0x000000, "Member 'W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel, CallFunc_GetSandstormOwner_ReturnValue) == 0x000018, "Member 'W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel::CallFunc_GetSandstormOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel, CallFunc_GetStormLevelIndex_ReturnValue) == 0x000020, "Member 'W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel::CallFunc_GetStormLevelIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'W_MapMarkerWidgetSandstorm_C_GetStormOwnerLevel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_MapMarkerWidgetSandstorm.W_MapMarkerWidgetSandstorm_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_MapMarkerWidgetSandstorm_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarkerWidgetSandstorm_C_Tick) == 0x000004, "Wrong alignment on W_MapMarkerWidgetSandstorm_C_Tick");
static_assert(sizeof(W_MapMarkerWidgetSandstorm_C_Tick) == 0x00003C, "Wrong size on W_MapMarkerWidgetSandstorm_C_Tick");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_Tick, MyGeometry) == 0x000000, "Member 'W_MapMarkerWidgetSandstorm_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_Tick, InDeltaTime) == 0x000038, "Member 'W_MapMarkerWidgetSandstorm_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_MapMarkerWidgetSandstorm.W_MapMarkerWidgetSandstorm_C.Update
// 0x01F8 (0x01F8 - 0x0000)
struct W_MapMarkerWidgetSandstorm_C_Update final
{
public:
	struct FEMapMarker                            MarkerType;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FFullscreenMapMarkerRowBase            MarkerStaticData;                                  // 0x0008(0x0158)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FMapMarkerGuiData                      MarkerDynamicData;                                 // 0x0160(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_MapMarkerWidgetSandstorm_C_Update) == 0x000008, "Wrong alignment on W_MapMarkerWidgetSandstorm_C_Update");
static_assert(sizeof(W_MapMarkerWidgetSandstorm_C_Update) == 0x0001F8, "Wrong size on W_MapMarkerWidgetSandstorm_C_Update");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_Update, MarkerType) == 0x000000, "Member 'W_MapMarkerWidgetSandstorm_C_Update::MarkerType' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_Update, MarkerStaticData) == 0x000008, "Member 'W_MapMarkerWidgetSandstorm_C_Update::MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_Update, MarkerDynamicData) == 0x000160, "Member 'W_MapMarkerWidgetSandstorm_C_Update::MarkerDynamicData' has a wrong offset!");

// Function W_MapMarkerWidgetSandstorm.W_MapMarkerWidgetSandstorm_C.UpdateIconPreset
// 0x0038 (0x0038 - 0x0000)
struct W_MapMarkerWidgetSandstorm_C_UpdateIconPreset final
{
public:
	TSoftObjectPtr<class UTexture2D>              IconPresetTexture;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	struct FEIconPresetWidgetName                 IconPresetName;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarkerWidgetSandstorm_C_UpdateIconPreset) == 0x000008, "Wrong alignment on W_MapMarkerWidgetSandstorm_C_UpdateIconPreset");
static_assert(sizeof(W_MapMarkerWidgetSandstorm_C_UpdateIconPreset) == 0x000038, "Wrong size on W_MapMarkerWidgetSandstorm_C_UpdateIconPreset");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_UpdateIconPreset, IconPresetTexture) == 0x000000, "Member 'W_MapMarkerWidgetSandstorm_C_UpdateIconPreset::IconPresetTexture' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetSandstorm_C_UpdateIconPreset, IconPresetName) == 0x000030, "Member 'W_MapMarkerWidgetSandstorm_C_UpdateIconPreset::IconPresetName' has a wrong offset!");

}

