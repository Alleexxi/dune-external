#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HotbarIconSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_HotbarIconSlot.W_HotbarIconSlot_C
// 0x0030 (0x0480 - 0x0450)
class UW_HotbarIconSlot_C final : public UHotbarSlotWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       m_ConsumeItemFeedback;                             // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                SelectionBorder;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SlotOverlay;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             SlotUseFeedbackImage;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void OnIsSlotFilledChanged(const bool bIsFilled);
	void OnHighlightChanged(const bool bIsHighlighted);
	void OnConsumableItemUsed();
	void ExecuteUbergraph_W_HotbarIconSlot(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_HotbarIconSlot_C">();
	}
	static class UW_HotbarIconSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_HotbarIconSlot_C>();
	}
};
static_assert(alignof(UW_HotbarIconSlot_C) == 0x000010, "Wrong alignment on UW_HotbarIconSlot_C");
static_assert(sizeof(UW_HotbarIconSlot_C) == 0x000480, "Wrong size on UW_HotbarIconSlot_C");
static_assert(offsetof(UW_HotbarIconSlot_C, UberGraphFrame) == 0x000450, "Member 'UW_HotbarIconSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_HotbarIconSlot_C, m_ConsumeItemFeedback) == 0x000458, "Member 'UW_HotbarIconSlot_C::m_ConsumeItemFeedback' has a wrong offset!");
static_assert(offsetof(UW_HotbarIconSlot_C, SelectionBorder) == 0x000460, "Member 'UW_HotbarIconSlot_C::SelectionBorder' has a wrong offset!");
static_assert(offsetof(UW_HotbarIconSlot_C, SlotOverlay) == 0x000468, "Member 'UW_HotbarIconSlot_C::SlotOverlay' has a wrong offset!");
static_assert(offsetof(UW_HotbarIconSlot_C, SlotUseFeedbackImage) == 0x000470, "Member 'UW_HotbarIconSlot_C::SlotUseFeedbackImage' has a wrong offset!");

}

