#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_HandHarvestFlowerField

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.AddInputContext
// 0x0008 (0x0008 - 0x0000)
struct GA_HandHarvestFlowerField_C_AddInputContext final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_AddInputContext) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_AddInputContext");
static_assert(sizeof(GA_HandHarvestFlowerField_C_AddInputContext) == 0x000008, "Wrong size on GA_HandHarvestFlowerField_C_AddInputContext");
static_assert(offsetof(GA_HandHarvestFlowerField_C_AddInputContext, Controller) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_AddInputContext::Controller' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.EventReceived_07FF8ECC4C37C33FC874A2A60E457685
// 0x00B0 (0x00B0 - 0x0000)
struct GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685");
static_assert(sizeof(GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685) == 0x0000B0, "Wrong size on GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685");
static_assert(offsetof(GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685, Payload) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_EventReceived_07FF8ECC4C37C33FC874A2A60E457685::Payload' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D
// 0x00B0 (0x00B0 - 0x0000)
struct GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D");
static_assert(sizeof(GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D) == 0x0000B0, "Wrong size on GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D");
static_assert(offsetof(GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D, Payload) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_EventReceived_E03B6B6F488C09B0FACF6FA3B4C97C5D::Payload' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.ExecuteUbergraph_GA_HandHarvestFlowerField
// 0x0628 (0x0628 - 0x0000)
struct GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B0)()
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x00D8(0x00B0)()
	bool                                          CallFunc_TryExitSubstateByTag_ReturnValue;         // 0x0188(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller;       // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;  // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_CustomEvent_Instigator;                     // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHarvestableInstancedMeshComponent*     K2Node_CustomEvent_Target;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character_1;      // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerCheatEnabled_ReturnValue;         // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller_1;     // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x01FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEnterSubstateByTag_ReturnValue;        // 0x0204(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0208(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0218(0x00B0)()
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x02C8(0x00B0)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0378(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0388(0x00B0)(ConstParm)
	class UHarvestableInstancedMeshComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateTarget_Valid;                     // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character_1;             // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHarvestableInstancedMeshComponent*     CallFunc_FindTarget_Target;                        // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0474(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_2;                            // 0x0484(0x0010)(ConstParm, NoDestructor)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_CustomEvent_Character_1;                    // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_3;                            // 0x04A0(0x0010)(ConstParm, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller_2;     // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C2[0x6];                                      // 0x04C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandHarvestFlowerField_ReturnValue;       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_Controller_1;                   // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEInputContext                         K2Node_MakeStruct_EInputContext;                   // 0x0520(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_Controller;                     // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_CustomEvent_Character;                      // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0540(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x056C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0580(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0588(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_1;          // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FETutorialEnum                         K2Node_MakeStruct_ETutorialEnum;                   // 0x05A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2; // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_2;          // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character_2;      // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x05C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerCheatEnabled_ReturnValue_1;       // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D5[0x3];                                      // 0x05D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x05D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character_3;      // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x3];                                      // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x05F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HandHarvestFlowerField_HydrationLimit_ImplicitCast; // 0x05FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HandHarvestFlowerField_WaterObtained_ImplicitCast; // 0x0610(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_HandWaterThresholdGain_ImplicitCast; // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField");
static_assert(sizeof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField) == 0x000628, "Wrong size on GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, EntryPoint) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, Temp_bool_Variable) == 0x000004, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, Temp_struct_Variable) == 0x000008, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0000B8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000C0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Character) == 0x0000C8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Payload) == 0x0000D8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_TryExitSubstateByTag_ReturnValue) == 0x000188, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_TryExitSubstateByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetController_ReturnValue) == 0x000190, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Controller) == 0x000198, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Controller' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate) == 0x0001A4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Instigator) == 0x0001B8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Target) == 0x0001C0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x0001C8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Character_1) == 0x0001D0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Character_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_2) == 0x0001D8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsPlayerCheatEnabled_ReturnValue) == 0x0001D9, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsPlayerCheatEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetMovementComponent_ReturnValue) == 0x0001E0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetController_ReturnValue_1) == 0x0001E8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Controller_1) == 0x0001F0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsValid_ReturnValue) == 0x0001F9, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x0001FC, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_TryEnterSubstateByTag_ReturnValue) == 0x000204, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_TryEnterSubstateByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_1) == 0x000208, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, Temp_struct_Variable_1) == 0x000218, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Payload_1) == 0x0002C8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_2) == 0x000378, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_Event_EventData) == 0x000388, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetComponentByClass_ReturnValue) == 0x000438, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Character) == 0x000440, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_4) == 0x000448, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsValid_ReturnValue_1) == 0x000449, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_ValidateTarget_Valid) == 0x00044A, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_ValidateTarget_Valid' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000450, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Character_1) == 0x000458, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Character_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_5) == 0x000460, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_FindTarget_Target) == 0x000468, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_FindTarget_Target' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsValid_ReturnValue_2) == 0x000470, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_3) == 0x000474, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, Temp_struct_Variable_2) == 0x000484, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Character_1) == 0x000498, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, Temp_struct_Variable_3) == 0x0004A0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetController_ReturnValue_2) == 0x0004B0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Controller_2) == 0x0004B8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_6) == 0x0004C0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_K2_HasAuthority_ReturnValue) == 0x0004C1, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0004C8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x0004D0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetFloatAttribute_ReturnValue) == 0x0004D4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0004D8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0004E0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0004E8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0004F0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0004F8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000500, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_FMax_ReturnValue) == 0x000508, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_HandHarvestFlowerField_ReturnValue) == 0x000510, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_HandHarvestFlowerField_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Controller_1) == 0x000518, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Controller_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_MakeStruct_EInputContext) == 0x000520, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_MakeStruct_EInputContext' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Controller) == 0x000528, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_Event_bWasCancelled) == 0x000530, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CustomEvent_Character) == 0x000538, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_4) == 0x000540, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x000550, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x000554, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x000558, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000560, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsValid_ReturnValue_3) == 0x000568, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_5) == 0x00056C, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000580, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_6) == 0x000588, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_WaitGameplayEvent_ReturnValue_1) == 0x000598, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_WaitGameplayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsValid_ReturnValue_4) == 0x0005A0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_MakeStruct_ETutorialEnum) == 0x0005A4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_MakeStruct_ETutorialEnum' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2) == 0x0005AC, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_GetFloatAttribute_ReturnValue_2) == 0x0005B0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_GetFloatAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0005B4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Character_2) == 0x0005B8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Character_2' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_7) == 0x0005C0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_7) == 0x0005C4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_IsPlayerCheatEnabled_ReturnValue_1) == 0x0005D4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_IsPlayerCheatEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_CreateDelegate_OutputDelegate_8) == 0x0005D8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_AsDune_Player_Character_3) == 0x0005E8, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_AsDune_Player_Character_3' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_DynamicCast_bSuccess_8) == 0x0005F0, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_Select_Default) == 0x0005F4, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_HandHarvestFlowerField_HydrationLimit_ImplicitCast) == 0x0005FC, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_HandHarvestFlowerField_HydrationLimit_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000600, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000608, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_HandHarvestFlowerField_WaterObtained_ImplicitCast) == 0x000610, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_HandHarvestFlowerField_WaterObtained_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, K2Node_VariableSet_HandWaterThresholdGain_ImplicitCast) == 0x000618, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::K2Node_VariableSet_HandWaterThresholdGain_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x000620, "Member 'GA_HandHarvestFlowerField_C_ExecuteUbergraph_GA_HandHarvestFlowerField::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_HandHarvestFlowerField_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_HandHarvestFlowerField_C_K2_OnEndAbility");
static_assert(sizeof(GA_HandHarvestFlowerField_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_HandHarvestFlowerField_C_K2_OnEndAbility");
static_assert(offsetof(GA_HandHarvestFlowerField_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.RemoveInputContext
// 0x0008 (0x0008 - 0x0000)
struct GA_HandHarvestFlowerField_C_RemoveInputContext final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_RemoveInputContext) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_RemoveInputContext");
static_assert(sizeof(GA_HandHarvestFlowerField_C_RemoveInputContext) == 0x000008, "Wrong size on GA_HandHarvestFlowerField_C_RemoveInputContext");
static_assert(offsetof(GA_HandHarvestFlowerField_C_RemoveInputContext, Controller) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_RemoveInputContext::Controller' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.SetGainThreshold
// 0x0008 (0x0008 - 0x0000)
struct GA_HandHarvestFlowerField_C_SetGainThreshold final
{
public:
	class ADunePlayerCharacter*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_SetGainThreshold) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_SetGainThreshold");
static_assert(sizeof(GA_HandHarvestFlowerField_C_SetGainThreshold) == 0x000008, "Wrong size on GA_HandHarvestFlowerField_C_SetGainThreshold");
static_assert(offsetof(GA_HandHarvestFlowerField_C_SetGainThreshold, Character) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_SetGainThreshold::Character' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.ShowDewHandHarvestTutorial
// 0x0008 (0x0008 - 0x0000)
struct GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial final
{
public:
	class ADunePlayerCharacter*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial");
static_assert(sizeof(GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial) == 0x000008, "Wrong size on GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial, Character) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_ShowDewHandHarvestTutorial::Character' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.StartHandHarvesting
// 0x0010 (0x0010 - 0x0000)
struct GA_HandHarvestFlowerField_C_StartHandHarvesting final
{
public:
	class ADuneCharacter*                         Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHarvestableInstancedMeshComponent*     Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_StartHandHarvesting) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_StartHandHarvesting");
static_assert(sizeof(GA_HandHarvestFlowerField_C_StartHandHarvesting) == 0x000010, "Wrong size on GA_HandHarvestFlowerField_C_StartHandHarvesting");
static_assert(offsetof(GA_HandHarvestFlowerField_C_StartHandHarvesting, Instigator) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_StartHandHarvesting::Instigator' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_StartHandHarvesting, Target) == 0x000008, "Member 'GA_HandHarvestFlowerField_C_StartHandHarvesting::Target' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.FilterTargets
// 0x0060 (0x0060 - 0x0000)
struct GA_HandHarvestFlowerField_C_FilterTargets final
{
public:
	TArray<class AActor*>                         Candidates;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UHarvestableInstancedMeshComponent*> Targets;                                       // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UHarvestableInstancedMeshComponent*> Filtered;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHarvestableInstancedMeshComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateTarget_Valid;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_FilterTargets) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_FilterTargets");
static_assert(sizeof(GA_HandHarvestFlowerField_C_FilterTargets) == 0x000060, "Wrong size on GA_HandHarvestFlowerField_C_FilterTargets");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, Candidates) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::Candidates' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, Targets) == 0x000010, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::Targets' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, Filtered) == 0x000020, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::Filtered' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, Temp_int_Array_Index_Variable) == 0x000034, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_Array_Get_Item) == 0x000038, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_ValidateTarget_Valid) == 0x000049, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_ValidateTarget_Valid' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FilterTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'GA_HandHarvestFlowerField_C_FilterTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.FindTarget
// 0x0088 (0x0088 - 0x0000)
struct GA_HandHarvestFlowerField_C_FindTarget final
{
public:
	class ADuneCharacter*                         Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHarvestableInstancedMeshComponent*     Target;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHarvestableInstancedMeshComponent*> CallFunc_FilterTargets_Targets;                // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHarvestableInstancedMeshComponent*     CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_FindTarget) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_FindTarget");
static_assert(sizeof(GA_HandHarvestFlowerField_C_FindTarget) == 0x000088, "Wrong size on GA_HandHarvestFlowerField_C_FindTarget");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, Instigator) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_FindTarget::Instigator' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, Target) == 0x000008, "Member 'GA_HandHarvestFlowerField_C_FindTarget::Target' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, K2Node_MakeArray_Array) == 0x000010, "Member 'GA_HandHarvestFlowerField_C_FindTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, K2Node_MakeArray_Array_1) == 0x000038, "Member 'GA_HandHarvestFlowerField_C_FindTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_SphereOverlapActors_OutActors) == 0x000048, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_SphereOverlapActors_ReturnValue) == 0x000058, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_FilterTargets_Targets) == 0x000060, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_FilterTargets_Targets' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_Array_Get_Item) == 0x000078, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_FindTarget, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000084, "Member 'GA_HandHarvestFlowerField_C_FindTarget::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.K2_CanActivateAbility
// 0x0078 (0x0078 - 0x0000)
struct GA_HandHarvestFlowerField_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_K2_CanActivateAbility");
static_assert(sizeof(GA_HandHarvestFlowerField_C_K2_CanActivateAbility) == 0x000078, "Wrong size on GA_HandHarvestFlowerField_C_K2_CanActivateAbility");
static_assert(offsetof(GA_HandHarvestFlowerField_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_HandHarvestFlowerField_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_HandHarvestFlowerField_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_HandHarvestFlowerField_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.ValidateTarget
// 0x0028 (0x0028 - 0x0000)
struct GA_HandHarvestFlowerField_C_ValidateTarget final
{
public:
	class UHarvestableInstancedMeshComponent*     Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateTargetCharacter_Valid;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_ValidateTarget) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_ValidateTarget");
static_assert(sizeof(GA_HandHarvestFlowerField_C_ValidateTarget) == 0x000028, "Wrong size on GA_HandHarvestFlowerField_C_ValidateTarget");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTarget, Source) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_ValidateTarget::Source' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTarget, Valid) == 0x000008, "Member 'GA_HandHarvestFlowerField_C_ValidateTarget::Valid' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTarget, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'GA_HandHarvestFlowerField_C_ValidateTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTarget, K2Node_DynamicCast_AsDune_Character) == 0x000018, "Member 'GA_HandHarvestFlowerField_C_ValidateTarget::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_HandHarvestFlowerField_C_ValidateTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTarget, CallFunc_ValidateTargetCharacter_Valid) == 0x000021, "Member 'GA_HandHarvestFlowerField_C_ValidateTarget::CallFunc_ValidateTargetCharacter_Valid' has a wrong offset!");

// Function GA_HandHarvestFlowerField.GA_HandHarvestFlowerField_C.ValidateTargetCharacter
// 0x0018 (0x0018 - 0x0000)
struct GA_HandHarvestFlowerField_C_ValidateTargetCharacter final
{
public:
	class ADuneCharacter*                         Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInStateOrSubstateByTag_ReturnValue;     // 0x0014(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HandHarvestFlowerField_C_ValidateTargetCharacter) == 0x000008, "Wrong alignment on GA_HandHarvestFlowerField_C_ValidateTargetCharacter");
static_assert(sizeof(GA_HandHarvestFlowerField_C_ValidateTargetCharacter) == 0x000018, "Wrong size on GA_HandHarvestFlowerField_C_ValidateTargetCharacter");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTargetCharacter, Character) == 0x000000, "Member 'GA_HandHarvestFlowerField_C_ValidateTargetCharacter::Character' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTargetCharacter, Valid) == 0x000008, "Member 'GA_HandHarvestFlowerField_C_ValidateTargetCharacter::Valid' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTargetCharacter, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00000C, "Member 'GA_HandHarvestFlowerField_C_ValidateTargetCharacter::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HandHarvestFlowerField_C_ValidateTargetCharacter, CallFunc_IsInStateOrSubstateByTag_ReturnValue) == 0x000014, "Member 'GA_HandHarvestFlowerField_C_ValidateTargetCharacter::CallFunc_IsInStateOrSubstateByTag_ReturnValue' has a wrong offset!");

}

