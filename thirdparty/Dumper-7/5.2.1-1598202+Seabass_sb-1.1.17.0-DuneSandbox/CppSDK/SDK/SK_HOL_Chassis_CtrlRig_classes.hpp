#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_HOL_Chassis_CtrlRig

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass SK_HOL_Chassis_CtrlRig.SK_HOL_Chassis_CtrlRig_C
// 0x00E0 (0x04E0 - 0x0400)
class USK_HOL_Chassis_CtrlRig_C final : public UControlRig
{
public:
	struct FRotator                               BodyRotationOffset;                                // 0x0400(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Target_Leg_Front_L;                                // 0x0418(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Leg_Front_R;                                // 0x0430(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Leg_Rear_L;                                 // 0x0448(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Leg_Rear_R;                                 // 0x0460(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Front_L;                               // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Front_R;                               // 0x0490(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Rear_L;                                // 0x04A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Rear_R;                                // 0x04C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKWeight;                                          // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SK_HOL_Chassis_CtrlRig_C">();
	}
	static class USK_HOL_Chassis_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USK_HOL_Chassis_CtrlRig_C>();
	}
};
static_assert(alignof(USK_HOL_Chassis_CtrlRig_C) == 0x000008, "Wrong alignment on USK_HOL_Chassis_CtrlRig_C");
static_assert(sizeof(USK_HOL_Chassis_CtrlRig_C) == 0x0004E0, "Wrong size on USK_HOL_Chassis_CtrlRig_C");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, BodyRotationOffset) == 0x000400, "Member 'USK_HOL_Chassis_CtrlRig_C::BodyRotationOffset' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Leg_Front_L) == 0x000418, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Leg_Front_L' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Leg_Front_R) == 0x000430, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Leg_Front_R' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Leg_Rear_L) == 0x000448, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Leg_Rear_L' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Leg_Rear_R) == 0x000460, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Leg_Rear_R' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Foot_Front_L) == 0x000478, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Foot_Front_L' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Foot_Front_R) == 0x000490, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Foot_Front_R' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Foot_Rear_L) == 0x0004A8, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Foot_Rear_L' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, Target_Foot_Rear_R) == 0x0004C0, "Member 'USK_HOL_Chassis_CtrlRig_C::Target_Foot_Rear_R' has a wrong offset!");
static_assert(offsetof(USK_HOL_Chassis_CtrlRig_C, IKWeight) == 0x0004D8, "Member 'USK_HOL_Chassis_CtrlRig_C::IKWeight' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_HOL_Chassis_CtrlRig.RigVMMemory_Literal
// 0x0510 (0x0540 - 0x0030)
class SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RigUnit_SetRotation_Item__Const;      // 0x0030(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___RigUnit_SetRotation_Space__Const;     // 0x003C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_SetRotation_bInitial__Const;  // 0x003D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigUnit_SetRotation_Weight__Const;    // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_SetRotation_bPropagateToChildren__Const; // 0x0044(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatGreater_B__Const;            // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_Item__Const;     // 0x004C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__Const;    // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__Const; // 0x00C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_Primary__Const;           // 0x00D8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_Secondary__Const;         // 0x0120(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimBoneMath_DebugSettings__Const;     // 0x0170(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___MathFloatClamp_Minimum__Const;        // 0x01E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Maximum__Const;        // 0x01E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___KalmanFloat_BufferSize__Const;        // 0x01E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_1_Item__Const;   // 0x01EC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_4_Item__Const;   // 0x01F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_Primary__Const;         // 0x0208(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___MathFloatClamp_4_Maximum__Const;      // 0x0250(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_5_Item__Const;   // 0x0254(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_6_Item__Const;   // 0x0260(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_6_Value__Const;  // 0x0270(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_6_Primary__Const;         // 0x02D0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_6_Secondary__Const;       // 0x0318(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_6_1_Item__Const; // 0x0360(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_6_2_Item__Const; // 0x036C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_2_Maximum__Const;    // 0x0378(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_6_1_1_Item__Const; // 0x037C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_Item__Const;                  // 0x0388(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__Const;               // 0x0398(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_Item__Const;   // 0x03E0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_Item__Const;                // 0x03EC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_Item__Const; // 0x03F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_5_Item__Const;                // 0x0404(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_5_Primary__Const;             // 0x0410(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_1_1_3_Item__Const; // 0x0458(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_3_Item__Const;                // 0x0464(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_2_Item__Const; // 0x0470(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_2_Item__Const;              // 0x047C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_2_Item__Const; // 0x0488(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_5_2_Item__Const;              // 0x0494(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_Item__Const; // 0x04A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_4_Item__Const;                // 0x04AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_3_Item__Const; // 0x04B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_2_2_Item__Const;              // 0x04C4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_1_3_Item__Const; // 0x04D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_2_2_1_Item__Const;            // 0x04DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_1_3_1_Item__Const; // 0x04E8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_4_1_Item__Const;              // 0x04F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_3_1_Item__Const; // 0x0500(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_2_2_2_Item__Const;            // 0x050C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_1_3_2_Item__Const; // 0x0518(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_2_2_1_1_Item__Const;          // 0x0524(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_Item__Const; // 0x0530(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_HOL_Chassis_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal) == 0x000540, "Wrong size on SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_Item__Const) == 0x000030, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_Space__Const) == 0x00003C, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_Space__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_bInitial__Const) == 0x00003D, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_bInitial__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_Weight__Const) == 0x000040, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_Weight__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetRotation_bPropagateToChildren__Const) == 0x000044, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetRotation_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatGreater_B__Const) == 0x000048, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatGreater_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Item__Const) == 0x00004C, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Value__Const) == 0x000060, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_Rotator__Const) == 0x0000C0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_Rotator__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_Primary__Const) == 0x0000D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_Secondary__Const) == 0x000120, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_Secondary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_DebugSettings__Const) == 0x000170, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_Minimum__Const) == 0x0001E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_Maximum__Const) == 0x0001E4, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___KalmanFloat_BufferSize__Const) == 0x0001E8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___KalmanFloat_BufferSize__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_1_Item__Const) == 0x0001EC, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_4_Item__Const) == 0x0001F8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_4_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_4_Primary__Const) == 0x000208, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_4_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_4_Maximum__Const) == 0x000250, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_4_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_5_Item__Const) == 0x000254, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_5_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_6_Item__Const) == 0x000260, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_6_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_6_Value__Const) == 0x000270, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_6_Value__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_6_Primary__Const) == 0x0002D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_6_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_6_Secondary__Const) == 0x000318, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_6_Secondary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_6_1_Item__Const) == 0x000360, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_6_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_6_2_Item__Const) == 0x00036C, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_6_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_6_2_Maximum__Const) == 0x000378, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_6_2_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_6_1_1_Item__Const) == 0x00037C, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_6_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_Item__Const) == 0x000388, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_Primary__Const) == 0x000398, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_Item__Const) == 0x0003E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_1_Item__Const) == 0x0003EC, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_Item__Const) == 0x0003F8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_5_Item__Const) == 0x000404, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_5_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_5_Primary__Const) == 0x000410, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_5_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_Item__Const) == 0x000458, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_3_Item__Const) == 0x000464, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_2_Item__Const) == 0x000470, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Item__Const) == 0x00047C, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_2_Item__Const) == 0x000488, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_5_2_Item__Const) == 0x000494, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_5_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_Item__Const) == 0x0004A0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_4_Item__Const) == 0x0004AC, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_4_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_3_Item__Const) == 0x0004B8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_2_2_Item__Const) == 0x0004C4, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_1_3_Item__Const) == 0x0004D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_2_2_1_Item__Const) == 0x0004DC, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_1_3_1_Item__Const) == 0x0004E8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_1_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_4_1_Item__Const) == 0x0004F4, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_4_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_3_1_Item__Const) == 0x000500, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_2_2_2_Item__Const) == 0x00050C, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_2_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_1_3_2_Item__Const) == 0x000518, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_1_3_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_2_2_1_1_Item__Const) == 0x000524, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_2_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_Item__Const) == 0x000530, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_HOL_Chassis_CtrlRig.RigVMMemory_Work
// 0x2E40 (0x2E70 - 0x0030)
class SK_HOL_Chassis_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FQuat                                  RigVMModel___RigVMFunction_MathQuaternionFromRotatorV2_Result; // 0x0030(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetRotation_CachedIndex;      // 0x0050(0x0010)(Edit, EditConst, NonTransactional)
	bool                                          RigVMModel___MathFloatGreater_Result;              // 0x0060(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatGreater_A;                   // 0x0064(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_Result;     // 0x0070(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_Result;                   // 0x0090(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Result;                // 0x0094(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_Result;     // 0x0098(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_Result;                   // 0x00B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_Transform;       // 0x0110(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_CachedIndex;     // 0x0170(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_Global;           // 0x0180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_Primary__IO;              // 0x0198(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_PrimaryCachedSpace;       // 0x01E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_SecondaryCachedSpace;     // 0x01F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_bIsInitialized;           // 0x0200(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_Value;      // 0x0210(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Value;                 // 0x0230(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_Buffer;                   // 0x0238(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_LastInsertIndex;          // 0x0248(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_Result;       // 0x0258(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_Value;        // 0x0270(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__IO; // 0x0290(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__IO;       // 0x02B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_Weight;          // 0x0310(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_CachedIndex;     // 0x0318(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_Result;   // 0x0330(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_1_Result;                 // 0x0350(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_1_Result;              // 0x0354(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_1_Result;   // 0x0358(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_1_Result;                 // 0x0370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x03D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x0430(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_1_Global;         // 0x0440(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_Primary__IO;            // 0x0458(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_PrimaryCachedSpace;     // 0x04A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_SecondaryCachedSpace;   // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_1_bIsInitialized;         // 0x04C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_1_Value;    // 0x04D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_1_Value;               // 0x04F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_1_Buffer;                 // 0x04F8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_1_LastInsertIndex;        // 0x0508(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_Result;     // 0x0518(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_2_Value;      // 0x0530(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_Rotator__IO; // 0x0550(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_568[0x8];                                      // 0x0568(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_1_Value__IO;     // 0x0570(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_1_Weight;        // 0x05D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_1_CachedIndex;   // 0x05D8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_5E8[0x8];                                      // 0x05E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_Result;   // 0x05F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_Result;                 // 0x0610(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_Result;              // 0x0614(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_Result;   // 0x0618(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_Result;                 // 0x0630(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_4_Transform;     // 0x0690(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_4_CachedIndex;   // 0x06F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_Global;         // 0x0700(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_Primary__IO;            // 0x0718(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_PrimaryCachedSpace;     // 0x0760(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_SecondaryCachedSpace;   // 0x0770(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_bIsInitialized;         // 0x0780(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_Value;    // 0x0790(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_Value;               // 0x07B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_Buffer;                 // 0x07B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_LastInsertIndex;        // 0x07C8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_Result;     // 0x07D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_Value;      // 0x07F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_Rotator__IO; // 0x0810(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_828[0x8];                                      // 0x0828(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_4_Value__IO;     // 0x0830(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_4_Weight;        // 0x0890(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_894[0x4];                                      // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_4_CachedIndex;   // 0x0898(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_8A8[0x8];                                      // 0x08A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_5_Result;   // 0x08B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_5_Result;                 // 0x08D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_5_Result;              // 0x08D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_5_Result;   // 0x08D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_5_Result;                 // 0x08F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_5_Transform;     // 0x0950(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_5_CachedIndex;   // 0x09B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_5_Global;         // 0x09C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_5_Primary__IO;            // 0x09D8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_5_PrimaryCachedSpace;     // 0x0A20(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_5_SecondaryCachedSpace;   // 0x0A30(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_5_bIsInitialized;         // 0x0A40(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_5_Value;    // 0x0A50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_5_Value;               // 0x0A70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_5_Buffer;                 // 0x0A78(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_5_LastInsertIndex;        // 0x0A88(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_6_Result;     // 0x0A98(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_6_Value;      // 0x0AB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_5_Rotator__IO; // 0x0AD0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_AE8[0x8];                                      // 0x0AE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_5_Value__IO;     // 0x0AF0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_5_Weight;        // 0x0B50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_5_CachedIndex;   // 0x0B58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_B68[0x8];                                      // 0x0B68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_Result;   // 0x0B70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_6_Result;                 // 0x0B90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_Result;              // 0x0B94(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_8_Result;     // 0x0B98(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_6_Result;                 // 0x0BB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_6_Transform;     // 0x0C10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_6_CachedIndex;   // 0x0C70(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_6_Global;         // 0x0C80(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_6_Primary__IO;            // 0x0C98(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_PrimaryCachedSpace;     // 0x0CE0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_SecondaryCachedSpace;   // 0x0CF0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_6_bIsInitialized;         // 0x0D00(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_8_Value;      // 0x0D10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_Value;               // 0x0D30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D34[0x4];                                      // 0x0D34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_6_Buffer;                 // 0x0D38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_6_LastInsertIndex;        // 0x0D48(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_7_Result;     // 0x0D58(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_7_Value;      // 0x0D70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_Rotator__IO; // 0x0D90(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_DA8[0x8];                                      // 0x0DA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_6_Value__IO;     // 0x0DB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_6_Weight;        // 0x0E10(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E14[0x4];                                      // 0x0E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_6_CachedIndex;   // 0x0E18(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_E28[0x8];                                      // 0x0E28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_1_Result; // 0x0E30(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_6_1_Result;               // 0x0E50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_1_Result;            // 0x0E54(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_8_1_Result;   // 0x0E58(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_6_1_Result;               // 0x0E70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_6_1_Transform;   // 0x0ED0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_6_1_CachedIndex; // 0x0F30(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_6_1_Global;       // 0x0F40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_6_1_Primary__IO;          // 0x0F58(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_1_PrimaryCachedSpace;   // 0x0FA0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_1_SecondaryCachedSpace; // 0x0FB0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_6_1_bIsInitialized;       // 0x0FC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_8_1_Value;    // 0x0FD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_1_Value;             // 0x0FF0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF4[0x4];                                      // 0x0FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_6_1_Buffer;               // 0x0FF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_6_1_LastInsertIndex;      // 0x1008(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_7_1_Result;   // 0x1018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_7_1_Value;    // 0x1030(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO; // 0x1050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1068[0x8];                                     // 0x1068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_6_1_Value__IO;   // 0x1070(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_6_1_Weight;      // 0x10D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D4[0x4];                                     // 0x10D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_6_1_CachedIndex; // 0x10D8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_10E8[0x8];                                     // 0x10E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_2_Result; // 0x10F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_6_2_Result;               // 0x1110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_2_Result;            // 0x1114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_8_2_Result;   // 0x1118(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_6_2_Result;               // 0x1130(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_6_2_Transform;   // 0x1190(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_6_2_CachedIndex; // 0x11F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_6_2_Global;       // 0x1200(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_6_2_Primary__IO;          // 0x1218(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_2_PrimaryCachedSpace;   // 0x1260(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_2_SecondaryCachedSpace; // 0x1270(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_6_2_bIsInitialized;       // 0x1280(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_8_2_Value;    // 0x1290(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_2_Value;             // 0x12B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B4[0x4];                                     // 0x12B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_6_2_Buffer;               // 0x12B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_6_2_LastInsertIndex;      // 0x12C8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_7_2_Result;   // 0x12D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_7_2_Value;    // 0x12F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO; // 0x1310(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1328[0x8];                                     // 0x1328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_6_2_Value__IO;   // 0x1330(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_6_2_Weight;      // 0x1390(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1394[0x4];                                     // 0x1394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_6_2_CachedIndex; // 0x1398(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_13A8[0x8];                                     // 0x13A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_1_1_Result; // 0x13B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_6_1_1_Result;             // 0x13D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_1_1_Result;          // 0x13D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_8_1_1_Result; // 0x13D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_6_1_1_Result;             // 0x13F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_6_1_1_Transform; // 0x1450(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_6_1_1_CachedIndex; // 0x14B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_6_1_1_Global;     // 0x14C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_6_1_1_Primary__IO;        // 0x14D8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_1_1_PrimaryCachedSpace; // 0x1520(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_6_1_1_SecondaryCachedSpace; // 0x1530(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_6_1_1_bIsInitialized;     // 0x1540(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_8_1_1_Value;  // 0x1550(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_6_1_1_Value;           // 0x1570(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1574[0x4];                                     // 0x1574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_6_1_1_Buffer;             // 0x1578(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_6_1_1_LastInsertIndex;    // 0x1588(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_7_1_1_Result; // 0x1598(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_7_1_1_Value;  // 0x15B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_1_1_Rotator__IO; // 0x15D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_15E8[0x8];                                     // 0x15E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_6_1_1_Value__IO; // 0x15F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_6_1_1_Weight;    // 0x1650(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1654[0x4];                                     // 0x1654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_6_1_1_CachedIndex; // 0x1658(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1668[0x8];                                     // 0x1668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x1670(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x16D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__IO;                  // 0x16E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_CachedItem;                   // 0x1728(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_PrimaryCachedSpace;           // 0x1738(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_SecondaryCachedSpace;         // 0x1748(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_bIsInitialized;               // 0x1758(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1768[0x8];                                     // 0x1768(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_Transform;   // 0x1770(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_CachedIndex; // 0x17D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__IO;                // 0x17E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_CachedItem;                 // 0x1828(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_PrimaryCachedSpace;         // 0x1838(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_SecondaryCachedSpace;       // 0x1848(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_bIsInitialized;             // 0x1858(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1868[0x8];                                     // 0x1868(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_Transform; // 0x1870(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_CachedIndex; // 0x18D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_Primary__IO;                // 0x18E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_CachedItem;                 // 0x1928(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_PrimaryCachedSpace;         // 0x1938(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_SecondaryCachedSpace;       // 0x1948(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_bIsInitialized;             // 0x1958(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1968[0x8];                                     // 0x1968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_Transform; // 0x1970(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_CachedIndex; // 0x19D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_Primary__IO;              // 0x19E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_CachedItem;               // 0x1A28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_PrimaryCachedSpace;       // 0x1A38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_SecondaryCachedSpace;     // 0x1A48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_bIsInitialized;           // 0x1A58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1A68[0x8];                                     // 0x1A68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_3_Transform; // 0x1A70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_3_CachedIndex; // 0x1AD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_5_Primary__IO;                // 0x1AE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_CachedItem;                 // 0x1B28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_PrimaryCachedSpace;         // 0x1B38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_SecondaryCachedSpace;       // 0x1B48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_5_bIsInitialized;             // 0x1B58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1B68[0x8];                                     // 0x1B68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_Transform; // 0x1B70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_CachedIndex; // 0x1BD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_5_1_Primary__IO;              // 0x1BE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_1_CachedItem;               // 0x1C28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_1_PrimaryCachedSpace;       // 0x1C38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_1_SecondaryCachedSpace;     // 0x1C48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_5_1_bIsInitialized;           // 0x1C58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1C68[0x8];                                     // 0x1C68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_2_Transform;   // 0x1C70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_2_CachedIndex; // 0x1CD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_3_Primary__IO;                // 0x1CE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_3_CachedItem;                 // 0x1D28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_3_PrimaryCachedSpace;         // 0x1D38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_3_SecondaryCachedSpace;       // 0x1D48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_3_bIsInitialized;             // 0x1D58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1D68[0x8];                                     // 0x1D68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_2_Transform; // 0x1D70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_2_CachedIndex; // 0x1DD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Primary__IO;              // 0x1DE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_CachedItem;               // 0x1E28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_PrimaryCachedSpace;       // 0x1E38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_SecondaryCachedSpace;     // 0x1E48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_2_bIsInitialized;           // 0x1E58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1E68[0x8];                                     // 0x1E68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_2_Transform; // 0x1E70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_2_CachedIndex; // 0x1ED0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_1_Primary__IO;              // 0x1EE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_1_CachedItem;               // 0x1F28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_1_PrimaryCachedSpace;       // 0x1F38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_1_SecondaryCachedSpace;     // 0x1F48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_1_bIsInitialized;           // 0x1F58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1F68[0x8];                                     // 0x1F68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_1_Transform; // 0x1F70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_1_CachedIndex; // 0x1FD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_Primary__IO;            // 0x1FE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_CachedItem;             // 0x2028(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_PrimaryCachedSpace;     // 0x2038(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_SecondaryCachedSpace;   // 0x2048(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_1_bIsInitialized;         // 0x2058(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2068[0x8];                                     // 0x2068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_Transform; // 0x2070(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_CachedIndex; // 0x20D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_5_2_Primary__IO;              // 0x20E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_2_CachedItem;               // 0x2128(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_2_PrimaryCachedSpace;       // 0x2138(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_2_SecondaryCachedSpace;     // 0x2148(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_5_2_bIsInitialized;           // 0x2158(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2168[0x8];                                     // 0x2168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_1_Transform; // 0x2170(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_1_CachedIndex; // 0x21D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_5_1_1_Primary__IO;            // 0x21E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_1_1_CachedItem;             // 0x2228(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_1_1_PrimaryCachedSpace;     // 0x2238(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_5_1_1_SecondaryCachedSpace;   // 0x2248(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_5_1_1_bIsInitialized;         // 0x2258(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2268[0x8];                                     // 0x2268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_3_Transform;   // 0x2270(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_3_CachedIndex; // 0x22D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_4_Primary__IO;                // 0x22E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_4_CachedItem;                 // 0x2328(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_4_PrimaryCachedSpace;         // 0x2338(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_4_SecondaryCachedSpace;       // 0x2348(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_4_bIsInitialized;             // 0x2358(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2368[0x8];                                     // 0x2368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_3_Transform; // 0x2370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_3_CachedIndex; // 0x23D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_3_Primary__IO;              // 0x23E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_3_CachedItem;               // 0x2428(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_3_PrimaryCachedSpace;       // 0x2438(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_3_SecondaryCachedSpace;     // 0x2448(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_3_bIsInitialized;           // 0x2458(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2468[0x8];                                     // 0x2468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_3_Transform; // 0x2470(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_3_CachedIndex; // 0x24D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_2_Primary__IO;              // 0x24E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_CachedItem;               // 0x2528(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_PrimaryCachedSpace;       // 0x2538(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_SecondaryCachedSpace;     // 0x2548(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_2_bIsInitialized;           // 0x2558(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2568[0x8];                                     // 0x2568(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_2_Transform; // 0x2570(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_2_CachedIndex; // 0x25D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_2_Primary__IO;            // 0x25E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_CachedItem;             // 0x2628(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_PrimaryCachedSpace;     // 0x2638(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_SecondaryCachedSpace;   // 0x2648(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_2_bIsInitialized;         // 0x2658(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2668[0x8];                                     // 0x2668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_3_1_Transform; // 0x2670(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_3_1_CachedIndex; // 0x26D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_2_1_Primary__IO;            // 0x26E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_1_CachedItem;             // 0x2728(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_1_PrimaryCachedSpace;     // 0x2738(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_1_SecondaryCachedSpace;   // 0x2748(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_2_1_bIsInitialized;         // 0x2758(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2768[0x8];                                     // 0x2768(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_Transform; // 0x2770(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_CachedIndex; // 0x27D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_2_1_Primary__IO;          // 0x27E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_1_CachedItem;           // 0x2828(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_1_PrimaryCachedSpace;   // 0x2838(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_1_SecondaryCachedSpace; // 0x2848(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_2_1_bIsInitialized;       // 0x2858(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2868[0x8];                                     // 0x2868(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_3_1_Transform; // 0x2870(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_3_1_CachedIndex; // 0x28D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_4_1_Primary__IO;              // 0x28E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_4_1_CachedItem;               // 0x2928(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_4_1_PrimaryCachedSpace;       // 0x2938(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_4_1_SecondaryCachedSpace;     // 0x2948(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_4_1_bIsInitialized;           // 0x2958(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2968[0x8];                                     // 0x2968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_3_1_Transform; // 0x2970(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_3_1_CachedIndex; // 0x29D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_3_1_Primary__IO;            // 0x29E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_3_1_CachedItem;             // 0x2A28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_3_1_PrimaryCachedSpace;     // 0x2A38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_3_1_SecondaryCachedSpace;   // 0x2A48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_3_1_bIsInitialized;         // 0x2A58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2A68[0x8];                                     // 0x2A68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_3_2_Transform; // 0x2A70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_3_2_CachedIndex; // 0x2AD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_2_2_Primary__IO;            // 0x2AE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_2_CachedItem;             // 0x2B28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_2_PrimaryCachedSpace;     // 0x2B38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_2_SecondaryCachedSpace;   // 0x2B48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_2_2_bIsInitialized;         // 0x2B58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2B68[0x8];                                     // 0x2B68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_2_2_Transform; // 0x2B70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_2_2_CachedIndex; // 0x2BD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_2_2_Primary__IO;          // 0x2BE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_2_CachedItem;           // 0x2C28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_2_PrimaryCachedSpace;   // 0x2C38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_2_SecondaryCachedSpace; // 0x2C48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_2_2_bIsInitialized;       // 0x2C58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2C68[0x8];                                     // 0x2C68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_Transform; // 0x2C70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_CachedIndex; // 0x2CD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_2_1_1_Primary__IO;          // 0x2CE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_1_1_CachedItem;           // 0x2D28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_1_1_PrimaryCachedSpace;   // 0x2D38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_2_1_1_SecondaryCachedSpace; // 0x2D48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_2_1_1_bIsInitialized;       // 0x2D58(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2D68[0x8];                                     // 0x2D68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_1_Transform; // 0x2D70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_1_CachedIndex; // 0x2DD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_2_1_1_Primary__IO;        // 0x2DE0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_1_1_CachedItem;         // 0x2E28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_1_1_PrimaryCachedSpace; // 0x2E38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_2_1_1_SecondaryCachedSpace; // 0x2E48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_2_1_1_bIsInitialized;     // 0x2E58(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Branch_BlockToRun;                    // 0x2E68(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_HOL_Chassis_CtrlRig.RigVMMemory_Work", true>();
	}
	static class SK_HOL_Chassis_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_HOL_Chassis_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on SK_HOL_Chassis_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work) == 0x002E70, "Wrong size on SK_HOL_Chassis_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionFromRotatorV2_Result) == 0x000030, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionFromRotatorV2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetRotation_CachedIndex) == 0x000050, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetRotation_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatGreater_Result) == 0x000060, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatGreater_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatGreater_A) == 0x000064, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatGreater_A' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Result) == 0x000070, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Result) == 0x000090, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Result) == 0x000094, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_Result) == 0x000098, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_Result) == 0x0000B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_Transform) == 0x000110, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_CachedIndex) == 0x000170, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_Global) == 0x000180, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_Primary__IO) == 0x000198, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_PrimaryCachedSpace) == 0x0001E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_SecondaryCachedSpace) == 0x0001F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_bIsInitialized) == 0x000200, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_Value) == 0x000210, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Value) == 0x000230, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Buffer) == 0x000238, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_LastInsertIndex) == 0x000248, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Result) == 0x000258, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Value) == 0x000270, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Rotator__IO) == 0x000290, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_Value__IO) == 0x0002B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_Weight) == 0x000310, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_CachedIndex) == 0x000318, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Result) == 0x000330, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_Result) == 0x000350, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_1_Result) == 0x000354, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_1_Result) == 0x000358, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_Result) == 0x000370, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x0003D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x000430, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_1_Global) == 0x000440, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_1_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_Primary__IO) == 0x000458, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_PrimaryCachedSpace) == 0x0004A0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_SecondaryCachedSpace) == 0x0004B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_bIsInitialized) == 0x0004C0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_1_Value) == 0x0004D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_1_Value) == 0x0004F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_Buffer) == 0x0004F8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_LastInsertIndex) == 0x000508, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Result) == 0x000518, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Value) == 0x000530, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Rotator__IO) == 0x000550, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_Value__IO) == 0x000570, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_Weight) == 0x0005D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_CachedIndex) == 0x0005D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Result) == 0x0005F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_Result) == 0x000610, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_Result) == 0x000614, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_Result) == 0x000618, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_Result) == 0x000630, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_Transform) == 0x000690, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_CachedIndex) == 0x0006F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_Global) == 0x000700, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_Primary__IO) == 0x000718, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_PrimaryCachedSpace) == 0x000760, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_SecondaryCachedSpace) == 0x000770, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_bIsInitialized) == 0x000780, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_Value) == 0x000790, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_Value) == 0x0007B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_Buffer) == 0x0007B8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_LastInsertIndex) == 0x0007C8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_Result) == 0x0007D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_Value) == 0x0007F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Rotator__IO) == 0x000810, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_4_Value__IO) == 0x000830, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_4_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_4_Weight) == 0x000890, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_4_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_4_CachedIndex) == 0x000898, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_5_Result) == 0x0008B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_5_Result) == 0x0008D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_5_Result) == 0x0008D4, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_5_Result) == 0x0008D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_5_Result) == 0x0008F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_5_Transform) == 0x000950, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_5_CachedIndex) == 0x0009B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_5_Global) == 0x0009C0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_5_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_5_Primary__IO) == 0x0009D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_5_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_5_PrimaryCachedSpace) == 0x000A20, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_5_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_5_SecondaryCachedSpace) == 0x000A30, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_5_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_5_bIsInitialized) == 0x000A40, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_5_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_5_Value) == 0x000A50, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_5_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_5_Value) == 0x000A70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_5_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_5_Buffer) == 0x000A78, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_5_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_5_LastInsertIndex) == 0x000A88, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_5_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_6_Result) == 0x000A98, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_6_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_6_Value) == 0x000AB0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_6_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_5_Rotator__IO) == 0x000AD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_5_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_5_Value__IO) == 0x000AF0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_5_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_5_Weight) == 0x000B50, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_5_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_5_CachedIndex) == 0x000B58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_Result) == 0x000B70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_Result) == 0x000B90, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_Result) == 0x000B94, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_Result) == 0x000B98, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_Result) == 0x000BB0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_Transform) == 0x000C10, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_CachedIndex) == 0x000C70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_6_Global) == 0x000C80, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_6_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_Primary__IO) == 0x000C98, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_PrimaryCachedSpace) == 0x000CE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_SecondaryCachedSpace) == 0x000CF0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_bIsInitialized) == 0x000D00, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_Value) == 0x000D10, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_Value) == 0x000D30, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_Buffer) == 0x000D38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_LastInsertIndex) == 0x000D48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_Result) == 0x000D58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_Value) == 0x000D70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_Rotator__IO) == 0x000D90, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_Value__IO) == 0x000DB0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_Weight) == 0x000E10, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_CachedIndex) == 0x000E18, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_Result) == 0x000E30, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_1_Result) == 0x000E50, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_1_Result) == 0x000E54, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_1_Result) == 0x000E58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_Result) == 0x000E70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_1_Transform) == 0x000ED0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_1_CachedIndex) == 0x000F30, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_6_1_Global) == 0x000F40, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_6_1_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_Primary__IO) == 0x000F58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_PrimaryCachedSpace) == 0x000FA0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_SecondaryCachedSpace) == 0x000FB0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_bIsInitialized) == 0x000FC0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_1_Value) == 0x000FD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_1_Value) == 0x000FF0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_1_Buffer) == 0x000FF8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_1_LastInsertIndex) == 0x001008, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_1_Result) == 0x001018, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_1_Value) == 0x001030, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO) == 0x001050, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_1_Value__IO) == 0x001070, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_1_Weight) == 0x0010D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_1_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_1_CachedIndex) == 0x0010D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_2_Result) == 0x0010F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_2_Result) == 0x001110, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_2_Result) == 0x001114, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_2_Result) == 0x001118, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_2_Result) == 0x001130, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_2_Transform) == 0x001190, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_2_CachedIndex) == 0x0011F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_6_2_Global) == 0x001200, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_6_2_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_2_Primary__IO) == 0x001218, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_2_PrimaryCachedSpace) == 0x001260, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_2_SecondaryCachedSpace) == 0x001270, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_2_bIsInitialized) == 0x001280, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_2_Value) == 0x001290, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_2_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_2_Value) == 0x0012B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_2_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_2_Buffer) == 0x0012B8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_2_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_2_LastInsertIndex) == 0x0012C8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_2_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_2_Result) == 0x0012D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_2_Value) == 0x0012F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_2_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO) == 0x001310, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_2_Value__IO) == 0x001330, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_2_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_2_Weight) == 0x001390, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_2_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_2_CachedIndex) == 0x001398, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_1_Result) == 0x0013B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_1_1_Result) == 0x0013D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_1_1_Result) == 0x0013D4, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_1_1_Result) == 0x0013D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_1_Result) == 0x0013F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_1_1_Transform) == 0x001450, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_1_1_CachedIndex) == 0x0014B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_6_1_1_Global) == 0x0014C0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_6_1_1_Global' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_1_Primary__IO) == 0x0014D8, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_1_PrimaryCachedSpace) == 0x001520, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_1_SecondaryCachedSpace) == 0x001530, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_6_1_1_bIsInitialized) == 0x001540, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_6_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_8_1_1_Value) == 0x001550, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_8_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_6_1_1_Value) == 0x001570, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_6_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_1_1_Buffer) == 0x001578, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_1_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_6_1_1_LastInsertIndex) == 0x001588, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_6_1_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_1_1_Result) == 0x001598, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_7_1_1_Value) == 0x0015B0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_7_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_1_Rotator__IO) == 0x0015D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_1_1_Value__IO) == 0x0015F0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_1_1_Weight) == 0x001650, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_1_1_Weight' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_6_1_1_CachedIndex) == 0x001658, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_6_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_Transform) == 0x001670, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_CachedIndex) == 0x0016D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_Primary__IO) == 0x0016E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_CachedItem) == 0x001728, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_PrimaryCachedSpace) == 0x001738, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_SecondaryCachedSpace) == 0x001748, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_bIsInitialized) == 0x001758, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_Transform) == 0x001770, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_CachedIndex) == 0x0017D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_Primary__IO) == 0x0017E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_CachedItem) == 0x001828, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_PrimaryCachedSpace) == 0x001838, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_SecondaryCachedSpace) == 0x001848, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_bIsInitialized) == 0x001858, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_Transform) == 0x001870, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_CachedIndex) == 0x0018D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_Primary__IO) == 0x0018E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_CachedItem) == 0x001928, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_PrimaryCachedSpace) == 0x001938, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_SecondaryCachedSpace) == 0x001948, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_bIsInitialized) == 0x001958, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_Transform) == 0x001970, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_CachedIndex) == 0x0019D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_Primary__IO) == 0x0019E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_CachedItem) == 0x001A28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_PrimaryCachedSpace) == 0x001A38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_SecondaryCachedSpace) == 0x001A48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_bIsInitialized) == 0x001A58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_Transform) == 0x001A70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_CachedIndex) == 0x001AD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_Primary__IO) == 0x001AE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_CachedItem) == 0x001B28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_PrimaryCachedSpace) == 0x001B38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_SecondaryCachedSpace) == 0x001B48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_bIsInitialized) == 0x001B58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_Transform) == 0x001B70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_CachedIndex) == 0x001BD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_Primary__IO) == 0x001BE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_CachedItem) == 0x001C28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_PrimaryCachedSpace) == 0x001C38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_SecondaryCachedSpace) == 0x001C48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_bIsInitialized) == 0x001C58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_2_Transform) == 0x001C70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_2_CachedIndex) == 0x001CD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_3_Primary__IO) == 0x001CE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_3_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_3_CachedItem) == 0x001D28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_3_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_3_PrimaryCachedSpace) == 0x001D38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_3_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_3_SecondaryCachedSpace) == 0x001D48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_3_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_3_bIsInitialized) == 0x001D58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_3_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_2_Transform) == 0x001D70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_2_CachedIndex) == 0x001DD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_2_Primary__IO) == 0x001DE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_2_CachedItem) == 0x001E28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_2_PrimaryCachedSpace) == 0x001E38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_2_SecondaryCachedSpace) == 0x001E48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_2_bIsInitialized) == 0x001E58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_2_Transform) == 0x001E70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_2_CachedIndex) == 0x001ED0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_1_Primary__IO) == 0x001EE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_1_CachedItem) == 0x001F28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_1_PrimaryCachedSpace) == 0x001F38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_1_SecondaryCachedSpace) == 0x001F48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_1_bIsInitialized) == 0x001F58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_1_Transform) == 0x001F70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_1_CachedIndex) == 0x001FD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_Primary__IO) == 0x001FE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_CachedItem) == 0x002028, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_PrimaryCachedSpace) == 0x002038, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_SecondaryCachedSpace) == 0x002048, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_bIsInitialized) == 0x002058, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_Transform) == 0x002070, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_CachedIndex) == 0x0020D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_2_Primary__IO) == 0x0020E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_2_CachedItem) == 0x002128, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_2_PrimaryCachedSpace) == 0x002138, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_2_SecondaryCachedSpace) == 0x002148, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_2_bIsInitialized) == 0x002158, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_1_Transform) == 0x002170, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_1_CachedIndex) == 0x0021D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_3_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_1_Primary__IO) == 0x0021E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_1_CachedItem) == 0x002228, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_1_PrimaryCachedSpace) == 0x002238, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_1_SecondaryCachedSpace) == 0x002248, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_5_1_1_bIsInitialized) == 0x002258, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_5_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_3_Transform) == 0x002270, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_3_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_3_CachedIndex) == 0x0022D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_Primary__IO) == 0x0022E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_CachedItem) == 0x002328, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_PrimaryCachedSpace) == 0x002338, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_SecondaryCachedSpace) == 0x002348, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_bIsInitialized) == 0x002358, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_3_Transform) == 0x002370, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_3_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_3_CachedIndex) == 0x0023D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_Primary__IO) == 0x0023E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_CachedItem) == 0x002428, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_PrimaryCachedSpace) == 0x002438, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_SecondaryCachedSpace) == 0x002448, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_bIsInitialized) == 0x002458, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_Transform) == 0x002470, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_CachedIndex) == 0x0024D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_Primary__IO) == 0x0024E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_CachedItem) == 0x002528, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_PrimaryCachedSpace) == 0x002538, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_SecondaryCachedSpace) == 0x002548, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_bIsInitialized) == 0x002558, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_Transform) == 0x002570, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_CachedIndex) == 0x0025D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_Primary__IO) == 0x0025E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_CachedItem) == 0x002628, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_PrimaryCachedSpace) == 0x002638, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_SecondaryCachedSpace) == 0x002648, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_bIsInitialized) == 0x002658, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_1_Transform) == 0x002670, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_1_CachedIndex) == 0x0026D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_Primary__IO) == 0x0026E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_CachedItem) == 0x002728, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_PrimaryCachedSpace) == 0x002738, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_SecondaryCachedSpace) == 0x002748, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_bIsInitialized) == 0x002758, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_Transform) == 0x002770, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_CachedIndex) == 0x0027D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_Primary__IO) == 0x0027E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_CachedItem) == 0x002828, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_PrimaryCachedSpace) == 0x002838, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_SecondaryCachedSpace) == 0x002848, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_bIsInitialized) == 0x002858, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_3_1_Transform) == 0x002870, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_3_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_3_1_CachedIndex) == 0x0028D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_1_Primary__IO) == 0x0028E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_1_CachedItem) == 0x002928, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_1_PrimaryCachedSpace) == 0x002938, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_1_SecondaryCachedSpace) == 0x002948, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_4_1_bIsInitialized) == 0x002958, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_4_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_3_1_Transform) == 0x002970, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_3_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_3_1_CachedIndex) == 0x0029D0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_1_Primary__IO) == 0x0029E0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_1_CachedItem) == 0x002A28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_1_PrimaryCachedSpace) == 0x002A38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_1_SecondaryCachedSpace) == 0x002A48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_3_1_bIsInitialized) == 0x002A58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_3_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_2_Transform) == 0x002A70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_2_CachedIndex) == 0x002AD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_2_Primary__IO) == 0x002AE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_2_CachedItem) == 0x002B28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_2_PrimaryCachedSpace) == 0x002B38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_2_SecondaryCachedSpace) == 0x002B48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_2_bIsInitialized) == 0x002B58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_2_Transform) == 0x002B70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_2_CachedIndex) == 0x002BD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_2_Primary__IO) == 0x002BE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_2_CachedItem) == 0x002C28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_2_PrimaryCachedSpace) == 0x002C38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_2_SecondaryCachedSpace) == 0x002C48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_2_bIsInitialized) == 0x002C58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_Transform) == 0x002C70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_CachedIndex) == 0x002CD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_3_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_1_Primary__IO) == 0x002CE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_1_CachedItem) == 0x002D28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_1_PrimaryCachedSpace) == 0x002D38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_1_SecondaryCachedSpace) == 0x002D48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_2_1_1_bIsInitialized) == 0x002D58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_2_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_1_Transform) == 0x002D70, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_1_CachedIndex) == 0x002DD0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_1_1_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_1_Primary__IO) == 0x002DE0, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_1_CachedItem) == 0x002E28, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_1_PrimaryCachedSpace) == 0x002E38, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_1_SecondaryCachedSpace) == 0x002E48, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_2_1_1_bIsInitialized) == 0x002E58, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_2_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOL_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_BlockToRun) == 0x002E68, "Member 'SK_HOL_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_BlockToRun' has a wrong offset!");

}

