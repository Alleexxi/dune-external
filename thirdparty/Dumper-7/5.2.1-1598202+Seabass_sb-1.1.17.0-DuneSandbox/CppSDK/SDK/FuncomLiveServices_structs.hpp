#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FuncomLiveServices

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct FuncomLiveServices.ConnectionSettings
// 0x0070 (0x0070 - 0x0000)
struct FConnectionSettings final
{
public:
	class FString                                 m_ServerUrl;                                       // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_Protocol;                                        // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            m_UpgradeHeaders;                                  // 0x0020(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FConnectionSettings) == 0x000008, "Wrong alignment on FConnectionSettings");
static_assert(sizeof(FConnectionSettings) == 0x000070, "Wrong size on FConnectionSettings");
static_assert(offsetof(FConnectionSettings, m_ServerUrl) == 0x000000, "Member 'FConnectionSettings::m_ServerUrl' has a wrong offset!");
static_assert(offsetof(FConnectionSettings, m_Protocol) == 0x000010, "Member 'FConnectionSettings::m_Protocol' has a wrong offset!");
static_assert(offsetof(FConnectionSettings, m_UpgradeHeaders) == 0x000020, "Member 'FConnectionSettings::m_UpgradeHeaders' has a wrong offset!");

// ScriptStruct FuncomLiveServices.CachedUser
// 0x0050 (0x0050 - 0x0000)
struct FCachedUser final
{
public:
	class FString                                 MasterAccountId;                                   // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TitlePlayerId;                                     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlatformId;                                        // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TitleDisplayName;                                  // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserToken;                                         // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCachedUser) == 0x000008, "Wrong alignment on FCachedUser");
static_assert(sizeof(FCachedUser) == 0x000050, "Wrong size on FCachedUser");
static_assert(offsetof(FCachedUser, MasterAccountId) == 0x000000, "Member 'FCachedUser::MasterAccountId' has a wrong offset!");
static_assert(offsetof(FCachedUser, TitlePlayerId) == 0x000010, "Member 'FCachedUser::TitlePlayerId' has a wrong offset!");
static_assert(offsetof(FCachedUser, PlatformId) == 0x000020, "Member 'FCachedUser::PlatformId' has a wrong offset!");
static_assert(offsetof(FCachedUser, TitleDisplayName) == 0x000030, "Member 'FCachedUser::TitleDisplayName' has a wrong offset!");
static_assert(offsetof(FCachedUser, UserToken) == 0x000040, "Member 'FCachedUser::UserToken' has a wrong offset!");

// ScriptStruct FuncomLiveServices.LobbyOperationStepDescription
// 0x0018 (0x0018 - 0x0000)
struct FLobbyOperationStepDescription final
{
public:
	class FText                                   m_Label;                                           // 0x0000(0x0018)(BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLobbyOperationStepDescription) == 0x000008, "Wrong alignment on FLobbyOperationStepDescription");
static_assert(sizeof(FLobbyOperationStepDescription) == 0x000018, "Wrong size on FLobbyOperationStepDescription");
static_assert(offsetof(FLobbyOperationStepDescription, m_Label) == 0x000000, "Member 'FLobbyOperationStepDescription::m_Label' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsLocalOssUserInfo
// 0x0038 (0x0038 - 0x0000)
struct FFlsLocalOssUserInfo final
{
public:
	int32                                         m_UserIndex;                                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_UserId;                                          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_Nickname;                                        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_DisplayName;                                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsLocalOssUserInfo) == 0x000008, "Wrong alignment on FFlsLocalOssUserInfo");
static_assert(sizeof(FFlsLocalOssUserInfo) == 0x000038, "Wrong size on FFlsLocalOssUserInfo");
static_assert(offsetof(FFlsLocalOssUserInfo, m_UserIndex) == 0x000000, "Member 'FFlsLocalOssUserInfo::m_UserIndex' has a wrong offset!");
static_assert(offsetof(FFlsLocalOssUserInfo, m_UserId) == 0x000008, "Member 'FFlsLocalOssUserInfo::m_UserId' has a wrong offset!");
static_assert(offsetof(FFlsLocalOssUserInfo, m_Nickname) == 0x000018, "Member 'FFlsLocalOssUserInfo::m_Nickname' has a wrong offset!");
static_assert(offsetof(FFlsLocalOssUserInfo, m_DisplayName) == 0x000028, "Member 'FFlsLocalOssUserInfo::m_DisplayName' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsFlsUserInfo
// 0x0030 (0x0030 - 0x0000)
struct FFlsFlsUserInfo final
{
public:
	class FString                                 m_PlayerId;                                        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_MasterAccountId;                                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_TitleAccountId;                                  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsFlsUserInfo) == 0x000008, "Wrong alignment on FFlsFlsUserInfo");
static_assert(sizeof(FFlsFlsUserInfo) == 0x000030, "Wrong size on FFlsFlsUserInfo");
static_assert(offsetof(FFlsFlsUserInfo, m_PlayerId) == 0x000000, "Member 'FFlsFlsUserInfo::m_PlayerId' has a wrong offset!");
static_assert(offsetof(FFlsFlsUserInfo, m_MasterAccountId) == 0x000010, "Member 'FFlsFlsUserInfo::m_MasterAccountId' has a wrong offset!");
static_assert(offsetof(FFlsFlsUserInfo, m_TitleAccountId) == 0x000020, "Member 'FFlsFlsUserInfo::m_TitleAccountId' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsLocalUserInfo
// 0x00B0 (0x00B0 - 0x0000)
struct FFlsLocalUserInfo final
{
public:
	class FString                                 m_World;                                           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFlsFlsUserInfo                        m_FlsUserInfo;                                     // 0x0010(0x0030)(NativeAccessSpecifierPublic)
	struct FFlsLocalOssUserInfo                   m_NativeUserInfo;                                  // 0x0040(0x0038)(NativeAccessSpecifierPublic)
	struct FFlsLocalOssUserInfo                   m_DefaultUserInfo;                                 // 0x0078(0x0038)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsLocalUserInfo) == 0x000008, "Wrong alignment on FFlsLocalUserInfo");
static_assert(sizeof(FFlsLocalUserInfo) == 0x0000B0, "Wrong size on FFlsLocalUserInfo");
static_assert(offsetof(FFlsLocalUserInfo, m_World) == 0x000000, "Member 'FFlsLocalUserInfo::m_World' has a wrong offset!");
static_assert(offsetof(FFlsLocalUserInfo, m_FlsUserInfo) == 0x000010, "Member 'FFlsLocalUserInfo::m_FlsUserInfo' has a wrong offset!");
static_assert(offsetof(FFlsLocalUserInfo, m_NativeUserInfo) == 0x000040, "Member 'FFlsLocalUserInfo::m_NativeUserInfo' has a wrong offset!");
static_assert(offsetof(FFlsLocalUserInfo, m_DefaultUserInfo) == 0x000078, "Member 'FFlsLocalUserInfo::m_DefaultUserInfo' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsLocalUserInfoList
// 0x0010 (0x0010 - 0x0000)
struct FFlsLocalUserInfoList final
{
public:
	TArray<struct FFlsLocalUserInfo>              m_LocalUsers;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsLocalUserInfoList) == 0x000008, "Wrong alignment on FFlsLocalUserInfoList");
static_assert(sizeof(FFlsLocalUserInfoList) == 0x000010, "Wrong size on FFlsLocalUserInfoList");
static_assert(offsetof(FFlsLocalUserInfoList, m_LocalUsers) == 0x000000, "Member 'FFlsLocalUserInfoList::m_LocalUsers' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsSessionUserInfo
// 0x0068 (0x0068 - 0x0000)
struct FFlsSessionUserInfo final
{
public:
	struct FFlsFlsUserInfo                        m_FlsUserInfo;                                     // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	struct FFlsLocalOssUserInfo                   m_DefaultUserInfo;                                 // 0x0030(0x0038)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsSessionUserInfo) == 0x000008, "Wrong alignment on FFlsSessionUserInfo");
static_assert(sizeof(FFlsSessionUserInfo) == 0x000068, "Wrong size on FFlsSessionUserInfo");
static_assert(offsetof(FFlsSessionUserInfo, m_FlsUserInfo) == 0x000000, "Member 'FFlsSessionUserInfo::m_FlsUserInfo' has a wrong offset!");
static_assert(offsetof(FFlsSessionUserInfo, m_DefaultUserInfo) == 0x000030, "Member 'FFlsSessionUserInfo::m_DefaultUserInfo' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsHostInfo
// 0x0030 (0x0030 - 0x0000)
struct FFlsHostInfo final
{
public:
	class FString                                 m_HostId;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_HostType;                                        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_HostUrl;                                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsHostInfo) == 0x000008, "Wrong alignment on FFlsHostInfo");
static_assert(sizeof(FFlsHostInfo) == 0x000030, "Wrong size on FFlsHostInfo");
static_assert(offsetof(FFlsHostInfo, m_HostId) == 0x000000, "Member 'FFlsHostInfo::m_HostId' has a wrong offset!");
static_assert(offsetof(FFlsHostInfo, m_HostType) == 0x000010, "Member 'FFlsHostInfo::m_HostType' has a wrong offset!");
static_assert(offsetof(FFlsHostInfo, m_HostUrl) == 0x000020, "Member 'FFlsHostInfo::m_HostUrl' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsHostConfig
// 0x0020 (0x0020 - 0x0000)
struct FFlsHostConfig final
{
public:
	class FString                                 m_MapName;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_GameMode;                                        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsHostConfig) == 0x000008, "Wrong alignment on FFlsHostConfig");
static_assert(sizeof(FFlsHostConfig) == 0x000020, "Wrong size on FFlsHostConfig");
static_assert(offsetof(FFlsHostConfig, m_MapName) == 0x000000, "Member 'FFlsHostConfig::m_MapName' has a wrong offset!");
static_assert(offsetof(FFlsHostConfig, m_GameMode) == 0x000010, "Member 'FFlsHostConfig::m_GameMode' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsLocalSessionInfo
// 0x0170 (0x0170 - 0x0000)
struct FFlsLocalSessionInfo final
{
public:
	struct FFlsHostInfo                           m_HostDevice;                                      // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	struct FFlsHostConfig                         m_HostConfig;                                      // 0x0030(0x0020)(NativeAccessSpecifierPublic)
	struct FFlsSessionUserInfo                    m_HostUser;                                        // 0x0050(0x0068)(NativeAccessSpecifierPublic)
	class FString                                 m_HostUserName;                                    // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFlsSessionUserInfo                    m_LocalOwner;                                      // 0x00C8(0x0068)(NativeAccessSpecifierPublic)
	class FString                                 m_SessionName;                                     // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_SessionId;                                       // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_SessionMonitorInstanceId;                        // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFlsSessionUserInfo>            m_Users;                                           // 0x0160(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsLocalSessionInfo) == 0x000008, "Wrong alignment on FFlsLocalSessionInfo");
static_assert(sizeof(FFlsLocalSessionInfo) == 0x000170, "Wrong size on FFlsLocalSessionInfo");
static_assert(offsetof(FFlsLocalSessionInfo, m_HostDevice) == 0x000000, "Member 'FFlsLocalSessionInfo::m_HostDevice' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_HostConfig) == 0x000030, "Member 'FFlsLocalSessionInfo::m_HostConfig' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_HostUser) == 0x000050, "Member 'FFlsLocalSessionInfo::m_HostUser' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_HostUserName) == 0x0000B8, "Member 'FFlsLocalSessionInfo::m_HostUserName' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_LocalOwner) == 0x0000C8, "Member 'FFlsLocalSessionInfo::m_LocalOwner' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_SessionName) == 0x000130, "Member 'FFlsLocalSessionInfo::m_SessionName' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_SessionId) == 0x000140, "Member 'FFlsLocalSessionInfo::m_SessionId' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_SessionMonitorInstanceId) == 0x000150, "Member 'FFlsLocalSessionInfo::m_SessionMonitorInstanceId' has a wrong offset!");
static_assert(offsetof(FFlsLocalSessionInfo, m_Users) == 0x000160, "Member 'FFlsLocalSessionInfo::m_Users' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsLocalSessionList
// 0x0010 (0x0010 - 0x0000)
struct FFlsLocalSessionList final
{
public:
	TArray<struct FFlsLocalSessionInfo>           m_LocalSessions;                                   // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsLocalSessionList) == 0x000008, "Wrong alignment on FFlsLocalSessionList");
static_assert(sizeof(FFlsLocalSessionList) == 0x000010, "Wrong size on FFlsLocalSessionList");
static_assert(offsetof(FFlsLocalSessionList, m_LocalSessions) == 0x000000, "Member 'FFlsLocalSessionList::m_LocalSessions' has a wrong offset!");

// ScriptStruct FuncomLiveServices.FlsSessionPlayerIds
// 0x0010 (0x0010 - 0x0000)
struct FFlsSessionPlayerIds final
{
public:
	TArray<class FString>                         PlayerIds;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFlsSessionPlayerIds) == 0x000008, "Wrong alignment on FFlsSessionPlayerIds");
static_assert(sizeof(FFlsSessionPlayerIds) == 0x000010, "Wrong size on FFlsSessionPlayerIds");
static_assert(offsetof(FFlsSessionPlayerIds, PlayerIds) == 0x000000, "Member 'FFlsSessionPlayerIds::PlayerIds' has a wrong offset!");

}

