#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TitleScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_TitleScreen.W_TitleScreen_C.SetDescriptionText
// 0x0018 (0x0018 - 0x0000)
struct W_TitleScreen_C_SetDescriptionText final
{
public:
	class FText                                   DescriptionText;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_TitleScreen_C_SetDescriptionText) == 0x000008, "Wrong alignment on W_TitleScreen_C_SetDescriptionText");
static_assert(sizeof(W_TitleScreen_C_SetDescriptionText) == 0x000018, "Wrong size on W_TitleScreen_C_SetDescriptionText");
static_assert(offsetof(W_TitleScreen_C_SetDescriptionText, DescriptionText) == 0x000000, "Member 'W_TitleScreen_C_SetDescriptionText::DescriptionText' has a wrong offset!");

// Function W_TitleScreen.W_TitleScreen_C.SetProgress
// 0x0028 (0x0028 - 0x0000)
struct W_TitleScreen_C_SetProgress final
{
public:
	double                                        CurrentProgress;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxProgress_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TitleScreen_C_SetProgress) == 0x000008, "Wrong alignment on W_TitleScreen_C_SetProgress");
static_assert(sizeof(W_TitleScreen_C_SetProgress) == 0x000028, "Wrong size on W_TitleScreen_C_SetProgress");
static_assert(offsetof(W_TitleScreen_C_SetProgress, CurrentProgress) == 0x000000, "Member 'W_TitleScreen_C_SetProgress::CurrentProgress' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetProgress, MaxProgress_0) == 0x000008, "Member 'W_TitleScreen_C_SetProgress::MaxProgress_0' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_TitleScreen_C_SetProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetProgress, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'W_TitleScreen_C_SetProgress::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetProgress, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000020, "Member 'W_TitleScreen_C_SetProgress::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function W_TitleScreen.W_TitleScreen_C.SetProgressText
// 0x0018 (0x0018 - 0x0000)
struct W_TitleScreen_C_SetProgressText final
{
public:
	class FText                                   ProgressText;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_TitleScreen_C_SetProgressText) == 0x000008, "Wrong alignment on W_TitleScreen_C_SetProgressText");
static_assert(sizeof(W_TitleScreen_C_SetProgressText) == 0x000018, "Wrong size on W_TitleScreen_C_SetProgressText");
static_assert(offsetof(W_TitleScreen_C_SetProgressText, ProgressText) == 0x000000, "Member 'W_TitleScreen_C_SetProgressText::ProgressText' has a wrong offset!");

// Function W_TitleScreen.W_TitleScreen_C.SetThrobblerVisibility
// 0x0005 (0x0005 - 0x0000)
struct W_TitleScreen_C_SetThrobblerVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TitleScreen_C_SetThrobblerVisibility) == 0x000001, "Wrong alignment on W_TitleScreen_C_SetThrobblerVisibility");
static_assert(sizeof(W_TitleScreen_C_SetThrobblerVisibility) == 0x000005, "Wrong size on W_TitleScreen_C_SetThrobblerVisibility");
static_assert(offsetof(W_TitleScreen_C_SetThrobblerVisibility, IsVisible_0) == 0x000000, "Member 'W_TitleScreen_C_SetThrobblerVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetThrobblerVisibility, Temp_bool_Variable) == 0x000001, "Member 'W_TitleScreen_C_SetThrobblerVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetThrobblerVisibility, Temp_byte_Variable) == 0x000002, "Member 'W_TitleScreen_C_SetThrobblerVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetThrobblerVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_TitleScreen_C_SetThrobblerVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_TitleScreen_C_SetThrobblerVisibility, K2Node_Select_Default) == 0x000004, "Member 'W_TitleScreen_C_SetThrobblerVisibility::K2Node_Select_Default' has a wrong offset!");

}

