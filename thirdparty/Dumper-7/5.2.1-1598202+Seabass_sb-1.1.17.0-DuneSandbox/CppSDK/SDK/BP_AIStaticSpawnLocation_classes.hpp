#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIStaticSpawnLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIStaticSpawnLocation.BP_AIStaticSpawnLocation_C
// 0x0060 (0x0530 - 0x04D0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_AIStaticSpawnLocation_C : public AAIStaticSpawnLocation
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Info;                                              // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    IdleBehavior;                                      // 0x04F8(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          GroundOverlapAvoidance;                            // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Base_Text;                                         // 0x0510(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_AIStaticSpawnLocation(int32 EntryPoint);
	void ReceiveOnNpcSpawned(class APawn* Pawn);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIStaticSpawnLocation_C">();
	}
	static class ABP_AIStaticSpawnLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AIStaticSpawnLocation_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_AIStaticSpawnLocation_C) == 0x000010, "Wrong alignment on ABP_AIStaticSpawnLocation_C");
static_assert(sizeof(ABP_AIStaticSpawnLocation_C) == 0x000530, "Wrong size on ABP_AIStaticSpawnLocation_C");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, UberGraphFrame) == 0x0004D0, "Member 'ABP_AIStaticSpawnLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, Capsule) == 0x0004D8, "Member 'ABP_AIStaticSpawnLocation_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, Info) == 0x0004E0, "Member 'ABP_AIStaticSpawnLocation_C::Info' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, Billboard) == 0x0004E8, "Member 'ABP_AIStaticSpawnLocation_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, Arrow) == 0x0004F0, "Member 'ABP_AIStaticSpawnLocation_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, IdleBehavior) == 0x0004F8, "Member 'ABP_AIStaticSpawnLocation_C::IdleBehavior' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, GroundOverlapAvoidance) == 0x000508, "Member 'ABP_AIStaticSpawnLocation_C::GroundOverlapAvoidance' has a wrong offset!");
static_assert(offsetof(ABP_AIStaticSpawnLocation_C, Base_Text) == 0x000510, "Member 'ABP_AIStaticSpawnLocation_C::Base_Text' has a wrong offset!");

}

