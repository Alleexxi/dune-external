#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XeSSBlueprint

#include "Basic.hpp"

#include "XeSSBlueprint_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function XeSSBlueprint.XeSSBlueprintLibrary.EnableXeSS
// 0x0001 (0x0001 - 0x0000)
struct XeSSBlueprintLibrary_EnableXeSS final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_EnableXeSS) == 0x000001, "Wrong alignment on XeSSBlueprintLibrary_EnableXeSS");
static_assert(sizeof(XeSSBlueprintLibrary_EnableXeSS) == 0x000001, "Wrong size on XeSSBlueprintLibrary_EnableXeSS");
static_assert(offsetof(XeSSBlueprintLibrary_EnableXeSS, bEnabled) == 0x000000, "Member 'XeSSBlueprintLibrary_EnableXeSS::bEnabled' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.GetDefaultXeSSQualityMode
// 0x000C (0x000C - 0x0000)
struct XeSSBlueprintLibrary_GetDefaultXeSSQualityMode final
{
public:
	struct FIntPoint                              ScreenResolution;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXeSSQualityMode                              ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XeSSBlueprintLibrary_GetDefaultXeSSQualityMode) == 0x000004, "Wrong alignment on XeSSBlueprintLibrary_GetDefaultXeSSQualityMode");
static_assert(sizeof(XeSSBlueprintLibrary_GetDefaultXeSSQualityMode) == 0x00000C, "Wrong size on XeSSBlueprintLibrary_GetDefaultXeSSQualityMode");
static_assert(offsetof(XeSSBlueprintLibrary_GetDefaultXeSSQualityMode, ScreenResolution) == 0x000000, "Member 'XeSSBlueprintLibrary_GetDefaultXeSSQualityMode::ScreenResolution' has a wrong offset!");
static_assert(offsetof(XeSSBlueprintLibrary_GetDefaultXeSSQualityMode, ReturnValue) == 0x000008, "Member 'XeSSBlueprintLibrary_GetDefaultXeSSQualityMode::ReturnValue' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.GetSupportedXeSSQualityModes
// 0x0010 (0x0010 - 0x0000)
struct XeSSBlueprintLibrary_GetSupportedXeSSQualityModes final
{
public:
	TArray<EXeSSQualityMode>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_GetSupportedXeSSQualityModes) == 0x000008, "Wrong alignment on XeSSBlueprintLibrary_GetSupportedXeSSQualityModes");
static_assert(sizeof(XeSSBlueprintLibrary_GetSupportedXeSSQualityModes) == 0x000010, "Wrong size on XeSSBlueprintLibrary_GetSupportedXeSSQualityModes");
static_assert(offsetof(XeSSBlueprintLibrary_GetSupportedXeSSQualityModes, ReturnValue) == 0x000000, "Member 'XeSSBlueprintLibrary_GetSupportedXeSSQualityModes::ReturnValue' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.GetXeSSDefaultModePercentage
// 0x0008 (0x0008 - 0x0000)
struct XeSSBlueprintLibrary_GetXeSSDefaultModePercentage final
{
public:
	EXeSSQualityMode                              QualityMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_GetXeSSDefaultModePercentage) == 0x000004, "Wrong alignment on XeSSBlueprintLibrary_GetXeSSDefaultModePercentage");
static_assert(sizeof(XeSSBlueprintLibrary_GetXeSSDefaultModePercentage) == 0x000008, "Wrong size on XeSSBlueprintLibrary_GetXeSSDefaultModePercentage");
static_assert(offsetof(XeSSBlueprintLibrary_GetXeSSDefaultModePercentage, QualityMode) == 0x000000, "Member 'XeSSBlueprintLibrary_GetXeSSDefaultModePercentage::QualityMode' has a wrong offset!");
static_assert(offsetof(XeSSBlueprintLibrary_GetXeSSDefaultModePercentage, ReturnValue) == 0x000004, "Member 'XeSSBlueprintLibrary_GetXeSSDefaultModePercentage::ReturnValue' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.GetXeSSQualityMode
// 0x0001 (0x0001 - 0x0000)
struct XeSSBlueprintLibrary_GetXeSSQualityMode final
{
public:
	EXeSSQualityMode                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_GetXeSSQualityMode) == 0x000001, "Wrong alignment on XeSSBlueprintLibrary_GetXeSSQualityMode");
static_assert(sizeof(XeSSBlueprintLibrary_GetXeSSQualityMode) == 0x000001, "Wrong size on XeSSBlueprintLibrary_GetXeSSQualityMode");
static_assert(offsetof(XeSSBlueprintLibrary_GetXeSSQualityMode, ReturnValue) == 0x000000, "Member 'XeSSBlueprintLibrary_GetXeSSQualityMode::ReturnValue' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.GetXeSSQualityModeInformation
// 0x000C (0x000C - 0x0000)
struct XeSSBlueprintLibrary_GetXeSSQualityModeInformation final
{
public:
	EXeSSQualityMode                              QualityMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScreenPercentage;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(XeSSBlueprintLibrary_GetXeSSQualityModeInformation) == 0x000004, "Wrong alignment on XeSSBlueprintLibrary_GetXeSSQualityModeInformation");
static_assert(sizeof(XeSSBlueprintLibrary_GetXeSSQualityModeInformation) == 0x00000C, "Wrong size on XeSSBlueprintLibrary_GetXeSSQualityModeInformation");
static_assert(offsetof(XeSSBlueprintLibrary_GetXeSSQualityModeInformation, QualityMode) == 0x000000, "Member 'XeSSBlueprintLibrary_GetXeSSQualityModeInformation::QualityMode' has a wrong offset!");
static_assert(offsetof(XeSSBlueprintLibrary_GetXeSSQualityModeInformation, ScreenPercentage) == 0x000004, "Member 'XeSSBlueprintLibrary_GetXeSSQualityModeInformation::ScreenPercentage' has a wrong offset!");
static_assert(offsetof(XeSSBlueprintLibrary_GetXeSSQualityModeInformation, ReturnValue) == 0x000008, "Member 'XeSSBlueprintLibrary_GetXeSSQualityModeInformation::ReturnValue' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.IsXeSSSupported
// 0x0001 (0x0001 - 0x0000)
struct XeSSBlueprintLibrary_IsXeSSSupported final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_IsXeSSSupported) == 0x000001, "Wrong alignment on XeSSBlueprintLibrary_IsXeSSSupported");
static_assert(sizeof(XeSSBlueprintLibrary_IsXeSSSupported) == 0x000001, "Wrong size on XeSSBlueprintLibrary_IsXeSSSupported");
static_assert(offsetof(XeSSBlueprintLibrary_IsXeSSSupported, ReturnValue) == 0x000000, "Member 'XeSSBlueprintLibrary_IsXeSSSupported::ReturnValue' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.SetXeSSQualityMode
// 0x0001 (0x0001 - 0x0000)
struct XeSSBlueprintLibrary_SetXeSSQualityMode final
{
public:
	EXeSSQualityMode                              QualityMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_SetXeSSQualityMode) == 0x000001, "Wrong alignment on XeSSBlueprintLibrary_SetXeSSQualityMode");
static_assert(sizeof(XeSSBlueprintLibrary_SetXeSSQualityMode) == 0x000001, "Wrong size on XeSSBlueprintLibrary_SetXeSSQualityMode");
static_assert(offsetof(XeSSBlueprintLibrary_SetXeSSQualityMode, QualityMode) == 0x000000, "Member 'XeSSBlueprintLibrary_SetXeSSQualityMode::QualityMode' has a wrong offset!");

// Function XeSSBlueprint.XeSSBlueprintLibrary.UpdateResolutionMetrics
// 0x0008 (0x0008 - 0x0000)
struct XeSSBlueprintLibrary_UpdateResolutionMetrics final
{
public:
	EXeSSQualityMode                              QualityMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetPercentage;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(XeSSBlueprintLibrary_UpdateResolutionMetrics) == 0x000004, "Wrong alignment on XeSSBlueprintLibrary_UpdateResolutionMetrics");
static_assert(sizeof(XeSSBlueprintLibrary_UpdateResolutionMetrics) == 0x000008, "Wrong size on XeSSBlueprintLibrary_UpdateResolutionMetrics");
static_assert(offsetof(XeSSBlueprintLibrary_UpdateResolutionMetrics, QualityMode) == 0x000000, "Member 'XeSSBlueprintLibrary_UpdateResolutionMetrics::QualityMode' has a wrong offset!");
static_assert(offsetof(XeSSBlueprintLibrary_UpdateResolutionMetrics, TargetPercentage) == 0x000004, "Member 'XeSSBlueprintLibrary_UpdateResolutionMetrics::TargetPercentage' has a wrong offset!");

}

