#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SpiceExposure

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_SpiceExposure.W_SpiceExposure_C.SetSpiceExposureLevel
// 0x0008 (0x0008 - 0x0000)
struct W_SpiceExposure_C_SetSpiceExposureLevel final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpiceExposure_C_SetSpiceExposureLevel) == 0x000008, "Wrong alignment on W_SpiceExposure_C_SetSpiceExposureLevel");
static_assert(sizeof(W_SpiceExposure_C_SetSpiceExposureLevel) == 0x000008, "Wrong size on W_SpiceExposure_C_SetSpiceExposureLevel");
static_assert(offsetof(W_SpiceExposure_C_SetSpiceExposureLevel, Value) == 0x000000, "Member 'W_SpiceExposure_C_SetSpiceExposureLevel::Value' has a wrong offset!");

// Function W_SpiceExposure.W_SpiceExposure_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SpiceExposure_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpiceExposure_C_PreConstruct) == 0x000001, "Wrong alignment on W_SpiceExposure_C_PreConstruct");
static_assert(sizeof(W_SpiceExposure_C_PreConstruct) == 0x000001, "Wrong size on W_SpiceExposure_C_PreConstruct");
static_assert(offsetof(W_SpiceExposure_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SpiceExposure_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SpiceExposure.W_SpiceExposure_C.ExecuteUbergraph_W_SpiceExposure
// 0x0048 (0x0048 - 0x0000)
struct W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Value;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure) == 0x000008, "Wrong alignment on W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure");
static_assert(sizeof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure) == 0x000048, "Wrong size on W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, EntryPoint) == 0x000000, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, Temp_bool_Variable) == 0x000005, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, Temp_real_Variable) == 0x000008, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, K2Node_CustomEvent_Value) == 0x000020, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, K2Node_Select_Default) == 0x000038, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, CallFunc_SetValue_InValue_ImplicitCast) == 0x000040, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000044, "Member 'W_SpiceExposure_C_ExecuteUbergraph_W_SpiceExposure::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

}

