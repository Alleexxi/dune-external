#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RuntimeVirtualTextureGrid

#include "Basic.hpp"

#include "RuntimeVirtualTextureGrid_classes.hpp"
#include "RuntimeVirtualTextureGrid_parameters.hpp"


namespace SDK
{

// Function RuntimeVirtualTextureGrid.RuntimeVirtualTextureGridAwareInterface.GetExtraMIDsToInjectRVTs
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInstanceDynamic*> IRuntimeVirtualTextureGridAwareInterface::GetExtraMIDsToInjectRVTs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("RuntimeVirtualTextureGridAwareInterface", "GetExtraMIDsToInjectRVTs");

	Params::RuntimeVirtualTextureGridAwareInterface_GetExtraMIDsToInjectRVTs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

