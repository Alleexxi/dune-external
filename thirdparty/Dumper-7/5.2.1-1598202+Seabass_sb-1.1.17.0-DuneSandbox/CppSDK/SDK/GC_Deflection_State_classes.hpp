#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Deflection_State

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_Deflection_State.GC_Deflection_State_C
// 0x01E0 (0x0590 - 0x03B0)
class AGC_Deflection_State_C final : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 WeaponMesh_04;                                     // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponMesh_01;                                     // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponMesh_02;                                     // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponMesh_03;                                     // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DummySkeletalMesh;                                 // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 StanceImage_01;                                    // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 StanceImage_04;                                    // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 StanceImage_03;                                    // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 StanceImage_02;                                    // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          Impact_SFX;                                        // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Impact_VFX;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   DeflectionMontageVariations;                       // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USkeletalMesh*                          SkeletalMeshAsset;                                 // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USkeletalMesh*                          WeaponMeshAsset;                                   // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial_01;                                // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial_02;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial_03;                                // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial_04;                                // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          DeflectionAnimIsOnCooldown;                        // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AnimCooldown_TH;                                   // 0x0468(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCameraShakeBase>           CameraShakeClass;                                  // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ForceFeedbackReference;                            // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_VFX_Abl_Deflection_ImpactImage_C*   SpawnedImage;                                      // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             PendingBlockedHit;                                 // 0x0488(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   WeaponAttachSocket;                                // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_StanceImages;                             // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumping;                                         // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFcAudioEvent*                          EndLoop_SFX;                                       // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DeflectionMontageOver();
	void ExecuteUbergraph_GC_Deflection_State(int32 EntryPoint);
	void HandleQueuedBlockedHit();
	void IsInDifferentAirborneState(class ACharacter* TargetCharacter, bool* IsInDifferentState, bool* CurrentState);
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56(class FName NotifyName);
	void OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D(class FName NotifyName);
	void OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2(class FName NotifyName);
	void OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067(class FName NotifyName);
	void OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56(class FName NotifyName);
	void OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D(class FName NotifyName);
	void OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2(class FName NotifyName);
	void OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067(class FName NotifyName);
	void OnImmunityBlockedHit(const class AActor* InDamagingActor, const struct FHitResult& InHitResult);
	void OnImmunityBlockedHitPredicted(EDamageImmunityHitPredictionType InPredictionType, const class AActor* InDamagingActor, const struct FHitResult& InHitResult);
	void OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56(class FName NotifyName);
	void OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D(class FName NotifyName);
	void OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2(class FName NotifyName);
	void OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067(class FName NotifyName);
	void OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56(class FName NotifyName);
	void OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D(class FName NotifyName);
	void OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2(class FName NotifyName);
	void OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067(class FName NotifyName);
	void OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56(class FName NotifyName);
	void OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D(class FName NotifyName);
	void OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2(class FName NotifyName);
	void OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067(class FName NotifyName);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void PlayDeflectionEffects(const struct FHitResult& HitResult);
	void PlayDeflectionMontage(class ADuneCharacter* DuneCharacter);
	void PlayDeflectionMontageEffectsLocal();
	void QueueDeflectionTrigger(const struct FHitResult& HitResult);
	void ReceiveTick(float DeltaSeconds);
	void ResetPoses();
	void SetDummyActive(bool IsActive);
	void SetStanceImagesActive(bool IsActive);
	void SetupImageVisuals(class USkinnedMeshComponent* ImageMesh, class USkinnedMeshComponent* WeaponMesh, class UMaterialInstanceDynamic* Mid, float PersistentOffset);
	void SetupImageWeapon(class USkinnedMeshComponent* WeaponMesh, class UMaterialInstanceDynamic* Mid);
	void SetupStanceImages();
	void SpawnImage();
	void SpawnVFX(const struct FHitResult& HitResult);
	void UpdateDynamicMaterials();

	void SelectDeflectionMontage(class UAnimMontage** Montage, double* Length) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_Deflection_State_C">();
	}
	static class AGC_Deflection_State_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_Deflection_State_C>();
	}
};
static_assert(alignof(AGC_Deflection_State_C) == 0x000008, "Wrong alignment on AGC_Deflection_State_C");
static_assert(sizeof(AGC_Deflection_State_C) == 0x000590, "Wrong size on AGC_Deflection_State_C");
static_assert(offsetof(AGC_Deflection_State_C, UberGraphFrame) == 0x0003B0, "Member 'AGC_Deflection_State_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, WeaponMesh_04) == 0x0003B8, "Member 'AGC_Deflection_State_C::WeaponMesh_04' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, WeaponMesh_01) == 0x0003C0, "Member 'AGC_Deflection_State_C::WeaponMesh_01' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, WeaponMesh_02) == 0x0003C8, "Member 'AGC_Deflection_State_C::WeaponMesh_02' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, WeaponMesh_03) == 0x0003D0, "Member 'AGC_Deflection_State_C::WeaponMesh_03' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DummySkeletalMesh) == 0x0003D8, "Member 'AGC_Deflection_State_C::DummySkeletalMesh' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, StanceImage_01) == 0x0003E0, "Member 'AGC_Deflection_State_C::StanceImage_01' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, StanceImage_04) == 0x0003E8, "Member 'AGC_Deflection_State_C::StanceImage_04' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, StanceImage_03) == 0x0003F0, "Member 'AGC_Deflection_State_C::StanceImage_03' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, StanceImage_02) == 0x0003F8, "Member 'AGC_Deflection_State_C::StanceImage_02' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DefaultSceneRoot) == 0x000400, "Member 'AGC_Deflection_State_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, Impact_SFX) == 0x000408, "Member 'AGC_Deflection_State_C::Impact_SFX' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, Impact_VFX) == 0x000410, "Member 'AGC_Deflection_State_C::Impact_VFX' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DeflectionMontageVariations) == 0x000418, "Member 'AGC_Deflection_State_C::DeflectionMontageVariations' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, SkeletalMeshAsset) == 0x000428, "Member 'AGC_Deflection_State_C::SkeletalMeshAsset' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, WeaponMeshAsset) == 0x000430, "Member 'AGC_Deflection_State_C::WeaponMeshAsset' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DynamicMaterial_01) == 0x000438, "Member 'AGC_Deflection_State_C::DynamicMaterial_01' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DynamicMaterial_02) == 0x000440, "Member 'AGC_Deflection_State_C::DynamicMaterial_02' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DynamicMaterial_03) == 0x000448, "Member 'AGC_Deflection_State_C::DynamicMaterial_03' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DynamicMaterial_04) == 0x000450, "Member 'AGC_Deflection_State_C::DynamicMaterial_04' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, SkeletalMeshComponent) == 0x000458, "Member 'AGC_Deflection_State_C::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, DeflectionAnimIsOnCooldown) == 0x000460, "Member 'AGC_Deflection_State_C::DeflectionAnimIsOnCooldown' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, AnimCooldown_TH) == 0x000468, "Member 'AGC_Deflection_State_C::AnimCooldown_TH' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, CameraShakeClass) == 0x000470, "Member 'AGC_Deflection_State_C::CameraShakeClass' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, ForceFeedbackReference) == 0x000478, "Member 'AGC_Deflection_State_C::ForceFeedbackReference' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, SpawnedImage) == 0x000480, "Member 'AGC_Deflection_State_C::SpawnedImage' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, PendingBlockedHit) == 0x000488, "Member 'AGC_Deflection_State_C::PendingBlockedHit' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, WeaponAttachSocket) == 0x000570, "Member 'AGC_Deflection_State_C::WeaponAttachSocket' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, Material_StanceImages) == 0x000578, "Member 'AGC_Deflection_State_C::Material_StanceImages' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, IsJumping) == 0x000580, "Member 'AGC_Deflection_State_C::IsJumping' has a wrong offset!");
static_assert(offsetof(AGC_Deflection_State_C, EndLoop_SFX) == 0x000588, "Member 'AGC_Deflection_State_C::EndLoop_SFX' has a wrong offset!");

}

