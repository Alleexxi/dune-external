#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapAreaIntroHUDWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "F_Locations_structs.hpp"


namespace SDK::Params
{

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.ShowStrings
// 0x0020 (0x0020 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_ShowStrings final
{
public:
	bool                                          EnteredFirstTime;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_ShowStrings) == 0x000008, "Wrong alignment on W_MapAreaIntroHUDWidget_C_ShowStrings");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_ShowStrings) == 0x000020, "Wrong size on W_MapAreaIntroHUDWidget_C_ShowStrings");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ShowStrings, EnteredFirstTime) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_ShowStrings::EnteredFirstTime' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ShowStrings, Temp_bool_Variable) == 0x000001, "Member 'W_MapAreaIntroHUDWidget_C_ShowStrings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ShowStrings, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_MapAreaIntroHUDWidget_C_ShowStrings::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ShowStrings, K2Node_Select_Default) == 0x000010, "Member 'W_MapAreaIntroHUDWidget_C_ShowStrings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ShowStrings, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'W_MapAreaIntroHUDWidget_C_ShowStrings::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.SetStringsBasedOnMap
// 0x0048 (0x0048 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap final
{
public:
	struct FMapAreaId                             NewParam;                                          // 0x0000(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFogOfWarAreaDescription_OutText;       // 0x0008(0x0018)()
	bool                                          CallFunc_GetFogOfWarAreaDescription_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFogOfWarAreaTitle_OutText;             // 0x0028(0x0018)()
	bool                                          CallFunc_GetFogOfWarAreaTitle_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap) == 0x000008, "Wrong alignment on W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap) == 0x000048, "Wrong size on W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap, NewParam) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap::NewParam' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap, CallFunc_GetFogOfWarAreaDescription_OutText) == 0x000008, "Member 'W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap::CallFunc_GetFogOfWarAreaDescription_OutText' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap, CallFunc_GetFogOfWarAreaDescription_ReturnValue) == 0x000020, "Member 'W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap::CallFunc_GetFogOfWarAreaDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap, CallFunc_GetFogOfWarAreaTitle_OutText) == 0x000028, "Member 'W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap::CallFunc_GetFogOfWarAreaTitle_OutText' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap, CallFunc_GetFogOfWarAreaTitle_ReturnValue) == 0x000040, "Member 'W_MapAreaIntroHUDWidget_C_SetStringsBasedOnMap::CallFunc_GetFogOfWarAreaTitle_ReturnValue' has a wrong offset!");

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.Set Location Text
// 0x0030 (0x0030 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_Set_Location_Text final
{
public:
	class FText                                   Headline_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Subtext_0;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_Set_Location_Text) == 0x000008, "Wrong alignment on W_MapAreaIntroHUDWidget_C_Set_Location_Text");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_Set_Location_Text) == 0x000030, "Wrong size on W_MapAreaIntroHUDWidget_C_Set_Location_Text");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_Set_Location_Text, Headline_0) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_Set_Location_Text::Headline_0' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_Set_Location_Text, Subtext_0) == 0x000018, "Member 'W_MapAreaIntroHUDWidget_C_Set_Location_Text::Subtext_0' has a wrong offset!");

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_PreConstruct) == 0x000001, "Wrong alignment on W_MapAreaIntroHUDWidget_C_PreConstruct");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_PreConstruct) == 0x000001, "Wrong size on W_MapAreaIntroHUDWidget_C_PreConstruct");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.PlayHideAnimation
// 0x0010 (0x0010 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_PlayHideAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_PlayHideAnimation) == 0x000008, "Wrong alignment on W_MapAreaIntroHUDWidget_C_PlayHideAnimation");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_PlayHideAnimation) == 0x000010, "Wrong size on W_MapAreaIntroHUDWidget_C_PlayHideAnimation");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_PlayHideAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_PlayHideAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_PlayHideAnimation, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000008, "Member 'W_MapAreaIntroHUDWidget_C_PlayHideAnimation::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.ExecuteUbergraph_W_MapAreaIntroHUDWidget
// 0x0050 (0x0050 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_Locations                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x1];                                       // 0x0049(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapAreaId                             K2Node_Event_MapAreaId;                            // 0x004A(0x0002)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnteredFirstTime;                    // 0x004C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget) == 0x000008, "Wrong alignment on W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget) == 0x000050, "Wrong size on W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, EntryPoint) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000038, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000048, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, K2Node_Event_MapAreaId) == 0x00004A, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::K2Node_Event_MapAreaId' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget, K2Node_Event_bEnteredFirstTime) == 0x00004C, "Member 'W_MapAreaIntroHUDWidget_C_ExecuteUbergraph_W_MapAreaIntroHUDWidget::K2Node_Event_bEnteredFirstTime' has a wrong offset!");

// Function W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C.BP_OnMapAreaChanged
// 0x0004 (0x0004 - 0x0000)
struct W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged final
{
public:
	struct FMapAreaId                             MapAreaId;                                         // 0x0000(0x0002)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnteredFirstTime;                                 // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged) == 0x000002, "Wrong alignment on W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged");
static_assert(sizeof(W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged) == 0x000004, "Wrong size on W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged, MapAreaId) == 0x000000, "Member 'W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged::MapAreaId' has a wrong offset!");
static_assert(offsetof(W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged, bEnteredFirstTime) == 0x000002, "Member 'W_MapAreaIntroHUDWidget_C_BP_OnMapAreaChanged::bEnteredFirstTime' has a wrong offset!");

}

