#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mine_Remote_Base

#include "Basic.hpp"

#include "BP_Mine_Remote_Base_classes.hpp"
#include "BP_Mine_Remote_Base_parameters.hpp"


namespace SDK
{

// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.BndEvt__BP_Mine_Remote_DamageableActor_K2Node_ComponentBoundEvent_1_HandleDeathOrDefeatOnServerSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInstigatorInfo&           InstigatorInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// const bool                              bIsDeath                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UDuneDamageType>      DeathDefeatCausingDamageType                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::BndEvt__BP_Mine_Remote_DamageableActor_K2Node_ComponentBoundEvent_1_HandleDeathOrDefeatOnServerSignature__DelegateSignature(const struct FInstigatorInfo& InstigatorInfo, const bool bIsDeath, TSubclassOf<class UDuneDamageType> DeathDefeatCausingDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "BndEvt__BP_Mine_Remote_DamageableActor_K2Node_ComponentBoundEvent_1_HandleDeathOrDefeatOnServerSignature__DelegateSignature");

	Params::BP_Mine_Remote_Base_C_BndEvt__BP_Mine_Remote_DamageableActor_K2Node_ComponentBoundEvent_1_HandleDeathOrDefeatOnServerSignature__DelegateSignature Parms{};

	Parms.InstigatorInfo = std::move(InstigatorInfo);
	Parms.bIsDeath = bIsDeath;
	Parms.DeathDefeatCausingDamageType = DeathDefeatCausingDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.CacheTuningValues
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::CacheTuningValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "CacheTuningValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.CreateNavModifier
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::CreateNavModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "CreateNavModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.DelayForExpiration
// (BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::DelayForExpiration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "DelayForExpiration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.DestroyedEventByTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::DestroyedEventByTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "DestroyedEventByTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.Detonate
// (BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::Detonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "Detonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.ExecuteUbergraph_BP_Mine_Remote_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::ExecuteUbergraph_BP_Mine_Remote_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "ExecuteUbergraph_BP_Mine_Remote_Base");

	Params::BP_Mine_Remote_Base_C_ExecuteUbergraph_BP_Mine_Remote_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.HitActorsCallbackForTelem
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSet<class AActor*>&              HitActors                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Mine_Remote_Base_C::HitActorsCallbackForTelem(const TSet<class AActor*>& HitActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "HitActorsCallbackForTelem");

	Params::BP_Mine_Remote_Base_C_HitActorsCallbackForTelem Parms{};

	Parms.HitActors = std::move(HitActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.Launch
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                Transform                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::Launch(const struct FVector& Velocity, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "Launch");

	Params::BP_Mine_Remote_Base_C_Launch Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.MulticastAttachMine
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                MineTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttachActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              AttachComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::MulticastAttachMine(const struct FTransform& MineTransform, class AActor* AttachActor, class UPrimitiveComponent* AttachComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "MulticastAttachMine");

	Params::BP_Mine_Remote_Base_C_MulticastAttachMine Parms{};

	Parms.MineTransform = std::move(MineTransform);
	Parms.AttachActor = AttachActor;
	Parms.AttachComponent = AttachComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.MulticastDetonate
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::MulticastDetonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "MulticastDetonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.MulticastSwapPredictedForSimulatedProxy
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::MulticastSwapPredictedForSimulatedProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "MulticastSwapPredictedForSimulatedProxy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.OnProjectileStopped
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                ImpactResult                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Mine_Remote_Base_C::OnProjectileStopped(const struct FHitResult& ImpactResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "OnProjectileStopped");

	Params::BP_Mine_Remote_Base_C_OnProjectileStopped Parms{};

	Parms.ImpactResult = std::move(ImpactResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.OnRep_bHasSetEmissive
// (BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::OnRep_bHasSetEmissive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "OnRep_bHasSetEmissive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.PredictedProjectileDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::PredictedProjectileDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "PredictedProjectileDestroyed");

	Params::BP_Mine_Remote_Base_C_PredictedProjectileDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.ReceiveActorReplaced
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           FromActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::ReceiveActorReplaced(class AActor* FromActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "ReceiveActorReplaced");

	Params::BP_Mine_Remote_Base_C_ReceiveActorReplaced Parms{};

	Parms.FromActor = FromActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Mine_Remote_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Mine_Remote_Base_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.SetEmissiveColor
// (BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::SetEmissiveColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "SetEmissiveColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.SimulateTick
// (Event, Public, BlueprintEvent)
// Parameters:
// const float                             InDeltaTime                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Mine_Remote_Base_C::SimulateTick(const float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "SimulateTick");

	Params::BP_Mine_Remote_Base_C_SimulateTick Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.SwapPredictedForSimulatedProxy
// (BlueprintCallable, BlueprintEvent)

void ABP_Mine_Remote_Base_C::SwapPredictedForSimulatedProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "SwapPredictedForSimulatedProxy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Mine_Remote_Base.BP_Mine_Remote_Base_C.IsValidLandingSpot
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Mine_Remote_Base_C::IsValidLandingSpot(const struct FHitResult& Hit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Mine_Remote_Base_C", "IsValidLandingSpot");

	Params::BP_Mine_Remote_Base_C_IsValidLandingSpot Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

