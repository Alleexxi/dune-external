#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_GadgetsAbilities

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C
// 0x0000 (0x0030 - 0x0030)
class UBPFL_GadgetsAbilities_C final : public UBlueprintFunctionLibrary
{
public:
	static bool Check_Should_Alternate_Input_Mode(class ADunePlayerCharacter* Dune_Player_Character, class UObject* __WorldContext);
	static void GetAngleToActor(class AActor* LookingActor, class AActor* TargetActor, class UObject* __WorldContext, float* Angle_To_Attacker);
	static void IsAbilityUsingHoldInput(class AActor* Ability_Owner, bool In_Gamepad_Uses_Hold_Input, bool In_Keyboard_Uses_Hold_Input, class UObject* __WorldContext, bool* Uses_Hold_Input);
	static void IsActorFacingTarget(class AActor* LookingActor, class AActor* TargetActor, double Angle, class UObject* __WorldContext, bool* IsLooking);
	static void IsDamageTypeInArray(TArray<class UClass*>& Filter, class UClass* DamageType, class UObject* __WorldContext, bool* Result);
	static void IsDamageTypeInSet(const TSet<class UClass*>& Filter, class UClass* DamageType, class UObject* __WorldContext, bool* Result);
	static void MulticastPlayAudioOnCharacter(class UFcAudioEvent* AudioEvent, class AActor* DuneCharacter, class UObject* __WorldContext);
	static void PlayAudioOnCharacter(const class UFcAudioEvent* AudioEvent, class AActor* DuneCharacter, class UObject* __WorldContext);
	static void SetCameraContextEnabled(class AActor* Actor, class FName CameraContext, bool bIsEnabled, class UObject* __WorldContext);
	static void SetHUDModeOverrideActive(class AActor* Actor, const EHUDMode NewHUDMode, bool ShouldBeActive, EHUDMode& CachedPreviousMode, bool& CachedIsOverrideActive, class UObject* __WorldContext);
	static void SetInputContextEnabled(class AActor* Actor, class FName InputContext, bool bIsEnabled, class UObject* __WorldContext);
	static void SetMovementInputBlockActive(class AActor* Actor, bool& IsMovementInputBlocked, bool ShouldBeBlocked, class UObject* __WorldContext);
	static void StopAudioOnCharacter(const class UFcAudioEvent* AudioEvent, class AActor* DuneCharacter, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_GadgetsAbilities_C">();
	}
	static class UBPFL_GadgetsAbilities_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_GadgetsAbilities_C>();
	}
};
static_assert(alignof(UBPFL_GadgetsAbilities_C) == 0x000008, "Wrong alignment on UBPFL_GadgetsAbilities_C");
static_assert(sizeof(UBPFL_GadgetsAbilities_C) == 0x000030, "Wrong size on UBPFL_GadgetsAbilities_C");

}

