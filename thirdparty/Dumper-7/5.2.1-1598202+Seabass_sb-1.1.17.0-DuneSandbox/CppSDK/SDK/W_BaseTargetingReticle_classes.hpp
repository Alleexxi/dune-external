#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseTargetingReticle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_BaseTargetingReticle.W_BaseTargetingReticle_C
// 0x0100 (0x0550 - 0x0450)
class UW_BaseTargetingReticle_C final : public UDuneGameplayAbilityWidgetReticle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ValidTarget;                                       // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDuneImage*                             CenterDiamond;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ChevronOverlay;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                ChevronSpacer;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_Bottom;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_Left;                                    // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_Right;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_Top;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LinearProgressBar_C*                 W_LinearProgressBar;                               // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<ETargetValidity, struct FLinearColor>    Progress_Background_Map;                           // 0x04A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Cached_Spread;                                     // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Target_Spread;                                     // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spread_Interpolator;                               // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_Spread;                                    // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Spread_Animation_Curve;                            // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Position_Interpolator;                             // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Target_Position;                                   // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Debug_Position;                                    // 0x0530(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Animate_Position(double DeltaTime);
	void Animate_Spread(double DeltaTime);
	void ExecuteUbergraph_W_BaseTargetingReticle(int32 EntryPoint);
	void OnParametersInitialized();
	void OnValidTargetChanged(const ETargetValidity NewTargetValidity);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateSpread(const float Spread);
	void UpdateTimeUntilCancelled(const float Perc);
	void UpdateTimeUntilTargetConfirmed(const float Perc);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_BaseTargetingReticle_C">();
	}
	static class UW_BaseTargetingReticle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_BaseTargetingReticle_C>();
	}
};
static_assert(alignof(UW_BaseTargetingReticle_C) == 0x000010, "Wrong alignment on UW_BaseTargetingReticle_C");
static_assert(sizeof(UW_BaseTargetingReticle_C) == 0x000550, "Wrong size on UW_BaseTargetingReticle_C");
static_assert(offsetof(UW_BaseTargetingReticle_C, UberGraphFrame) == 0x000450, "Member 'UW_BaseTargetingReticle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, ValidTarget) == 0x000458, "Member 'UW_BaseTargetingReticle_C::ValidTarget' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, CenterDiamond) == 0x000460, "Member 'UW_BaseTargetingReticle_C::CenterDiamond' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, ChevronOverlay) == 0x000468, "Member 'UW_BaseTargetingReticle_C::ChevronOverlay' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, ChevronSpacer) == 0x000470, "Member 'UW_BaseTargetingReticle_C::ChevronSpacer' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Crosshair_Bottom) == 0x000478, "Member 'UW_BaseTargetingReticle_C::Crosshair_Bottom' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Crosshair_Left) == 0x000480, "Member 'UW_BaseTargetingReticle_C::Crosshair_Left' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Crosshair_Right) == 0x000488, "Member 'UW_BaseTargetingReticle_C::Crosshair_Right' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Crosshair_Top) == 0x000490, "Member 'UW_BaseTargetingReticle_C::Crosshair_Top' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, W_LinearProgressBar) == 0x000498, "Member 'UW_BaseTargetingReticle_C::W_LinearProgressBar' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Progress_Background_Map) == 0x0004A0, "Member 'UW_BaseTargetingReticle_C::Progress_Background_Map' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Cached_Spread) == 0x0004F0, "Member 'UW_BaseTargetingReticle_C::Cached_Spread' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Target_Spread) == 0x0004F8, "Member 'UW_BaseTargetingReticle_C::Target_Spread' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Spread_Interpolator) == 0x000500, "Member 'UW_BaseTargetingReticle_C::Spread_Interpolator' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Default_Spread) == 0x000508, "Member 'UW_BaseTargetingReticle_C::Default_Spread' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Spread_Animation_Curve) == 0x000510, "Member 'UW_BaseTargetingReticle_C::Spread_Animation_Curve' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Position_Interpolator) == 0x000518, "Member 'UW_BaseTargetingReticle_C::Position_Interpolator' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Target_Position) == 0x000520, "Member 'UW_BaseTargetingReticle_C::Target_Position' has a wrong offset!");
static_assert(offsetof(UW_BaseTargetingReticle_C, Debug_Position) == 0x000530, "Member 'UW_BaseTargetingReticle_C::Debug_Position' has a wrong offset!");

}

