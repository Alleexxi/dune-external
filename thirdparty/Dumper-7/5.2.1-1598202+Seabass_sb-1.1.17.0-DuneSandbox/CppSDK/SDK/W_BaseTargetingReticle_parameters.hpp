#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseTargetingReticle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.Animate Position
// 0x0080 (0x0080 - 0x0000)
struct W_BaseTargetingReticle_C_Animate_Position final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_Animate_Position) == 0x000008, "Wrong alignment on W_BaseTargetingReticle_C_Animate_Position");
static_assert(sizeof(W_BaseTargetingReticle_C_Animate_Position) == 0x000080, "Wrong size on W_BaseTargetingReticle_C_Animate_Position");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, DeltaTime) == 0x000000, "Member 'W_BaseTargetingReticle_C_Animate_Position::DeltaTime' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000018, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x000030, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_GetFloatValue_ReturnValue) == 0x000048, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_VLerp_ReturnValue) == 0x000050, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000068, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Position, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000078, "Member 'W_BaseTargetingReticle_C_Animate_Position::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.Animate Spread
// 0x0050 (0x0050 - 0x0000)
struct W_BaseTargetingReticle_C_Animate_Spread final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Curve_Value;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_Animate_Spread) == 0x000008, "Wrong alignment on W_BaseTargetingReticle_C_Animate_Spread");
static_assert(sizeof(W_BaseTargetingReticle_C_Animate_Spread) == 0x000050, "Wrong size on W_BaseTargetingReticle_C_Animate_Spread");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, DeltaTime) == 0x000000, "Member 'W_BaseTargetingReticle_C_Animate_Spread::DeltaTime' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, Curve_Value) == 0x000008, "Member 'W_BaseTargetingReticle_C_Animate_Spread::Curve_Value' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_GetFloatValue_ReturnValue) == 0x00000C, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_BreakVector2D_X) == 0x000018, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000030, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000040, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Animate_Spread, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000048, "Member 'W_BaseTargetingReticle_C_Animate_Spread::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.ExecuteUbergraph_W_BaseTargetingReticle
// 0x0150 (0x0150 - 0x0000)
struct W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETargetValidity                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETargetValidity                               K2Node_Event_NewTargetValidity;                    // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Perc_1;                               // 0x00B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Perc;                                 // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Spread;                               // 0x00CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETargetValidity                               Temp_byte_Variable_3;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Animate_Spread_DeltaTime_ImplicitCast;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Valid_ImplicitCast;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_FallbackValid_ImplicitCast;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Target_Spread_ImplicitCast;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Cached_Spread_ImplicitCast;     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle) == 0x000008, "Wrong alignment on W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle");
static_assert(sizeof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle) == 0x000150, "Wrong size on W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, EntryPoint) == 0x000000, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_byte_Variable) == 0x000004, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000048, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_NewTargetValidity) == 0x000058, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_NewTargetValidity' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_IsDesignTime) == 0x000059, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Select_Default) == 0x00005C, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000061, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Map_Find_Value) == 0x000064, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Map_Find_ReturnValue) == 0x000074, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_BooleanOR_ReturnValue) == 0x000075, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_PlayAnimationForward_ReturnValue) == 0x000078, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000080, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_byte_Variable_1) == 0x000088, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Map_Find_Value_1) == 0x00008C, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Map_Find_ReturnValue_1) == 0x00009C, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_BooleanOR_ReturnValue_1) == 0x00009D, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_byte_Variable_2) == 0x00009E, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00009F, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_Perc_1) == 0x0000B0, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_Perc_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000B4, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_LinearColorLerp_ReturnValue) == 0x0000B8, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_Perc) == 0x0000C8, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_Perc' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Event_Spread) == 0x0000CC, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Event_Spread' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000D8, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_bool_Variable) == 0x0000E8, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_real_Variable) == 0x0000F0, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Select_Default_1) == 0x0000F8, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_real_Variable_1) == 0x000100, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_real_Variable_2) == 0x000108, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, Temp_byte_Variable_3) == 0x000110, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Select_Default_2) == 0x000118, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000120, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Animate_Spread_DeltaTime_ImplicitCast) == 0x000128, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Animate_Spread_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Select_Valid_ImplicitCast) == 0x000130, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Select_Valid_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_Select_FallbackValid_ImplicitCast) == 0x000134, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_Select_FallbackValid_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_VariableSet_Target_Spread_ImplicitCast) == 0x000138, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_VariableSet_Target_Spread_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, K2Node_VariableSet_Cached_Spread_ImplicitCast) == 0x000148, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::K2Node_VariableSet_Cached_Spread_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x00014C, "Member 'W_BaseTargetingReticle_C_ExecuteUbergraph_W_BaseTargetingReticle::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.OnValidTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct W_BaseTargetingReticle_C_OnValidTargetChanged final
{
public:
	ETargetValidity                               NewTargetValidity;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_OnValidTargetChanged) == 0x000001, "Wrong alignment on W_BaseTargetingReticle_C_OnValidTargetChanged");
static_assert(sizeof(W_BaseTargetingReticle_C_OnValidTargetChanged) == 0x000001, "Wrong size on W_BaseTargetingReticle_C_OnValidTargetChanged");
static_assert(offsetof(W_BaseTargetingReticle_C_OnValidTargetChanged, NewTargetValidity) == 0x000000, "Member 'W_BaseTargetingReticle_C_OnValidTargetChanged::NewTargetValidity' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_BaseTargetingReticle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_PreConstruct) == 0x000001, "Wrong alignment on W_BaseTargetingReticle_C_PreConstruct");
static_assert(sizeof(W_BaseTargetingReticle_C_PreConstruct) == 0x000001, "Wrong size on W_BaseTargetingReticle_C_PreConstruct");
static_assert(offsetof(W_BaseTargetingReticle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_BaseTargetingReticle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_BaseTargetingReticle_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_Tick) == 0x000004, "Wrong alignment on W_BaseTargetingReticle_C_Tick");
static_assert(sizeof(W_BaseTargetingReticle_C_Tick) == 0x00003C, "Wrong size on W_BaseTargetingReticle_C_Tick");
static_assert(offsetof(W_BaseTargetingReticle_C_Tick, MyGeometry) == 0x000000, "Member 'W_BaseTargetingReticle_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseTargetingReticle_C_Tick, InDeltaTime) == 0x000038, "Member 'W_BaseTargetingReticle_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.UpdateSpread
// 0x0004 (0x0004 - 0x0000)
struct W_BaseTargetingReticle_C_UpdateSpread final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_UpdateSpread) == 0x000004, "Wrong alignment on W_BaseTargetingReticle_C_UpdateSpread");
static_assert(sizeof(W_BaseTargetingReticle_C_UpdateSpread) == 0x000004, "Wrong size on W_BaseTargetingReticle_C_UpdateSpread");
static_assert(offsetof(W_BaseTargetingReticle_C_UpdateSpread, Spread) == 0x000000, "Member 'W_BaseTargetingReticle_C_UpdateSpread::Spread' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.UpdateTimeUntilCancelled
// 0x0004 (0x0004 - 0x0000)
struct W_BaseTargetingReticle_C_UpdateTimeUntilCancelled final
{
public:
	float                                         Perc;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_UpdateTimeUntilCancelled) == 0x000004, "Wrong alignment on W_BaseTargetingReticle_C_UpdateTimeUntilCancelled");
static_assert(sizeof(W_BaseTargetingReticle_C_UpdateTimeUntilCancelled) == 0x000004, "Wrong size on W_BaseTargetingReticle_C_UpdateTimeUntilCancelled");
static_assert(offsetof(W_BaseTargetingReticle_C_UpdateTimeUntilCancelled, Perc) == 0x000000, "Member 'W_BaseTargetingReticle_C_UpdateTimeUntilCancelled::Perc' has a wrong offset!");

// Function W_BaseTargetingReticle.W_BaseTargetingReticle_C.UpdateTimeUntilTargetConfirmed
// 0x0004 (0x0004 - 0x0000)
struct W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed final
{
public:
	float                                         Perc;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed) == 0x000004, "Wrong alignment on W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed");
static_assert(sizeof(W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed) == 0x000004, "Wrong size on W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed");
static_assert(offsetof(W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed, Perc) == 0x000000, "Member 'W_BaseTargetingReticle_C_UpdateTimeUntilTargetConfirmed::Perc' has a wrong offset!");

}

