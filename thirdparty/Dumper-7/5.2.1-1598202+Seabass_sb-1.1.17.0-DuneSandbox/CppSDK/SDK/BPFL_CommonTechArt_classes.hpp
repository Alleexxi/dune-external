#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_CommonTechArt

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_CommonTechArt.BPFL_CommonTechArt_C
// 0x0000 (0x0030 - 0x0030)
class UBPFL_CommonTechArt_C final : public UBlueprintFunctionLibrary
{
public:
	static void Clamp_Linear_Color(const struct FLinearColor& In_Color, double Min, double Max, class UObject* __WorldContext, struct FLinearColor* Clamped_Color);
	static void Get_System_Path_from_Level_path(const class FString& In_Path, class UObject* __WorldContext, class FString* Return_Value);
	static void LinearColorToVector4(const struct FLinearColor& Linear_Color, class UObject* __WorldContext, struct FVector4* Vector_4);
	static void Pack_Channel_Selection_Into_Float(const struct FLinearColor& Channel_Selection, class UObject* __WorldContext, double* Packed_Float);
	static void Pack_Linear_Color_Into_Float(const struct FLinearColor& Color, class UObject* __WorldContext, double* PackedFloat);
	static void Pack_Normalized_Vector_Into_Float(const struct FVector& Vector, class UObject* __WorldContext, double* PackedFloat);
	static void SetDefaultCustomPrimitiveDataColorLinearRGB(class UPrimitiveComponent* Target, int32 DataIndex, const struct FLinearColor& InColor, class UObject* __WorldContext);
	static void SetDefaultCustomPrimitiveDataColorLinearRGBA(class UPrimitiveComponent* Target, int32 DataIndex, const struct FLinearColor& InColor, class UObject* __WorldContext);
	static void Vector_Elements_Ordered_By_Size(const struct FVector& Vecotor_to_process, class UObject* __WorldContext, struct FVector* Element_Size_Ordered_Vector);

	void Gather_Dependencies(TArray<struct FAssetData>& Objects_to_check, TArray<class UClass*>& Classes_to_collect_, bool Recursive, bool Also_scan_references_, class UObject* __WorldContext, TArray<struct FAssetData>* Referenced_Assets_Data_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_CommonTechArt_C">();
	}
	static class UBPFL_CommonTechArt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_CommonTechArt_C>();
	}
};
static_assert(alignof(UBPFL_CommonTechArt_C) == 0x000008, "Wrong alignment on UBPFL_CommonTechArt_C");
static_assert(sizeof(UBPFL_CommonTechArt_C) == 0x000030, "Wrong size on UBPFL_CommonTechArt_C");

}

