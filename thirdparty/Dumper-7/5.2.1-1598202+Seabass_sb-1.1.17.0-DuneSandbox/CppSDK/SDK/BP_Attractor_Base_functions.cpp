#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Attractor_Base

#include "Basic.hpp"

#include "BP_Attractor_Base_classes.hpp"
#include "BP_Attractor_Base_parameters.hpp"


namespace SDK
{

// Function BP_Attractor_Base.BP_Attractor_Base_C.ExecuteUbergraph_BP_Attractor_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attractor_Base_C::ExecuteUbergraph_BP_Attractor_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attractor_Base_C", "ExecuteUbergraph_BP_Attractor_Base");

	Params::BP_Attractor_Base_C_ExecuteUbergraph_BP_Attractor_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attractor_Base.BP_Attractor_Base_C.GetDialogLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_NPCConverstation&             NPCConversation                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double*                                 Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attractor_Base_C::GetDialogLength(struct FF_NPCConverstation& NPCConversation, double* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attractor_Base_C", "GetDialogLength");

	Params::BP_Attractor_Base_C_GetDialogLength Parms{};

	Parms.NPCConversation = std::move(NPCConversation);

	UObject::ProcessEvent(Func, &Parms);

	NPCConversation = std::move(Parms.NPCConversation);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_Attractor_Base.BP_Attractor_Base_C.PlayConversation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADuneNpcCharacter*                NPC1_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADuneNpcCharacter*                NPC2_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    UseSpecificConversation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attractor_Base_C::PlayConversation(class ADuneNpcCharacter* NPC1_0, class ADuneNpcCharacter* NPC2_0, bool UseSpecificConversation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attractor_Base_C", "PlayConversation");

	Params::BP_Attractor_Base_C_PlayConversation Parms{};

	Parms.NPC1_0 = NPC1_0;
	Parms.NPC2_0 = NPC2_0;
	Parms.UseSpecificConversation = UseSpecificConversation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Attractor_Base.BP_Attractor_Base_C.PlayNextConversationRow
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FF_NPCConverstation>&ConversationData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   RowToPlay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Attractor_Base_C::PlayNextConversationRow(const TArray<struct FF_NPCConverstation>& ConversationData, int32 RowToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Attractor_Base_C", "PlayNextConversationRow");

	Params::BP_Attractor_Base_C_PlayNextConversationRow Parms{};

	Parms.ConversationData = std::move(ConversationData);
	Parms.RowToPlay = RowToPlay;

	UObject::ProcessEvent(Func, &Parms);
}

}

