#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CIGC_LM_Treads

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function AB_CIGC_LM_Treads.AB_CIGC_LM_Treads_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_CIGC_LM_Treads_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CIGC_LM_Treads_C_AnimGraph) == 0x000008, "Wrong alignment on AB_CIGC_LM_Treads_C_AnimGraph");
static_assert(sizeof(AB_CIGC_LM_Treads_C_AnimGraph) == 0x000010, "Wrong size on AB_CIGC_LM_Treads_C_AnimGraph");
static_assert(offsetof(AB_CIGC_LM_Treads_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_CIGC_LM_Treads_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AB_CIGC_LM_Treads.AB_CIGC_LM_Treads_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_CIGC_LM_Treads_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_CIGC_LM_Treads.AB_CIGC_LM_Treads_C.ExecuteUbergraph_AB_CIGC_LM_Treads
// 0x0120 (0x0120 - 0x0000)
struct AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPosseseablePawnInterface> CallFunc_GetDriverCharacter_self_CastInput;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         CallFunc_GetDriverCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IKSolver_Offset;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IKSolver_Offset_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IKSolver_Offset_2;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IKSolver_Offset_3;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPosseseablePawnInterface> CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGroundVehicleVariables_Forward;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGroundVehicleVariables_Steering;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGroundVehicleVariables_HorizontalSpeed; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGroundVehicleVariables_HorizontalDirection; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsPossessed;   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsInAir;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsBoosting;    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_CustomEvent_ModuleType;                     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAllWheelsGrounded;                   // 0x00D3(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EVehicleModuleType ModuleType)> K2Node_CreateDelegate_OutputDelegate;             // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_HorizontalSpeed_ImplicitCast;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HorizontalDirection_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WheelRotationR_ImplicitCast;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WheelRotationL_ImplicitCast;    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Delta_Time_X_ImplicitCast;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads) == 0x000008, "Wrong alignment on AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads");
static_assert(sizeof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads) == 0x000120, "Wrong size on AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, EntryPoint) == 0x000000, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetDriverCharacter_self_CastInput) == 0x000008, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetDriverCharacter_self_CastInput' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetDriverCharacter_ReturnValue) == 0x000018, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetDriverCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Map_Values_Values) == 0x000028, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000048, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_BreakVector_X) == 0x000058, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_BreakVector_Y) == 0x000060, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_BreakVector_Z) == 0x000068, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IKSolver_Offset) == 0x000078, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IKSolver_Offset' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IKSolver_Offset_1) == 0x000080, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IKSolver_Offset_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IKSolver_Offset_2) == 0x000088, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IKSolver_Offset_2' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IKSolver_Offset_3) == 0x000090, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IKSolver_Offset_3' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_Event_DeltaTimeX) == 0x000098, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput) == 0x0000A0, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_Forward) == 0x0000B0, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_Forward' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_Steering) == 0x0000B8, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_Steering' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_HorizontalSpeed) == 0x0000C0, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_HorizontalSpeed' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_HorizontalDirection) == 0x0000C4, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_HorizontalDirection' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_bIsPossessed) == 0x0000C8, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_bIsPossessed' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_bIsInAir) == 0x0000C9, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_bIsInAir' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_GetGroundVehicleVariables_bIsBoosting) == 0x0000CA, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_GetGroundVehicleVariables_bIsBoosting' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IsValid_ReturnValue_1) == 0x0000CB, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IsValid_ReturnValue_2) == 0x0000CC, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, Temp_bool_Has_Been_Initd_Variable) == 0x0000CD, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000CE, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, Temp_bool_IsClosed_Variable) == 0x0000CF, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_CustomEvent_ModuleType) == 0x0000D1, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_CustomEvent_ModuleType' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_IsValid_ReturnValue_4) == 0x0000D2, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_Event_bAllWheelsGrounded) == 0x0000D3, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_Event_bAllWheelsGrounded' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_CreateDelegate_OutputDelegate) == 0x0000D4, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_VariableSet_HorizontalSpeed_ImplicitCast) == 0x0000E8, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_VariableSet_HorizontalSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_VariableSet_HorizontalDirection_ImplicitCast) == 0x0000F0, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_VariableSet_HorizontalDirection_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_VariableSet_WheelRotationR_ImplicitCast) == 0x000100, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_VariableSet_WheelRotationR_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000108, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_VariableSet_WheelRotationL_ImplicitCast) == 0x000110, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_VariableSet_WheelRotationL_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads, K2Node_VariableSet_Delta_Time_X_ImplicitCast) == 0x000118, "Member 'AB_CIGC_LM_Treads_C_ExecuteUbergraph_AB_CIGC_LM_Treads::K2Node_VariableSet_Delta_Time_X_ImplicitCast' has a wrong offset!");

// Function AB_CIGC_LM_Treads.AB_CIGC_LM_Treads_C.IKSolver
// 0x00A0 (0x00A0 - 0x0000)
struct AB_CIGC_LM_Treads_C_IKSolver final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Offset;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_UpdateAsyncGroundTrace_Location;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_UpdateAsyncGroundTrace_Normal;            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateAsyncGroundTrace_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateAsyncGroundTrace_TraceDistance_ImplicitCast; // 0x0098(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_LM_Treads_C_IKSolver) == 0x000008, "Wrong alignment on AB_CIGC_LM_Treads_C_IKSolver");
static_assert(sizeof(AB_CIGC_LM_Treads_C_IKSolver) == 0x0000A0, "Wrong size on AB_CIGC_LM_Treads_C_IKSolver");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, SocketName) == 0x000000, "Member 'AB_CIGC_LM_Treads_C_IKSolver::SocketName' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, Offset) == 0x000008, "Member 'AB_CIGC_LM_Treads_C_IKSolver::Offset' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_GetOwningComponent_ReturnValue) == 0x000010, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_UpdateAsyncGroundTrace_Location) == 0x000020, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_UpdateAsyncGroundTrace_Location' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_UpdateAsyncGroundTrace_Normal) == 0x000038, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_UpdateAsyncGroundTrace_Normal' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_UpdateAsyncGroundTrace_ReturnValue) == 0x000050, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_UpdateAsyncGroundTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_GetSocketLocation_ReturnValue) == 0x000058, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_VSize_ReturnValue) == 0x000088, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_LM_Treads_C_IKSolver, CallFunc_UpdateAsyncGroundTrace_TraceDistance_ImplicitCast) == 0x000098, "Member 'AB_CIGC_LM_Treads_C_IKSolver::CallFunc_UpdateAsyncGroundTrace_TraceDistance_ImplicitCast' has a wrong offset!");

// Function AB_CIGC_LM_Treads.AB_CIGC_LM_Treads_C.OnAllWheelsGroundedChanged
// 0x0001 (0x0001 - 0x0000)
struct AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged final
{
public:
	bool                                          bAllWheelsGrounded;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged) == 0x000001, "Wrong alignment on AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged");
static_assert(sizeof(AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged) == 0x000001, "Wrong size on AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged");
static_assert(offsetof(AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged, bAllWheelsGrounded) == 0x000000, "Member 'AB_CIGC_LM_Treads_C_OnAllWheelsGroundedChanged::bAllWheelsGrounded' has a wrong offset!");

// Function AB_CIGC_LM_Treads.AB_CIGC_LM_Treads_C.OnModuleMeshDestroyed_Event
// 0x0001 (0x0001 - 0x0000)
struct AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event) == 0x000001, "Wrong alignment on AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event");
static_assert(sizeof(AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event) == 0x000001, "Wrong size on AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event");
static_assert(offsetof(AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event, ModuleType) == 0x000000, "Member 'AB_CIGC_LM_Treads_C_OnModuleMeshDestroyed_Event::ModuleType' has a wrong offset!");

}

