#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SecondWind

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_SecondWind.GA_SecondWind_C.ExecuteUbergraph_GA_SecondWind
// 0x02A8 (0x02A8 - 0x0000)
struct GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0038(0x00B0)(ConstParm)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00E8(0x0010)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              K2Node_Event_ActorInfo;                            // 0x00F8(0x0048)(ConstParm, ContainsInstancedReference)
	struct FGameplayAbilitySpec                   K2Node_Event_Spec;                                 // 0x0140(0x0100)(ConstParm, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_GetTimerHandle_ReturnValue;               // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTuningValueByString_ReturnValue;       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTuningValueByString_ReturnValue_1;     // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue_1;                  // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_GetTimerHandle_ReturnValue_1;             // 0x0280(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CachedSecondWindDuration_ImplicitCast; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CachedSecondWindDelay_ImplicitCast; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast;              // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast_1;            // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind) == 0x000008, "Wrong alignment on GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind");
static_assert(sizeof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind) == 0x0002A8, "Wrong size on GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, EntryPoint) == 0x000000, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000028, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_Event_EventData) == 0x000038, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000E8, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_Event_ActorInfo) == 0x0000F8, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_Event_ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_Event_Spec) == 0x000140, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_GetTimerHandle_ReturnValue) == 0x000240, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_GetTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_IsValid_ReturnValue_1) == 0x000248, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_GetTuningValueByString_ReturnValue) == 0x00024C, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_GetTuningValueByString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_GetTuningValueByString_ReturnValue_1) == 0x000250, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_GetTuningValueByString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_WaitDelay_ReturnValue) == 0x000258, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_CreateDelegate_OutputDelegate_2) == 0x000260, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_IsValid_ReturnValue_2) == 0x000270, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_WaitDelay_ReturnValue_1) == 0x000278, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_WaitDelay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_GetTimerHandle_ReturnValue_1) == 0x000280, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_GetTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_IsValid_ReturnValue_3) == 0x000288, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_IsValid_ReturnValue_4) == 0x000289, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_VariableSet_CachedSecondWindDuration_ImplicitCast) == 0x000290, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_VariableSet_CachedSecondWindDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, K2Node_VariableSet_CachedSecondWindDelay_ImplicitCast) == 0x000298, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::K2Node_VariableSet_CachedSecondWindDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_WaitDelay_Time_ImplicitCast) == 0x0002A0, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_WaitDelay_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind, CallFunc_WaitDelay_Time_ImplicitCast_1) == 0x0002A4, "Member 'GA_SecondWind_C_ExecuteUbergraph_GA_SecondWind::CallFunc_WaitDelay_Time_ImplicitCast_1' has a wrong offset!");

// Function GA_SecondWind.GA_SecondWind_C.InitializeStaticProperties
// 0x0148 (0x0148 - 0x0000)
struct GA_SecondWind_C_InitializeStaticProperties final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayAbilitySpec                   Spec;                                              // 0x0048(0x0100)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_SecondWind_C_InitializeStaticProperties) == 0x000008, "Wrong alignment on GA_SecondWind_C_InitializeStaticProperties");
static_assert(sizeof(GA_SecondWind_C_InitializeStaticProperties) == 0x000148, "Wrong size on GA_SecondWind_C_InitializeStaticProperties");
static_assert(offsetof(GA_SecondWind_C_InitializeStaticProperties, ActorInfo) == 0x000000, "Member 'GA_SecondWind_C_InitializeStaticProperties::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_SecondWind_C_InitializeStaticProperties, Spec) == 0x000048, "Member 'GA_SecondWind_C_InitializeStaticProperties::Spec' has a wrong offset!");

// Function GA_SecondWind.GA_SecondWind_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_SecondWind_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_SecondWind_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_SecondWind_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_SecondWind_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_SecondWind_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_SecondWind_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_SecondWind_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}

