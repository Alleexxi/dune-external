#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MentatVision_CombinedVersion

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.BattlefieldVisionInfoLevelUpdated
// 0x0004 (0x0004 - 0x0000)
struct W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated) == 0x000004, "Wrong alignment on W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated) == 0x000004, "Wrong size on W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated, NewLevel) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_BattlefieldVisionInfoLevelUpdated::NewLevel' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ExecuteUbergraph_W_MentatVision_CombinedVersion
// 0x0110 (0x0110 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartTime_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_Actor;                                // 0x0050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumPendingWidgets;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMentatVisionAbilityComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMentatVisionTarget                    CallFunc_FindTarget_OutTarget;                     // 0x00A0(0x0028)()
	bool                                          CallFunc_FindTarget_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UTexture2D>>      CallFunc_RetrieveAbilityIcons_ReturnValue;         // 0x00D0(0x0010)(ReferenceParm)
	int32                                         K2Node_Event_NewLevel;                             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsVisible_5;                          // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsVisible_4;                          // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsVisible_3;                          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsVisible_2;                          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsVisible_1;                          // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsVisible;                            // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInFocus;                           // 0x00F1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion) == 0x000110, "Wrong size on W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, EntryPoint) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_bool_Variable) == 0x000004, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable) == 0x000005, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_1) == 0x000006, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_bool_Variable_1) == 0x000007, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_2) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_3) == 0x000009, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_bool_Variable_2) == 0x00000A, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_4) == 0x00000B, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_5) == 0x00000C, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_bool_Variable_3) == 0x00000D, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_6) == 0x00000E, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_7) == 0x00000F, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_bool_Variable_4) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_8) == 0x000011, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_9) == 0x000012, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_bool_Variable_5) == 0x000013, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_10) == 0x000014, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, Temp_byte_Variable_11) == 0x000015, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_GetStartTime_ReturnValue) == 0x000020, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_GetEndTime_ReturnValue) == 0x000024, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsDesignTime) == 0x000048, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_Actor) == 0x000050, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_NumPendingWidgets) == 0x000058, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_NumPendingWidgets' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_DynamicCast_AsTexture_2D) == 0x000060, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006A, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_PlayAnimation_ReturnValue_2) == 0x000070, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_PlayAnimation_ReturnValue_3) == 0x000078, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_PlayAnimation_ReturnValue_4) == 0x000080, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_GetOwningPlayer_ReturnValue) == 0x000090, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_FindTarget_OutTarget) == 0x0000A0, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_FindTarget_OutTarget' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_FindTarget_ReturnValue) == 0x0000C8, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_FindTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_RetrieveAbilityIcons_ReturnValue) == 0x0000D0, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_RetrieveAbilityIcons_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_NewLevel) == 0x0000E0, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_NewLevel' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_SwitchInteger_CmpSuccess) == 0x0000E4, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsVisible_5) == 0x0000E5, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsVisible_5' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsVisible_4) == 0x0000E6, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsVisible_4' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Select_Default) == 0x0000E7, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Select_Default_1) == 0x0000E8, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsVisible_3) == 0x0000E9, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsVisible_3' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsVisible_2) == 0x0000EA, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsVisible_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Select_Default_2) == 0x0000EB, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Select_Default_3) == 0x0000EC, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsVisible_1) == 0x0000ED, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsVisible_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_IsVisible) == 0x0000EE, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_IsVisible' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Select_Default_4) == 0x0000EF, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Select_Default_5) == 0x0000F0, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, K2Node_Event_bIsInFocus) == 0x0000F1, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::K2Node_Event_bIsInFocus' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000F8, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_Delay_Duration_ImplicitCast) == 0x000108, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00010C, "Member 'W_MentatVision_CombinedVersion_C_ExecuteUbergraph_W_MentatVision_CombinedVersion::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.OnMentatWidgetInFocusChanged
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged final
{
public:
	bool                                          bIsInFocus;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged, bIsInFocus) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_OnMentatWidgetInFocusChanged::bIsInFocus' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.OnResetWidgetForActor
// 0x0008 (0x0008 - 0x0000)
struct W_MentatVision_CombinedVersion_C_OnResetWidgetForActor final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_OnResetWidgetForActor) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_OnResetWidgetForActor");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_OnResetWidgetForActor) == 0x000008, "Wrong size on W_MentatVision_CombinedVersion_C_OnResetWidgetForActor");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_OnResetWidgetForActor, Actor) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_OnResetWidgetForActor::Actor' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.PlayAppearAnimation
// 0x0004 (0x0004 - 0x0000)
struct W_MentatVision_CombinedVersion_C_PlayAppearAnimation final
{
public:
	int32                                         NumPendingWidgets;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_PlayAppearAnimation) == 0x000004, "Wrong alignment on W_MentatVision_CombinedVersion_C_PlayAppearAnimation");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_PlayAppearAnimation) == 0x000004, "Wrong size on W_MentatVision_CombinedVersion_C_PlayAppearAnimation");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_PlayAppearAnimation, NumPendingWidgets) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_PlayAppearAnimation::NumPendingWidgets' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_PreConstruct) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_PreConstruct");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_PreConstruct) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_PreConstruct");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.SetAccessCodeDelegateBindings
// 0x0040 (0x0040 - 0x0000)
struct W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings final
{
public:
	bool                                          ShouldBeActive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerAccessCodesComponent*            CodesComponent;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerAccessCodesComponent*            CallFunc_GetAccessCodesComponent_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings) == 0x000040, "Wrong size on W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings, ShouldBeActive) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings::ShouldBeActive' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings, CodesComponent) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings::CodesComponent' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings, CallFunc_GetAccessCodesComponent_Component) == 0x000038, "Member 'W_MentatVision_CombinedVersion_C_SetAccessCodeDelegateBindings::CallFunc_GetAccessCodesComponent_Component' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.SetTypeIcon
// 0x0030 (0x0030 - 0x0000)
struct W_MentatVision_CombinedVersion_C_SetTypeIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_SetTypeIcon) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_SetTypeIcon");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_SetTypeIcon) == 0x000030, "Wrong size on W_MentatVision_CombinedVersion_C_SetTypeIcon");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetTypeIcon, SoftTexture) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_SetTypeIcon::SoftTexture' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.SetupExtraIcon
// 0x0410 (0x0410 - 0x0000)
struct W_MentatVision_CombinedVersion_C_SetupExtraIcon final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeVisible;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneNpcCharacter*                      K2Node_DynamicCast_AsDune_Npc_Character;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNpcConfigurationDataRowBase           CallFunc_FindNpcConfig_OutConfig;                  // 0x0020(0x03E8)()
	bool                                          CallFunc_FindNpcConfig_ReturnValue;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_SetupExtraIcon) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_SetupExtraIcon");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_SetupExtraIcon) == 0x000410, "Wrong size on W_MentatVision_CombinedVersion_C_SetupExtraIcon");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, Target) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::Target' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, ShouldBeVisible) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, Temp_bool_Variable) == 0x000009, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, Temp_byte_Variable) == 0x00000A, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, Temp_byte_Variable_1) == 0x00000B, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, K2Node_DynamicCast_AsDune_Npc_Character) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::K2Node_DynamicCast_AsDune_Npc_Character' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, CallFunc_FindNpcConfig_OutConfig) == 0x000020, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::CallFunc_FindNpcConfig_OutConfig' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, CallFunc_FindNpcConfig_ReturnValue) == 0x000408, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::CallFunc_FindNpcConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000409, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, CallFunc_HasTag_ReturnValue) == 0x00040A, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, CallFunc_BooleanAND_ReturnValue) == 0x00040B, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupExtraIcon, K2Node_Select_Default) == 0x00040C, "Member 'W_MentatVision_CombinedVersion_C_SetupExtraIcon::K2Node_Select_Default' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.SetupVisualsForTarget
// 0x0158 (0x0158 - 0x0000)
struct W_MentatVision_CombinedVersion_C_SetupVisualsForTarget final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 FailureString;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           AbilityTag;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDoorAccess;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0028(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneNpcCharacter*                      K2Node_DynamicCast_AsDune_Npc_Character;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0090(0x0020)()
	class FString                                 CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IMentatVisionScannableInterface> K2Node_DynamicCast_AsMentat_Vision_Scannable_Interface; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetTypeIconForMentatVision_ReturnValue;   // 0x0128(0x0030)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_SetupVisualsForTarget");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget) == 0x000158, "Wrong size on W_MentatVision_CombinedVersion_C_SetupVisualsForTarget");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, TargetActor) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, FailureString) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::FailureString' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, AbilityTag) == 0x000018, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::AbilityTag' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, HasDoorAccess) == 0x000020, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::HasDoorAccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, Temp_softobject_Variable) == 0x000028, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000058, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, K2Node_DynamicCast_AsDune_Npc_Character) == 0x000060, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::K2Node_DynamicCast_AsDune_Npc_Character' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000080, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000090, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue) == 0x0000B0, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetObjectClass_ReturnValue) == 0x0000D0, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000D8, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E8, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, K2Node_DynamicCast_AsMentat_Vision_Scannable_Interface) == 0x0000F8, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::K2Node_DynamicCast_AsMentat_Vision_Scannable_Interface' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000110, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, K2Node_DynamicCast_AsCharacter) == 0x000118, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_SetupVisualsForTarget, CallFunc_GetTypeIconForMentatVision_ReturnValue) == 0x000128, "Member 'W_MentatVision_CombinedVersion_C_SetupVisualsForTarget::CallFunc_GetTypeIconForMentatVision_ReturnValue' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ShowAbilitiesUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated, IsVisible_0) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ShowAbilitiesUpdated::IsVisible_0' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ShowAmmoCountUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated, IsVisible_0) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ShowAmmoCountUpdated::IsVisible_0' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ShowAmmoTypeUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated, IsVisible_0) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ShowAmmoTypeUpdated::IsVisible_0' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ShowArcheTypeUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated, IsVisible_0) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ShowArcheTypeUpdated::IsVisible_0' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ShowHealthUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ShowHealthUpdated final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ShowHealthUpdated) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_ShowHealthUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ShowHealthUpdated) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_ShowHealthUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ShowHealthUpdated, IsVisible_0) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ShowHealthUpdated::IsVisible_0' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.ShowWeaponUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_MentatVision_CombinedVersion_C_ShowWeaponUpdated final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_ShowWeaponUpdated) == 0x000001, "Wrong alignment on W_MentatVision_CombinedVersion_C_ShowWeaponUpdated");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_ShowWeaponUpdated) == 0x000001, "Wrong size on W_MentatVision_CombinedVersion_C_ShowWeaponUpdated");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_ShowWeaponUpdated, IsVisible_0) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_ShowWeaponUpdated::IsVisible_0' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.Update Fog Scale
// 0x0068 (0x0068 - 0x0000)
struct W_MentatVision_CombinedVersion_C_Update_Fog_Scale final
{
public:
	bool                                          ShowExtraIcon;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UsedFogScale;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0028(0x0038)(NoDestructor)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_Update_Fog_Scale");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale) == 0x000068, "Wrong size on W_MentatVision_CombinedVersion_C_Update_Fog_Scale");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale, ShowExtraIcon) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_Update_Fog_Scale::ShowExtraIcon' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale, UsedFogScale) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_Update_Fog_Scale::UsedFogScale' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_Update_Fog_Scale::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'W_MentatVision_CombinedVersion_C_Update_Fog_Scale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale, K2Node_MakeStruct_WidgetTransform) == 0x000028, "Member 'W_MentatVision_CombinedVersion_C_Update_Fog_Scale::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_Update_Fog_Scale, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000060, "Member 'W_MentatVision_CombinedVersion_C_Update_Fog_Scale::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.UpdateBoundingBox
// 0x0058 (0x0058 - 0x0000)
struct W_MentatVision_CombinedVersion_C_UpdateBoundingBox final
{
public:
	bool                                          Show_Extra_Icon;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UsedWidgetScale;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_UpdateBoundingBox");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox) == 0x000058, "Wrong size on W_MentatVision_CombinedVersion_C_UpdateBoundingBox");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, Show_Extra_Icon) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::Show_Extra_Icon' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, UsedWidgetScale) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::UsedWidgetScale' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, K2Node_MakeStruct_Margin) == 0x000030, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000050, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateBoundingBox, K2Node_MakeStruct_Top_ImplicitCast) == 0x000054, "Member 'W_MentatVision_CombinedVersion_C_UpdateBoundingBox::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.UpdateIcons
// 0x0088 (0x0088 - 0x0000)
struct W_MentatVision_CombinedVersion_C_UpdateIcons final
{
public:
	TArray<TSoftObjectPtr<class UTexture2D>>      Icons;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TSoftObjectPtr<class UTexture2D>              CurrentIcon;                                       // 0x0010(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Array_Get_Item;                           // 0x0048(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_UpdateIcons) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_UpdateIcons");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_UpdateIcons) == 0x000088, "Wrong size on W_MentatVision_CombinedVersion_C_UpdateIcons");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, Icons) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::Icons' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, CurrentIcon) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::CurrentIcon' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, Temp_int_Array_Index_Variable) == 0x000040, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, K2Node_SwitchInteger_CmpSuccess) == 0x000044, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_UpdateIcons, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'W_MentatVision_CombinedVersion_C_UpdateIcons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C.GetAccessCodesComponent
// 0x0030 (0x0030 - 0x0000)
struct W_MentatVision_CombinedVersion_C_GetAccessCodesComponent final
{
public:
	class UPlayerAccessCodesComponent*            Component;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerState*                       K2Node_DynamicCast_AsDune_Player_State;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerAccessCodesComponent*            CallFunc_GetPlayerAccessCodesComponent_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent) == 0x000008, "Wrong alignment on W_MentatVision_CombinedVersion_C_GetAccessCodesComponent");
static_assert(sizeof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent) == 0x000030, "Wrong size on W_MentatVision_CombinedVersion_C_GetAccessCodesComponent");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, Component) == 0x000000, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::Component' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, K2Node_DynamicCast_AsDune_Player_State) == 0x000018, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::K2Node_DynamicCast_AsDune_Player_State' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MentatVision_CombinedVersion_C_GetAccessCodesComponent, CallFunc_GetPlayerAccessCodesComponent_ReturnValue) == 0x000028, "Member 'W_MentatVision_CombinedVersion_C_GetAccessCodesComponent::CallFunc_GetPlayerAccessCodesComponent_ReturnValue' has a wrong offset!");

}

