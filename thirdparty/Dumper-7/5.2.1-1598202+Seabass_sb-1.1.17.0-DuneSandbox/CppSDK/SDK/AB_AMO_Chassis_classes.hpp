#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_AMO_Chassis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_AMO_Chassis.AB_AMO_Chassis_C
// 0x1010 (0x1620 - 0x0610)
class UAB_AMO_Chassis_C final : public UDuneOrnithopterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0610(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0618(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0620(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0628(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0648(0x00E0)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0728(0x0470)()
	uint8                                         Pad_B98[0x8];                                      // 0x0B98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0BA0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0C00(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0C60(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0CC0(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0D20(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0D68(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0D88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0DD0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0DF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0E38(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E58(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0EA0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0EC0(0x00C8)()
	uint8                                         Pad_F88[0x8];                                      // 0x0F88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0F90(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0FF0(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1050(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1098(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x10B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1100(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1120(0x00C8)()
	double                                        __CustomProperty_IKWeight_Ramp_4C1500894E35661780335691451DE638; // 0x11E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_IKWeight_Gears_4C1500894E35661780335691451DE638; // 0x11F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_LoadingRamp_4C1500894E35661780335691451DE638; // 0x11F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Foot_Rear_R_4C1500894E35661780335691451DE638; // 0x1210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Foot_Rear_L_4C1500894E35661780335691451DE638; // 0x1228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Foot_Front_R_4C1500894E35661780335691451DE638; // 0x1240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Foot_Front_L_4C1500894E35661780335691451DE638; // 0x1258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Leg_Rear_R_4C1500894E35661780335691451DE638; // 0x1270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Leg_Rear_L_4C1500894E35661780335691451DE638; // 0x1288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Leg_Front_R_4C1500894E35661780335691451DE638; // 0x12A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Target_Leg_Front_L_4C1500894E35661780335691451DE638; // 0x12B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_BodyRotationOffset_4C1500894E35661780335691451DE638; // 0x12D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Delta_Time_X;                                      // 0x12E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrnithopterFlightMode                        FlightMode;                                        // 0x12EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenRamp;                                         // 0x12ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12EE[0x2];                                     // 0x12EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               BodyRotationOffset;                                // 0x12F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Target_Leg_Front_L;                                // 0x1308(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Leg_Front_R;                                // 0x1320(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Leg_Rear_L;                                 // 0x1338(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Leg_Rear_R;                                 // 0x1350(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Front_L;                               // 0x1368(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Front_R;                               // 0x1380(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Rear_L;                                // 0x1398(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Foot_Rear_R;                                // 0x13B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_LoadingRamp;                                // 0x13C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKWeight_Gears;                                    // 0x13E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKTraceDistance;                                   // 0x13E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDashing;                                          // 0x13F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F1[0x7];                                     // 0x13F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IKWeight_Ramp;                                     // 0x13F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneOrnithopter*                       As_Dune_Ornithopter;                               // 0x1400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FOrnithopterConfigComponent            Ornithopter_Config;                                // 0x1408(0x01C0)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	double                                        DistanceToGroundToLowerGear;                       // 0x15C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFXDamageSmoke;                                    // 0x15D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ChassisDestroy_;                                   // 0x15D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D9[0x7];                                     // 0x15D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Smoke;                                             // 0x15E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Sparkles_01;                                       // 0x15E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skeletal_Mesh_01;                                  // 0x15F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skeletal_Mesh_02;                                  // 0x15F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Sparkles_02;                                       // 0x1600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Niagara_System_Chassis;                            // 0x1608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Niagara_System_Chassis_Destroy;                    // 0x1610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Chassis_Destroy;                               // 0x1618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_AMO_Chassis_AnimGraphNode_TransitionResult_42F1D2F44C9CE661402A3E92DC415121();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_AMO_Chassis_AnimGraphNode_TransitionResult_5080AB5A44866FC82478758822730860();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_AMO_Chassis_AnimGraphNode_TransitionResult_65EDCDC2442BE5A244BCDBB0A5130B81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_AMO_Chassis_AnimGraphNode_TransitionResult_E103DED94691B36BCF2205B98E935CA3();
	void ExecuteUbergraph_AB_AMO_Chassis(int32 EntryPoint);
	void OnVehicleModuleBroken(const EVehicleModuleType ModuleType);
	void OnVehicleModuleDurabilityChanged(const EVehicleModuleType ModuleType, float RelativeDurability);
	void SetDash();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_AMO_Chassis_C">();
	}
	static class UAB_AMO_Chassis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_AMO_Chassis_C>();
	}
};
static_assert(alignof(UAB_AMO_Chassis_C) == 0x000010, "Wrong alignment on UAB_AMO_Chassis_C");
static_assert(sizeof(UAB_AMO_Chassis_C) == 0x001620, "Wrong size on UAB_AMO_Chassis_C");
static_assert(offsetof(UAB_AMO_Chassis_C, UberGraphFrame) == 0x000610, "Member 'UAB_AMO_Chassis_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimBlueprintExtension_PropertyAccess) == 0x000618, "Member 'UAB_AMO_Chassis_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimBlueprintExtension_Base) == 0x000620, "Member 'UAB_AMO_Chassis_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_Root) == 0x000628, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_LayeredBoneBlend) == 0x000648, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_ControlRig) == 0x000728, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_TransitionResult_5) == 0x000BA0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_TransitionResult_4) == 0x000C00, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_TransitionResult_3) == 0x000C60, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_TransitionResult_2) == 0x000CC0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_SequencePlayer_5) == 0x000D20, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateResult_5) == 0x000D68, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_SequencePlayer_4) == 0x000D88, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateResult_4) == 0x000DD0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_SequencePlayer_3) == 0x000DF0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateResult_3) == 0x000E38, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_SequencePlayer_2) == 0x000E58, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateResult_2) == 0x000EA0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateMachine_1) == 0x000EC0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_TransitionResult_1) == 0x000F90, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_TransitionResult) == 0x000FF0, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_SequencePlayer_1) == 0x001050, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateResult_1) == 0x001098, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_SequencePlayer) == 0x0010B8, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateResult) == 0x001100, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, AnimGraphNode_StateMachine) == 0x001120, "Member 'UAB_AMO_Chassis_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_IKWeight_Ramp_4C1500894E35661780335691451DE638) == 0x0011E8, "Member 'UAB_AMO_Chassis_C::__CustomProperty_IKWeight_Ramp_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_IKWeight_Gears_4C1500894E35661780335691451DE638) == 0x0011F0, "Member 'UAB_AMO_Chassis_C::__CustomProperty_IKWeight_Gears_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_LoadingRamp_4C1500894E35661780335691451DE638) == 0x0011F8, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_LoadingRamp_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Foot_Rear_R_4C1500894E35661780335691451DE638) == 0x001210, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Foot_Rear_R_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Foot_Rear_L_4C1500894E35661780335691451DE638) == 0x001228, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Foot_Rear_L_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Foot_Front_R_4C1500894E35661780335691451DE638) == 0x001240, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Foot_Front_R_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Foot_Front_L_4C1500894E35661780335691451DE638) == 0x001258, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Foot_Front_L_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Leg_Rear_R_4C1500894E35661780335691451DE638) == 0x001270, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Leg_Rear_R_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Leg_Rear_L_4C1500894E35661780335691451DE638) == 0x001288, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Leg_Rear_L_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Leg_Front_R_4C1500894E35661780335691451DE638) == 0x0012A0, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Leg_Front_R_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_Target_Leg_Front_L_4C1500894E35661780335691451DE638) == 0x0012B8, "Member 'UAB_AMO_Chassis_C::__CustomProperty_Target_Leg_Front_L_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, __CustomProperty_BodyRotationOffset_4C1500894E35661780335691451DE638) == 0x0012D0, "Member 'UAB_AMO_Chassis_C::__CustomProperty_BodyRotationOffset_4C1500894E35661780335691451DE638' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Delta_Time_X) == 0x0012E8, "Member 'UAB_AMO_Chassis_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, FlightMode) == 0x0012EC, "Member 'UAB_AMO_Chassis_C::FlightMode' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, bOpenRamp) == 0x0012ED, "Member 'UAB_AMO_Chassis_C::bOpenRamp' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, BodyRotationOffset) == 0x0012F0, "Member 'UAB_AMO_Chassis_C::BodyRotationOffset' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Leg_Front_L) == 0x001308, "Member 'UAB_AMO_Chassis_C::Target_Leg_Front_L' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Leg_Front_R) == 0x001320, "Member 'UAB_AMO_Chassis_C::Target_Leg_Front_R' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Leg_Rear_L) == 0x001338, "Member 'UAB_AMO_Chassis_C::Target_Leg_Rear_L' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Leg_Rear_R) == 0x001350, "Member 'UAB_AMO_Chassis_C::Target_Leg_Rear_R' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Foot_Front_L) == 0x001368, "Member 'UAB_AMO_Chassis_C::Target_Foot_Front_L' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Foot_Front_R) == 0x001380, "Member 'UAB_AMO_Chassis_C::Target_Foot_Front_R' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Foot_Rear_L) == 0x001398, "Member 'UAB_AMO_Chassis_C::Target_Foot_Rear_L' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_Foot_Rear_R) == 0x0013B0, "Member 'UAB_AMO_Chassis_C::Target_Foot_Rear_R' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Target_LoadingRamp) == 0x0013C8, "Member 'UAB_AMO_Chassis_C::Target_LoadingRamp' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, IKWeight_Gears) == 0x0013E0, "Member 'UAB_AMO_Chassis_C::IKWeight_Gears' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, IKTraceDistance) == 0x0013E8, "Member 'UAB_AMO_Chassis_C::IKTraceDistance' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, bDashing) == 0x0013F0, "Member 'UAB_AMO_Chassis_C::bDashing' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, IKWeight_Ramp) == 0x0013F8, "Member 'UAB_AMO_Chassis_C::IKWeight_Ramp' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, As_Dune_Ornithopter) == 0x001400, "Member 'UAB_AMO_Chassis_C::As_Dune_Ornithopter' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Ornithopter_Config) == 0x001408, "Member 'UAB_AMO_Chassis_C::Ornithopter_Config' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, DistanceToGroundToLowerGear) == 0x0015C8, "Member 'UAB_AMO_Chassis_C::DistanceToGroundToLowerGear' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, VFXDamageSmoke) == 0x0015D0, "Member 'UAB_AMO_Chassis_C::VFXDamageSmoke' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, ChassisDestroy_) == 0x0015D8, "Member 'UAB_AMO_Chassis_C::ChassisDestroy_' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Smoke) == 0x0015E0, "Member 'UAB_AMO_Chassis_C::Smoke' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Sparkles_01) == 0x0015E8, "Member 'UAB_AMO_Chassis_C::Sparkles_01' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Skeletal_Mesh_01) == 0x0015F0, "Member 'UAB_AMO_Chassis_C::Skeletal_Mesh_01' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Skeletal_Mesh_02) == 0x0015F8, "Member 'UAB_AMO_Chassis_C::Skeletal_Mesh_02' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Sparkles_02) == 0x001600, "Member 'UAB_AMO_Chassis_C::Sparkles_02' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Niagara_System_Chassis) == 0x001608, "Member 'UAB_AMO_Chassis_C::Niagara_System_Chassis' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, Niagara_System_Chassis_Destroy) == 0x001610, "Member 'UAB_AMO_Chassis_C::Niagara_System_Chassis_Destroy' has a wrong offset!");
static_assert(offsetof(UAB_AMO_Chassis_C, VFX_Chassis_Destroy) == 0x001618, "Member 'UAB_AMO_Chassis_C::VFX_Chassis_Destroy' has a wrong offset!");

}

