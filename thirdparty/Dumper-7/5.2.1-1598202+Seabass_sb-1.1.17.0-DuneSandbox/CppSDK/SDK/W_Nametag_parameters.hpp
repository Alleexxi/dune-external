#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Nametag

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Nametag.W_Nametag_C.OnSlowdamageChanged
// 0x0004 (0x0004 - 0x0000)
struct W_Nametag_C_OnSlowdamageChanged final
{
public:
	float                                         InPoise;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnSlowdamageChanged) == 0x000004, "Wrong alignment on W_Nametag_C_OnSlowdamageChanged");
static_assert(sizeof(W_Nametag_C_OnSlowdamageChanged) == 0x000004, "Wrong size on W_Nametag_C_OnSlowdamageChanged");
static_assert(offsetof(W_Nametag_C_OnSlowdamageChanged, InPoise) == 0x000000, "Member 'W_Nametag_C_OnSlowdamageChanged::InPoise' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnShieldToggled
// 0x0001 (0x0001 - 0x0000)
struct W_Nametag_C_OnShieldToggled final
{
public:
	bool                                          bInShieldActive;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnShieldToggled) == 0x000001, "Wrong alignment on W_Nametag_C_OnShieldToggled");
static_assert(sizeof(W_Nametag_C_OnShieldToggled) == 0x000001, "Wrong size on W_Nametag_C_OnShieldToggled");
static_assert(offsetof(W_Nametag_C_OnShieldToggled, bInShieldActive) == 0x000000, "Member 'W_Nametag_C_OnShieldToggled::bInShieldActive' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnPowerChanged
// 0x0004 (0x0004 - 0x0000)
struct W_Nametag_C_OnPowerChanged final
{
public:
	float                                         InPower;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnPowerChanged) == 0x000004, "Wrong alignment on W_Nametag_C_OnPowerChanged");
static_assert(sizeof(W_Nametag_C_OnPowerChanged) == 0x000004, "Wrong size on W_Nametag_C_OnPowerChanged");
static_assert(offsetof(W_Nametag_C_OnPowerChanged, InPower) == 0x000000, "Member 'W_Nametag_C_OnPowerChanged::InPower' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnPoiseChanged
// 0x0004 (0x0004 - 0x0000)
struct W_Nametag_C_OnPoiseChanged final
{
public:
	float                                         InPoise;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnPoiseChanged) == 0x000004, "Wrong alignment on W_Nametag_C_OnPoiseChanged");
static_assert(sizeof(W_Nametag_C_OnPoiseChanged) == 0x000004, "Wrong size on W_Nametag_C_OnPoiseChanged");
static_assert(offsetof(W_Nametag_C_OnPoiseChanged, InPoise) == 0x000000, "Member 'W_Nametag_C_OnPoiseChanged::InPoise' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnNameChanged
// 0x0010 (0x0010 - 0x0000)
struct W_Nametag_C_OnNameChanged final
{
public:
	class FString                                 InName;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnNameChanged) == 0x000008, "Wrong alignment on W_Nametag_C_OnNameChanged");
static_assert(sizeof(W_Nametag_C_OnNameChanged) == 0x000010, "Wrong size on W_Nametag_C_OnNameChanged");
static_assert(offsetof(W_Nametag_C_OnNameChanged, InName) == 0x000000, "Member 'W_Nametag_C_OnNameChanged::InName' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnMaxPowerChanged
// 0x0004 (0x0004 - 0x0000)
struct W_Nametag_C_OnMaxPowerChanged final
{
public:
	float                                         InPower;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnMaxPowerChanged) == 0x000004, "Wrong alignment on W_Nametag_C_OnMaxPowerChanged");
static_assert(sizeof(W_Nametag_C_OnMaxPowerChanged) == 0x000004, "Wrong size on W_Nametag_C_OnMaxPowerChanged");
static_assert(offsetof(W_Nametag_C_OnMaxPowerChanged, InPower) == 0x000000, "Member 'W_Nametag_C_OnMaxPowerChanged::InPower' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnMaxHealthChanged
// 0x0004 (0x0004 - 0x0000)
struct W_Nametag_C_OnMaxHealthChanged final
{
public:
	float                                         InMaxHealth;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnMaxHealthChanged) == 0x000004, "Wrong alignment on W_Nametag_C_OnMaxHealthChanged");
static_assert(sizeof(W_Nametag_C_OnMaxHealthChanged) == 0x000004, "Wrong size on W_Nametag_C_OnMaxHealthChanged");
static_assert(offsetof(W_Nametag_C_OnMaxHealthChanged, InMaxHealth) == 0x000000, "Member 'W_Nametag_C_OnMaxHealthChanged::InMaxHealth' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.OnHealthChanged
// 0x0004 (0x0004 - 0x0000)
struct W_Nametag_C_OnHealthChanged final
{
public:
	float                                         InHealth;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_OnHealthChanged) == 0x000004, "Wrong alignment on W_Nametag_C_OnHealthChanged");
static_assert(sizeof(W_Nametag_C_OnHealthChanged) == 0x000004, "Wrong size on W_Nametag_C_OnHealthChanged");
static_assert(offsetof(W_Nametag_C_OnHealthChanged, InHealth) == 0x000000, "Member 'W_Nametag_C_OnHealthChanged::InHealth' has a wrong offset!");

// Function W_Nametag.W_Nametag_C.ExecuteUbergraph_W_Nametag
// 0x0128 (0x0128 - 0x0000)
struct W_Nametag_C_ExecuteUbergraph_W_Nametag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InName;                               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InHealth;                             // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	float                                         K2Node_Event_InMaxHealth;                          // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInShieldActive;                      // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InPoise_1;                            // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InPoise;                              // 0x006C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InPower_1;                            // 0x0074(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InPower;                              // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_2;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_2;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_3;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_2;      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_3;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_3;      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Nametag_C_ExecuteUbergraph_W_Nametag) == 0x000008, "Wrong alignment on W_Nametag_C_ExecuteUbergraph_W_Nametag");
static_assert(sizeof(W_Nametag_C_ExecuteUbergraph_W_Nametag) == 0x000128, "Wrong size on W_Nametag_C_ExecuteUbergraph_W_Nametag");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, EntryPoint) == 0x000000, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_byte_Variable) == 0x000004, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_bool_Variable) == 0x000005, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_byte_Variable_1) == 0x000006, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_byte_Variable_2) == 0x000007, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_bool_Variable_1) == 0x000008, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_byte_Variable_3) == 0x000009, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_byte_Variable_4) == 0x00000A, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InName) == 0x000010, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InHealth) == 0x000020, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InHealth' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InMaxHealth) == 0x000040, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InMaxHealth' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000044, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000045, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_bInShieldActive) == 0x000050, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_bInShieldActive' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Select_Default) == 0x000060, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InPoise_1) == 0x000064, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InPoise_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_byte_Variable_5) == 0x000069, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InPoise) == 0x00006C, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InPoise' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, Temp_bool_Variable_2) == 0x000070, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000071, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Select_Default_1) == 0x000072, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Select_Default_2) == 0x000073, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InPower_1) == 0x000074, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InPower_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, K2Node_Event_InPower) == 0x000084, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::K2Node_Event_InPower' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000090, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000A0, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x0000A8, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x0000B8, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0000C0, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0000C8, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x0000D0, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0000E0, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_A_ImplicitCast_2) == 0x0000E8, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1) == 0x0000F0, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_B_ImplicitCast_2) == 0x0000F8, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_A_ImplicitCast_3) == 0x000100, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_SetPercent_InPercent_ImplicitCast_2) == 0x000108, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_SetPercent_InPercent_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x000110, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_Divide_DoubleDouble_B_ImplicitCast_3) == 0x000118, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_Divide_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_Nametag_C_ExecuteUbergraph_W_Nametag, CallFunc_SetPercent_InPercent_ImplicitCast_3) == 0x000120, "Member 'W_Nametag_C_ExecuteUbergraph_W_Nametag::CallFunc_SetPercent_InPercent_ImplicitCast_3' has a wrong offset!");

}

