#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WarningNotification

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_WarningNotificationState_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_WarningNotification.W_WarningNotification_C.Stop Pulse Animation
// 0x0001 (0x0001 - 0x0000)
struct W_WarningNotification_C_Stop_Pulse_Animation final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_Stop_Pulse_Animation) == 0x000001, "Wrong alignment on W_WarningNotification_C_Stop_Pulse_Animation");
static_assert(sizeof(W_WarningNotification_C_Stop_Pulse_Animation) == 0x000001, "Wrong size on W_WarningNotification_C_Stop_Pulse_Animation");
static_assert(offsetof(W_WarningNotification_C_Stop_Pulse_Animation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'W_WarningNotification_C_Stop_Pulse_Animation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.ShowAnim_SetText
// 0x0018 (0x0018 - 0x0000)
struct W_WarningNotification_C_ShowAnim_SetText final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_WarningNotification_C_ShowAnim_SetText) == 0x000008, "Wrong alignment on W_WarningNotification_C_ShowAnim_SetText");
static_assert(sizeof(W_WarningNotification_C_ShowAnim_SetText) == 0x000018, "Wrong size on W_WarningNotification_C_ShowAnim_SetText");
static_assert(offsetof(W_WarningNotification_C_ShowAnim_SetText, MessageText) == 0x000000, "Member 'W_WarningNotification_C_ShowAnim_SetText::MessageText' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.Show Outline Glow
// 0x0005 (0x0005 - 0x0000)
struct W_WarningNotification_C_Show_Outline_Glow final
{
public:
	bool                                          Should_Show;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_Show_Outline_Glow) == 0x000001, "Wrong alignment on W_WarningNotification_C_Show_Outline_Glow");
static_assert(sizeof(W_WarningNotification_C_Show_Outline_Glow) == 0x000005, "Wrong size on W_WarningNotification_C_Show_Outline_Glow");
static_assert(offsetof(W_WarningNotification_C_Show_Outline_Glow, Should_Show) == 0x000000, "Member 'W_WarningNotification_C_Show_Outline_Glow::Should_Show' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Show_Outline_Glow, Temp_bool_Variable) == 0x000001, "Member 'W_WarningNotification_C_Show_Outline_Glow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Show_Outline_Glow, Temp_byte_Variable) == 0x000002, "Member 'W_WarningNotification_C_Show_Outline_Glow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Show_Outline_Glow, Temp_byte_Variable_1) == 0x000003, "Member 'W_WarningNotification_C_Show_Outline_Glow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Show_Outline_Glow, K2Node_Select_Default) == 0x000004, "Member 'W_WarningNotification_C_Show_Outline_Glow::K2Node_Select_Default' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.Set Text
// 0x0018 (0x0018 - 0x0000)
struct W_WarningNotification_C_Set_Text final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_WarningNotification_C_Set_Text) == 0x000008, "Wrong alignment on W_WarningNotification_C_Set_Text");
static_assert(sizeof(W_WarningNotification_C_Set_Text) == 0x000018, "Wrong size on W_WarningNotification_C_Set_Text");
static_assert(offsetof(W_WarningNotification_C_Set_Text, InText) == 0x000000, "Member 'W_WarningNotification_C_Set_Text::InText' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.Set State
// 0x01E8 (0x01E8 - 0x0000)
struct W_WarningNotification_C_Set_State final
{
public:
	E_WarningNotificationState                    Warning_State;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WarningNotificationState                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WarningNotificationState                    Temp_byte_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WarningNotificationState                    Temp_byte_Variable_2;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WarningNotificationState                    Temp_byte_Variable_3;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WarningNotificationState                    Temp_byte_Variable_4;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WarningNotificationState                    Temp_byte_Variable_5;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_5;                           // 0x01B8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_Set_State) == 0x000008, "Wrong alignment on W_WarningNotification_C_Set_State");
static_assert(sizeof(W_WarningNotification_C_Set_State) == 0x0001E8, "Wrong size on W_WarningNotification_C_Set_State");
static_assert(offsetof(W_WarningNotification_C_Set_State, Warning_State) == 0x000000, "Member 'W_WarningNotification_C_Set_State::Warning_State' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_byte_Variable) == 0x000001, "Member 'W_WarningNotification_C_Set_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_WarningNotification_C_Set_State::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable) == 0x000004, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'W_WarningNotification_C_Set_State::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_1) == 0x000024, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_2) == 0x000034, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_3) == 0x000044, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_byte_Variable_1) == 0x000054, "Member 'W_WarningNotification_C_Set_State::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_4) == 0x000058, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_5) == 0x000068, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_6) == 0x000078, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_7) == 0x000088, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_byte_Variable_2) == 0x000098, "Member 'W_WarningNotification_C_Set_State::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_8) == 0x00009C, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_9) == 0x0000AC, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_10) == 0x0000BC, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_11) == 0x0000CC, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_byte_Variable_3) == 0x0000DC, "Member 'W_WarningNotification_C_Set_State::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_12) == 0x0000E0, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_13) == 0x0000F0, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_14) == 0x000100, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_15) == 0x000110, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_byte_Variable_4) == 0x000120, "Member 'W_WarningNotification_C_Set_State::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_byte_Variable_5) == 0x000121, "Member 'W_WarningNotification_C_Set_State::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_16) == 0x000124, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_17) == 0x000134, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_18) == 0x000144, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, Temp_struct_Variable_19) == 0x000154, "Member 'W_WarningNotification_C_Set_State::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, K2Node_Select_Default) == 0x000164, "Member 'W_WarningNotification_C_Set_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, K2Node_Select_Default_1) == 0x000174, "Member 'W_WarningNotification_C_Set_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, K2Node_Select_Default_2) == 0x000184, "Member 'W_WarningNotification_C_Set_State::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, K2Node_Select_Default_3) == 0x000194, "Member 'W_WarningNotification_C_Set_State::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, K2Node_Select_Default_4) == 0x0001A4, "Member 'W_WarningNotification_C_Set_State::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Set_State, K2Node_Select_Default_5) == 0x0001B8, "Member 'W_WarningNotification_C_Set_State::K2Node_Select_Default_5' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WarningNotification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_PreConstruct) == 0x000001, "Wrong alignment on W_WarningNotification_C_PreConstruct");
static_assert(sizeof(W_WarningNotification_C_PreConstruct) == 0x000001, "Wrong size on W_WarningNotification_C_PreConstruct");
static_assert(offsetof(W_WarningNotification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WarningNotification_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.Play Show Animation
// 0x0020 (0x0020 - 0x0000)
struct W_WarningNotification_C_Play_Show_Animation final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_Play_Show_Animation) == 0x000008, "Wrong alignment on W_WarningNotification_C_Play_Show_Animation");
static_assert(sizeof(W_WarningNotification_C_Play_Show_Animation) == 0x000020, "Wrong size on W_WarningNotification_C_Play_Show_Animation");
static_assert(offsetof(W_WarningNotification_C_Play_Show_Animation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'W_WarningNotification_C_Play_Show_Animation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Show_Animation, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_WarningNotification_C_Play_Show_Animation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Show_Animation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'W_WarningNotification_C_Play_Show_Animation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Show_Animation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'W_WarningNotification_C_Play_Show_Animation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.Play Hide Animation
// 0x0040 (0x0040 - 0x0000)
struct W_WarningNotification_C_Play_Hide_Animation final
{
public:
	bool                                          Is_Instant_Transition;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_1_ImplicitCast;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_Play_Hide_Animation) == 0x000008, "Wrong alignment on W_WarningNotification_C_Play_Hide_Animation");
static_assert(sizeof(W_WarningNotification_C_Play_Hide_Animation) == 0x000040, "Wrong size on W_WarningNotification_C_Play_Hide_Animation");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, Is_Instant_Transition) == 0x000000, "Member 'W_WarningNotification_C_Play_Hide_Animation::Is_Instant_Transition' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, Temp_real_Variable) == 0x000004, "Member 'W_WarningNotification_C_Play_Hide_Animation::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, Temp_bool_Variable) == 0x000008, "Member 'W_WarningNotification_C_Play_Hide_Animation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, CallFunc_GetEndTime_ReturnValue) == 0x00000C, "Member 'W_WarningNotification_C_Play_Hide_Animation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_WarningNotification_C_Play_Hide_Animation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, K2Node_Select_Default) == 0x000018, "Member 'W_WarningNotification_C_Play_Hide_Animation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'W_WarningNotification_C_Play_Hide_Animation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000028, "Member 'W_WarningNotification_C_Play_Hide_Animation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000029, "Member 'W_WarningNotification_C_Play_Hide_Animation::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'W_WarningNotification_C_Play_Hide_Animation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Hide_Animation, K2Node_Select_Option_1_ImplicitCast) == 0x000038, "Member 'W_WarningNotification_C_Play_Hide_Animation::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.Play Delayed Show Animation
// 0x0010 (0x0010 - 0x0000)
struct W_WarningNotification_C_Play_Delayed_Show_Animation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_Play_Delayed_Show_Animation) == 0x000008, "Wrong alignment on W_WarningNotification_C_Play_Delayed_Show_Animation");
static_assert(sizeof(W_WarningNotification_C_Play_Delayed_Show_Animation) == 0x000010, "Wrong size on W_WarningNotification_C_Play_Delayed_Show_Animation");
static_assert(offsetof(W_WarningNotification_C_Play_Delayed_Show_Animation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'W_WarningNotification_C_Play_Delayed_Show_Animation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_Play_Delayed_Show_Animation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'W_WarningNotification_C_Play_Delayed_Show_Animation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct W_WarningNotification_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_OnAnimationFinished) == 0x000008, "Wrong alignment on W_WarningNotification_C_OnAnimationFinished");
static_assert(sizeof(W_WarningNotification_C_OnAnimationFinished) == 0x000008, "Wrong size on W_WarningNotification_C_OnAnimationFinished");
static_assert(offsetof(W_WarningNotification_C_OnAnimationFinished, Animation) == 0x000000, "Member 'W_WarningNotification_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function W_WarningNotification.W_WarningNotification_C.ExecuteUbergraph_W_WarningNotification
// 0x0050 (0x0050 - 0x0000)
struct W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_MessageText;                    // 0x0008(0x0018)()
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification) == 0x000008, "Wrong alignment on W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification");
static_assert(sizeof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification) == 0x000050, "Wrong size on W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, EntryPoint) == 0x000000, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, K2Node_CustomEvent_MessageText) == 0x000008, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::K2Node_CustomEvent_MessageText' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, K2Node_Event_Animation) == 0x000020, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000038, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_GetRenderOpacity_ReturnValue) == 0x00003C, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000041, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, K2Node_Event_IsDesignTime) == 0x000042, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'W_WarningNotification_C_ExecuteUbergraph_W_WarningNotification::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

