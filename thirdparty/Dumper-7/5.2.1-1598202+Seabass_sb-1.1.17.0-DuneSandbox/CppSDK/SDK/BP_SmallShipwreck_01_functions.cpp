#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmallShipwreck_01

#include "Basic.hpp"

#include "BP_SmallShipwreck_01_classes.hpp"
#include "BP_SmallShipwreck_01_parameters.hpp"


namespace SDK
{

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Add Cuttable to Socket
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InSocketName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::Add_Cuttable_to_Socket(class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Add Cuttable to Socket");

	Params::BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket Parms{};

	Parms.InSocketName = InSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Add Lootcontainer to Socket
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InSocketName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::Add_Lootcontainer_to_Socket(class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Add Lootcontainer to Socket");

	Params::BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket Parms{};

	Parms.InSocketName = InSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.AddFireZoneToSocket
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::AddFireZoneToSocket(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "AddFireZoneToSocket");

	Params::BP_SmallShipwreck_01_C_AddFireZoneToSocket Parms{};

	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ApplyDamageOnServer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::ApplyDamageOnServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ApplyDamageOnServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ApplyShipVariation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VariationIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::ApplyShipVariation(int32 VariationIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ApplyShipVariation");

	Params::BP_SmallShipwreck_01_C_ApplyShipVariation Parms{};

	Parms.VariationIndex = VariationIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.AttractWorm
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::AttractWorm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "AttractWorm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.BP_OnSandwormCleanup
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FInstigatorInfo&           InInstigator                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// TSubclassOf<class UDuneDamageType>      DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::BP_OnSandwormCleanup(const struct FHitResult& HitResult, const struct FInstigatorInfo& InInstigator, TSubclassOf<class UDuneDamageType> DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "BP_OnSandwormCleanup");

	Params::BP_SmallShipwreck_01_C_BP_OnSandwormCleanup Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.InInstigator = std::move(InInstigator);
	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.CalcSlideDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MinDistane                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 SlideDistance_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::CalcSlideDistance(double MinDistane, double MaxDistance, double* SlideDistance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "CalcSlideDistance");

	Params::BP_SmallShipwreck_01_C_CalcSlideDistance Parms{};

	Parms.MinDistane = MinDistane;
	Parms.MaxDistance = MaxDistance;

	UObject::ProcessEvent(Func, &Parms);

	if (SlideDistance_0 != nullptr)
		*SlideDistance_0 = Parms.SlideDistance_0;
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.CleanupFires
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::CleanupFires()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "CleanupFires");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.CleanupLoot
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::CleanupLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "CleanupLoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.CrashProgressTick
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::CrashProgressTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "CrashProgressTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.DamageTick
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::DamageTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "DamageTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.DestroyTempMeshes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::DestroyTempMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "DestroyTempMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.EnableCollisions
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::EnableCollisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "EnableCollisions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ExecuteUbergraph_BP_SmallShipwreck_01
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::ExecuteUbergraph_BP_SmallShipwreck_01(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ExecuteUbergraph_BP_SmallShipwreck_01");

	Params::BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindAverageLocationAndNormal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TraceAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ConeDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxAvgHeightDif                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         AverageLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         AverageNormal                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::FindAverageLocationAndNormal(const struct FVector& StartLocation, int32 TraceAmount, const struct FVector& ConeDirection, double MaxAvgHeightDif, struct FVector* AverageLocation, struct FVector* AverageNormal, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FindAverageLocationAndNormal");

	Params::BP_SmallShipwreck_01_C_FindAverageLocationAndNormal Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.TraceAmount = TraceAmount;
	Parms.ConeDirection = std::move(ConeDirection);
	Parms.MaxAvgHeightDif = MaxAvgHeightDif;

	UObject::ProcessEvent(Func, &Parms);

	if (AverageLocation != nullptr)
		*AverageLocation = std::move(Parms.AverageLocation);

	if (AverageNormal != nullptr)
		*AverageNormal = std::move(Parms.AverageNormal);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindCollisionPointVFX
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Blocking_Hit                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Impact                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SmallShipwreck_01_C::FindCollisionPointVFX(bool* Blocking_Hit, struct FVector* Impact, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FindCollisionPointVFX");

	Params::BP_SmallShipwreck_01_C_FindCollisionPointVFX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Blocking_Hit != nullptr)
		*Blocking_Hit = Parms.Blocking_Hit;

	if (Impact != nullptr)
		*Impact = std::move(Parms.Impact);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindLandingLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   CheckLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         LocalLandingOffset                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::FindLandingLocation(const struct FVector& CheckLocation, struct FVector* LocalLandingOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FindLandingLocation");

	Params::BP_SmallShipwreck_01_C_FindLandingLocation Parms{};

	Parms.CheckLocation = std::move(CheckLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (LocalLandingOffset != nullptr)
		*LocalLandingOffset = std::move(Parms.LocalLandingOffset);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindRandLocationInRadius
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   CenterLoc                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Stream_InitialSeed                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult*                      OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SmallShipwreck_01_C::FindRandLocationInRadius(const struct FVector& CenterLoc, int32 Stream_InitialSeed, float Min, float Max, struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FindRandLocationInRadius");

	Params::BP_SmallShipwreck_01_C_FindRandLocationInRadius Parms{};

	Parms.CenterLoc = std::move(CenterLoc);
	Parms.Stream_InitialSeed = Stream_InitialSeed;
	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindSlideEndLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         EndLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::FindSlideEndLocation(const struct FVector& StartLocation, struct FVector* EndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FindSlideEndLocation");

	Params::BP_SmallShipwreck_01_C_FindSlideEndLocation Parms{};

	Parms.StartLocation = std::move(StartLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (EndLocation != nullptr)
		*EndLocation = std::move(Parms.EndLocation);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FX - DuringSlide
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::FX___DuringSlide(double Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FX - DuringSlide");

	Params::BP_SmallShipwreck_01_C_FX___DuringSlide Parms{};

	Parms.Velocity = Velocity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FX-AfterCrash
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::FX_AfterCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FX-AfterCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FX-OnCrash
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::FX_OnCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FX-OnCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FX-OnSlideEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::FX_OnSlideEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FX-OnSlideEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FX-OnVisible
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::FX_OnVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "FX-OnVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Get Random Point In Radius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::Get_Random_Point_In_Radius(double Radius, struct FVector* Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Get Random Point In Radius");

	Params::BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.GetLocationAlongCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCurveVector*                     Curve                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   InTime                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_SmallShipwreck_01_C::GetLocationAlongCurve(class UCurveVector* Curve, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "GetLocationAlongCurve");

	Params::BP_SmallShipwreck_01_C_GetLocationAlongCurve Parms{};

	Parms.Curve = Curve;
	Parms.InTime = InTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.GetRandomBreakpoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::GetRandomBreakpoint(double* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "GetRandomBreakpoint");

	Params::BP_SmallShipwreck_01_C_GetRandomBreakpoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.GetRandomShipVariation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  ShipVar                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::GetRandomShipVariation(int32* ShipVar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "GetRandomShipVariation");

	Params::BP_SmallShipwreck_01_C_GetRandomShipVariation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShipVar != nullptr)
		*ShipVar = Parms.ShipVar;
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Handle Variation and Mesh Loaded
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::Handle_Variation_and_Mesh_Loaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Handle Variation and Mesh Loaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Hitt Call Back
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSet<class AActor*>&              HitActors                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_SmallShipwreck_01_C::Hitt_Call_Back(const TSet<class AActor*>& HitActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Hitt Call Back");

	Params::BP_SmallShipwreck_01_C_Hitt_Call_Back Parms{};

	Parms.HitActors = std::move(HitActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.InitializeBreakawayArrays
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>&         Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_SmallShipwreck_01_C::InitializeBreakawayArrays(TArray<class USceneComponent*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "InitializeBreakawayArrays");

	Params::BP_SmallShipwreck_01_C_InitializeBreakawayArrays Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.InitializeCrashParameters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::InitializeCrashParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "InitializeCrashParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.LoadExtraMesh
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::LoadExtraMesh(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "LoadExtraMesh");

	Params::BP_SmallShipwreck_01_C_LoadExtraMesh Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.LoadMineable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::LoadMineable(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "LoadMineable");

	Params::BP_SmallShipwreck_01_C_LoadMineable Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.MulticastDestroyTempMeshes
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::MulticastDestroyTempMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "MulticastDestroyTempMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.On Slide Ended
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::On_Slide_Ended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "On Slide Ended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_0735E7E94A578E40F242EEB4174F34D4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::OnLoaded_0735E7E94A578E40F242EEB4174F34D4(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnLoaded_0735E7E94A578E40F242EEB4174F34D4");

	Params::BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_5FA132584DA282E10B914F97A1DD3210
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::OnLoaded_5FA132584DA282E10B914F97A1DD3210(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnLoaded_5FA132584DA282E10B914F97A1DD3210");

	Params::BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_6F1E45E44811A1BE323B6688BB831692
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::OnLoaded_6F1E45E44811A1BE323B6688BB831692(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnLoaded_6F1E45E44811A1BE323B6688BB831692");

	Params::BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB");

	Params::BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_DCD94DAE4432766CB0A73EA88F67F023
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::OnLoaded_DCD94DAE4432766CB0A73EA88F67F023(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnLoaded_DCD94DAE4432766CB0A73EA88F67F023");

	Params::BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnRep_CrashProgress
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::OnRep_CrashProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnRep_CrashProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnRep_ReplicatedState
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::OnRep_ReplicatedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnRep_ReplicatedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnShipWreckLanded
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::OnShipWreckLanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "OnShipWreckLanded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.PlaceShipComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::PlaceShipComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "PlaceShipComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SmallShipwreck_01_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_SmallShipwreck_01_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.SetFinalPositionAndRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::SetFinalPositionAndRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "SetFinalPositionAndRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipVariationTester
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipVariationTester()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipVariationTester");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckMove-Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckMove_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckMove-Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckMove-Timeline__PreCrashVFX__EventFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckMove_Timeline__PreCrashVFX__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckMove-Timeline__PreCrashVFX__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckMove-Timeline__SkyExplosion__EventFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckMove_Timeline__SkyExplosion__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckMove-Timeline__SkyExplosion__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckMove-Timeline__StartFindingCollisionPointVFX__EventFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckMove_Timeline__StartFindingCollisionPointVFX__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckMove-Timeline__StartFindingCollisionPointVFX__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckMove-Timeline__ToggleRender__EventFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckMove_Timeline__ToggleRender__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckMove-Timeline__ToggleRender__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckMove-Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckMove_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckMove-Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckSlide-Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckSlide_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckSlide-Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipwreckSlide-Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_SmallShipwreck_01_C::ShipwreckSlide_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "ShipwreckSlide-Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Spawn Loot
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::Spawn_Loot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Spawn Loot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.SpawnFireZones
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::SpawnFireZones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "SpawnFireZones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.StartCountDownToAttractWorm
// (BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::StartCountDownToAttractWorm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "StartCountDownToAttractWorm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Try Spawn Sandmounds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::Try_Spawn_Sandmounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "Try Spawn Sandmounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.UnhideIfHidden
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::UnhideIfHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "UnhideIfHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.UpdateCrashProgressTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ReplicationFrequency                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bIsFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SmallShipwreck_01_C::UpdateCrashProgressTick(double ReplicationFrequency, bool* bIsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "UpdateCrashProgressTick");

	Params::BP_SmallShipwreck_01_C_UpdateCrashProgressTick Parms{};

	Parms.ReplicationFrequency = ReplicationFrequency;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsFinished != nullptr)
		*bIsFinished = Parms.bIsFinished;
}


// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.UpdateSocketTransformsVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SmallShipwreck_01_C::UpdateSocketTransformsVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmallShipwreck_01_C", "UpdateSocketTransformsVFX");

	UObject::ProcessEvent(Func, nullptr);
}

}

