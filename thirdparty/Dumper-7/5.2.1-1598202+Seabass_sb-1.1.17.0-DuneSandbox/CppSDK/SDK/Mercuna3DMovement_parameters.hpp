#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mercuna3DMovement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mercuna3DMovement_structs.hpp"


namespace SDK::Params
{

// Function Mercuna3DMovement.Mercuna3DMovementComponent.AddImpulse
// 0x0018 (0x0018 - 0x0000)
struct Mercuna3DMovementComponent_AddImpulse final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Mercuna3DMovementComponent_AddImpulse) == 0x000008, "Wrong alignment on Mercuna3DMovementComponent_AddImpulse");
static_assert(sizeof(Mercuna3DMovementComponent_AddImpulse) == 0x000018, "Wrong size on Mercuna3DMovementComponent_AddImpulse");
static_assert(offsetof(Mercuna3DMovementComponent_AddImpulse, Impulse) == 0x000000, "Member 'Mercuna3DMovementComponent_AddImpulse::Impulse' has a wrong offset!");

// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetAngularVelocity
// 0x0018 (0x0018 - 0x0000)
struct Mercuna3DMovementComponent_SetAngularVelocity final
{
public:
	struct FVector                                NewAngVel;                                         // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Mercuna3DMovementComponent_SetAngularVelocity) == 0x000008, "Wrong alignment on Mercuna3DMovementComponent_SetAngularVelocity");
static_assert(sizeof(Mercuna3DMovementComponent_SetAngularVelocity) == 0x000018, "Wrong size on Mercuna3DMovementComponent_SetAngularVelocity");
static_assert(offsetof(Mercuna3DMovementComponent_SetAngularVelocity, NewAngVel) == 0x000000, "Member 'Mercuna3DMovementComponent_SetAngularVelocity::NewAngVel' has a wrong offset!");

// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetMovementProperties
// 0x002C (0x002C - 0x0000)
struct Mercuna3DMovementComponent_SetMovementProperties final
{
public:
	struct FMercuna3DMovementProperties           NewMovementProperties;                             // 0x0000(0x002C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Mercuna3DMovementComponent_SetMovementProperties) == 0x000004, "Wrong alignment on Mercuna3DMovementComponent_SetMovementProperties");
static_assert(sizeof(Mercuna3DMovementComponent_SetMovementProperties) == 0x00002C, "Wrong size on Mercuna3DMovementComponent_SetMovementProperties");
static_assert(offsetof(Mercuna3DMovementComponent_SetMovementProperties, NewMovementProperties) == 0x000000, "Member 'Mercuna3DMovementComponent_SetMovementProperties::NewMovementProperties' has a wrong offset!");

// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetVelocity
// 0x0018 (0x0018 - 0x0000)
struct Mercuna3DMovementComponent_SetVelocity final
{
public:
	struct FVector                                NewVelocity;                                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Mercuna3DMovementComponent_SetVelocity) == 0x000008, "Wrong alignment on Mercuna3DMovementComponent_SetVelocity");
static_assert(sizeof(Mercuna3DMovementComponent_SetVelocity) == 0x000018, "Wrong size on Mercuna3DMovementComponent_SetVelocity");
static_assert(offsetof(Mercuna3DMovementComponent_SetVelocity, NewVelocity) == 0x000000, "Member 'Mercuna3DMovementComponent_SetVelocity::NewVelocity' has a wrong offset!");

// Function Mercuna3DMovement.Mercuna3DMovementComponent.GetLocalRotationRate
// 0x0018 (0x0018 - 0x0000)
struct Mercuna3DMovementComponent_GetLocalRotationRate final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Mercuna3DMovementComponent_GetLocalRotationRate) == 0x000008, "Wrong alignment on Mercuna3DMovementComponent_GetLocalRotationRate");
static_assert(sizeof(Mercuna3DMovementComponent_GetLocalRotationRate) == 0x000018, "Wrong size on Mercuna3DMovementComponent_GetLocalRotationRate");
static_assert(offsetof(Mercuna3DMovementComponent_GetLocalRotationRate, ReturnValue) == 0x000000, "Member 'Mercuna3DMovementComponent_GetLocalRotationRate::ReturnValue' has a wrong offset!");

// Function Mercuna3DMovement.Mercuna3DMovementComponent.GetLocalVelocity
// 0x0018 (0x0018 - 0x0000)
struct Mercuna3DMovementComponent_GetLocalVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Mercuna3DMovementComponent_GetLocalVelocity) == 0x000008, "Wrong alignment on Mercuna3DMovementComponent_GetLocalVelocity");
static_assert(sizeof(Mercuna3DMovementComponent_GetLocalVelocity) == 0x000018, "Wrong size on Mercuna3DMovementComponent_GetLocalVelocity");
static_assert(offsetof(Mercuna3DMovementComponent_GetLocalVelocity, ReturnValue) == 0x000000, "Member 'Mercuna3DMovementComponent_GetLocalVelocity::ReturnValue' has a wrong offset!");

}

