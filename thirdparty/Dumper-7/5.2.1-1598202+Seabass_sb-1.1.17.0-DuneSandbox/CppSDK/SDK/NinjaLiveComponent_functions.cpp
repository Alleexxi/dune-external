#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NinjaLiveComponent

#include "Basic.hpp"

#include "NinjaLiveComponent_classes.hpp"
#include "NinjaLiveComponent_parameters.hpp"


namespace SDK
{

// Function NinjaLiveComponent.NinjaLiveComponent_C.Clear
// (BlueprintCallable, BlueprintEvent)

void UNinjaLiveComponent_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.ComponentRePlayEvent2
// (BlueprintCallable, BlueprintEvent)

void UNinjaLiveComponent_C::ComponentRePlayEvent2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "ComponentRePlayEvent2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.ExecuteUbergraph_NinjaLiveComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::ExecuteUbergraph_NinjaLiveComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "ExecuteUbergraph_NinjaLiveComponent");

	Params::NinjaLiveComponent_C_ExecuteUbergraph_NinjaLiveComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.GetImprintCaptureComponentRecursive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImprintCaptureComponent**        ImprintCaptureComponent                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::GetImprintCaptureComponentRecursive(class UImprintCaptureComponent** ImprintCaptureComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "GetImprintCaptureComponentRecursive");

	Params::NinjaLiveComponent_C_GetImprintCaptureComponentRecursive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ImprintCaptureComponent != nullptr)
		*ImprintCaptureComponent = Parms.ImprintCaptureComponent;
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.LiveActivation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeTimeOfBrush                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeTimeOfCanvas                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::LiveActivation(class FName ParamName, double FadeTimeOfBrush, double FadeTimeOfCanvas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "LiveActivation");

	Params::NinjaLiveComponent_C_LiveActivation Parms{};

	Parms.ParamName = ParamName;
	Parms.FadeTimeOfBrush = FadeTimeOfBrush;
	Parms.FadeTimeOfCanvas = FadeTimeOfCanvas;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.LiveDebug
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::LiveDebug(class FName ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "LiveDebug");

	Params::NinjaLiveComponent_C_LiveDebug Parms{};

	Parms.ParamName = ParamName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.LiveFluidParams
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BrushSize_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::LiveFluidParams(double BrushSize_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "LiveFluidParams");

	Params::NinjaLiveComponent_C_LiveFluidParams Parms{};

	Parms.BrushSize_0 = BrushSize_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UNinjaLiveComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "ReceiveEndPlay");

	Params::NinjaLiveComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNinjaLiveComponent_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "ReceiveTick");

	Params::NinjaLiveComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.Replay
// (BlueprintCallable, BlueprintEvent)

void UNinjaLiveComponent_C::Replay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "Replay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NinjaLiveComponent.NinjaLiveComponent_C.Shutdown
// (BlueprintCallable, BlueprintEvent)

void UNinjaLiveComponent_C::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NinjaLiveComponent_C", "Shutdown");

	UObject::ProcessEvent(Func, nullptr);
}

}

