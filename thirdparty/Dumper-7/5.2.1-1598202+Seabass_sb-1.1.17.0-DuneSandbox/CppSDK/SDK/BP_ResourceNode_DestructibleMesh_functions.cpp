#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourceNode_DestructibleMesh

#include "Basic.hpp"

#include "BP_ResourceNode_DestructibleMesh_classes.hpp"
#include "BP_ResourceNode_DestructibleMesh_parameters.hpp"


namespace SDK
{

// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.BPFactureAtImpactPoint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FVector&                   ImpactPoint                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              bHitFractureLine                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResourceNode_DestructibleMesh_C::BPFactureAtImpactPoint(const struct FVector& ImpactPoint, const bool bHitFractureLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "BPFactureAtImpactPoint");

	Params::BP_ResourceNode_DestructibleMesh_C_BPFactureAtImpactPoint Parms{};

	Parms.ImpactPoint = std::move(ImpactPoint);
	Parms.bHitFractureLine = bHitFractureLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.BPFractureAll
// (Event, Protected, BlueprintEvent)

void ABP_ResourceNode_DestructibleMesh_C::BPFractureAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "BPFractureAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.BPTryInitVisualAssets
// (Event, Protected, BlueprintEvent)

void ABP_ResourceNode_DestructibleMesh_C::BPTryInitVisualAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "BPTryInitVisualAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.ExecuteUbergraph_BP_ResourceNode_DestructibleMesh
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResourceNode_DestructibleMesh_C::ExecuteUbergraph_BP_ResourceNode_DestructibleMesh(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "ExecuteUbergraph_BP_ResourceNode_DestructibleMesh");

	Params::BP_ResourceNode_DestructibleMesh_C_ExecuteUbergraph_BP_ResourceNode_DestructibleMesh Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.GetComponentsToReactToScan
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USceneComponent*>*         SceneComponents                                        (Parm, OutParm, ContainsInstancedReference)

void ABP_ResourceNode_DestructibleMesh_C::GetComponentsToReactToScan(TArray<class USceneComponent*>* SceneComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "GetComponentsToReactToScan");

	Params::BP_ResourceNode_DestructibleMesh_C_GetComponentsToReactToScan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SceneComponents != nullptr)
		*SceneComponents = std::move(Parms.SceneComponents);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.InitDestructibleComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResourceNode_DestructibleMesh_C::InitDestructibleComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "InitDestructibleComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.InitHitSystem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResourceNode_DestructibleMesh_C::InitHitSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "InitHitSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.InitMeltMeshComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResourceNode_DestructibleMesh_C::InitMeltMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "InitMeltMeshComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ResourceNode_DestructibleMesh_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceNode_DestructibleMesh_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

