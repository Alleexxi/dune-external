#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_BaseLocomotion_Interface

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CombatLocomotionAirPoses
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses final
{
public:
	struct FPoseLink                              CombatLocomotionAirPoses_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses, CombatLocomotionAirPoses_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CombatLocomotionAirPoses::CombatLocomotionAirPoses_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CombatLocomotionCrouchPoses
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses final
{
public:
	struct FPoseLink                              CombatLocomotionCrouchPoses_0;                     // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses, CombatLocomotionCrouchPoses_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CombatLocomotionCrouchPoses::CombatLocomotionCrouchPoses_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CombatLocomotionStandPoses
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses final
{
public:
	struct FPoseLink                              CombatLocomotionStandPoses_0;                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses, CombatLocomotionStandPoses_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CombatLocomotionStandPoses::CombatLocomotionStandPoses_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CombatLocomotionSuspensorPoses
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses final
{
public:
	struct FPoseLink                              CombatLocomotionSuspensorPoses_0;                  // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses, CombatLocomotionSuspensorPoses_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CombatLocomotionSuspensorPoses::CombatLocomotionSuspensorPoses_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CrouchingIdle
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CrouchingIdle final
{
public:
	struct FPoseLink                              CrouchingIdle_0;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CrouchingIdle) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CrouchingIdle");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CrouchingIdle) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CrouchingIdle");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CrouchingIdle, CrouchingIdle_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CrouchingIdle::CrouchingIdle_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CrouchingMove
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CrouchingMove final
{
public:
	struct FPoseLink                              CrouchingMove_0;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CrouchingMove) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CrouchingMove");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CrouchingMove) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CrouchingMove");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CrouchingMove, CrouchingMove_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CrouchingMove::CrouchingMove_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CrouchingStartMoveOmniDirectional
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional final
{
public:
	struct FPoseLink                              CrouchingStartMoveOmniDirectional_0;               // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional, CrouchingStartMoveOmniDirectional_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CrouchingStartMoveOmniDirectional::CrouchingStartMoveOmniDirectional_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CrouchingStopNoWeapon
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon final
{
public:
	struct FPoseLink                              CrouchingStopNoWeapon_0;                           // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon, CrouchingStopNoWeapon_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CrouchingStopNoWeapon::CrouchingStopNoWeapon_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CrouchingStopWeapon
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CrouchingStopWeapon final
{
public:
	struct FPoseLink                              CrouchingStopWeapon_0;                             // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CrouchingStopWeapon) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CrouchingStopWeapon");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CrouchingStopWeapon) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CrouchingStopWeapon");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CrouchingStopWeapon, CrouchingStopWeapon_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CrouchingStopWeapon::CrouchingStopWeapon_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.CrouchToStanding
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_CrouchToStanding final
{
public:
	struct FPoseLink                              CrouchToStanding_0;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_CrouchToStanding) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_CrouchToStanding");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_CrouchToStanding) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_CrouchToStanding");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_CrouchToStanding, CrouchToStanding_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_CrouchToStanding::CrouchToStanding_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.LayerJumpApex
// 0x0020 (0x0020 - 0x0000)
struct AB_BaseLocomotion_Interface_C_LayerJumpApex final
{
public:
	struct FPoseLink                              JumpApex_GroundLocomotion;                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LayerJumpApex_0;                                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_LayerJumpApex) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_LayerJumpApex");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_LayerJumpApex) == 0x000020, "Wrong size on AB_BaseLocomotion_Interface_C_LayerJumpApex");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_LayerJumpApex, JumpApex_GroundLocomotion) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_LayerJumpApex::JumpApex_GroundLocomotion' has a wrong offset!");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_LayerJumpApex, LayerJumpApex_0) == 0x000010, "Member 'AB_BaseLocomotion_Interface_C_LayerJumpApex::LayerJumpApex_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.LayerJumpIn
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_LayerJumpIn final
{
public:
	struct FPoseLink                              LayerJumpIn_0;                                     // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_LayerJumpIn) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_LayerJumpIn");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_LayerJumpIn) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_LayerJumpIn");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_LayerJumpIn, LayerJumpIn_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_LayerJumpIn::LayerJumpIn_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.LayerJumpOut
// 0x0020 (0x0020 - 0x0000)
struct AB_BaseLocomotion_Interface_C_LayerJumpOut final
{
public:
	struct FPoseLink                              JumpOut_GroundLocomotion;                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LayerJumpOut_0;                                    // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_LayerJumpOut) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_LayerJumpOut");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_LayerJumpOut) == 0x000020, "Wrong size on AB_BaseLocomotion_Interface_C_LayerJumpOut");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_LayerJumpOut, JumpOut_GroundLocomotion) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_LayerJumpOut::JumpOut_GroundLocomotion' has a wrong offset!");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_LayerJumpOut, LayerJumpOut_0) == 0x000010, "Member 'AB_BaseLocomotion_Interface_C_LayerJumpOut::LayerJumpOut_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingIdle
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingIdle final
{
public:
	struct FPoseLink                              StandingIdle_0;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingIdle) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingIdle");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingIdle) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingIdle");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingIdle, StandingIdle_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingIdle::StandingIdle_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingMove
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingMove final
{
public:
	struct FPoseLink                              StandingMove_0;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingMove) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingMove");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingMove) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingMove");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingMove, StandingMove_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingMove::StandingMove_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingStartMoveDirectional
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional final
{
public:
	struct FPoseLink                              StandingStartMoveDirectional_0;                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional, StandingStartMoveDirectional_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingStartMoveDirectional::StandingStartMoveDirectional_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingStartMoveOmni
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingStartMoveOmni final
{
public:
	struct FPoseLink                              StandingStartMoveOmni_0;                           // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingStartMoveOmni) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingStartMoveOmni");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingStartMoveOmni) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingStartMoveOmni");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingStartMoveOmni, StandingStartMoveOmni_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingStartMoveOmni::StandingStartMoveOmni_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingStopNoWeapon
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingStopNoWeapon final
{
public:
	struct FPoseLink                              StandingStopNoWeapon_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingStopNoWeapon) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingStopNoWeapon");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingStopNoWeapon) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingStopNoWeapon");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingStopNoWeapon, StandingStopNoWeapon_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingStopNoWeapon::StandingStopNoWeapon_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingStopWeapon
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingStopWeapon final
{
public:
	struct FPoseLink                              StandingStopWeapon_0;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingStopWeapon) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingStopWeapon");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingStopWeapon) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingStopWeapon");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingStopWeapon, StandingStopWeapon_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingStopWeapon::StandingStopWeapon_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StandingToCrouch
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StandingToCrouch final
{
public:
	struct FPoseLink                              StandingToCrouch_0;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StandingToCrouch) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StandingToCrouch");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StandingToCrouch) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StandingToCrouch");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StandingToCrouch, StandingToCrouch_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StandingToCrouch::StandingToCrouch_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.Stunned
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_Stunned final
{
public:
	struct FPoseLink                              Stunned_0;                                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_Stunned) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_Stunned");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_Stunned) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_Stunned");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_Stunned, Stunned_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_Stunned::Stunned_0' has a wrong offset!");

// Function AB_BaseLocomotion_Interface.AB_BaseLocomotion_Interface_C.StunnedOut
// 0x0010 (0x0010 - 0x0000)
struct AB_BaseLocomotion_Interface_C_StunnedOut final
{
public:
	struct FPoseLink                              StunnedOut_0;                                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_BaseLocomotion_Interface_C_StunnedOut) == 0x000008, "Wrong alignment on AB_BaseLocomotion_Interface_C_StunnedOut");
static_assert(sizeof(AB_BaseLocomotion_Interface_C_StunnedOut) == 0x000010, "Wrong size on AB_BaseLocomotion_Interface_C_StunnedOut");
static_assert(offsetof(AB_BaseLocomotion_Interface_C_StunnedOut, StunnedOut_0) == 0x000000, "Member 'AB_BaseLocomotion_Interface_C_StunnedOut::StunnedOut_0' has a wrong offset!");

}

