#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AltarCenser_Enter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AltarCenser_Enter.BP_AltarCenser_Enter_C
// 0x00A8 (0x0400 - 0x0358)
class ABP_AltarCenser_Enter_C : public AAltarCenserBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDuneAudioEmitterComponent*             DuneAudioEmitter;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       VisualSphereTrigger;                               // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereSequenceLoader;                              // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableBaseComponent*             InteractableBase;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      AirParticles;                                      // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_SpiceMotes_AltarCenser;                         // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent1;                              // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Env_Prop_Frem_Altar_Slider_Right;               // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Env_Prop_Frem_Altar_Slider_Left;                // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Env_Prop_Frem_Altar_SpiceBowl;                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RevealSpice_LightIntensity_EE761F0B434BFA58B219428830EDA71A; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevealSpice_SpiceBowlAlpha_EE761F0B434BFA58B219428830EDA71A; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RevealSpice_RevealAlpha_EE761F0B434BFA58B219428830EDA71A; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RevealSpice__Direction_EE761F0B434BFA58B219428830EDA71A; // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RevealSpice;                                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class ADuneCharacter* Player, class UInteraction* Interaction)> OnInteraction; // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        AltarLightIntensity;                               // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Reveal_Playrate;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AIrParticlesTarget;                                // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AirParticlesCurrent;                               // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteract;                                       // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_AltarCenser_Enter_InteractableBase_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature(class ADuneCharacter* DuneCharacter, const class UInteraction* Interaction);
	void BndEvt__BP_AltarCenser_Enter_Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_AltarCenser_Enter_VisualSphereTrigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CanInteractWithAltar(class ADuneCharacter* DuneCharacter, bool* CanInteract_0);
	void ExecuteUbergraph_BP_AltarCenser_Enter(int32 EntryPoint);
	void RevealSpice__FinishedFunc();
	void RevealSpice__FXToggle__EventFunc();
	void RevealSpice__SFXTrack__EventFunc();
	void RevealSpice__UpdateFunc();
	void UpdatePlayrate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AltarCenser_Enter_C">();
	}
	static class ABP_AltarCenser_Enter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AltarCenser_Enter_C>();
	}
};
static_assert(alignof(ABP_AltarCenser_Enter_C) == 0x000008, "Wrong alignment on ABP_AltarCenser_Enter_C");
static_assert(sizeof(ABP_AltarCenser_Enter_C) == 0x000400, "Wrong size on ABP_AltarCenser_Enter_C");
static_assert(offsetof(ABP_AltarCenser_Enter_C, UberGraphFrame) == 0x000358, "Member 'ABP_AltarCenser_Enter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, DuneAudioEmitter) == 0x000360, "Member 'ABP_AltarCenser_Enter_C::DuneAudioEmitter' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, VisualSphereTrigger) == 0x000368, "Member 'ABP_AltarCenser_Enter_C::VisualSphereTrigger' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, SphereSequenceLoader) == 0x000370, "Member 'ABP_AltarCenser_Enter_C::SphereSequenceLoader' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, InteractableBase) == 0x000378, "Member 'ABP_AltarCenser_Enter_C::InteractableBase' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, AirParticles) == 0x000380, "Member 'ABP_AltarCenser_Enter_C::AirParticles' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, NS_SpiceMotes_AltarCenser) == 0x000388, "Member 'ABP_AltarCenser_Enter_C::NS_SpiceMotes_AltarCenser' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, StaticMeshComponent1) == 0x000390, "Member 'ABP_AltarCenser_Enter_C::StaticMeshComponent1' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, SM_Env_Prop_Frem_Altar_Slider_Right) == 0x000398, "Member 'ABP_AltarCenser_Enter_C::SM_Env_Prop_Frem_Altar_Slider_Right' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, SM_Env_Prop_Frem_Altar_Slider_Left) == 0x0003A0, "Member 'ABP_AltarCenser_Enter_C::SM_Env_Prop_Frem_Altar_Slider_Left' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, SM_Env_Prop_Frem_Altar_SpiceBowl) == 0x0003A8, "Member 'ABP_AltarCenser_Enter_C::SM_Env_Prop_Frem_Altar_SpiceBowl' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, RevealSpice_LightIntensity_EE761F0B434BFA58B219428830EDA71A) == 0x0003B0, "Member 'ABP_AltarCenser_Enter_C::RevealSpice_LightIntensity_EE761F0B434BFA58B219428830EDA71A' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, RevealSpice_SpiceBowlAlpha_EE761F0B434BFA58B219428830EDA71A) == 0x0003B4, "Member 'ABP_AltarCenser_Enter_C::RevealSpice_SpiceBowlAlpha_EE761F0B434BFA58B219428830EDA71A' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, RevealSpice_RevealAlpha_EE761F0B434BFA58B219428830EDA71A) == 0x0003B8, "Member 'ABP_AltarCenser_Enter_C::RevealSpice_RevealAlpha_EE761F0B434BFA58B219428830EDA71A' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, RevealSpice__Direction_EE761F0B434BFA58B219428830EDA71A) == 0x0003BC, "Member 'ABP_AltarCenser_Enter_C::RevealSpice__Direction_EE761F0B434BFA58B219428830EDA71A' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, RevealSpice) == 0x0003C0, "Member 'ABP_AltarCenser_Enter_C::RevealSpice' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, OnInteraction) == 0x0003C8, "Member 'ABP_AltarCenser_Enter_C::OnInteraction' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, AltarLightIntensity) == 0x0003D8, "Member 'ABP_AltarCenser_Enter_C::AltarLightIntensity' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, Reveal_Playrate) == 0x0003E0, "Member 'ABP_AltarCenser_Enter_C::Reveal_Playrate' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, AIrParticlesTarget) == 0x0003E8, "Member 'ABP_AltarCenser_Enter_C::AIrParticlesTarget' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, AirParticlesCurrent) == 0x0003F0, "Member 'ABP_AltarCenser_Enter_C::AirParticlesCurrent' has a wrong offset!");
static_assert(offsetof(ABP_AltarCenser_Enter_C, CanInteract) == 0x0003F8, "Member 'ABP_AltarCenser_Enter_C::CanInteract' has a wrong offset!");

}

