#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BuildablePieceGridEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_BuildablePieceGridEntry.W_BuildablePieceGridEntry_C.Update Visuals
// 0x00E0 (0x00E0 - 0x0000)
struct W_BuildablePieceGridEntry_C_Update_Visuals final
{
public:
	int32                                         PowerBalance;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AmountText;                                        // 0x0008(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           Color;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00C8(0x0014)()
};
static_assert(alignof(W_BuildablePieceGridEntry_C_Update_Visuals) == 0x000008, "Wrong alignment on W_BuildablePieceGridEntry_C_Update_Visuals");
static_assert(sizeof(W_BuildablePieceGridEntry_C_Update_Visuals) == 0x0000E0, "Wrong size on W_BuildablePieceGridEntry_C_Update_Visuals");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, PowerBalance) == 0x000000, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::PowerBalance' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, AmountText) == 0x000008, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::AmountText' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, Color) == 0x000020, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::Color' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, CallFunc_Abs_Int_ReturnValue) == 0x000034, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, K2Node_MakeArray_Array) == 0x0000A0, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_Update_Visuals, K2Node_MakeStruct_SlateColor) == 0x0000C8, "Member 'W_BuildablePieceGridEntry_C_Update_Visuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_BuildablePieceGridEntry.W_BuildablePieceGridEntry_C.OnPowerRequirementsUpdated
// 0x0008 (0x0008 - 0x0000)
struct W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated final
{
public:
	int32                                         PowerProduction;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PowerConsumption;                                  // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated) == 0x000004, "Wrong alignment on W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated");
static_assert(sizeof(W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated) == 0x000008, "Wrong size on W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated");
static_assert(offsetof(W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated, PowerProduction) == 0x000000, "Member 'W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated::PowerProduction' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated, PowerConsumption) == 0x000004, "Member 'W_BuildablePieceGridEntry_C_OnPowerRequirementsUpdated::PowerConsumption' has a wrong offset!");

// Function W_BuildablePieceGridEntry.W_BuildablePieceGridEntry_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct W_BuildablePieceGridEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(W_BuildablePieceGridEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on W_BuildablePieceGridEntry_C_OnFocusReceived");
static_assert(sizeof(W_BuildablePieceGridEntry_C_OnFocusReceived) == 0x0001B0, "Wrong size on W_BuildablePieceGridEntry_C_OnFocusReceived");
static_assert(offsetof(W_BuildablePieceGridEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'W_BuildablePieceGridEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'W_BuildablePieceGridEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'W_BuildablePieceGridEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'W_BuildablePieceGridEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_BuildablePieceGridEntry.W_BuildablePieceGridEntry_C.ExecuteUbergraph_W_BuildablePieceGridEntry
// 0x0030 (0x0030 - 0x0000)
struct W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PowerProduction;                      // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PowerConsumption;                     // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHighlighted;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0022(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelected;                            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsHighlighted;                       // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry) == 0x000004, "Wrong alignment on W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry");
static_assert(sizeof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry) == 0x000030, "Wrong size on W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, EntryPoint) == 0x000000, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_bool_Variable) == 0x000004, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_byte_Variable) == 0x000005, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_byte_Variable_1) == 0x000006, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_bool_Variable_1) == 0x000007, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_byte_Variable_2) == 0x000008, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_byte_Variable_3) == 0x000009, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_bool_Variable_2) == 0x00000A, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_real_Variable) == 0x00000C, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, Temp_real_Variable_1) == 0x000010, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Event_PowerProduction) == 0x000014, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Event_PowerProduction' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Event_PowerConsumption) == 0x000018, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Event_PowerConsumption' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Event_bHighlighted) == 0x000021, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Event_bHighlighted' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Event_bIsSelected) == 0x000022, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Event_bSelected) == 0x000023, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Event_bSelected' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Event_bIsHighlighted) == 0x000024, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Event_bIsHighlighted' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Select_Default) == 0x000027, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Select_Default_1) == 0x000028, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry, K2Node_Select_Default_2) == 0x00002C, "Member 'W_BuildablePieceGridEntry_C_ExecuteUbergraph_W_BuildablePieceGridEntry::K2Node_Select_Default_2' has a wrong offset!");

// Function W_BuildablePieceGridEntry.W_BuildablePieceGridEntry_C.BP_SetSelected
// 0x0002 (0x0002 - 0x0000)
struct W_BuildablePieceGridEntry_C_BP_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHighlighted;                                    // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildablePieceGridEntry_C_BP_SetSelected) == 0x000001, "Wrong alignment on W_BuildablePieceGridEntry_C_BP_SetSelected");
static_assert(sizeof(W_BuildablePieceGridEntry_C_BP_SetSelected) == 0x000002, "Wrong size on W_BuildablePieceGridEntry_C_BP_SetSelected");
static_assert(offsetof(W_BuildablePieceGridEntry_C_BP_SetSelected, bSelected) == 0x000000, "Member 'W_BuildablePieceGridEntry_C_BP_SetSelected::bSelected' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_BP_SetSelected, bIsHighlighted) == 0x000001, "Member 'W_BuildablePieceGridEntry_C_BP_SetSelected::bIsHighlighted' has a wrong offset!");

// Function W_BuildablePieceGridEntry.W_BuildablePieceGridEntry_C.BP_SetHighlighted
// 0x0002 (0x0002 - 0x0000)
struct W_BuildablePieceGridEntry_C_BP_SetHighlighted final
{
public:
	bool                                          bHighlighted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildablePieceGridEntry_C_BP_SetHighlighted) == 0x000001, "Wrong alignment on W_BuildablePieceGridEntry_C_BP_SetHighlighted");
static_assert(sizeof(W_BuildablePieceGridEntry_C_BP_SetHighlighted) == 0x000002, "Wrong size on W_BuildablePieceGridEntry_C_BP_SetHighlighted");
static_assert(offsetof(W_BuildablePieceGridEntry_C_BP_SetHighlighted, bHighlighted) == 0x000000, "Member 'W_BuildablePieceGridEntry_C_BP_SetHighlighted::bHighlighted' has a wrong offset!");
static_assert(offsetof(W_BuildablePieceGridEntry_C_BP_SetHighlighted, bIsSelected) == 0x000001, "Member 'W_BuildablePieceGridEntry_C_BP_SetHighlighted::bIsSelected' has a wrong offset!");

}

