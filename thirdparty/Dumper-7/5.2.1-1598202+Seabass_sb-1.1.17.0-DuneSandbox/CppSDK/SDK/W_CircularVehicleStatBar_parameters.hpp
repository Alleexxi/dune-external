#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CircularVehicleStatBar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_CircularVehicleStatBar.W_CircularVehicleStatBar_C.SetIndicatorLabelHorizontalAlignment
// 0x0020 (0x0020 - 0x0000)
struct W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment final
{
public:
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment) == 0x000008, "Wrong alignment on W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment");
static_assert(sizeof(W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment) == 0x000020, "Wrong size on W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment");
static_assert(offsetof(W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment, HorizontalAlignment) == 0x000000, "Member 'W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000010, "Member 'W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000018, "Member 'W_CircularVehicleStatBar_C_SetIndicatorLabelHorizontalAlignment::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");

// Function W_CircularVehicleStatBar.W_CircularVehicleStatBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_CircularVehicleStatBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CircularVehicleStatBar_C_PreConstruct) == 0x000001, "Wrong alignment on W_CircularVehicleStatBar_C_PreConstruct");
static_assert(sizeof(W_CircularVehicleStatBar_C_PreConstruct) == 0x000001, "Wrong size on W_CircularVehicleStatBar_C_PreConstruct");
static_assert(offsetof(W_CircularVehicleStatBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_CircularVehicleStatBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_CircularVehicleStatBar.W_CircularVehicleStatBar_C.OnSetValues
// 0x0008 (0x0008 - 0x0000)
struct W_CircularVehicleStatBar_C_OnSetValues final
{
public:
	float                                         InCurrentValue;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InMaxValue;                                        // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CircularVehicleStatBar_C_OnSetValues) == 0x000004, "Wrong alignment on W_CircularVehicleStatBar_C_OnSetValues");
static_assert(sizeof(W_CircularVehicleStatBar_C_OnSetValues) == 0x000008, "Wrong size on W_CircularVehicleStatBar_C_OnSetValues");
static_assert(offsetof(W_CircularVehicleStatBar_C_OnSetValues, InCurrentValue) == 0x000000, "Member 'W_CircularVehicleStatBar_C_OnSetValues::InCurrentValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_OnSetValues, InMaxValue) == 0x000004, "Member 'W_CircularVehicleStatBar_C_OnSetValues::InMaxValue' has a wrong offset!");

// Function W_CircularVehicleStatBar.W_CircularVehicleStatBar_C.OnPercentageChanged
// 0x0004 (0x0004 - 0x0000)
struct W_CircularVehicleStatBar_C_OnPercentageChanged final
{
public:
	float                                         InPercentage;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CircularVehicleStatBar_C_OnPercentageChanged) == 0x000004, "Wrong alignment on W_CircularVehicleStatBar_C_OnPercentageChanged");
static_assert(sizeof(W_CircularVehicleStatBar_C_OnPercentageChanged) == 0x000004, "Wrong size on W_CircularVehicleStatBar_C_OnPercentageChanged");
static_assert(offsetof(W_CircularVehicleStatBar_C_OnPercentageChanged, InPercentage) == 0x000000, "Member 'W_CircularVehicleStatBar_C_OnPercentageChanged::InPercentage' has a wrong offset!");

// Function W_CircularVehicleStatBar.W_CircularVehicleStatBar_C.ExecuteUbergraph_W_CircularVehicleStatBar
// 0x00A8 (0x00A8 - 0x0000)
struct W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InPercentage;                         // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InCurrentValue;                       // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InMaxValue;                           // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GenerateValueText_ReturnValue;            // 0x0078(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_m_CachedMaxValue_ImplicitCast;  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GenerateValueText_Value_ImplicitCast;     // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar) == 0x000008, "Wrong alignment on W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar");
static_assert(sizeof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar) == 0x0000A8, "Wrong size on W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, EntryPoint) == 0x000000, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, Temp_byte_Variable) == 0x000004, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, Temp_struct_Variable) == 0x000008, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, Temp_struct_Variable_1) == 0x000018, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, Temp_struct_Variable_2) == 0x000028, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, Temp_struct_Variable_3) == 0x000038, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, K2Node_Event_IsDesignTime) == 0x000048, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, K2Node_Select_Default) == 0x000050, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, K2Node_Event_InPercentage) == 0x000060, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::K2Node_Event_InPercentage' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, K2Node_Event_InCurrentValue) == 0x000064, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::K2Node_Event_InCurrentValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, K2Node_Event_InMaxValue) == 0x000068, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::K2Node_Event_InMaxValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, CallFunc_GenerateValueText_ReturnValue) == 0x000078, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::CallFunc_GenerateValueText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, K2Node_VariableSet_m_CachedMaxValue_ImplicitCast) == 0x000098, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::K2Node_VariableSet_m_CachedMaxValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar, CallFunc_GenerateValueText_Value_ImplicitCast) == 0x0000A0, "Member 'W_CircularVehicleStatBar_C_ExecuteUbergraph_W_CircularVehicleStatBar::CallFunc_GenerateValueText_Value_ImplicitCast' has a wrong offset!");

}

