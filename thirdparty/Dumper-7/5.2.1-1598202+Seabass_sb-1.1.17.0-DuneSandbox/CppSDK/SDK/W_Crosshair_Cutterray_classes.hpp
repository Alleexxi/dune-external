#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Crosshair_Cutterray

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Crosshair_Cutterray.W_Crosshair_Cutterray_C
// 0x0050 (0x0510 - 0x04C0)
class UW_Crosshair_Cutterray_C final : public UCrosshairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DiamondFade;                                       // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnterValidTarget;                                  // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDuneImage*                             Crosshair_Arrow;                                   // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             CrosshairDiamond;                                  // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           TargetColor;                                       // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiamondVisible;                                    // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHolstered;                                       // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA[0x6];                                      // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              RefreshTimers;                                     // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BP_OnCurrentAimTargetChanged(const class AActor* CurrentAimTarget);
	void Construct();
	void Destruct();
	void EnterAds();
	void ExecuteUbergraph_W_Crosshair_Cutterray(int32 EntryPoint);
	void ExitAds();
	void GetIsCurrentTargetValid(bool* Value);
	void OnToggleADS(class UWidgetAnimation* InLeavingAnim, class UWidgetAnimation* InStartingAnim);
	void OnWeaponHolsterToggled(const bool bInHolstered);
	void RefreshTimers_Event();
	void ToggleADS(const bool bInADS);
	void UpdateCrosshair(bool ShouldShowDIamond, bool ShowTargetColor);
	void UpdateSpread(float SpreadRadius);
	void UpdateTarget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Crosshair_Cutterray_C">();
	}
	static class UW_Crosshair_Cutterray_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Crosshair_Cutterray_C>();
	}
};
static_assert(alignof(UW_Crosshair_Cutterray_C) == 0x000010, "Wrong alignment on UW_Crosshair_Cutterray_C");
static_assert(sizeof(UW_Crosshair_Cutterray_C) == 0x000510, "Wrong size on UW_Crosshair_Cutterray_C");
static_assert(offsetof(UW_Crosshair_Cutterray_C, UberGraphFrame) == 0x0004C0, "Member 'UW_Crosshair_Cutterray_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, DiamondFade) == 0x0004C8, "Member 'UW_Crosshair_Cutterray_C::DiamondFade' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, EnterValidTarget) == 0x0004D0, "Member 'UW_Crosshair_Cutterray_C::EnterValidTarget' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, Crosshair_Arrow) == 0x0004D8, "Member 'UW_Crosshair_Cutterray_C::Crosshair_Arrow' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, CrosshairDiamond) == 0x0004E0, "Member 'UW_Crosshair_Cutterray_C::CrosshairDiamond' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, TargetColor) == 0x0004E8, "Member 'UW_Crosshair_Cutterray_C::TargetColor' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, DiamondVisible) == 0x0004F8, "Member 'UW_Crosshair_Cutterray_C::DiamondVisible' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, IsHolstered) == 0x0004F9, "Member 'UW_Crosshair_Cutterray_C::IsHolstered' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_Cutterray_C, RefreshTimers) == 0x000500, "Member 'UW_Crosshair_Cutterray_C::RefreshTimers' has a wrong offset!");

}

