#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapMarkerTooltipWidget

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function W_MapMarkerTooltipWidget.W_MapMarkerTooltipWidget_C.ExecuteUbergraph_W_MapMarkerTooltipWidget
// 0x0220 (0x0220 - 0x0000)
struct W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMarkerId                              K2Node_Event_MarkerId;                             // 0x0004(0x0004)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FEMapMarker                            K2Node_Event_MarkerType;                           // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FFullscreenMapMarkerRowBase            K2Node_Event_MarkerStaticData;                     // 0x0010(0x0158)(ConstParm)
	struct FMapMarkerGuiData                      K2Node_Event_MarkerDynamicData;                    // 0x0168(0x0098)(ConstParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0200(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget) == 0x000008, "Wrong alignment on W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget");
static_assert(sizeof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget) == 0x000220, "Wrong size on W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, EntryPoint) == 0x000000, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, K2Node_Event_MarkerId) == 0x000004, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::K2Node_Event_MarkerId' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, K2Node_Event_MarkerType) == 0x000008, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::K2Node_Event_MarkerType' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, K2Node_Event_MarkerStaticData) == 0x000010, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::K2Node_Event_MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, K2Node_Event_MarkerDynamicData) == 0x000168, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::K2Node_Event_MarkerDynamicData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x000200, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000218, "Member 'W_MapMarkerTooltipWidget_C_ExecuteUbergraph_W_MapMarkerTooltipWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_MapMarkerTooltipWidget.W_MapMarkerTooltipWidget_C.Update
// 0x0200 (0x0200 - 0x0000)
struct W_MapMarkerTooltipWidget_C_Update final
{
public:
	struct FMarkerId                              MarkerId;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FEMapMarker                            MarkerType;                                        // 0x0004(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFullscreenMapMarkerRowBase            MarkerStaticData;                                  // 0x0010(0x0158)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FMapMarkerGuiData                      MarkerDynamicData;                                 // 0x0168(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_MapMarkerTooltipWidget_C_Update) == 0x000008, "Wrong alignment on W_MapMarkerTooltipWidget_C_Update");
static_assert(sizeof(W_MapMarkerTooltipWidget_C_Update) == 0x000200, "Wrong size on W_MapMarkerTooltipWidget_C_Update");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_Update, MarkerId) == 0x000000, "Member 'W_MapMarkerTooltipWidget_C_Update::MarkerId' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_Update, MarkerType) == 0x000004, "Member 'W_MapMarkerTooltipWidget_C_Update::MarkerType' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_Update, MarkerStaticData) == 0x000010, "Member 'W_MapMarkerTooltipWidget_C_Update::MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_Update, MarkerDynamicData) == 0x000168, "Member 'W_MapMarkerTooltipWidget_C_Update::MarkerDynamicData' has a wrong offset!");

// Function W_MapMarkerTooltipWidget.W_MapMarkerTooltipWidget_C.UpdateIconPreset
// 0x0038 (0x0038 - 0x0000)
struct W_MapMarkerTooltipWidget_C_UpdateIconPreset final
{
public:
	TSoftObjectPtr<class UTexture2D>              IconPresetTexture;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	struct FEIconPresetWidgetName                 IconPresetName;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarkerTooltipWidget_C_UpdateIconPreset) == 0x000008, "Wrong alignment on W_MapMarkerTooltipWidget_C_UpdateIconPreset");
static_assert(sizeof(W_MapMarkerTooltipWidget_C_UpdateIconPreset) == 0x000038, "Wrong size on W_MapMarkerTooltipWidget_C_UpdateIconPreset");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_UpdateIconPreset, IconPresetTexture) == 0x000000, "Member 'W_MapMarkerTooltipWidget_C_UpdateIconPreset::IconPresetTexture' has a wrong offset!");
static_assert(offsetof(W_MapMarkerTooltipWidget_C_UpdateIconPreset, IconPresetName) == 0x000030, "Member 'W_MapMarkerTooltipWidget_C_UpdateIconPreset::IconPresetName' has a wrong offset!");

}

