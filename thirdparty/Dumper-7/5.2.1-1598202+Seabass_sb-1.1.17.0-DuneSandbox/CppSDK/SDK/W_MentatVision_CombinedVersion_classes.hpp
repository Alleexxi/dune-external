#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MentatVision_CombinedVersion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MentatVision_CombinedVersion.W_MentatVision_CombinedVersion_C
// 0x00B0 (0x0640 - 0x0590)
class UW_MentatVision_CombinedVersion_C final : public UCombinedBattlefieldAnalysisWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0590(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UpdateIcon;                                        // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Exit;                                              // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear;                                            // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Main;                                  // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             DuneImage_Fog;                                     // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmptySlot_2;                                       // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExtraImage;                                        // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot1;                                             // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot2;                                             // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot3;                                             // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasBoundAccessCodeDelegates;                       // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IconIsForDoorAccess;                               // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorIconIsSet;                                     // 0x05FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicFogMID;                                     // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                BaseOffsets;                                       // 0x0608(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        ExtraIconHeight;                                   // 0x0618(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExtraIconVisible;                                // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             DefaultIcon;                                       // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          StartedPlayingExitAnimation;                       // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UseCheapAppearAnimationThreshold;                  // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BattlefieldVisionInfoLevelUpdated(int32 NewLevel);
	void BP_OnMentatVisionTargetUpdated();
	void BP_OnReturnWidgetToPool();
	void Construct();
	void Destruct();
	void EA_VisualizeData();
	void ExecuteUbergraph_W_MentatVision_CombinedVersion(int32 EntryPoint);
	void OnAccessCodesUpdated();
	void OnMentatWidgetInFocusChanged(const bool bIsInFocus);
	void OnPlayExitAnimation();
	void OnResetWidgetForActor(const class AActor* Actor);
	void OnWidgetFadeIn();
	void OnWidgetFadeOut();
	void PlayAppearAnimation(int32 NumPendingWidgets);
	void PlayUpdateAnimation();
	void PreConstruct(bool IsDesignTime);
	void SetAccessCodeDelegateBindings(bool ShouldBeActive);
	void SetTypeIcon(TSoftObjectPtr<class UTexture2D> SoftTexture);
	void SetupExtraIcon(class AActor* Target);
	void SetupVisualsForTarget(class AActor* TargetActor);
	void ShowAbilitiesUpdated(bool IsVisible_0);
	void ShowAmmoCountUpdated(bool IsVisible_0);
	void ShowAmmoTypeUpdated(bool IsVisible_0);
	void ShowArcheTypeUpdated(bool IsVisible_0);
	void ShowHealthUpdated(bool IsVisible_0);
	void ShowWeaponUpdated(bool IsVisible_0);
	void Update_Fog_Scale(bool ShowExtraIcon);
	void UpdateBoundingBox(bool Show_Extra_Icon);
	void UpdateIcons(TArray<TSoftObjectPtr<class UTexture2D>>& Icons);

	void GetAccessCodesComponent(class UPlayerAccessCodesComponent** Component) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MentatVision_CombinedVersion_C">();
	}
	static class UW_MentatVision_CombinedVersion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MentatVision_CombinedVersion_C>();
	}
};
static_assert(alignof(UW_MentatVision_CombinedVersion_C) == 0x000010, "Wrong alignment on UW_MentatVision_CombinedVersion_C");
static_assert(sizeof(UW_MentatVision_CombinedVersion_C) == 0x000640, "Wrong size on UW_MentatVision_CombinedVersion_C");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, UberGraphFrame) == 0x000590, "Member 'UW_MentatVision_CombinedVersion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, UpdateIcon) == 0x000598, "Member 'UW_MentatVision_CombinedVersion_C::UpdateIcon' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, FadeOut) == 0x0005A0, "Member 'UW_MentatVision_CombinedVersion_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, Exit) == 0x0005A8, "Member 'UW_MentatVision_CombinedVersion_C::Exit' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, Appear) == 0x0005B0, "Member 'UW_MentatVision_CombinedVersion_C::Appear' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, CanvasPanel_Main) == 0x0005B8, "Member 'UW_MentatVision_CombinedVersion_C::CanvasPanel_Main' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, DuneImage_Fog) == 0x0005C0, "Member 'UW_MentatVision_CombinedVersion_C::DuneImage_Fog' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, EmptySlot_2) == 0x0005C8, "Member 'UW_MentatVision_CombinedVersion_C::EmptySlot_2' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, ExtraImage) == 0x0005D0, "Member 'UW_MentatVision_CombinedVersion_C::ExtraImage' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, IconImage) == 0x0005D8, "Member 'UW_MentatVision_CombinedVersion_C::IconImage' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, Slot1) == 0x0005E0, "Member 'UW_MentatVision_CombinedVersion_C::Slot1' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, Slot2) == 0x0005E8, "Member 'UW_MentatVision_CombinedVersion_C::Slot2' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, Slot3) == 0x0005F0, "Member 'UW_MentatVision_CombinedVersion_C::Slot3' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, HasBoundAccessCodeDelegates) == 0x0005F8, "Member 'UW_MentatVision_CombinedVersion_C::HasBoundAccessCodeDelegates' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, IconIsForDoorAccess) == 0x0005F9, "Member 'UW_MentatVision_CombinedVersion_C::IconIsForDoorAccess' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, DoorIconIsSet) == 0x0005FA, "Member 'UW_MentatVision_CombinedVersion_C::DoorIconIsSet' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, DynamicFogMID) == 0x000600, "Member 'UW_MentatVision_CombinedVersion_C::DynamicFogMID' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, BaseOffsets) == 0x000608, "Member 'UW_MentatVision_CombinedVersion_C::BaseOffsets' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, ExtraIconHeight) == 0x000618, "Member 'UW_MentatVision_CombinedVersion_C::ExtraIconHeight' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, IsExtraIconVisible) == 0x000620, "Member 'UW_MentatVision_CombinedVersion_C::IsExtraIconVisible' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, DefaultIcon) == 0x000628, "Member 'UW_MentatVision_CombinedVersion_C::DefaultIcon' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, StartedPlayingExitAnimation) == 0x000630, "Member 'UW_MentatVision_CombinedVersion_C::StartedPlayingExitAnimation' has a wrong offset!");
static_assert(offsetof(UW_MentatVision_CombinedVersion_C, UseCheapAppearAnimationThreshold) == 0x000634, "Member 'UW_MentatVision_CombinedVersion_C::UseCheapAppearAnimationThreshold' has a wrong offset!");

}

