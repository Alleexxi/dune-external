#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FS_AnchorField_Generic

#include "Basic.hpp"

#include "FieldSystemEngine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "EFieldShapeType_structs.hpp"
#include "Engine_structs.hpp"
#include "Chaos_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FS_AnchorField_Generic.FS_AnchorField_Generic_C
// 0x0110 (0x0468 - 0x0358)
class AFS_AnchorField_Generic_C : public AFieldSystemActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          PlaneVolumeCol;                                    // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   ActiveTitleText;                                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Anchor_Title_Text;                                 // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   ActiveValueText;                                   // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Anchor_Text;                                       // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SphereVolume;                                      // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BoxVolume;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereVolumeCol;                                   // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField_Plane;                                // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField_Sphere;                               // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialFalloff*                         RadialFalloff;                                     // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlaneVolume;                                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlaneFalloff*                          PlaneFalloff;                                      // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField_Box;                                  // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxVolumeCol;                                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxFalloff*                            BoxFalloff;                                        // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUniformInteger*                        UniformInteger;                                    // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialVector*                          RadialVector;                                      // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EObjectStateTypeEnum                          Dynamic_State;                                     // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Anchor_Active;                                     // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFieldShapeType                               Anchor_Falloff_Shape;                              // 0x03FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x03FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AnchorColour;                                      // 0x03FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Deactivated;                                       // 0x040C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   AnchorVolume;                                      // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   AnchorTextDisplay;                                 // 0x0428(0x0018)(Edit, BlueprintVisible)
	bool                                          ViewDebugText;                                     // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewWireFrame;                                     // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewSolidShapes;                                   // 0x0442(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x5];                                      // 0x0443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TextVerticalOffset;                                // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DeactivatedText;                                   // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TextScaleMult;                                     // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnchorDebugSetup();
	void ExecuteUbergraph_FS_AnchorField_Generic(int32 EntryPoint);
	void Falloff_Field_Switch(class UUniformInteger* UniformInt, class UCullingField** CullingField);
	void ReceiveBeginPlay();
	void SetFalloffVisibility();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FS_AnchorField_Generic_C">();
	}
	static class AFS_AnchorField_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFS_AnchorField_Generic_C>();
	}
};
static_assert(alignof(AFS_AnchorField_Generic_C) == 0x000008, "Wrong alignment on AFS_AnchorField_Generic_C");
static_assert(sizeof(AFS_AnchorField_Generic_C) == 0x000468, "Wrong size on AFS_AnchorField_Generic_C");
static_assert(offsetof(AFS_AnchorField_Generic_C, UberGraphFrame) == 0x000358, "Member 'AFS_AnchorField_Generic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, PlaneVolumeCol) == 0x000360, "Member 'AFS_AnchorField_Generic_C::PlaneVolumeCol' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, ActiveTitleText) == 0x000368, "Member 'AFS_AnchorField_Generic_C::ActiveTitleText' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Anchor_Title_Text) == 0x000370, "Member 'AFS_AnchorField_Generic_C::Anchor_Title_Text' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, ActiveValueText) == 0x000378, "Member 'AFS_AnchorField_Generic_C::ActiveValueText' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Anchor_Text) == 0x000380, "Member 'AFS_AnchorField_Generic_C::Anchor_Text' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, SphereVolume) == 0x000388, "Member 'AFS_AnchorField_Generic_C::SphereVolume' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, BoxVolume) == 0x000390, "Member 'AFS_AnchorField_Generic_C::BoxVolume' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Arrow) == 0x000398, "Member 'AFS_AnchorField_Generic_C::Arrow' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, SphereVolumeCol) == 0x0003A0, "Member 'AFS_AnchorField_Generic_C::SphereVolumeCol' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, CullingField_Plane) == 0x0003A8, "Member 'AFS_AnchorField_Generic_C::CullingField_Plane' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, CullingField_Sphere) == 0x0003B0, "Member 'AFS_AnchorField_Generic_C::CullingField_Sphere' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, RadialFalloff) == 0x0003B8, "Member 'AFS_AnchorField_Generic_C::RadialFalloff' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, PlaneVolume) == 0x0003C0, "Member 'AFS_AnchorField_Generic_C::PlaneVolume' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, PlaneFalloff) == 0x0003C8, "Member 'AFS_AnchorField_Generic_C::PlaneFalloff' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, CullingField_Box) == 0x0003D0, "Member 'AFS_AnchorField_Generic_C::CullingField_Box' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, BoxVolumeCol) == 0x0003D8, "Member 'AFS_AnchorField_Generic_C::BoxVolumeCol' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, BoxFalloff) == 0x0003E0, "Member 'AFS_AnchorField_Generic_C::BoxFalloff' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, UniformInteger) == 0x0003E8, "Member 'AFS_AnchorField_Generic_C::UniformInteger' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, RadialVector) == 0x0003F0, "Member 'AFS_AnchorField_Generic_C::RadialVector' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Dynamic_State) == 0x0003F8, "Member 'AFS_AnchorField_Generic_C::Dynamic_State' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Anchor_Active) == 0x0003F9, "Member 'AFS_AnchorField_Generic_C::Anchor_Active' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Anchor_Falloff_Shape) == 0x0003FA, "Member 'AFS_AnchorField_Generic_C::Anchor_Falloff_Shape' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Debug) == 0x0003FB, "Member 'AFS_AnchorField_Generic_C::Debug' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, AnchorColour) == 0x0003FC, "Member 'AFS_AnchorField_Generic_C::AnchorColour' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, Deactivated) == 0x00040C, "Member 'AFS_AnchorField_Generic_C::Deactivated' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, AnchorVolume) == 0x000420, "Member 'AFS_AnchorField_Generic_C::AnchorVolume' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, AnchorTextDisplay) == 0x000428, "Member 'AFS_AnchorField_Generic_C::AnchorTextDisplay' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, ViewDebugText) == 0x000440, "Member 'AFS_AnchorField_Generic_C::ViewDebugText' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, ViewWireFrame) == 0x000441, "Member 'AFS_AnchorField_Generic_C::ViewWireFrame' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, ViewSolidShapes) == 0x000442, "Member 'AFS_AnchorField_Generic_C::ViewSolidShapes' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, TextVerticalOffset) == 0x000448, "Member 'AFS_AnchorField_Generic_C::TextVerticalOffset' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, DeactivatedText) == 0x000450, "Member 'AFS_AnchorField_Generic_C::DeactivatedText' has a wrong offset!");
static_assert(offsetof(AFS_AnchorField_Generic_C, TextScaleMult) == 0x000460, "Member 'AFS_AnchorField_Generic_C::TextScaleMult' has a wrong offset!");

}

