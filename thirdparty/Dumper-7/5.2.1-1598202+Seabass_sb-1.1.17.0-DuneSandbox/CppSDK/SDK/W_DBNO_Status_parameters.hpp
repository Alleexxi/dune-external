#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DBNO_Status

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function W_DBNO_Status.W_DBNO_Status_C.UpdateSelfReviveBarVisibility
// 0x0004 (0x0004 - 0x0000)
struct W_DBNO_Status_C_UpdateSelfReviveBarVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_UpdateSelfReviveBarVisibility) == 0x000001, "Wrong alignment on W_DBNO_Status_C_UpdateSelfReviveBarVisibility");
static_assert(sizeof(W_DBNO_Status_C_UpdateSelfReviveBarVisibility) == 0x000004, "Wrong size on W_DBNO_Status_C_UpdateSelfReviveBarVisibility");
static_assert(offsetof(W_DBNO_Status_C_UpdateSelfReviveBarVisibility, Temp_bool_Variable) == 0x000000, "Member 'W_DBNO_Status_C_UpdateSelfReviveBarVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateSelfReviveBarVisibility, Temp_byte_Variable) == 0x000001, "Member 'W_DBNO_Status_C_UpdateSelfReviveBarVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateSelfReviveBarVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'W_DBNO_Status_C_UpdateSelfReviveBarVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateSelfReviveBarVisibility, K2Node_Select_Default) == 0x000003, "Member 'W_DBNO_Status_C_UpdateSelfReviveBarVisibility::K2Node_Select_Default' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.UpdateKeyStates
// 0x0040 (0x0040 - 0x0000)
struct W_DBNO_Status_C_UpdateKeyStates final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDbnoState                                    Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDbnoState                                    Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDbnoState                                    Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDbnoState                                    CallFunc_GetDBNOState_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0010(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0028(0x0018)(ConstParm)
};
static_assert(alignof(W_DBNO_Status_C_UpdateKeyStates) == 0x000008, "Wrong alignment on W_DBNO_Status_C_UpdateKeyStates");
static_assert(sizeof(W_DBNO_Status_C_UpdateKeyStates) == 0x000040, "Wrong size on W_DBNO_Status_C_UpdateKeyStates");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_bool_Variable) == 0x000000, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_bool_Variable_1) == 0x000001, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_bool_Variable_2) == 0x000002, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_bool_Variable_3) == 0x000003, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_byte_Variable) == 0x000004, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_byte_Variable_1) == 0x000005, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_bool_Variable_4) == 0x000006, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, Temp_byte_Variable_2) == 0x000007, "Member 'W_DBNO_Status_C_UpdateKeyStates::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, CallFunc_GetDBNOState_ReturnValue) == 0x000008, "Member 'W_DBNO_Status_C_UpdateKeyStates::CallFunc_GetDBNOState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, K2Node_Select_Default) == 0x000009, "Member 'W_DBNO_Status_C_UpdateKeyStates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, K2Node_Select_Default_1) == 0x00000A, "Member 'W_DBNO_Status_C_UpdateKeyStates::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, K2Node_Select_Default_2) == 0x000010, "Member 'W_DBNO_Status_C_UpdateKeyStates::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_UpdateKeyStates, K2Node_Select_Default_3) == 0x000028, "Member 'W_DBNO_Status_C_UpdateKeyStates::K2Node_Select_Default_3' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.SetReviveBarFillPercentage
// 0x0018 (0x0018 - 0x0000)
struct W_DBNO_Status_C_SetReviveBarFillPercentage final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMeterMaterial_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_SetReviveBarFillPercentage) == 0x000008, "Wrong alignment on W_DBNO_Status_C_SetReviveBarFillPercentage");
static_assert(sizeof(W_DBNO_Status_C_SetReviveBarFillPercentage) == 0x000018, "Wrong size on W_DBNO_Status_C_SetReviveBarFillPercentage");
static_assert(offsetof(W_DBNO_Status_C_SetReviveBarFillPercentage, Percentage) == 0x000000, "Member 'W_DBNO_Status_C_SetReviveBarFillPercentage::Percentage' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_SetReviveBarFillPercentage, CallFunc_GetMeterMaterial_ReturnValue) == 0x000008, "Member 'W_DBNO_Status_C_SetReviveBarFillPercentage::CallFunc_GetMeterMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_SetReviveBarFillPercentage, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'W_DBNO_Status_C_SetReviveBarFillPercentage::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_SetReviveBarFillPercentage, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000014, "Member 'W_DBNO_Status_C_SetReviveBarFillPercentage::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_DBNO_Status_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_PreConstruct) == 0x000001, "Wrong alignment on W_DBNO_Status_C_PreConstruct");
static_assert(sizeof(W_DBNO_Status_C_PreConstruct) == 0x000001, "Wrong size on W_DBNO_Status_C_PreConstruct");
static_assert(offsetof(W_DBNO_Status_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_DBNO_Status_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.OnSelfRevivePercentageChanged
// 0x0004 (0x0004 - 0x0000)
struct W_DBNO_Status_C_OnSelfRevivePercentageChanged final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_OnSelfRevivePercentageChanged) == 0x000004, "Wrong alignment on W_DBNO_Status_C_OnSelfRevivePercentageChanged");
static_assert(sizeof(W_DBNO_Status_C_OnSelfRevivePercentageChanged) == 0x000004, "Wrong size on W_DBNO_Status_C_OnSelfRevivePercentageChanged");
static_assert(offsetof(W_DBNO_Status_C_OnSelfRevivePercentageChanged, Percentage) == 0x000000, "Member 'W_DBNO_Status_C_OnSelfRevivePercentageChanged::Percentage' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.OnDownedStateTimerPercentageChanged
// 0x0004 (0x0004 - 0x0000)
struct W_DBNO_Status_C_OnDownedStateTimerPercentageChanged final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_OnDownedStateTimerPercentageChanged) == 0x000004, "Wrong alignment on W_DBNO_Status_C_OnDownedStateTimerPercentageChanged");
static_assert(sizeof(W_DBNO_Status_C_OnDownedStateTimerPercentageChanged) == 0x000004, "Wrong size on W_DBNO_Status_C_OnDownedStateTimerPercentageChanged");
static_assert(offsetof(W_DBNO_Status_C_OnDownedStateTimerPercentageChanged, Percentage) == 0x000000, "Member 'W_DBNO_Status_C_OnDownedStateTimerPercentageChanged::Percentage' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.OnDownedStateHealthPercentageChanged
// 0x0004 (0x0004 - 0x0000)
struct W_DBNO_Status_C_OnDownedStateHealthPercentageChanged final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_OnDownedStateHealthPercentageChanged) == 0x000004, "Wrong alignment on W_DBNO_Status_C_OnDownedStateHealthPercentageChanged");
static_assert(sizeof(W_DBNO_Status_C_OnDownedStateHealthPercentageChanged) == 0x000004, "Wrong size on W_DBNO_Status_C_OnDownedStateHealthPercentageChanged");
static_assert(offsetof(W_DBNO_Status_C_OnDownedStateHealthPercentageChanged, Percentage) == 0x000000, "Member 'W_DBNO_Status_C_OnDownedStateHealthPercentageChanged::Percentage' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.OnCharacterStateChanged
// 0x0010 (0x0010 - 0x0000)
struct W_DBNO_Status_C_OnCharacterStateChanged final
{
public:
	struct FGameplayTag                           PreviousCharacterState;                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NewCharacterState;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_OnCharacterStateChanged) == 0x000004, "Wrong alignment on W_DBNO_Status_C_OnCharacterStateChanged");
static_assert(sizeof(W_DBNO_Status_C_OnCharacterStateChanged) == 0x000010, "Wrong size on W_DBNO_Status_C_OnCharacterStateChanged");
static_assert(offsetof(W_DBNO_Status_C_OnCharacterStateChanged, PreviousCharacterState) == 0x000000, "Member 'W_DBNO_Status_C_OnCharacterStateChanged::PreviousCharacterState' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_OnCharacterStateChanged, NewCharacterState) == 0x000008, "Member 'W_DBNO_Status_C_OnCharacterStateChanged::NewCharacterState' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.OnCanPayReviveCostChanged
// 0x0001 (0x0001 - 0x0000)
struct W_DBNO_Status_C_OnCanPayReviveCostChanged final
{
public:
	bool                                          bCanPayReviveCost;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_OnCanPayReviveCostChanged) == 0x000001, "Wrong alignment on W_DBNO_Status_C_OnCanPayReviveCostChanged");
static_assert(sizeof(W_DBNO_Status_C_OnCanPayReviveCostChanged) == 0x000001, "Wrong size on W_DBNO_Status_C_OnCanPayReviveCostChanged");
static_assert(offsetof(W_DBNO_Status_C_OnCanPayReviveCostChanged, bCanPayReviveCost) == 0x000000, "Member 'W_DBNO_Status_C_OnCanPayReviveCostChanged::bCanPayReviveCost' has a wrong offset!");

// Function W_DBNO_Status.W_DBNO_Status_C.ExecuteUbergraph_W_DBNO_Status
// 0x0068 (0x0068 - 0x0000)
struct W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDbnoState                                    CallFunc_GetDBNOState_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	float                                         K2Node_Event_Percentage_2;                         // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Percentage_1;                         // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanPayReviveCost;                    // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Percentage;                           // 0x0044(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_PreviousCharacterState;               // 0x0048(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_NewCharacterState;                    // 0x0050(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetReviveBarFillPercentage_Percentage_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status) == 0x000008, "Wrong alignment on W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status");
static_assert(sizeof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status) == 0x000068, "Wrong size on W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, EntryPoint) == 0x000000, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, CallFunc_GetDBNOState_ReturnValue) == 0x000004, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::CallFunc_GetDBNOState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_IsDesignTime) == 0x000005, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_Percentage_2) == 0x000038, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_Percentage_2' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_Percentage_1) == 0x00003C, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_Percentage_1' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_bCanPayReviveCost) == 0x000040, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_bCanPayReviveCost' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_Percentage) == 0x000044, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_Percentage' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_PreviousCharacterState) == 0x000048, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_PreviousCharacterState' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Event_NewCharacterState) == 0x000050, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Event_NewCharacterState' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000058, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, CallFunc_HasTag_ReturnValue) == 0x000059, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, Temp_bool_Variable) == 0x00005A, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, K2Node_Select_Default) == 0x00005C, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status, CallFunc_SetReviveBarFillPercentage_Percentage_ImplicitCast) == 0x000060, "Member 'W_DBNO_Status_C_ExecuteUbergraph_W_DBNO_Status::CallFunc_SetReviveBarFillPercentage_Percentage_ImplicitCast' has a wrong offset!");

}

