#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponFailureWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WeaponFailureWidget.W_WeaponFailureWidget_C
// 0x0040 (0x04B0 - 0x0470)
class UW_WeaponFailureWidget_C final : public UWeaponFailureWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_TextBox_C*                           W_WeaponFailureMessage;                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TEXT_WeaponBroken;                                 // 0x0480(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TEXT_WeaponVenting;                                // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnWeaponFailureBroken(const EWeaponFailureReason WeaponFailureReason);
	void ExecuteUbergraph_W_WeaponFailureWidget(int32 EntryPoint);
	void Event_Clear_UI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WeaponFailureWidget_C">();
	}
	static class UW_WeaponFailureWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WeaponFailureWidget_C>();
	}
};
static_assert(alignof(UW_WeaponFailureWidget_C) == 0x000010, "Wrong alignment on UW_WeaponFailureWidget_C");
static_assert(sizeof(UW_WeaponFailureWidget_C) == 0x0004B0, "Wrong size on UW_WeaponFailureWidget_C");
static_assert(offsetof(UW_WeaponFailureWidget_C, UberGraphFrame) == 0x000470, "Member 'UW_WeaponFailureWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WeaponFailureWidget_C, W_WeaponFailureMessage) == 0x000478, "Member 'UW_WeaponFailureWidget_C::W_WeaponFailureMessage' has a wrong offset!");
static_assert(offsetof(UW_WeaponFailureWidget_C, TEXT_WeaponBroken) == 0x000480, "Member 'UW_WeaponFailureWidget_C::TEXT_WeaponBroken' has a wrong offset!");
static_assert(offsetof(UW_WeaponFailureWidget_C, TEXT_WeaponVenting) == 0x000498, "Member 'UW_WeaponFailureWidget_C::TEXT_WeaponVenting' has a wrong offset!");

}

