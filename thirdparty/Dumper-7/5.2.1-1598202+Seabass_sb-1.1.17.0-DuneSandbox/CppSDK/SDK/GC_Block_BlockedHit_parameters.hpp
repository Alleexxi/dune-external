#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Block_BlockedHit

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GC_Block_BlockedHit.GC_Block_BlockedHit_C.ExecuteUbergraph_GC_Block_BlockedHit
// 0x0004 (0x0004 - 0x0000)
struct GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit) == 0x000004, "Wrong alignment on GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit");
static_assert(sizeof(GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit) == 0x000004, "Wrong size on GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit");
static_assert(offsetof(GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit, EntryPoint) == 0x000000, "Member 'GC_Block_BlockedHit_C_ExecuteUbergraph_GC_Block_BlockedHit::EntryPoint' has a wrong offset!");

// Function GC_Block_BlockedHit.GC_Block_BlockedHit_C.OnActive
// 0x0178 (0x0178 - 0x0000)
struct GC_Block_BlockedHit_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Block_BlockedHit_C_OnActive) == 0x000008, "Wrong alignment on GC_Block_BlockedHit_C_OnActive");
static_assert(sizeof(GC_Block_BlockedHit_C_OnActive) == 0x000178, "Wrong size on GC_Block_BlockedHit_C_OnActive");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, MyTarget) == 0x000000, "Member 'GC_Block_BlockedHit_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, Parameters) == 0x000008, "Member 'GC_Block_BlockedHit_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GC_Block_BlockedHit_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, K2Node_DynamicCast_AsPawn) == 0x0000E8, "Member 'GC_Block_BlockedHit_C_OnActive::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GC_Block_BlockedHit_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, K2Node_DynamicCast_AsCharacter) == 0x0000F8, "Member 'GC_Block_BlockedHit_C_OnActive::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'GC_Block_BlockedHit_C_OnActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_GetController_ReturnValue) == 0x000108, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, K2Node_DynamicCast_AsPlayer_Controller) == 0x000110, "Member 'GC_Block_BlockedHit_C_OnActive::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'GC_Block_BlockedHit_C_OnActive::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000120, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_IsLocallyControlled_ReturnValue) == 0x000128, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000130, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_StartCameraShake_ReturnValue) == 0x000138, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_RandomFloatInRange_ReturnValue) == 0x000140, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000148, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_MakeRotator_ReturnValue) == 0x000150, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000168, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000170, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnActive, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000174, "Member 'GC_Block_BlockedHit_C_OnActive::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function GC_Block_BlockedHit.GC_Block_BlockedHit_C.OnExecute
// 0x0108 (0x0108 - 0x0000)
struct GC_Block_BlockedHit_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Block_BlockedHit_C_OnExecute) == 0x000008, "Wrong alignment on GC_Block_BlockedHit_C_OnExecute");
static_assert(sizeof(GC_Block_BlockedHit_C_OnExecute) == 0x000108, "Wrong size on GC_Block_BlockedHit_C_OnExecute");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_Block_BlockedHit_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, Parameters) == 0x000008, "Member 'GC_Block_BlockedHit_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, ReturnValue) == 0x0000E0, "Member 'GC_Block_BlockedHit_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, K2Node_DynamicCast_AsCharacter) == 0x0000E8, "Member 'GC_Block_BlockedHit_C_OnExecute::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GC_Block_BlockedHit_C_OnExecute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000F8, "Member 'GC_Block_BlockedHit_C_OnExecute::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_OnExecute, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000100, "Member 'GC_Block_BlockedHit_C_OnExecute::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");

// Function GC_Block_BlockedHit.GC_Block_BlockedHit_C.SpawnImage
// 0x00B0 (0x00B0 - 0x0000)
struct GC_Block_BlockedHit_C_SpawnImage final
{
public:
	class ABP_VFX_Abl_FadingImage_C*              CurrentImage;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VFX_Abl_FadingImage_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Block_BlockedHit_C_SpawnImage) == 0x000010, "Wrong alignment on GC_Block_BlockedHit_C_SpawnImage");
static_assert(sizeof(GC_Block_BlockedHit_C_SpawnImage) == 0x0000B0, "Wrong size on GC_Block_BlockedHit_C_SpawnImage");
static_assert(offsetof(GC_Block_BlockedHit_C_SpawnImage, CurrentImage) == 0x000000, "Member 'GC_Block_BlockedHit_C_SpawnImage::CurrentImage' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_SpawnImage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'GC_Block_BlockedHit_C_SpawnImage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_SpawnImage, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000020, "Member 'GC_Block_BlockedHit_C_SpawnImage::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_SpawnImage, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'GC_Block_BlockedHit_C_SpawnImage::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_SpawnImage, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'GC_Block_BlockedHit_C_SpawnImage::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Block_BlockedHit_C_SpawnImage, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'GC_Block_BlockedHit_C_SpawnImage::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

