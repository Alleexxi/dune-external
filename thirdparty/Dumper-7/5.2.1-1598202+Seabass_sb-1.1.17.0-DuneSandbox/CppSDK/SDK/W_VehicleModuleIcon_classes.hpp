#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VehicleModuleIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_VehicleModuleIcon.W_VehicleModuleIcon_C
// 0x0130 (0x0520 - 0x03F0)
class UW_VehicleModuleIcon_C final : public UDuneUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDuneImage*                             ModuleImage;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateBrush                            Brush;                                             // 0x0400(0x00D0)(Edit, BlueprintVisible)
	class UClass*                                 ItemDurabilitySettings;                            // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            ModuleNotPlacedTint;                               // 0x04D8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            ModulePlaceableTint;                               // 0x04EC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UCurveLinearColor*                      NewVar;                                            // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EmptySlot;                                         // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            FALSE_0;                                           // 0x050C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Setup_Module_Visuals(EVehicleModuleAttachState Module_State, EItemDurabilityState Durability, double DurabilityValue);
	void Set_Size(const struct FDeprecateSlateVector2D& Size);
	void Set_Icon(TSoftObjectPtr<class UTexture2D> SoftTexture);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_VehicleModuleIcon(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_VehicleModuleIcon_C">();
	}
	static class UW_VehicleModuleIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_VehicleModuleIcon_C>();
	}
};
static_assert(alignof(UW_VehicleModuleIcon_C) == 0x000010, "Wrong alignment on UW_VehicleModuleIcon_C");
static_assert(sizeof(UW_VehicleModuleIcon_C) == 0x000520, "Wrong size on UW_VehicleModuleIcon_C");
static_assert(offsetof(UW_VehicleModuleIcon_C, UberGraphFrame) == 0x0003F0, "Member 'UW_VehicleModuleIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, ModuleImage) == 0x0003F8, "Member 'UW_VehicleModuleIcon_C::ModuleImage' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, Brush) == 0x000400, "Member 'UW_VehicleModuleIcon_C::Brush' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, ItemDurabilitySettings) == 0x0004D0, "Member 'UW_VehicleModuleIcon_C::ItemDurabilitySettings' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, ModuleNotPlacedTint) == 0x0004D8, "Member 'UW_VehicleModuleIcon_C::ModuleNotPlacedTint' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, ModulePlaceableTint) == 0x0004EC, "Member 'UW_VehicleModuleIcon_C::ModulePlaceableTint' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, NewVar) == 0x000500, "Member 'UW_VehicleModuleIcon_C::NewVar' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, EmptySlot) == 0x000508, "Member 'UW_VehicleModuleIcon_C::EmptySlot' has a wrong offset!");
static_assert(offsetof(UW_VehicleModuleIcon_C, FALSE_0) == 0x00050C, "Member 'UW_VehicleModuleIcon_C::FALSE_0' has a wrong offset!");

}

