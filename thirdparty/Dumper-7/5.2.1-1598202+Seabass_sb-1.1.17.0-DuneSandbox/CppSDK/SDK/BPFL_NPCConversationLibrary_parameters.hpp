#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_NPCConversationLibrary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "F_NPCConversation_DTRow_structs.hpp"
#include "F_NPCConverstation_structs.hpp"


namespace SDK::Params
{

// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.GetValidConversation
// 0x00C8 (0x00C8 - 0x0000)
struct BPFL_NPCConversationLibrary_C_GetValidConversation final
{
public:
	class ADuneNpcCharacter*                      Initiator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneNpcCharacter*                      Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FF_NPCConversation_DTRow               ResultingRow;                                      // 0x0018(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FF_NPCConversation_DTRow>       ValidConversationRows;                             // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0070(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_NPCConversation_DTRow               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_NPCConversationLibrary_C_GetValidConversation) == 0x000008, "Wrong alignment on BPFL_NPCConversationLibrary_C_GetValidConversation");
static_assert(sizeof(BPFL_NPCConversationLibrary_C_GetValidConversation) == 0x0000C8, "Wrong size on BPFL_NPCConversationLibrary_C_GetValidConversation");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, Initiator) == 0x000000, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::Initiator' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, Target) == 0x000008, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::Target' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, __WorldContext) == 0x000010, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, ResultingRow) == 0x000018, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::ResultingRow' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, ValidConversationRows) == 0x000048, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::ValidConversationRows' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_RandomInteger_ReturnValue) == 0x000068, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000070, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_Array_Get_Item) == 0x000080, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidConversation, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BPFL_NPCConversationLibrary_C_GetValidConversation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.GetValidSpecificConversation
// 0x0090 (0x0090 - 0x0000)
struct BPFL_NPCConversationLibrary_C_GetValidSpecificConversation final
{
public:
	struct FDataTableRowHandle                    ConversationRow;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FF_NPCConversation_DTRow               ResultingRow;                                      // 0x0018(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FF_NPCConversation_DTRow>       ValidConversationRows;                             // 0x0048(0x0010)(Edit, BlueprintVisible)
	struct FF_NPCConversation_DTRow               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation) == 0x000008, "Wrong alignment on BPFL_NPCConversationLibrary_C_GetValidSpecificConversation");
static_assert(sizeof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation) == 0x000090, "Wrong size on BPFL_NPCConversationLibrary_C_GetValidSpecificConversation");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation, ConversationRow) == 0x000000, "Member 'BPFL_NPCConversationLibrary_C_GetValidSpecificConversation::ConversationRow' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation, __WorldContext) == 0x000010, "Member 'BPFL_NPCConversationLibrary_C_GetValidSpecificConversation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation, ResultingRow) == 0x000018, "Member 'BPFL_NPCConversationLibrary_C_GetValidSpecificConversation::ResultingRow' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation, ValidConversationRows) == 0x000048, "Member 'BPFL_NPCConversationLibrary_C_GetValidSpecificConversation::ValidConversationRows' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPFL_NPCConversationLibrary_C_GetValidSpecificConversation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_GetValidSpecificConversation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'BPFL_NPCConversationLibrary_C_GetValidSpecificConversation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.PlayConversationRow
// 0x0060 (0x0060 - 0x0000)
struct BPFL_NPCConversationLibrary_C_PlayConversationRow final
{
public:
	TArray<struct FF_NPCConverstation>            ConversationData;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADuneNpcCharacter*                      Initiator;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneNpcCharacter*                      TargetNPC;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RowTracker;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAudio;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RowTrackerResult;                                  // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldContinue;                                    // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ListenerAnimation;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           SpeakerAnimation;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          AudioEvent;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_NPCConversationLibrary_C_PlayConversationRow) == 0x000008, "Wrong alignment on BPFL_NPCConversationLibrary_C_PlayConversationRow");
static_assert(sizeof(BPFL_NPCConversationLibrary_C_PlayConversationRow) == 0x000060, "Wrong size on BPFL_NPCConversationLibrary_C_PlayConversationRow");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, ConversationData) == 0x000000, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::ConversationData' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, Initiator) == 0x000010, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::Initiator' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, TargetNPC) == 0x000018, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::TargetNPC' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, RowTracker) == 0x000020, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::RowTracker' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, PlayAudio) == 0x000024, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::PlayAudio' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, __WorldContext) == 0x000028, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, RowTrackerResult) == 0x000030, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::RowTrackerResult' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, ShouldContinue) == 0x000034, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::ShouldContinue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, ListenerAnimation) == 0x000038, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::ListenerAnimation' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, SpeakerAnimation) == 0x000040, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::SpeakerAnimation' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, AudioEvent) == 0x000048, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::AudioEvent' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, Temp_int_Variable) == 0x000050, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_PlayConversationRow, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'BPFL_NPCConversationLibrary_C_PlayConversationRow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.SetCurrentAnimAndAudio
// 0x0030 (0x0030 - 0x0000)
struct BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio final
{
public:
	class ADuneNpcCharacter*                      TargetNPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AnimMontage;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          AudioEvent;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAttractorSlot*                         CallFunc_GetChosenAttractor_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio) == 0x000008, "Wrong alignment on BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio");
static_assert(sizeof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio) == 0x000030, "Wrong size on BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio, TargetNPC) == 0x000000, "Member 'BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio::TargetNPC' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio, AnimMontage) == 0x000008, "Member 'BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio::AnimMontage' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio, AudioEvent) == 0x000010, "Member 'BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio::AudioEvent' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio, __WorldContext) == 0x000018, "Member 'BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio, CallFunc_GetChosenAttractor_ReturnValue) == 0x000020, "Member 'BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio::CallFunc_GetChosenAttractor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

