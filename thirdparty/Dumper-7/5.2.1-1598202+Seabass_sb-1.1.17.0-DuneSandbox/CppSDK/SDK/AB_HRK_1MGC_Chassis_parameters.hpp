#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_HRK_1MGC_Chassis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function AB_HRK_1MGC_Chassis.AB_HRK_1MGC_Chassis_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_HRK_1MGC_Chassis_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_HRK_1MGC_Chassis_C_AnimGraph) == 0x000008, "Wrong alignment on AB_HRK_1MGC_Chassis_C_AnimGraph");
static_assert(sizeof(AB_HRK_1MGC_Chassis_C_AnimGraph) == 0x000010, "Wrong size on AB_HRK_1MGC_Chassis_C_AnimGraph");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_HRK_1MGC_Chassis_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AB_HRK_1MGC_Chassis.AB_HRK_1MGC_Chassis_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_HRK_1MGC_Chassis_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_HRK_1MGC_Chassis.AB_HRK_1MGC_Chassis_C.ExecuteUbergraph_AB_HRK_1MGC_Chassis
// 0x0068 (0x0068 - 0x0000)
struct AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPosseseablePawnInterface> CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGroundVehicleVariables_Forward;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGroundVehicleVariables_Steering;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGroundVehicleVariables_HorizontalSpeed; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGroundVehicleVariables_HorizontalDirection; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsPossessed;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsInAir;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsBoosting;    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType_1;                         // 0x0033(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RelativeDurability;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType;                           // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BrokenModulesLogicVFX_Durability_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_1_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_2_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis) == 0x000008, "Wrong alignment on AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis");
static_assert(sizeof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis) == 0x000068, "Wrong size on AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, EntryPoint) == 0x000000, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput) == 0x000008, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_Forward) == 0x000018, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_Forward' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_Steering) == 0x000020, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_Steering' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_HorizontalSpeed) == 0x000028, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_HorizontalSpeed' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_HorizontalDirection) == 0x00002C, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_HorizontalDirection' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_bIsPossessed) == 0x000030, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_bIsPossessed' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_bIsInAir) == 0x000031, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_bIsInAir' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetGroundVehicleVariables_bIsBoosting) == 0x000032, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetGroundVehicleVariables_bIsBoosting' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_Event_ModuleType_1) == 0x000033, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_Event_ModuleType_1' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_Event_RelativeDurability) == 0x000034, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_Event_RelativeDurability' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_Event_ModuleType) == 0x000040, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_Event_ModuleType' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_GetOwningComponent_ReturnValue) == 0x000048, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_Event_DeltaTimeX) == 0x000050, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, CallFunc_BrokenModulesLogicVFX_Durability_ImplicitCast) == 0x000058, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::CallFunc_BrokenModulesLogicVFX_Durability_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_StructMemberSet___FloatProperty_1_ImplicitCast) == 0x000060, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_StructMemberSet___FloatProperty_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis, K2Node_StructMemberSet___FloatProperty_2_ImplicitCast) == 0x000064, "Member 'AB_HRK_1MGC_Chassis_C_ExecuteUbergraph_AB_HRK_1MGC_Chassis::K2Node_StructMemberSet___FloatProperty_2_ImplicitCast' has a wrong offset!");

// Function AB_HRK_1MGC_Chassis.AB_HRK_1MGC_Chassis_C.OnVehicleModuleBroken
// 0x0001 (0x0001 - 0x0000)
struct AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken) == 0x000001, "Wrong alignment on AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken");
static_assert(sizeof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken) == 0x000001, "Wrong size on AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken, ModuleType) == 0x000000, "Member 'AB_HRK_1MGC_Chassis_C_OnVehicleModuleBroken::ModuleType' has a wrong offset!");

// Function AB_HRK_1MGC_Chassis.AB_HRK_1MGC_Chassis_C.OnVehicleModuleDurabilityChanged
// 0x0008 (0x0008 - 0x0000)
struct AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RelativeDurability;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged) == 0x000004, "Wrong alignment on AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged");
static_assert(sizeof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged) == 0x000008, "Wrong size on AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged, ModuleType) == 0x000000, "Member 'AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged::ModuleType' has a wrong offset!");
static_assert(offsetof(AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged, RelativeDurability) == 0x000004, "Member 'AB_HRK_1MGC_Chassis_C_OnVehicleModuleDurabilityChanged::RelativeDurability' has a wrong offset!");

}

