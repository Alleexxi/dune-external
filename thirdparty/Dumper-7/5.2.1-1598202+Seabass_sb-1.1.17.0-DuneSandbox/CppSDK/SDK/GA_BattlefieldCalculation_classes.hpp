#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BattlefieldCalculation

#include "Basic.hpp"

#include "GA_EquipableAbility_Base_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_BattlefieldCalculation.GA_BattlefieldCalculation_C
// 0x0030 (0x05B0 - 0x0580)
class UGA_BattlefieldCalculation_C final : public UGA_EquipableAbility_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          EquipableAbilitiesBlocked;                         // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              TelemetryActivationTime;                           // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETelemetryAbilityPhase                        TelemetryPhase;                                    // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETelemetryAbilityOutcome                      TelemetryOutcome;                                  // 0x0599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x2];                                      // 0x059A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           StepTwoActivation;                                 // 0x059C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage_Cast;                                      // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Added_9701B952478ECA293231B89D557AADA2();
	void BindTelemetryEvents();
	void CheckForActiveAbility(bool* bAbilityActive);
	void ExecuteUbergraph_GA_BattlefieldCalculation(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnBlendOut_57ECEAD14B824D83C64B018AA22B624C();
	void OnCancelAbilityByTags(const class UGameplayAbility* Ability, const struct FGameplayTagContainer& WithTags, const struct FGameplayTagContainer& WithoutTags);
	void OnCancelled_57ECEAD14B824D83C64B018AA22B624C();
	void OnCompleted_57ECEAD14B824D83C64B018AA22B624C();
	void OnFinish_66A915074B06DDE26270E5B374EC466D();
	void OnFinish_D33C482E497402F157682998D457EBEF();
	void OnInterrupted_57ECEAD14B824D83C64B018AA22B624C();
	void OnSync_183A95C34E92FC0D5E019589A8D14A7C();
	void Removed_7FCDDED949F89D3D80A219B9925085E1();
	void UnbindTelemetryEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_BattlefieldCalculation_C">();
	}
	static class UGA_BattlefieldCalculation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_BattlefieldCalculation_C>();
	}
};
static_assert(alignof(UGA_BattlefieldCalculation_C) == 0x000008, "Wrong alignment on UGA_BattlefieldCalculation_C");
static_assert(sizeof(UGA_BattlefieldCalculation_C) == 0x0005B0, "Wrong size on UGA_BattlefieldCalculation_C");
static_assert(offsetof(UGA_BattlefieldCalculation_C, UberGraphFrame) == 0x000580, "Member 'UGA_BattlefieldCalculation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_BattlefieldCalculation_C, EquipableAbilitiesBlocked) == 0x000588, "Member 'UGA_BattlefieldCalculation_C::EquipableAbilitiesBlocked' has a wrong offset!");
static_assert(offsetof(UGA_BattlefieldCalculation_C, TelemetryActivationTime) == 0x000590, "Member 'UGA_BattlefieldCalculation_C::TelemetryActivationTime' has a wrong offset!");
static_assert(offsetof(UGA_BattlefieldCalculation_C, TelemetryPhase) == 0x000598, "Member 'UGA_BattlefieldCalculation_C::TelemetryPhase' has a wrong offset!");
static_assert(offsetof(UGA_BattlefieldCalculation_C, TelemetryOutcome) == 0x000599, "Member 'UGA_BattlefieldCalculation_C::TelemetryOutcome' has a wrong offset!");
static_assert(offsetof(UGA_BattlefieldCalculation_C, StepTwoActivation) == 0x00059C, "Member 'UGA_BattlefieldCalculation_C::StepTwoActivation' has a wrong offset!");
static_assert(offsetof(UGA_BattlefieldCalculation_C, Montage_Cast) == 0x0005A8, "Member 'UGA_BattlefieldCalculation_C::Montage_Cast' has a wrong offset!");

}

