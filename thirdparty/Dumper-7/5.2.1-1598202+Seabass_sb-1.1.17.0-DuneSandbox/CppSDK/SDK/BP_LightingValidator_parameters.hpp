#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightingValidator

#include "Basic.hpp"

#include "F_LightComponentValidationDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "F_LightActorValidationDetails_structs.hpp"
#include "DatasmithContent_structs.hpp"
#include "UE4Dreamworld_structs.hpp"


namespace SDK::Params
{

// Function BP_LightingValidator.BP_LightingValidator_C.Append AttenuationRadius Info
// 0x0070 (0x0070 - 0x0000)
struct BP_LightingValidator_C_Append_AttenuationRadius_Info final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Light_Component;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 String_to_append_to;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Info;                                              // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Double_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BuildString_Double_InDouble_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_Append_AttenuationRadius_Info) == 0x000008, "Wrong alignment on BP_LightingValidator_C_Append_AttenuationRadius_Info");
static_assert(sizeof(BP_LightingValidator_C_Append_AttenuationRadius_Info) == 0x000070, "Wrong size on BP_LightingValidator_C_Append_AttenuationRadius_Info");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, Actor) == 0x000000, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::Actor' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, Light_Component) == 0x000008, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, String_to_append_to) == 0x000010, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::String_to_append_to' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, Info) == 0x000020, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::Info' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, CallFunc_Array_AddUnique_ReturnValue) == 0x000030, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, CallFunc_BuildString_Double_ReturnValue) == 0x000038, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::CallFunc_BuildString_Double_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, CallFunc_BuildString_Double_InDouble_ImplicitCast) == 0x000060, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::CallFunc_BuildString_Double_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_AttenuationRadius_Info, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BP_LightingValidator_C_Append_AttenuationRadius_Info::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.Append Mobility Info
// 0x0098 (0x0098 - 0x0000)
struct BP_LightingValidator_C_Append_Mobility_Info final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        Light_Component;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 String_to_append_to;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Info;                                              // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	EComponentMobility                            Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_Append_Mobility_Info) == 0x000008, "Wrong alignment on BP_LightingValidator_C_Append_Mobility_Info");
static_assert(sizeof(BP_LightingValidator_C_Append_Mobility_Info) == 0x000098, "Wrong size on BP_LightingValidator_C_Append_Mobility_Info");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Actor) == 0x000000, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Actor' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Light_Component) == 0x000008, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, String_to_append_to) == 0x000010, "Member 'BP_LightingValidator_C_Append_Mobility_Info::String_to_append_to' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Info) == 0x000020, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Info' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Temp_byte_Variable) == 0x000030, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Temp_string_Variable) == 0x000038, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'BP_LightingValidator_C_Append_Mobility_Info::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Temp_string_Variable_1) == 0x000050, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, Temp_string_Variable_2) == 0x000060, "Member 'BP_LightingValidator_C_Append_Mobility_Info::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, K2Node_Select_Default) == 0x000070, "Member 'BP_LightingValidator_C_Append_Mobility_Info::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, CallFunc_Array_AddUnique_ReturnValue) == 0x000080, "Member 'BP_LightingValidator_C_Append_Mobility_Info::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_Mobility_Info, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_LightingValidator_C_Append_Mobility_Info::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.Append ShadowCasting Info
// 0x0058 (0x0058 - 0x0000)
struct BP_LightingValidator_C_Append_ShadowCasting_Info final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        Light_Component;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 String_to_append_to;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Info;                                              // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_Append_ShadowCasting_Info) == 0x000008, "Wrong alignment on BP_LightingValidator_C_Append_ShadowCasting_Info");
static_assert(sizeof(BP_LightingValidator_C_Append_ShadowCasting_Info) == 0x000058, "Wrong size on BP_LightingValidator_C_Append_ShadowCasting_Info");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, Actor) == 0x000000, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::Actor' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, Light_Component) == 0x000008, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, String_to_append_to) == 0x000010, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::String_to_append_to' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, Info) == 0x000020, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::Info' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, CallFunc_Array_AddUnique_ReturnValue) == 0x000030, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, CallFunc_SelectString_ReturnValue) == 0x000038, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Append_ShadowCasting_Info, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_LightingValidator_C_Append_ShadowCasting_Info::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.BP_GatherWorldData
// 0x02A8 (0x02A8 - 0x0000)
struct BP_LightingValidator_C_BP_GatherWorldData final
{
public:
	class UWorld*                                 World;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        ActorClassObjects;                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class UObject*>                        CallFunc_GetAllObjectsOfClass_OutObjects;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_LightActorValidationDetails         K2Node_MakeStruct_F_LightActorValidationDetails;   // 0x0048(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FF_LightActorValidationDetails         K2Node_MakeStruct_F_LightActorValidationDetails_1; // 0x00A0(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ULightComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LightActorValidationDetails         K2Node_MakeStruct_F_LightActorValidationDetails_2; // 0x0140(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        K2Node_DynamicCast_AsLight_Component;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URectLightComponent*                    K2Node_DynamicCast_AsRect_Light_Component;         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LightComponentValidationDetails     K2Node_MakeStruct_F_LightComponentValidationDetails; // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    K2Node_DynamicCast_AsSpot_Light_Component;         // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LightComponentValidationDetails     K2Node_MakeStruct_F_LightComponentValidationDetails_1; // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LightComponentValidationDetails     K2Node_MakeStruct_F_LightComponentValidationDetails_2; // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FF_LightComponentValidationDetails     K2Node_MakeStruct_F_LightComponentValidationDetails_3; // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast_1; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast_2; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_BP_GatherWorldData) == 0x000008, "Wrong alignment on BP_LightingValidator_C_BP_GatherWorldData");
static_assert(sizeof(BP_LightingValidator_C_BP_GatherWorldData) == 0x0002A8, "Wrong size on BP_LightingValidator_C_BP_GatherWorldData");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, World) == 0x000000, "Member 'BP_LightingValidator_C_BP_GatherWorldData::World' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, ActorClassObjects) == 0x000008, "Member 'BP_LightingValidator_C_BP_GatherWorldData::ActorClassObjects' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_GetAllObjectsOfClass_OutObjects) == 0x000018, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_GetAllObjectsOfClass_OutObjects' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_LightingValidator_C_BP_GatherWorldData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_AddUnique_ReturnValue) == 0x000034, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000038, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_AddUnique_ReturnValue_2) == 0x00003C, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000040, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_AddUnique_ReturnValue_4) == 0x000044, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightActorValidationDetails) == 0x000048, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightActorValidationDetails' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightActorValidationDetails_1) == 0x0000A0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightActorValidationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, Temp_int_Loop_Counter_Variable_1) == 0x0000F8, "Member 'BP_LightingValidator_C_BP_GatherWorldData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_GetObjectClass_ReturnValue) == 0x000108, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000110, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_GetClassDisplayName_ReturnValue) == 0x000120, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Contains_ReturnValue) == 0x000134, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000135, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Contains_ReturnValue_1) == 0x000136, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Contains_ReturnValue_2) == 0x000137, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Contains_ReturnValue_3) == 0x000138, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_BooleanOR_ReturnValue) == 0x000139, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00013A, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightActorValidationDetails_2) == 0x000140, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightActorValidationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, Temp_int_Array_Index_Variable) == 0x000198, "Member 'BP_LightingValidator_C_BP_GatherWorldData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_AsLight_Component) == 0x0001A8, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_AsLight_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x0001B8, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_AsRect_Light_Component) == 0x0001C8, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_AsRect_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_bSuccess_2) == 0x0001D0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightComponentValidationDetails) == 0x0001D8, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightComponentValidationDetails' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_AsSpot_Light_Component) == 0x0001F0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_AsSpot_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightComponentValidationDetails_1) == 0x000200, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightComponentValidationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_AsPoint_Light_Component) == 0x000218, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_AsPoint_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_bSuccess_4) == 0x000220, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightComponentValidationDetails_2) == 0x000228, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightComponentValidationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_GetObjectClass_ReturnValue_1) == 0x000240, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x000248, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_F_LightComponentValidationDetails_3) == 0x000258, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_F_LightComponentValidationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_SwitchString_CmpSuccess) == 0x000270, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, Temp_int_Array_Index_Variable_1) == 0x000274, "Member 'BP_LightingValidator_C_BP_GatherWorldData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, CallFunc_Array_Get_Item_1) == 0x000278, "Member 'BP_LightingValidator_C_BP_GatherWorldData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_AsActor) == 0x000280, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_DynamicCast_bSuccess_5) == 0x000288, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast) == 0x000290, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast_1) == 0x000298, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_BP_GatherWorldData, K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast_2) == 0x0002A0, "Member 'BP_LightingValidator_C_BP_GatherWorldData::K2Node_MakeStruct_AttenuationRadius_3_232C3C064155D4BCAC77F5B07D5084AA_ImplicitCast_2' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.Construct Light Component Details String
// 0x01F8 (0x01F8 - 0x0000)
struct BP_LightingValidator_C_Construct_Light_Component_Details_String final
{
public:
	const class ULightComponent*                  Light_Component;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Light_Component_Index;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ULightComponent*, struct FF_LightComponentValidationDetails> Light_Component_Details; // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class FString                                 Light_Component_Details_String;                    // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FF_LightComponentValidationDetails     CallFunc_Map_Find_Value;                           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EComponentMobility                            Temp_byte_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EDatasmithAreaLightActorShape                 Temp_byte_Variable_1;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Double_ReturnValue;           // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_Construct_Light_Component_Details_String) == 0x000008, "Wrong alignment on BP_LightingValidator_C_Construct_Light_Component_Details_String");
static_assert(sizeof(BP_LightingValidator_C_Construct_Light_Component_Details_String) == 0x0001F8, "Wrong size on BP_LightingValidator_C_Construct_Light_Component_Details_String");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Light_Component) == 0x000000, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Light_Component' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Light_Component_Index) == 0x000008, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Light_Component_Index' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Light_Component_Details) == 0x000010, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Light_Component_Details' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Light_Component_Details_String) == 0x000060, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Light_Component_Details_String' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable) == 0x000070, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Conv_IntToBool_ReturnValue) == 0x000099, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_SelectString_ReturnValue) == 0x0000A0, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_GetObjectName_ReturnValue) == 0x0000B0, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_1) == 0x0000C0, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_2) == 0x0000D0, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_3) == 0x0000E0, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_4) == 0x0000F0, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_byte_Variable) == 0x000100, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_5) == 0x000108, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_6) == 0x000118, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_7) == 0x000128, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_bool_Variable) == 0x000138, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, K2Node_Select_Default) == 0x000140, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_8) == 0x000150, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_string_Variable_9) == 0x000160, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, Temp_byte_Variable_1) == 0x000170, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, K2Node_Select_Default_1) == 0x000178, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, K2Node_Select_Default_2) == 0x000188, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Concat_StrStr_ReturnValue) == 0x000198, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001A8, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001B8, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001C8, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001D8, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_Construct_Light_Component_Details_String, CallFunc_BuildString_Double_ReturnValue) == 0x0001E8, "Member 'BP_LightingValidator_C_Construct_Light_Component_Details_String::CallFunc_BuildString_Double_ReturnValue' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.ExecuteUbergraph_BP_LightingValidator
// 0x0058 (0x0058 - 0x0000)
struct BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 K2Node_Event_World;                                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValidationWorldSection                K2Node_Event_WorldSection;                         // 0x0010(0x0040)(ConstParm, NoDestructor)
	class UWorld*                                 K2Node_Event_World_1;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator) == 0x000008, "Wrong alignment on BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator");
static_assert(sizeof(BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator) == 0x000058, "Wrong size on BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator");
static_assert(offsetof(BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator, EntryPoint) == 0x000000, "Member 'BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator, K2Node_Event_World) == 0x000008, "Member 'BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator::K2Node_Event_World' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator, K2Node_Event_WorldSection) == 0x000010, "Member 'BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator::K2Node_Event_WorldSection' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator, K2Node_Event_World_1) == 0x000050, "Member 'BP_LightingValidator_C_ExecuteUbergraph_BP_LightingValidator::K2Node_Event_World_1' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.GatherWorldData
// 0x0008 (0x0008 - 0x0000)
struct BP_LightingValidator_C_GatherWorldData final
{
public:
	class UWorld*                                 World;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_GatherWorldData) == 0x000008, "Wrong alignment on BP_LightingValidator_C_GatherWorldData");
static_assert(sizeof(BP_LightingValidator_C_GatherWorldData) == 0x000008, "Wrong size on BP_LightingValidator_C_GatherWorldData");
static_assert(offsetof(BP_LightingValidator_C_GatherWorldData, World) == 0x000000, "Member 'BP_LightingValidator_C_GatherWorldData::World' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.GatherWorldSectionData
// 0x0048 (0x0048 - 0x0000)
struct BP_LightingValidator_C_GatherWorldSectionData final
{
public:
	class UWorld*                                 World;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FValidationWorldSection                WorldSection;                                      // 0x0008(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_LightingValidator_C_GatherWorldSectionData) == 0x000008, "Wrong alignment on BP_LightingValidator_C_GatherWorldSectionData");
static_assert(sizeof(BP_LightingValidator_C_GatherWorldSectionData) == 0x000048, "Wrong size on BP_LightingValidator_C_GatherWorldSectionData");
static_assert(offsetof(BP_LightingValidator_C_GatherWorldSectionData, World) == 0x000000, "Member 'BP_LightingValidator_C_GatherWorldSectionData::World' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_GatherWorldSectionData, WorldSection) == 0x000008, "Member 'BP_LightingValidator_C_GatherWorldSectionData::WorldSection' has a wrong offset!");

// Function BP_LightingValidator.BP_LightingValidator_C.ValidateWorld
// 0x0298 (0x0298 - 0x0000)
struct BP_LightingValidator_C_ValidateWorld final
{
public:
	bool                                          bSectionsPassedValidation;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PassedValidation;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LightActorValidationDetails         CallFunc_Map_Find_Value;                           // 0x00A0(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULightComponent*>                CallFunc_Map_Keys_Keys_1;                          // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys_2;                          // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FF_LightActorValidationDetails         CallFunc_Map_Find_Value_1;                         // 0x0138(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULightComponent*>                CallFunc_Map_Keys_Keys_3;                          // 0x01A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ULightComponent*                        CallFunc_Array_Get_Item_3;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Construct_Light_Component_Details_String_Light_Component_Details_String; // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys_4;                          // 0x01D8(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys_5;                          // 0x01E8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20E[0x2];                                      // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_2;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue_1;            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue_2;            // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue_3;            // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_Array_Get_Item_6;                         // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue_4;            // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Construct_Light_Component_Details_String_Light_Component_Details_String_1; // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetValidationWorld_ReturnValue;           // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingValidator_C_ValidateWorld) == 0x000008, "Wrong alignment on BP_LightingValidator_C_ValidateWorld");
static_assert(sizeof(BP_LightingValidator_C_ValidateWorld) == 0x000298, "Wrong size on BP_LightingValidator_C_ValidateWorld");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, bSectionsPassedValidation) == 0x000000, "Member 'BP_LightingValidator_C_ValidateWorld::bSectionsPassedValidation' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, ReturnValue) == 0x000001, "Member 'BP_LightingValidator_C_ValidateWorld::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, PassedValidation) == 0x000002, "Member 'BP_LightingValidator_C_ValidateWorld::PassedValidation' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable_3) == 0x000028, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable_4) == 0x000034, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable_4) == 0x000038, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable_5) == 0x00003C, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable_5) == 0x000044, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Loop_Counter_Variable_6) == 0x000048, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_5) == 0x00004C, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_6) == 0x000050, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_BuildString_Int_ReturnValue) == 0x000070, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Keys_Keys_1) == 0x000100, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_3) == 0x000110, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Keys_Keys_2) == 0x000118, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue_2) == 0x000128, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Find_Value_1) == 0x000138, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Find_ReturnValue_1) == 0x000190, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_4) == 0x000194, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue_3) == 0x000198, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Keys_Keys_3) == 0x0001A0, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item_3) == 0x0001B0, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_5) == 0x0001B8, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Construct_Light_Component_Details_String_Light_Component_Details_String) == 0x0001C0, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Construct_Light_Component_Details_String_Light_Component_Details_String' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001D0, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Keys_Keys_4) == 0x0001D8, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Keys_Keys_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Keys_Keys_5) == 0x0001E8, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Keys_Keys_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item_4) == 0x0001F8, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item_5) == 0x000200, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_6) == 0x000208, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00020C, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue_5) == 0x00020D, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Length_ReturnValue_7) == 0x000210, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000214, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Less_IntInt_ReturnValue_6) == 0x000215, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Length_ReturnValue) == 0x000218, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Length_ReturnValue_1) == 0x00021C, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Map_Length_ReturnValue_2) == 0x000220, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Map_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_7) == 0x000224, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Add_IntInt_ReturnValue_8) == 0x000228, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_BuildString_Int_ReturnValue_1) == 0x000230, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_BuildString_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_BuildString_Int_ReturnValue_2) == 0x000240, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_BuildString_Int_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, Temp_int_Array_Index_Variable_6) == 0x000250, "Member 'BP_LightingValidator_C_ValidateWorld::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_BuildString_Int_ReturnValue_3) == 0x000258, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_BuildString_Int_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Array_Get_Item_6) == 0x000268, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_BuildString_Int_ReturnValue_4) == 0x000270, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_BuildString_Int_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_Construct_Light_Component_Details_String_Light_Component_Details_String_1) == 0x000280, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_Construct_Light_Component_Details_String_Light_Component_Details_String_1' has a wrong offset!");
static_assert(offsetof(BP_LightingValidator_C_ValidateWorld, CallFunc_GetValidationWorld_ReturnValue) == 0x000290, "Member 'BP_LightingValidator_C_ValidateWorld::CallFunc_GetValidationWorld_ReturnValue' has a wrong offset!");

}

