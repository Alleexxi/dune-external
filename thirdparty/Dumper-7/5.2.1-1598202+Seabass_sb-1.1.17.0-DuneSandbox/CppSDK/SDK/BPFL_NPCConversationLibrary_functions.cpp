#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_NPCConversationLibrary

#include "Basic.hpp"

#include "BPFL_NPCConversationLibrary_classes.hpp"
#include "BPFL_NPCConversationLibrary_parameters.hpp"


namespace SDK
{

// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.GetValidConversation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneNpcCharacter*                Initiator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADuneNpcCharacter*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FF_NPCConversation_DTRow*        ResultingRow                                           (Parm, OutParm, HasGetValueTypeHash)

void UBPFL_NPCConversationLibrary_C::GetValidConversation(class ADuneNpcCharacter* Initiator, class ADuneNpcCharacter* Target, class UObject* __WorldContext, struct FF_NPCConversation_DTRow* ResultingRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_NPCConversationLibrary_C", "GetValidConversation");

	Params::BPFL_NPCConversationLibrary_C_GetValidConversation Parms{};

	Parms.Initiator = Initiator;
	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ResultingRow != nullptr)
		*ResultingRow = std::move(Parms.ResultingRow);
}


// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.GetValidSpecificConversation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       ConversationRow                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FF_NPCConversation_DTRow*        ResultingRow                                           (Parm, OutParm, HasGetValueTypeHash)

void UBPFL_NPCConversationLibrary_C::GetValidSpecificConversation(const struct FDataTableRowHandle& ConversationRow, class UObject* __WorldContext, struct FF_NPCConversation_DTRow* ResultingRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_NPCConversationLibrary_C", "GetValidSpecificConversation");

	Params::BPFL_NPCConversationLibrary_C_GetValidSpecificConversation Parms{};

	Parms.ConversationRow = std::move(ConversationRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ResultingRow != nullptr)
		*ResultingRow = std::move(Parms.ResultingRow);
}


// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.PlayConversationRow
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FF_NPCConverstation>&     ConversationData                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ADuneNpcCharacter*                Initiator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADuneNpcCharacter*                TargetNPC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   RowTracker                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayAudio                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  RowTrackerResult                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldContinue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_NPCConversationLibrary_C::PlayConversationRow(TArray<struct FF_NPCConverstation>& ConversationData, class ADuneNpcCharacter* Initiator, class ADuneNpcCharacter* TargetNPC, int32 RowTracker, bool PlayAudio, class UObject* __WorldContext, int32* RowTrackerResult, bool* ShouldContinue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_NPCConversationLibrary_C", "PlayConversationRow");

	Params::BPFL_NPCConversationLibrary_C_PlayConversationRow Parms{};

	Parms.ConversationData = std::move(ConversationData);
	Parms.Initiator = Initiator;
	Parms.TargetNPC = TargetNPC;
	Parms.RowTracker = RowTracker;
	Parms.PlayAudio = PlayAudio;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	ConversationData = std::move(Parms.ConversationData);

	if (RowTrackerResult != nullptr)
		*RowTrackerResult = Parms.RowTrackerResult;

	if (ShouldContinue != nullptr)
		*ShouldContinue = Parms.ShouldContinue;
}


// Function BPFL_NPCConversationLibrary.BPFL_NPCConversationLibrary_C.SetCurrentAnimAndAudio
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneNpcCharacter*                TargetNPC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UFcAudioEvent*                    AudioEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_NPCConversationLibrary_C::SetCurrentAnimAndAudio(class ADuneNpcCharacter* TargetNPC, class UAnimMontage* AnimMontage, class UFcAudioEvent* AudioEvent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_NPCConversationLibrary_C", "SetCurrentAnimAndAudio");

	Params::BPFL_NPCConversationLibrary_C_SetCurrentAnimAndAudio Parms{};

	Parms.TargetNPC = TargetNPC;
	Parms.AnimMontage = AnimMontage;
	Parms.AudioEvent = AudioEvent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

