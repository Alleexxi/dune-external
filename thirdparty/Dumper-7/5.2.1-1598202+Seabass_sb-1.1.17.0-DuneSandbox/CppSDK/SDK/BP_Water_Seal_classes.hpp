#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Water_Seal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Water_Seal.BP_Water_Seal_C
// 0x0100 (0x0450 - 0x0350)
class ABP_Water_Seal_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        ToolStalkAnchor;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AutoPlayAudioComponent_C*           BP_AutoPlayAudioComponent;                         // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageableActorComponent*              DamageableActor;                                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SimulationProgress_SimProgress_0AED393A4C4DC5EBA14C4BA56D7E6DC1; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SimulationProgress__Direction_0AED393A4C4DC5EBA14C4BA56D7E6DC1; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SimulationProgress;                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RespawnTime;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRespawn;                                     // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFcAudioEvent*                          TearAudioEvent;                                    // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x03A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnOpen;                                            // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FGameItemInfo>                  Items_to_Add;                                      // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Item_Add_Details;                                  // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        RespawnPlayerMinRadius;                            // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Object_Types;                                      // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TraceSuccessForAny;                                // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClosed;                                          // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class UBP_ToolStalkSettings_C> ToolStalkSettings;                                 // 0x0410(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UToolStalkSettings*                     ToolStalkSettingsPtr;                              // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, DuplicateTransient, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TSubclassOf<class UDuneDamageType>            Damage_Type_Class;                                 // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void BndEvt__BP_ClothBarrier_1_DamageableActor_K2Node_ComponentBoundEvent_0_HandleDamageDealtOnServerSignature__DelegateSignature(const TArray<struct FMulticastDamageInfo>& FrameDamageInfo);
	void ClothBarrier_Show();
	void ExecuteUbergraph_BP_Water_Seal(int32 EntryPoint);
	void OnLoaded_492D18534A86001947A3D7A2CBA5FDD5(class UObject* Loaded);
	void OnRep_IsOpen();
	void ReceiveBeginPlay();
	void SetWaterSealState(bool IsOpen_0, bool SkipVisualUpdate);
	void SimulationProgress__FinishedFunc();
	void SimulationProgress__UpdateFunc();
	void StartRespawnTimer();
	void WaterSeal_Close_Immediately();
	void WaterSeal_Open();
	void WaterSeal_Open_Immediately();
	void WindSealUpdate();

	bool CanPlayerInteractWith(const class ADunePlayerCharacter* PlayerCharacter) const;
	struct FVector GetLocationForToolStalk(const struct FHitResult& DetectingHit) const;
	const class UToolStalkSettings* GetToolStalkSettings() const;
	bool ShouldShowToolStalk(const struct FHitResult& DetectingHit) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Water_Seal_C">();
	}
	static class ABP_Water_Seal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Water_Seal_C>();
	}
};
static_assert(alignof(ABP_Water_Seal_C) == 0x000008, "Wrong alignment on ABP_Water_Seal_C");
static_assert(sizeof(ABP_Water_Seal_C) == 0x000450, "Wrong size on ABP_Water_Seal_C");
static_assert(offsetof(ABP_Water_Seal_C, UberGraphFrame) == 0x000350, "Member 'ABP_Water_Seal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, ToolStalkAnchor) == 0x000358, "Member 'ABP_Water_Seal_C::ToolStalkAnchor' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, BP_AutoPlayAudioComponent) == 0x000360, "Member 'ABP_Water_Seal_C::BP_AutoPlayAudioComponent' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, DamageableActor) == 0x000368, "Member 'ABP_Water_Seal_C::DamageableActor' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, StaticMesh) == 0x000370, "Member 'ABP_Water_Seal_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, DefaultSceneRoot) == 0x000378, "Member 'ABP_Water_Seal_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, SimulationProgress_SimProgress_0AED393A4C4DC5EBA14C4BA56D7E6DC1) == 0x000380, "Member 'ABP_Water_Seal_C::SimulationProgress_SimProgress_0AED393A4C4DC5EBA14C4BA56D7E6DC1' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, SimulationProgress__Direction_0AED393A4C4DC5EBA14C4BA56D7E6DC1) == 0x000384, "Member 'ABP_Water_Seal_C::SimulationProgress__Direction_0AED393A4C4DC5EBA14C4BA56D7E6DC1' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, SimulationProgress) == 0x000388, "Member 'ABP_Water_Seal_C::SimulationProgress' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, RespawnTime) == 0x000390, "Member 'ABP_Water_Seal_C::RespawnTime' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, ShouldRespawn) == 0x000398, "Member 'ABP_Water_Seal_C::ShouldRespawn' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, TearAudioEvent) == 0x0003A0, "Member 'ABP_Water_Seal_C::TearAudioEvent' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, IsOpen) == 0x0003A8, "Member 'ABP_Water_Seal_C::IsOpen' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, OnOpen) == 0x0003B0, "Member 'ABP_Water_Seal_C::OnOpen' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, Items_to_Add) == 0x0003C0, "Member 'ABP_Water_Seal_C::Items_to_Add' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, Item_Add_Details) == 0x0003D0, "Member 'ABP_Water_Seal_C::Item_Add_Details' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, RespawnPlayerMinRadius) == 0x0003E0, "Member 'ABP_Water_Seal_C::RespawnPlayerMinRadius' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, Object_Types) == 0x0003E8, "Member 'ABP_Water_Seal_C::Object_Types' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, TraceSuccessForAny) == 0x0003F8, "Member 'ABP_Water_Seal_C::TraceSuccessForAny' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, OnClosed) == 0x000400, "Member 'ABP_Water_Seal_C::OnClosed' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, ToolStalkSettings) == 0x000410, "Member 'ABP_Water_Seal_C::ToolStalkSettings' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, ToolStalkSettingsPtr) == 0x000440, "Member 'ABP_Water_Seal_C::ToolStalkSettingsPtr' has a wrong offset!");
static_assert(offsetof(ABP_Water_Seal_C, Damage_Type_Class) == 0x000448, "Member 'ABP_Water_Seal_C::Damage_Type_Class' has a wrong offset!");

}

