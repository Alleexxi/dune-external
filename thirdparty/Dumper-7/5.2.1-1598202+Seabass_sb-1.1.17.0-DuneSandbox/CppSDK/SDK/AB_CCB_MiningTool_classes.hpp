#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CCB_MiningTool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ControlRig_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_CCB_MiningTool.AB_CCB_MiningTool_C
// 0x0750 (0x0AC0 - 0x0370)
class UAB_CCB_MiningTool_C final : public UDuneWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x03A8(0x0470)()
	uint8                                         Pad_818[0x8];                                      // 0x0818(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0820(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0880(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x08E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0928(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0948(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0990(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x09B0(0x00C8)()
	double                                        __CustomProperty_TurretRotation_59E157A4411E90F18FB7658A6707CB52; // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_AimPitch_59E157A4411E90F18FB7658A6707CB52; // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Time_X;                                      // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneVehicleTurret*                     DuneTurret;                                        // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        TurretRotation;                                    // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimPitch;                                          // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPossessed;                                      // 0x0AB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0x7];                                      // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TankBase_C*                         As_BP_Tank_Base;                                   // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CalculateTurretRotation();
	void ExecuteUbergraph_AB_CCB_MiningTool(int32 EntryPoint);
	void InitReferences();
	void SetTurretRotation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_CCB_MiningTool_C">();
	}
	static class UAB_CCB_MiningTool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_CCB_MiningTool_C>();
	}
};
static_assert(alignof(UAB_CCB_MiningTool_C) == 0x000010, "Wrong alignment on UAB_CCB_MiningTool_C");
static_assert(sizeof(UAB_CCB_MiningTool_C) == 0x000AC0, "Wrong size on UAB_CCB_MiningTool_C");
static_assert(offsetof(UAB_CCB_MiningTool_C, UberGraphFrame) == 0x000370, "Member 'UAB_CCB_MiningTool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UAB_CCB_MiningTool_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UAB_CCB_MiningTool_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_ControlRig) == 0x0003A8, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_TransitionResult_1) == 0x000820, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_TransitionResult) == 0x000880, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_SequencePlayer_1) == 0x0008E0, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_StateResult_1) == 0x000928, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_SequencePlayer) == 0x000948, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_StateResult) == 0x000990, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AnimGraphNode_StateMachine) == 0x0009B0, "Member 'UAB_CCB_MiningTool_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, __CustomProperty_TurretRotation_59E157A4411E90F18FB7658A6707CB52) == 0x000A78, "Member 'UAB_CCB_MiningTool_C::__CustomProperty_TurretRotation_59E157A4411E90F18FB7658A6707CB52' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, __CustomProperty_AimPitch_59E157A4411E90F18FB7658A6707CB52) == 0x000A80, "Member 'UAB_CCB_MiningTool_C::__CustomProperty_AimPitch_59E157A4411E90F18FB7658A6707CB52' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, Delta_Time_X) == 0x000A88, "Member 'UAB_CCB_MiningTool_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, DuneTurret) == 0x000A90, "Member 'UAB_CCB_MiningTool_C::DuneTurret' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, DuneCharacter) == 0x000A98, "Member 'UAB_CCB_MiningTool_C::DuneCharacter' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, TurretRotation) == 0x000AA0, "Member 'UAB_CCB_MiningTool_C::TurretRotation' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, AimPitch) == 0x000AA8, "Member 'UAB_CCB_MiningTool_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, bIsPossessed) == 0x000AB0, "Member 'UAB_CCB_MiningTool_C::bIsPossessed' has a wrong offset!");
static_assert(offsetof(UAB_CCB_MiningTool_C, As_BP_Tank_Base) == 0x000AB8, "Member 'UAB_CCB_MiningTool_C::As_BP_Tank_Base' has a wrong offset!");

}

