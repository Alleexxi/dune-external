#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LinearProgressBar

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_LinearProgressBar.W_LinearProgressBar_C.ExecuteUbergraph_W_LinearProgressBar
// 0x0050 (0x0050 - 0x0000)
struct W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar) == 0x000008, "Wrong alignment on W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar");
static_assert(sizeof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar) == 0x000050, "Wrong size on W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, EntryPoint) == 0x000000, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, Temp_bool_Variable) == 0x000004, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, Temp_real_Variable) == 0x000010, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, Temp_real_Variable_1) == 0x000014, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, Temp_bool_Variable_1) == 0x000018, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, Temp_real_Variable_2) == 0x00001C, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, Temp_real_Variable_3) == 0x000020, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, K2Node_Event_IsDesignTime) == 0x000024, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, K2Node_Select_Default) == 0x000028, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, K2Node_Select_Default_1) == 0x00002C, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, CallFunc_BreakVector2D_X) == 0x000030, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000040, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000044, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000048, "Member 'W_LinearProgressBar_C_ExecuteUbergraph_W_LinearProgressBar::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function W_LinearProgressBar.W_LinearProgressBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LinearProgressBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LinearProgressBar_C_PreConstruct) == 0x000001, "Wrong alignment on W_LinearProgressBar_C_PreConstruct");
static_assert(sizeof(W_LinearProgressBar_C_PreConstruct) == 0x000001, "Wrong size on W_LinearProgressBar_C_PreConstruct");
static_assert(offsetof(W_LinearProgressBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LinearProgressBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

