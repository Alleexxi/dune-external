#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CountdownTimerFeedbackWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CountdownTimerFeedbackWidget.W_CountdownTimerFeedbackWidget_C
// 0x0020 (0x0430 - 0x0410)
class UW_CountdownTimerFeedbackWidget_C final : public UCountdownTimerFeedbackWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                m_MainGlow;                                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       m_TimerRemainingTime;                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       m_TimerTitleText;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_CountdownTimerFeedbackWidget(int32 EntryPoint);
	void BP_UpdateRemainingTimeText(const class FText& RemainingTimeText);
	void BP_SetupFeedbackInfoOnTimerStarted(const class FText& FeedbackText, const class FText& RemainingTimeText, const struct FLinearColor& BackgroundColor, const bool bDisplayRemainingTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CountdownTimerFeedbackWidget_C">();
	}
	static class UW_CountdownTimerFeedbackWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CountdownTimerFeedbackWidget_C>();
	}
};
static_assert(alignof(UW_CountdownTimerFeedbackWidget_C) == 0x000010, "Wrong alignment on UW_CountdownTimerFeedbackWidget_C");
static_assert(sizeof(UW_CountdownTimerFeedbackWidget_C) == 0x000430, "Wrong size on UW_CountdownTimerFeedbackWidget_C");
static_assert(offsetof(UW_CountdownTimerFeedbackWidget_C, UberGraphFrame) == 0x000410, "Member 'UW_CountdownTimerFeedbackWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CountdownTimerFeedbackWidget_C, m_MainGlow) == 0x000418, "Member 'UW_CountdownTimerFeedbackWidget_C::m_MainGlow' has a wrong offset!");
static_assert(offsetof(UW_CountdownTimerFeedbackWidget_C, m_TimerRemainingTime) == 0x000420, "Member 'UW_CountdownTimerFeedbackWidget_C::m_TimerRemainingTime' has a wrong offset!");
static_assert(offsetof(UW_CountdownTimerFeedbackWidget_C, m_TimerTitleText) == 0x000428, "Member 'UW_CountdownTimerFeedbackWidget_C::m_TimerTitleText' has a wrong offset!");

}

