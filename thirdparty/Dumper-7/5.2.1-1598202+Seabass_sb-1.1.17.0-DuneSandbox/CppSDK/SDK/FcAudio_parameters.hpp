#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FcAudio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FcAudio.FcAudioComponent.PostAudioEvent
// 0x0008 (0x0008 - 0x0000)
struct FcAudioComponent_PostAudioEvent final
{
public:
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioComponent_PostAudioEvent) == 0x000008, "Wrong alignment on FcAudioComponent_PostAudioEvent");
static_assert(sizeof(FcAudioComponent_PostAudioEvent) == 0x000008, "Wrong size on FcAudioComponent_PostAudioEvent");
static_assert(offsetof(FcAudioComponent_PostAudioEvent, AudioEvent) == 0x000000, "Member 'FcAudioComponent_PostAudioEvent::AudioEvent' has a wrong offset!");

// Function FcAudio.FcAudioComponent.PostAutoCulledAudioEvent
// 0x0008 (0x0008 - 0x0000)
struct FcAudioComponent_PostAutoCulledAudioEvent final
{
public:
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioComponent_PostAutoCulledAudioEvent) == 0x000008, "Wrong alignment on FcAudioComponent_PostAutoCulledAudioEvent");
static_assert(sizeof(FcAudioComponent_PostAutoCulledAudioEvent) == 0x000008, "Wrong size on FcAudioComponent_PostAutoCulledAudioEvent");
static_assert(offsetof(FcAudioComponent_PostAutoCulledAudioEvent, AudioEvent) == 0x000000, "Member 'FcAudioComponent_PostAutoCulledAudioEvent::AudioEvent' has a wrong offset!");

// Function FcAudio.FcAudioComponent.StopAudioEvent
// 0x0008 (0x0008 - 0x0000)
struct FcAudioComponent_StopAudioEvent final
{
public:
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioComponent_StopAudioEvent) == 0x000008, "Wrong alignment on FcAudioComponent_StopAudioEvent");
static_assert(sizeof(FcAudioComponent_StopAudioEvent) == 0x000008, "Wrong size on FcAudioComponent_StopAudioEvent");
static_assert(offsetof(FcAudioComponent_StopAudioEvent, AudioEvent) == 0x000000, "Member 'FcAudioComponent_StopAudioEvent::AudioEvent' has a wrong offset!");

// Function FcAudio.FcAudioActorBase.GetAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct FcAudioActorBase_GetAudioComponent final
{
public:
	class UFcAudioComponent*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioActorBase_GetAudioComponent) == 0x000008, "Wrong alignment on FcAudioActorBase_GetAudioComponent");
static_assert(sizeof(FcAudioActorBase_GetAudioComponent) == 0x000008, "Wrong size on FcAudioActorBase_GetAudioComponent");
static_assert(offsetof(FcAudioActorBase_GetAudioComponent, ReturnValue) == 0x000000, "Member 'FcAudioActorBase_GetAudioComponent::ReturnValue' has a wrong offset!");

// Function FcAudio.FcAudioTriggerVolume.OnVolumeEntered
// 0x0010 (0x0010 - 0x0000)
struct FcAudioTriggerVolume_OnVolumeEntered final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioTriggerVolume_OnVolumeEntered) == 0x000008, "Wrong alignment on FcAudioTriggerVolume_OnVolumeEntered");
static_assert(sizeof(FcAudioTriggerVolume_OnVolumeEntered) == 0x000010, "Wrong size on FcAudioTriggerVolume_OnVolumeEntered");
static_assert(offsetof(FcAudioTriggerVolume_OnVolumeEntered, OverlappedActor) == 0x000000, "Member 'FcAudioTriggerVolume_OnVolumeEntered::OverlappedActor' has a wrong offset!");
static_assert(offsetof(FcAudioTriggerVolume_OnVolumeEntered, OtherActor) == 0x000008, "Member 'FcAudioTriggerVolume_OnVolumeEntered::OtherActor' has a wrong offset!");

// Function FcAudio.FcAudioTriggerVolume.OnVolumeExited
// 0x0010 (0x0010 - 0x0000)
struct FcAudioTriggerVolume_OnVolumeExited final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioTriggerVolume_OnVolumeExited) == 0x000008, "Wrong alignment on FcAudioTriggerVolume_OnVolumeExited");
static_assert(sizeof(FcAudioTriggerVolume_OnVolumeExited) == 0x000010, "Wrong size on FcAudioTriggerVolume_OnVolumeExited");
static_assert(offsetof(FcAudioTriggerVolume_OnVolumeExited, OverlappedActor) == 0x000000, "Member 'FcAudioTriggerVolume_OnVolumeExited::OverlappedActor' has a wrong offset!");
static_assert(offsetof(FcAudioTriggerVolume_OnVolumeExited, OtherActor) == 0x000008, "Member 'FcAudioTriggerVolume_OnVolumeExited::OtherActor' has a wrong offset!");

// Function FcAudio.FcAudioEventSection.SetAudioEvent
// 0x0008 (0x0008 - 0x0000)
struct FcAudioEventSection_SetAudioEvent final
{
public:
	class UFcAudioEvent*                          InAudioEvent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioEventSection_SetAudioEvent) == 0x000008, "Wrong alignment on FcAudioEventSection_SetAudioEvent");
static_assert(sizeof(FcAudioEventSection_SetAudioEvent) == 0x000008, "Wrong size on FcAudioEventSection_SetAudioEvent");
static_assert(offsetof(FcAudioEventSection_SetAudioEvent, InAudioEvent) == 0x000000, "Member 'FcAudioEventSection_SetAudioEvent::InAudioEvent' has a wrong offset!");

// Function FcAudio.FcAudioEventSection.SetStopAtSectionEnd
// 0x0001 (0x0001 - 0x0000)
struct FcAudioEventSection_SetStopAtSectionEnd final
{
public:
	bool                                          bStopAtSectionEnd;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioEventSection_SetStopAtSectionEnd) == 0x000001, "Wrong alignment on FcAudioEventSection_SetStopAtSectionEnd");
static_assert(sizeof(FcAudioEventSection_SetStopAtSectionEnd) == 0x000001, "Wrong size on FcAudioEventSection_SetStopAtSectionEnd");
static_assert(offsetof(FcAudioEventSection_SetStopAtSectionEnd, bStopAtSectionEnd) == 0x000000, "Member 'FcAudioEventSection_SetStopAtSectionEnd::bStopAtSectionEnd' has a wrong offset!");

// Function FcAudio.FcAudioEventSection.GetAudioEvent
// 0x0008 (0x0008 - 0x0000)
struct FcAudioEventSection_GetAudioEvent final
{
public:
	class UFcAudioEvent*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioEventSection_GetAudioEvent) == 0x000008, "Wrong alignment on FcAudioEventSection_GetAudioEvent");
static_assert(sizeof(FcAudioEventSection_GetAudioEvent) == 0x000008, "Wrong size on FcAudioEventSection_GetAudioEvent");
static_assert(offsetof(FcAudioEventSection_GetAudioEvent, ReturnValue) == 0x000000, "Member 'FcAudioEventSection_GetAudioEvent::ReturnValue' has a wrong offset!");

// Function FcAudio.FcAudioEventSection.GetStopAtSectionEnd
// 0x0001 (0x0001 - 0x0000)
struct FcAudioEventSection_GetStopAtSectionEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioEventSection_GetStopAtSectionEnd) == 0x000001, "Wrong alignment on FcAudioEventSection_GetStopAtSectionEnd");
static_assert(sizeof(FcAudioEventSection_GetStopAtSectionEnd) == 0x000001, "Wrong size on FcAudioEventSection_GetStopAtSectionEnd");
static_assert(offsetof(FcAudioEventSection_GetStopAtSectionEnd, ReturnValue) == 0x000000, "Member 'FcAudioEventSection_GetStopAtSectionEnd::ReturnValue' has a wrong offset!");

// Function FcAudio.FcAudioRtpcSection.AddRtpcValueKey
// 0x0010 (0x0010 - 0x0000)
struct FcAudioRtpcSection_AddRtpcValueKey final
{
public:
	class UAkRtpc*                                InRtpc;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x0008(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FcAudioRtpcSection_AddRtpcValueKey) == 0x000008, "Wrong alignment on FcAudioRtpcSection_AddRtpcValueKey");
static_assert(sizeof(FcAudioRtpcSection_AddRtpcValueKey) == 0x000010, "Wrong size on FcAudioRtpcSection_AddRtpcValueKey");
static_assert(offsetof(FcAudioRtpcSection_AddRtpcValueKey, InRtpc) == 0x000000, "Member 'FcAudioRtpcSection_AddRtpcValueKey::InRtpc' has a wrong offset!");
static_assert(offsetof(FcAudioRtpcSection_AddRtpcValueKey, InTime) == 0x000008, "Member 'FcAudioRtpcSection_AddRtpcValueKey::InTime' has a wrong offset!");
static_assert(offsetof(FcAudioRtpcSection_AddRtpcValueKey, InValue) == 0x00000C, "Member 'FcAudioRtpcSection_AddRtpcValueKey::InValue' has a wrong offset!");

// Function FcAudio.AudioSystemStatics.GetFirstPlayerCameraManager
// 0x0010 (0x0010 - 0x0000)
struct AudioSystemStatics_GetFirstPlayerCameraManager final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerCameraManager*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioSystemStatics_GetFirstPlayerCameraManager) == 0x000008, "Wrong alignment on AudioSystemStatics_GetFirstPlayerCameraManager");
static_assert(sizeof(AudioSystemStatics_GetFirstPlayerCameraManager) == 0x000010, "Wrong size on AudioSystemStatics_GetFirstPlayerCameraManager");
static_assert(offsetof(AudioSystemStatics_GetFirstPlayerCameraManager, WorldContextObject) == 0x000000, "Member 'AudioSystemStatics_GetFirstPlayerCameraManager::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_GetFirstPlayerCameraManager, ReturnValue) == 0x000008, "Member 'AudioSystemStatics_GetFirstPlayerCameraManager::ReturnValue' has a wrong offset!");

// Function FcAudio.AudioSystemStatics.GetFirstPlayerPawn
// 0x0010 (0x0010 - 0x0000)
struct AudioSystemStatics_GetFirstPlayerPawn final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioSystemStatics_GetFirstPlayerPawn) == 0x000008, "Wrong alignment on AudioSystemStatics_GetFirstPlayerPawn");
static_assert(sizeof(AudioSystemStatics_GetFirstPlayerPawn) == 0x000010, "Wrong size on AudioSystemStatics_GetFirstPlayerPawn");
static_assert(offsetof(AudioSystemStatics_GetFirstPlayerPawn, WorldContextObject) == 0x000000, "Member 'AudioSystemStatics_GetFirstPlayerPawn::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_GetFirstPlayerPawn, ReturnValue) == 0x000008, "Member 'AudioSystemStatics_GetFirstPlayerPawn::ReturnValue' has a wrong offset!");

// Function FcAudio.AudioSystemStatics.LoadAndPlayAudioEventGlobal
// 0x0038 (0x0038 - 0x0000)
struct AudioSystemStatics_LoadAndPlayAudioEventGlobal final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFcAudioEvent>           AudioEventSoftPtr;                                 // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioSystemStatics_LoadAndPlayAudioEventGlobal) == 0x000008, "Wrong alignment on AudioSystemStatics_LoadAndPlayAudioEventGlobal");
static_assert(sizeof(AudioSystemStatics_LoadAndPlayAudioEventGlobal) == 0x000038, "Wrong size on AudioSystemStatics_LoadAndPlayAudioEventGlobal");
static_assert(offsetof(AudioSystemStatics_LoadAndPlayAudioEventGlobal, WorldContextObject) == 0x000000, "Member 'AudioSystemStatics_LoadAndPlayAudioEventGlobal::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_LoadAndPlayAudioEventGlobal, AudioEventSoftPtr) == 0x000008, "Member 'AudioSystemStatics_LoadAndPlayAudioEventGlobal::AudioEventSoftPtr' has a wrong offset!");

// Function FcAudio.AudioSystemStatics.PlayAudioEvent
// 0x0018 (0x0018 - 0x0000)
struct AudioSystemStatics_PlayAudioEvent final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USceneComponent*                  OptionalFollowComponent;                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioSystemStatics_PlayAudioEvent) == 0x000008, "Wrong alignment on AudioSystemStatics_PlayAudioEvent");
static_assert(sizeof(AudioSystemStatics_PlayAudioEvent) == 0x000018, "Wrong size on AudioSystemStatics_PlayAudioEvent");
static_assert(offsetof(AudioSystemStatics_PlayAudioEvent, WorldContextObject) == 0x000000, "Member 'AudioSystemStatics_PlayAudioEvent::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_PlayAudioEvent, AudioEvent) == 0x000008, "Member 'AudioSystemStatics_PlayAudioEvent::AudioEvent' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_PlayAudioEvent, OptionalFollowComponent) == 0x000010, "Member 'AudioSystemStatics_PlayAudioEvent::OptionalFollowComponent' has a wrong offset!");

// Function FcAudio.AudioSystemStatics.PlayAudioEventGlobal
// 0x0010 (0x0010 - 0x0000)
struct AudioSystemStatics_PlayAudioEventGlobal final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioSystemStatics_PlayAudioEventGlobal) == 0x000008, "Wrong alignment on AudioSystemStatics_PlayAudioEventGlobal");
static_assert(sizeof(AudioSystemStatics_PlayAudioEventGlobal) == 0x000010, "Wrong size on AudioSystemStatics_PlayAudioEventGlobal");
static_assert(offsetof(AudioSystemStatics_PlayAudioEventGlobal, WorldContextObject) == 0x000000, "Member 'AudioSystemStatics_PlayAudioEventGlobal::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_PlayAudioEventGlobal, AudioEvent) == 0x000008, "Member 'AudioSystemStatics_PlayAudioEventGlobal::AudioEvent' has a wrong offset!");

// Function FcAudio.AudioSystemStatics.StopAudioEventGlobal
// 0x0010 (0x0010 - 0x0000)
struct AudioSystemStatics_StopAudioEventGlobal final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AudioSystemStatics_StopAudioEventGlobal) == 0x000008, "Wrong alignment on AudioSystemStatics_StopAudioEventGlobal");
static_assert(sizeof(AudioSystemStatics_StopAudioEventGlobal) == 0x000010, "Wrong size on AudioSystemStatics_StopAudioEventGlobal");
static_assert(offsetof(AudioSystemStatics_StopAudioEventGlobal, WorldContextObject) == 0x000000, "Member 'AudioSystemStatics_StopAudioEventGlobal::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AudioSystemStatics_StopAudioEventGlobal, AudioEvent) == 0x000008, "Member 'AudioSystemStatics_StopAudioEventGlobal::AudioEvent' has a wrong offset!");

}

