#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RenderingLibrary

#include "Basic.hpp"

#include "Renderer_structs.hpp"


namespace SDK
{

// ScriptStruct RenderingLibrary.BatchableDrawToRenderTargetMinimal
// 0x0018 (0x0018 - 0x0000)
struct FBatchableDrawToRenderTargetMinimal final
{
public:
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRenderPass;                                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESimpleRenderPassExecutionStage               RenderPassExecutionStage;                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBatchableDrawToRenderTargetMinimal) == 0x000008, "Wrong alignment on FBatchableDrawToRenderTargetMinimal");
static_assert(sizeof(FBatchableDrawToRenderTargetMinimal) == 0x000018, "Wrong size on FBatchableDrawToRenderTargetMinimal");
static_assert(offsetof(FBatchableDrawToRenderTargetMinimal, RenderTarget) == 0x000000, "Member 'FBatchableDrawToRenderTargetMinimal::RenderTarget' has a wrong offset!");
static_assert(offsetof(FBatchableDrawToRenderTargetMinimal, Material) == 0x000008, "Member 'FBatchableDrawToRenderTargetMinimal::Material' has a wrong offset!");
static_assert(offsetof(FBatchableDrawToRenderTargetMinimal, bUseRenderPass) == 0x000010, "Member 'FBatchableDrawToRenderTargetMinimal::bUseRenderPass' has a wrong offset!");
static_assert(offsetof(FBatchableDrawToRenderTargetMinimal, RenderPassExecutionStage) == 0x000011, "Member 'FBatchableDrawToRenderTargetMinimal::RenderPassExecutionStage' has a wrong offset!");

// ScriptStruct RenderingLibrary.DrawToRenderTargetMinimalContext
// 0x00D8 (0x00D8 - 0x0000)
struct alignas(0x08) FDrawToRenderTargetMinimalContext final
{
public:
	uint8                                         Pad_0[0xD0];                                       // 0x0000(0x00D0)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDrawImmediately;                                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDrawToRenderTargetMinimalContext) == 0x000008, "Wrong alignment on FDrawToRenderTargetMinimalContext");
static_assert(sizeof(FDrawToRenderTargetMinimalContext) == 0x0000D8, "Wrong size on FDrawToRenderTargetMinimalContext");
static_assert(offsetof(FDrawToRenderTargetMinimalContext, bDrawImmediately) == 0x0000D0, "Member 'FDrawToRenderTargetMinimalContext::bDrawImmediately' has a wrong offset!");

}

