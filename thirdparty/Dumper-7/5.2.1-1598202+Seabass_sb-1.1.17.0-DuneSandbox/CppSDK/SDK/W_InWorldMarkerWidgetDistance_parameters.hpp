#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InWorldMarkerWidgetDistance

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_InWorldMarkerWidgetDistance.W_InWorldMarkerWidgetDistance_C.ExecuteUbergraph_W_InWorldMarkerWidgetDistance
// 0x0210 (0x0210 - 0x0000)
struct W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEMapMarker                            K2Node_Event_MarkerType;                           // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFullscreenMapMarkerRowBase            K2Node_Event_MarkerStaticData;                     // 0x0010(0x0158)(ConstParm)
	float                                         K2Node_Event_MetersToPlayer;                       // 0x0168(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsClosestMarker;                     // 0x016C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0178(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0190(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F0(0x0018)()
	double                                        CallFunc_Round64_A_ImplicitCast;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance) == 0x000008, "Wrong alignment on W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance");
static_assert(sizeof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance) == 0x000210, "Wrong size on W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, EntryPoint) == 0x000000, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, K2Node_Event_MarkerType) == 0x000004, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::K2Node_Event_MarkerType' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, K2Node_Event_MarkerStaticData) == 0x000010, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::K2Node_Event_MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, K2Node_Event_MetersToPlayer) == 0x000168, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::K2Node_Event_MetersToPlayer' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, K2Node_Event_bIsClosestMarker) == 0x00016C, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::K2Node_Event_bIsClosestMarker' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, CallFunc_Round64_ReturnValue) == 0x000170, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000178, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, K2Node_MakeStruct_FormatArgumentData) == 0x000190, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, K2Node_MakeArray_Array) == 0x0001E0, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, CallFunc_Format_ReturnValue) == 0x0001F0, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance, CallFunc_Round64_A_ImplicitCast) == 0x000208, "Member 'W_InWorldMarkerWidgetDistance_C_ExecuteUbergraph_W_InWorldMarkerWidgetDistance::CallFunc_Round64_A_ImplicitCast' has a wrong offset!");

// Function W_InWorldMarkerWidgetDistance.W_InWorldMarkerWidgetDistance_C.SetPlayerDistance
// 0x0008 (0x0008 - 0x0000)
struct W_InWorldMarkerWidgetDistance_C_SetPlayerDistance final
{
public:
	float                                         MetersToPlayer;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsClosestMarker;                                  // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InWorldMarkerWidgetDistance_C_SetPlayerDistance) == 0x000004, "Wrong alignment on W_InWorldMarkerWidgetDistance_C_SetPlayerDistance");
static_assert(sizeof(W_InWorldMarkerWidgetDistance_C_SetPlayerDistance) == 0x000008, "Wrong size on W_InWorldMarkerWidgetDistance_C_SetPlayerDistance");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_SetPlayerDistance, MetersToPlayer) == 0x000000, "Member 'W_InWorldMarkerWidgetDistance_C_SetPlayerDistance::MetersToPlayer' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_SetPlayerDistance, bIsClosestMarker) == 0x000004, "Member 'W_InWorldMarkerWidgetDistance_C_SetPlayerDistance::bIsClosestMarker' has a wrong offset!");

// Function W_InWorldMarkerWidgetDistance.W_InWorldMarkerWidgetDistance_C.UpdateWidget
// 0x0160 (0x0160 - 0x0000)
struct W_InWorldMarkerWidgetDistance_C_UpdateWidget final
{
public:
	struct FEMapMarker                            MarkerType;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FFullscreenMapMarkerRowBase            MarkerStaticData;                                  // 0x0008(0x0158)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_InWorldMarkerWidgetDistance_C_UpdateWidget) == 0x000008, "Wrong alignment on W_InWorldMarkerWidgetDistance_C_UpdateWidget");
static_assert(sizeof(W_InWorldMarkerWidgetDistance_C_UpdateWidget) == 0x000160, "Wrong size on W_InWorldMarkerWidgetDistance_C_UpdateWidget");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_UpdateWidget, MarkerType) == 0x000000, "Member 'W_InWorldMarkerWidgetDistance_C_UpdateWidget::MarkerType' has a wrong offset!");
static_assert(offsetof(W_InWorldMarkerWidgetDistance_C_UpdateWidget, MarkerStaticData) == 0x000008, "Member 'W_InWorldMarkerWidgetDistance_C_UpdateWidget::MarkerStaticData' has a wrong offset!");

}

