#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeformationBuffer_OrniTurbulence

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DeformationBuffer_OrniTurbulence.BP_DeformationBuffer_OrniTurbulence_C.ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence
// 0x0060 (0x0060 - 0x0000)
struct BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_OrnithopterBase_C*                  K2Node_DynamicCast_AsBP_Ornithopter_Base;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDuneOrnithopterAnimInstance*           CallFunc_GetOrnithopterAnimInstance_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDuneOrnithopterAnimInstance*           CallFunc_GetOrnithopterAnimInstance_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCloseEnoughToGround_Return;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence) == 0x000008, "Wrong alignment on BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence");
static_assert(sizeof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence) == 0x000060, "Wrong size on BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, EntryPoint) == 0x000000, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_IsActive_ReturnValue) == 0x000006, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_GetAttachParent_ReturnValue) == 0x000020, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, K2Node_DynamicCast_AsBP_Ornithopter_Base) == 0x000030, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::K2Node_DynamicCast_AsBP_Ornithopter_Base' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_GetOrnithopterAnimInstance_ReturnValue) == 0x000040, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_GetOrnithopterAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_GetOrnithopterAnimInstance_ReturnValue_1) == 0x000050, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_GetOrnithopterAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, CallFunc_IsCloseEnoughToGround_Return) == 0x000058, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::CallFunc_IsCloseEnoughToGround_Return' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'BP_DeformationBuffer_OrniTurbulence_C_ExecuteUbergraph_BP_DeformationBuffer_OrniTurbulence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DeformationBuffer_OrniTurbulence.BP_DeformationBuffer_OrniTurbulence_C.GetOrnithopterAnimInstance
// 0x0020 (0x0020 - 0x0000)
struct BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance final
{
public:
	class UDuneOrnithopterAnimInstance*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDuneOrnithopterAnimInstance*           K2Node_DynamicCast_AsDune_Ornithopter_Anim_Instance; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance) == 0x000008, "Wrong alignment on BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance");
static_assert(sizeof(BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance) == 0x000020, "Wrong size on BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance, ReturnValue) == 0x000000, "Member 'BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance, K2Node_DynamicCast_AsDune_Ornithopter_Anim_Instance) == 0x000010, "Member 'BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance::K2Node_DynamicCast_AsDune_Ornithopter_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DeformationBuffer_OrniTurbulence_C_GetOrnithopterAnimInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_DeformationBuffer_OrniTurbulence.BP_DeformationBuffer_OrniTurbulence_C.IsCloseEnoughToGround
// 0x0168 (0x0168 - 0x0000)
struct BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround final
{
public:
	double                                        MaxDistanceToGround_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround) == 0x000008, "Wrong alignment on BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround");
static_assert(sizeof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround) == 0x000168, "Wrong size on BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, MaxDistanceToGround_0) == 0x000000, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::MaxDistanceToGround_0' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, Return) == 0x000008, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::Return' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000078, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000160, "Member 'BP_DeformationBuffer_OrniTurbulence_C_IsCloseEnoughToGround::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

}

