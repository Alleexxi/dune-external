#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_COL_Wings_CtrlRig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass SK_COL_Wings_CtrlRig.SK_COL_Wings_CtrlRig_C
// 0x0040 (0x0440 - 0x0400)
class USK_COL_Wings_CtrlRig_C final : public UControlRig
{
public:
	double                                        FWD;                                               // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        STRAFE;                                            // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Up;                                                // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OscillationAngle;                                  // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invalid;                                           // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Landed;                                            // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Standby;                                           // 0x0432(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DragonFly;                                         // 0x0433(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vulture;                                           // 0x0434(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Malfunction;                                       // 0x0435(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dive;                                              // 0x0436(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dodge;                                             // 0x0437(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Boost;                                             // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dash;                                              // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SK_COL_Wings_CtrlRig_C">();
	}
	static class USK_COL_Wings_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USK_COL_Wings_CtrlRig_C>();
	}
};
static_assert(alignof(USK_COL_Wings_CtrlRig_C) == 0x000008, "Wrong alignment on USK_COL_Wings_CtrlRig_C");
static_assert(sizeof(USK_COL_Wings_CtrlRig_C) == 0x000440, "Wrong size on USK_COL_Wings_CtrlRig_C");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, FWD) == 0x000400, "Member 'USK_COL_Wings_CtrlRig_C::FWD' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, STRAFE) == 0x000408, "Member 'USK_COL_Wings_CtrlRig_C::STRAFE' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Up) == 0x000410, "Member 'USK_COL_Wings_CtrlRig_C::Up' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Pitch) == 0x000418, "Member 'USK_COL_Wings_CtrlRig_C::Pitch' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Yaw) == 0x000420, "Member 'USK_COL_Wings_CtrlRig_C::Yaw' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, OscillationAngle) == 0x000428, "Member 'USK_COL_Wings_CtrlRig_C::OscillationAngle' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Invalid) == 0x000430, "Member 'USK_COL_Wings_CtrlRig_C::Invalid' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Landed) == 0x000431, "Member 'USK_COL_Wings_CtrlRig_C::Landed' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Standby) == 0x000432, "Member 'USK_COL_Wings_CtrlRig_C::Standby' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, DragonFly) == 0x000433, "Member 'USK_COL_Wings_CtrlRig_C::DragonFly' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Vulture) == 0x000434, "Member 'USK_COL_Wings_CtrlRig_C::Vulture' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Malfunction) == 0x000435, "Member 'USK_COL_Wings_CtrlRig_C::Malfunction' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Dive) == 0x000436, "Member 'USK_COL_Wings_CtrlRig_C::Dive' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Dodge) == 0x000437, "Member 'USK_COL_Wings_CtrlRig_C::Dodge' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Boost) == 0x000438, "Member 'USK_COL_Wings_CtrlRig_C::Boost' has a wrong offset!");
static_assert(offsetof(USK_COL_Wings_CtrlRig_C, Dash) == 0x000439, "Member 'USK_COL_Wings_CtrlRig_C::Dash' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_COL_Wings_CtrlRig.RigVMMemory_Literal
// 0x0170 (0x01A0 - 0x0030)
class SK_COL_Wings_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_Item__Const; // 0x0030(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__Const; // 0x00A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const; // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const; // 0x00BC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const; // 0x00C0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_B__Const;                // 0x00CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_4_Item__Const; // 0x00D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_5_Item__Const; // 0x00DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Timeline_Speed__Const;                // 0x00E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_B__Const;              // 0x00EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_B__Const;            // 0x00F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_Item__Const; // 0x00F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_2_True__Const;                   // 0x0100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_2_False__Const;                  // 0x0104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___KalmanFloat_1_1_BufferSize__Const;    // 0x0108(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_1_Minimum__Const;    // 0x010C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_2_True__Const;                 // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_2_False__Const;                // 0x0114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_Minimum__Const; // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_Maximum__Const; // 0x011C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_1_Item__Const; // 0x0120(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_3_Item__Const; // 0x012C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_3_True__Const;                 // 0x0138(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_Item__Const; // 0x013C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_B__Const;              // 0x0148(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_B__Const;            // 0x014C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_Minimum__Const;    // 0x0150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_Maximum__Const;    // 0x0154(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Less_1_B__Const;                      // 0x0158(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_Item__Const; // 0x0160(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_B__Const;          // 0x016C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_1_Item__Const; // 0x0170(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_2_Item__Const; // 0x017C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_3_Item__Const; // 0x0188(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_COL_Wings_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class SK_COL_Wings_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_COL_Wings_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on SK_COL_Wings_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal) == 0x0001A0, "Wrong size on SK_COL_Wings_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Item__Const) == 0x000030, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const) == 0x000040, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_Rotator__Const) == 0x0000A0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_Rotator__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const) == 0x0000B8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const) == 0x0000BC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const) == 0x0000C0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_B__Const) == 0x0000CC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_4_Item__Const) == 0x0000D0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_4_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_5_Item__Const) == 0x0000DC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_5_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___Timeline_Speed__Const) == 0x0000E8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___Timeline_Speed__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_3_B__Const) == 0x0000EC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_3_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_3_1_B__Const) == 0x0000F0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_3_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_Item__Const) == 0x0000F4, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_2_True__Const) == 0x000100, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_2_True__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_2_False__Const) == 0x000104, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_2_False__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___KalmanFloat_1_1_BufferSize__Const) == 0x000108, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___KalmanFloat_1_1_BufferSize__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_3_1_Minimum__Const) == 0x00010C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_3_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_3_2_True__Const) == 0x000110, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_3_2_True__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_3_2_False__Const) == 0x000114, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_3_2_False__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_3_1_1_1_Minimum__Const) == 0x000118, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_3_1_1_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_3_1_1_1_Maximum__Const) == 0x00011C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_3_1_1_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_1_Item__Const) == 0x000120, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_3_Item__Const) == 0x00012C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_3_3_True__Const) == 0x000138, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_3_3_True__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_Item__Const) == 0x00013C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_2_B__Const) == 0x000148, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_2_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_4_2_B__Const) == 0x00014C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_4_2_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_Minimum__Const) == 0x000150, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_Maximum__Const) == 0x000154, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___Less_1_B__Const) == 0x000158, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___Less_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_Item__Const) == 0x000160, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_2_1_1_B__Const) == 0x00016C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_2_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_1_Item__Const) == 0x000170, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_2_Item__Const) == 0x00017C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_3_Item__Const) == 0x000188, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_3_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_COL_Wings_CtrlRig.RigVMMemory_Work
// 0x0FA0 (0x0FD0 - 0x0030)
class SK_COL_Wings_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	bool                                          RigVMModel___MathBoolOr_Result;                    // 0x0030(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_Result;     // 0x0040(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__IO; // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO; // 0x0080(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex; // 0x00E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_Result;   // 0x00F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_Result;                  // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_A;                       // 0x0114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_Rotator__IO; // 0x0118(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO; // 0x0130(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x0190(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_Result;   // 0x01A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_Result;                // 0x01C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_A;                     // 0x01C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_Rotator__IO; // 0x01C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_4_OffsetTransform__IO; // 0x01E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_4_CachedIndex; // 0x0240(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_Result;   // 0x0250(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_Rotator__IO; // 0x0270(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_5_OffsetTransform__IO; // 0x0290(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_5_CachedIndex; // 0x02F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_Result;   // 0x0300(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_Result;                // 0x0320(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatCos_Result;                  // 0x0324(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Timeline_Time;                        // 0x0328(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 RigVMModel___Timeline_AccumulatedValue;            // 0x0330(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___Timeline_bIsInitialized;              // 0x0340(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_Rotator__IO; // 0x0350(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_3_OffsetTransform__IO; // 0x0370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_3_CachedIndex; // 0x03D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_1_Result; // 0x03E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_Result;              // 0x0400(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_1_Rotator__IO; // 0x0408(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_1_1_OffsetTransform__IO; // 0x0420(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_1_1_CachedIndex; // 0x0480(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_1_Result; // 0x0490(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_1_Rotator__IO; // 0x04B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_4_1_OffsetTransform__IO; // 0x04D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_4_1_CachedIndex; // 0x0530(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_1_Result; // 0x0540(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_1_Rotator__IO; // 0x0560(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_578[0x8];                                      // 0x0578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_5_1_OffsetTransform__IO; // 0x0580(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_5_1_CachedIndex; // 0x05E0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Branch_2_BlockToRun;                  // 0x05F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Branch_BlockToRun;                    // 0x05F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___MathBoolOr_1_1_Result;                // 0x0600(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___MathBoolOr_1_Result;                  // 0x0601(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_602[0xE];                                      // 0x0602(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_2_Result; // 0x0610(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_Result;    // 0x0630(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_1_1_1_Result;          // 0x0634(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_1_Result;            // 0x0638(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_Result;              // 0x063C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_A;                   // 0x0640(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_3_Result;            // 0x0644(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_1_1_Result;               // 0x0648(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_2_Result;                        // 0x064C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_1_1_Buffer;               // 0x0650(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_1_1_LastInsertIndex;      // 0x0660(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___If_1_3_2_Result;                      // 0x0670(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_Result;              // 0x0674(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_Result;                // 0x0678(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_Result;                // 0x067C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_A;                     // 0x0680(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_4_Result;              // 0x0684(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_Result;              // 0x0688(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_A;                   // 0x068C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO; // 0x0690(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_OffsetTransform__IO; // 0x06B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_CachedIndex; // 0x0710(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_2_Result; // 0x0720(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_2_Rotator__IO; // 0x0740(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_758[0x8];                                      // 0x0758(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_OffsetTransform__IO; // 0x0760(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_CachedIndex; // 0x07C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_3_Result; // 0x07D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_Result;      // 0x07F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_1_1_Result;            // 0x07F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_1_1_Result;          // 0x07F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_1_Result;            // 0x07FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_1_A;                 // 0x0800(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_3_Result;                      // 0x0804(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_2_Result;            // 0x0808(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_1_Result;              // 0x080C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_3_Result;              // 0x0810(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_3_A;                   // 0x0814(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_Result;            // 0x0818(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_A;                 // 0x081C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_3_Rotator__IO; // 0x0820(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_838[0x8];                                      // 0x0838(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_3_OffsetTransform__IO; // 0x0840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_3_CachedIndex; // 0x08A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_3_Result; // 0x08B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_3_Rotator__IO; // 0x08D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_8E8[0x8];                                      // 0x08E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_OffsetTransform__IO; // 0x08F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_CachedIndex; // 0x0950(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_1_Result; // 0x0960(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_Result;          // 0x0980(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_1_Result; // 0x0984(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_Result; // 0x0988(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_Result;            // 0x098C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_Result;              // 0x0990(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_Result;            // 0x0994(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_Result;                // 0x0998(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_A;                     // 0x099C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_Result;              // 0x09A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_A;                   // 0x09A4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_1_1_1_Result;        // 0x09A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_Result;                          // 0x09AC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_1_Result;                        // 0x09B0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x3];                                      // 0x09B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___If_1_True;                            // 0x09B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_Result;                        // 0x09B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_Result;              // 0x09BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_A;                   // 0x09C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4[0x4];                                      // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO; // 0x09C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_2_OffsetTransform__IO; // 0x09E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_2_CachedIndex; // 0x0A40(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_1_Result; // 0x0A50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_4_Result;          // 0x0A70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_1_Result; // 0x0A74(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_Result; // 0x0A78(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_1_Result;          // 0x0A7C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_1_Result;            // 0x0A80(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_1_Result;          // 0x0A84(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_1_Rotator__IO; // 0x0A88(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_OffsetTransform__IO; // 0x0AA0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_CachedIndex; // 0x0B00(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_9_1_Result; // 0x0B10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_Result;        // 0x0B30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_1_1_MathFloatAdd_3_2_1_1_1_Result; // 0x0B34(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_1_1_MathFloatAdd_3_2_1_1_Result; // 0x0B38(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_2_Result;          // 0x0B3C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_2_Result;            // 0x0B40(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_2_Result;          // 0x0B44(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_Result;              // 0x0B48(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_A;                   // 0x0B4C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_1_Result;            // 0x0B50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_1_A;                 // 0x0B54(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_1_1_1_1_Result;      // 0x0B58(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_1_Result;                        // 0x0B5C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_1_1_Result;                      // 0x0B60(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x3];                                      // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___If_1_1_True;                          // 0x0B64(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_1_Result;                      // 0x0B68(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_1_Result;            // 0x0B6C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_1_A;                 // 0x0B70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B74[0x4];                                      // 0x0B74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_9_1_Rotator__IO; // 0x0B78(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_OffsetTransform__IO; // 0x0B90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_CachedIndex; // 0x0BF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_Result; // 0x0C00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_4_1_Result;        // 0x0C20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_1_Result; // 0x0C24(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_Result; // 0x0C28(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_1_1_Result;        // 0x0C2C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_1_1_Result;          // 0x0C30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_1_1_Result;        // 0x0C34(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_Rotator__IO; // 0x0C38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_OffsetTransform__IO; // 0x0C50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_CachedIndex; // 0x0CB0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_Result; // 0x0CC0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_Result;                   // 0x0CE0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_Result;            // 0x0CE4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_A;                 // 0x0CE8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CEC[0x4];                                      // 0x0CEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_Buffer;                   // 0x0CF0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_LastInsertIndex;          // 0x0D00(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_Rotator__IO; // 0x0D10(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_D28[0x8];                                      // 0x0D28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_OffsetTransform__IO; // 0x0D30(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_CachedIndex; // 0x0D90(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_1_Result; // 0x0DA0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_1_Rotator__IO; // 0x0DC0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_DD8[0x8];                                      // 0x0DD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_1_OffsetTransform__IO; // 0x0DE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_1_CachedIndex; // 0x0E40(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_2_Result; // 0x0E50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_1_Result;          // 0x0E70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E74[0x4];                                      // 0x0E74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_2_Rotator__IO; // 0x0E78(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_2_OffsetTransform__IO; // 0x0E90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_2_CachedIndex; // 0x0EF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_3_Result; // 0x0F00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_3_Rotator__IO; // 0x0F20(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_F38[0x8];                                      // 0x0F38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_3_OffsetTransform__IO; // 0x0F40(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_3_CachedIndex; // 0x0FA0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Branch_1_1_1_BlockToRun;              // 0x0FB0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Branch_1_1_BlockToRun;                // 0x0FB8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Branch_1_BlockToRun;                  // 0x0FC0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_COL_Wings_CtrlRig.RigVMMemory_Work", true>();
	}
	static class SK_COL_Wings_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_COL_Wings_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(SK_COL_Wings_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on SK_COL_Wings_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(SK_COL_Wings_CtrlRig::URigVMMemory_Work) == 0x000FD0, "Wrong size on SK_COL_Wings_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathBoolOr_Result) == 0x000030, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathBoolOr_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Result) == 0x000040, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Rotator__IO) == 0x000060, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO) == 0x000080, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex) == 0x0000E0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Result) == 0x0000F0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_Result) == 0x000110, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_A) == 0x000114, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Rotator__IO) == 0x000118, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO) == 0x000130, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex) == 0x000190, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Result) == 0x0001A0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_1_Result) == 0x0001C0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_1_A) == 0x0001C4, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Rotator__IO) == 0x0001C8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_OffsetTransform__IO) == 0x0001E0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_CachedIndex) == 0x000240, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Result) == 0x000250, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Rotator__IO) == 0x000270, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_OffsetTransform__IO) == 0x000290, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_CachedIndex) == 0x0002F0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Result) == 0x000300, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_Result) == 0x000320, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatCos_Result) == 0x000324, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatCos_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Timeline_Time) == 0x000328, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Timeline_Time' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Timeline_AccumulatedValue) == 0x000330, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Timeline_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Timeline_bIsInitialized) == 0x000340, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Timeline_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Rotator__IO) == 0x000350, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_3_OffsetTransform__IO) == 0x000370, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_3_CachedIndex) == 0x0003D0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_1_Result) == 0x0003E0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_Result) == 0x000400, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_1_Rotator__IO) == 0x000408, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_1_OffsetTransform__IO) == 0x000420, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_1_CachedIndex) == 0x000480, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_1_Result) == 0x000490, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_1_Rotator__IO) == 0x0004B0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_1_OffsetTransform__IO) == 0x0004D0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_1_CachedIndex) == 0x000530, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_1_Result) == 0x000540, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_1_Rotator__IO) == 0x000560, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_1_OffsetTransform__IO) == 0x000580, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_1_CachedIndex) == 0x0005E0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_2_BlockToRun) == 0x0005F0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_2_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_BlockToRun) == 0x0005F8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathBoolOr_1_1_Result) == 0x000600, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathBoolOr_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathBoolOr_1_Result) == 0x000601, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathBoolOr_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_2_Result) == 0x000610, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_1_1_1_Result) == 0x000630, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_1_1_Result) == 0x000634, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_1_Result) == 0x000638, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_Result) == 0x00063C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_A) == 0x000640, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_3_Result) == 0x000644, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_1_Result) == 0x000648, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_2_Result) == 0x00064C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_1_Buffer) == 0x000650, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_1_LastInsertIndex) == 0x000660, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_2_Result) == 0x000670, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_Result) == 0x000674, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_Result) == 0x000678, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_Result) == 0x00067C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_A) == 0x000680, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_4_Result) == 0x000684, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_4_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_Result) == 0x000688, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_A) == 0x00068C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO) == 0x000690, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_OffsetTransform__IO) == 0x0006B0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_CachedIndex) == 0x000710, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_2_Result) == 0x000720, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_2_Rotator__IO) == 0x000740, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_OffsetTransform__IO) == 0x000760, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_CachedIndex) == 0x0007C0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_3_Result) == 0x0007D0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_1_1_Result) == 0x0007F0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_1_Result) == 0x0007F4, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_1_1_Result) == 0x0007F8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_1_Result) == 0x0007FC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_1_A) == 0x000800, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_3_Result) == 0x000804, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_2_Result) == 0x000808, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_Result) == 0x00080C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_3_Result) == 0x000810, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_3_A) == 0x000814, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_3_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_Result) == 0x000818, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_A) == 0x00081C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_3_Rotator__IO) == 0x000820, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_OffsetTransform__IO) == 0x000840, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_CachedIndex) == 0x0008A0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_3_Result) == 0x0008B0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_3_Rotator__IO) == 0x0008D0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_OffsetTransform__IO) == 0x0008F0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_CachedIndex) == 0x000950, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_Result) == 0x000960, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_Result) == 0x000980, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_1_Result) == 0x000984, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_Result) == 0x000988, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_Result) == 0x00098C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_Result) == 0x000990, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_Result) == 0x000994, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_Result) == 0x000998, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_A) == 0x00099C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_Result) == 0x0009A0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_A) == 0x0009A4, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_1_1_1_Result) == 0x0009A8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_Result) == 0x0009AC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Less_1_Result) == 0x0009B0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Less_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_True) == 0x0009B4, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_True' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_Result) == 0x0009B8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_Result) == 0x0009BC, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_A) == 0x0009C0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO) == 0x0009C8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_OffsetTransform__IO) == 0x0009E0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_CachedIndex) == 0x000A40, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_1_Result) == 0x000A50, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_4_Result) == 0x000A70, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_4_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_1_Result) == 0x000A74, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_Result) == 0x000A78, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_1_Result) == 0x000A7C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_1_Result) == 0x000A80, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_1_Result) == 0x000A84, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_1_Rotator__IO) == 0x000A88, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_OffsetTransform__IO) == 0x000AA0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_CachedIndex) == 0x000B00, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_9_1_Result) == 0x000B10, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_9_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_1_Result) == 0x000B30, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_1_1_MathFloatAdd_3_2_1_1_1_Result) == 0x000B34, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_1_1_MathFloatAdd_3_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_1_1_MathFloatAdd_3_2_1_1_Result) == 0x000B38, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_1_1_MathFloatAdd_3_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_2_Result) == 0x000B3C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_2_Result) == 0x000B40, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_2_Result) == 0x000B44, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_Result) == 0x000B48, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_A) == 0x000B4C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_1_Result) == 0x000B50, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_1_A) == 0x000B54, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_1_1_1_1_Result) == 0x000B58, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_1_Result) == 0x000B5C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Less_1_1_Result) == 0x000B60, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Less_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_1_True) == 0x000B64, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_1_True' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_1_Result) == 0x000B68, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_Result) == 0x000B6C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_A) == 0x000B70, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_9_1_Rotator__IO) == 0x000B78, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_9_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_OffsetTransform__IO) == 0x000B90, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_CachedIndex) == 0x000BF0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_Result) == 0x000C00, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_4_1_Result) == 0x000C20, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_1_Result) == 0x000C24, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_Result) == 0x000C28, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_1_1_Result) == 0x000C2C, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_1_1_Result) == 0x000C30, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_1_1_Result) == 0x000C34, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_Rotator__IO) == 0x000C38, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_OffsetTransform__IO) == 0x000C50, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_CachedIndex) == 0x000CB0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_Result) == 0x000CC0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Result) == 0x000CE0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_Result) == 0x000CE4, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_A) == 0x000CE8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_A' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Buffer) == 0x000CF0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Buffer' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_LastInsertIndex) == 0x000D00, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_Rotator__IO) == 0x000D10, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_OffsetTransform__IO) == 0x000D30, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_CachedIndex) == 0x000D90, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_1_Result) == 0x000DA0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_1_Rotator__IO) == 0x000DC0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_OffsetTransform__IO) == 0x000DE0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_CachedIndex) == 0x000E40, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_2_Result) == 0x000E50, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_1_Result) == 0x000E70, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_2_Rotator__IO) == 0x000E78, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_2_OffsetTransform__IO) == 0x000E90, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_2_CachedIndex) == 0x000EF0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_3_Result) == 0x000F00, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_3_Rotator__IO) == 0x000F20, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_3_OffsetTransform__IO) == 0x000F40, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_3_CachedIndex) == 0x000FA0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_1_1_1_BlockToRun) == 0x000FB0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_1_1_1_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_1_1_BlockToRun) == 0x000FB8, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_1_1_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_COL_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_1_BlockToRun) == 0x000FC0, "Member 'SK_COL_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_1_BlockToRun' has a wrong offset!");

}

