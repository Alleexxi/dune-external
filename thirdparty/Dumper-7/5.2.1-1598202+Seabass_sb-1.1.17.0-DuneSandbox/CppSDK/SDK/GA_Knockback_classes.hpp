#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Knockback

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Knockback.GA_Knockback_C
// 0x0100 (0x0630 - 0x0530)
class UGA_Knockback_C final : public UDuneGameplayAction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 KnockbackInstigator;                               // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           DefaultMontage;                                    // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           PlayingMontage;                                    // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ControlRotationUpdateDuration;                     // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ControlRotationUpdateInterpSpeed;                  // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         KnockbackedCharacter;                              // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CachedEventContextHandle;                          // 0x0560(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAbilityTask_WaitDelay*                 EndAbilityTask;                                    // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   IsStaggeredBBKey;                                  // 0x0580(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IsBreakingOutOfStaggerBBKey;                       // 0x0588(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StaggerBreakTimerHandle;                           // 0x0590(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, EKnockbackType>     KnockbackTagsToKnockbackTypeMap;                   // 0x0598(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                        KnockbackDuration;                                 // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x05F0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         EventMagnitude;                                    // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           PredictedMontage;                                  // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Event_Target_Data;                                 // 0x0608(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Added_9701B952478ECA293231B89D2DF1B2F1();
	void Added_A2CDCA5D4081CC663CE417B5B6B29395();
	void ExecuteUbergraph_GA_Knockback(int32 EntryPoint);
	void GetKnockbackType(const struct FGameplayTag& KnockbackTag, EKnockbackType* KnockbackType);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_D33C482E497402F157682998ACDCF4BC();
	void OnFinish_FC7A8C17410E5C037482E5ABFE3DB372();
	void OnSync_183A95C34E92FC0D5E019589D05A552F();
	void OnTryCancelAbility(const class UGameplayAbility* Ability, const struct FGameplayTagContainer& WithTags, const struct FGameplayTagContainer& WithoutTags);
	void Removed_7FCDDED949F89D3D80A219B9EADB9AB2();
	void StaggerBreakTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Knockback_C">();
	}
	static class UGA_Knockback_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Knockback_C>();
	}
};
static_assert(alignof(UGA_Knockback_C) == 0x000008, "Wrong alignment on UGA_Knockback_C");
static_assert(sizeof(UGA_Knockback_C) == 0x000630, "Wrong size on UGA_Knockback_C");
static_assert(offsetof(UGA_Knockback_C, UberGraphFrame) == 0x000530, "Member 'UGA_Knockback_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, KnockbackInstigator) == 0x000538, "Member 'UGA_Knockback_C::KnockbackInstigator' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, DefaultMontage) == 0x000540, "Member 'UGA_Knockback_C::DefaultMontage' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, PlayingMontage) == 0x000548, "Member 'UGA_Knockback_C::PlayingMontage' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, ControlRotationUpdateDuration) == 0x000550, "Member 'UGA_Knockback_C::ControlRotationUpdateDuration' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, ControlRotationUpdateInterpSpeed) == 0x000554, "Member 'UGA_Knockback_C::ControlRotationUpdateInterpSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, KnockbackedCharacter) == 0x000558, "Member 'UGA_Knockback_C::KnockbackedCharacter' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, CachedEventContextHandle) == 0x000560, "Member 'UGA_Knockback_C::CachedEventContextHandle' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, EndAbilityTask) == 0x000578, "Member 'UGA_Knockback_C::EndAbilityTask' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, IsStaggeredBBKey) == 0x000580, "Member 'UGA_Knockback_C::IsStaggeredBBKey' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, IsBreakingOutOfStaggerBBKey) == 0x000588, "Member 'UGA_Knockback_C::IsBreakingOutOfStaggerBBKey' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, StaggerBreakTimerHandle) == 0x000590, "Member 'UGA_Knockback_C::StaggerBreakTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, KnockbackTagsToKnockbackTypeMap) == 0x000598, "Member 'UGA_Knockback_C::KnockbackTagsToKnockbackTypeMap' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, KnockbackDuration) == 0x0005E8, "Member 'UGA_Knockback_C::KnockbackDuration' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, EventTag) == 0x0005F0, "Member 'UGA_Knockback_C::EventTag' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, EventMagnitude) == 0x0005F8, "Member 'UGA_Knockback_C::EventMagnitude' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, PredictedMontage) == 0x000600, "Member 'UGA_Knockback_C::PredictedMontage' has a wrong offset!");
static_assert(offsetof(UGA_Knockback_C, Event_Target_Data) == 0x000608, "Member 'UGA_Knockback_C::Event_Target_Data' has a wrong offset!");

}

