#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_IncomingGrenadeInstance

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.ExecuteUbergraph_W_IncomingGrenadeInstance
// 0x0080 (0x0080 - 0x0000)
struct W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant_1;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_RotationDegrees;                      // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ElapsedTime;                          // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DetonationTime;                       // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Progress;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Position;                             // 0x0040(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_CreateTween_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTween*                                 CallFunc_TweenWidgetRenderOpacity_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_TweenWidgetRenderOpacity_ReturnValue_1;   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance) == 0x000008, "Wrong alignment on W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance");
static_assert(sizeof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance) == 0x000080, "Wrong size on W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, EntryPoint) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_Event_bInstant_1) == 0x000004, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_Event_bInstant_1' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_Event_RotationDegrees) == 0x000008, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_Event_RotationDegrees' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_NormalizeAxis_ReturnValue) == 0x00000C, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_Event_bInstant) == 0x000010, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_Event_bInstant' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_Event_ElapsedTime) == 0x000014, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_Event_ElapsedTime' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_Event_DetonationTime) == 0x000018, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_Event_DetonationTime' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_CustomEvent_Progress) == 0x00001C, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000030, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_Event_Position) == 0x000040, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_Event_Position' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_CreateTween_ReturnValue) == 0x000060, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_CreateTween_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_TweenWidgetRenderOpacity_ReturnValue) == 0x000070, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_TweenWidgetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance, CallFunc_TweenWidgetRenderOpacity_ReturnValue_1) == 0x000078, "Member 'W_IncomingGrenadeInstance_C_ExecuteUbergraph_W_IncomingGrenadeInstance::CallFunc_TweenWidgetRenderOpacity_ReturnValue_1' has a wrong offset!");

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.CustomEvent
// 0x0004 (0x0004 - 0x0000)
struct W_IncomingGrenadeInstance_C_CustomEvent final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_CustomEvent) == 0x000004, "Wrong alignment on W_IncomingGrenadeInstance_C_CustomEvent");
static_assert(sizeof(W_IncomingGrenadeInstance_C_CustomEvent) == 0x000004, "Wrong size on W_IncomingGrenadeInstance_C_CustomEvent");
static_assert(offsetof(W_IncomingGrenadeInstance_C_CustomEvent, Progress) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_CustomEvent::Progress' has a wrong offset!");

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.BP_ShowIndicator
// 0x0001 (0x0001 - 0x0000)
struct W_IncomingGrenadeInstance_C_BP_ShowIndicator final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_BP_ShowIndicator) == 0x000001, "Wrong alignment on W_IncomingGrenadeInstance_C_BP_ShowIndicator");
static_assert(sizeof(W_IncomingGrenadeInstance_C_BP_ShowIndicator) == 0x000001, "Wrong size on W_IncomingGrenadeInstance_C_BP_ShowIndicator");
static_assert(offsetof(W_IncomingGrenadeInstance_C_BP_ShowIndicator, bInstant) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_BP_ShowIndicator::bInstant' has a wrong offset!");

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.BP_SetRotation
// 0x0004 (0x0004 - 0x0000)
struct W_IncomingGrenadeInstance_C_BP_SetRotation final
{
public:
	float                                         RotationDegrees;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_BP_SetRotation) == 0x000004, "Wrong alignment on W_IncomingGrenadeInstance_C_BP_SetRotation");
static_assert(sizeof(W_IncomingGrenadeInstance_C_BP_SetRotation) == 0x000004, "Wrong size on W_IncomingGrenadeInstance_C_BP_SetRotation");
static_assert(offsetof(W_IncomingGrenadeInstance_C_BP_SetRotation, RotationDegrees) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_BP_SetRotation::RotationDegrees' has a wrong offset!");

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.BP_SetPosition
// 0x0010 (0x0010 - 0x0000)
struct W_IncomingGrenadeInstance_C_BP_SetPosition final
{
public:
	struct FVector2D                              position;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_BP_SetPosition) == 0x000008, "Wrong alignment on W_IncomingGrenadeInstance_C_BP_SetPosition");
static_assert(sizeof(W_IncomingGrenadeInstance_C_BP_SetPosition) == 0x000010, "Wrong size on W_IncomingGrenadeInstance_C_BP_SetPosition");
static_assert(offsetof(W_IncomingGrenadeInstance_C_BP_SetPosition, position) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_BP_SetPosition::position' has a wrong offset!");

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.BP_InitializeIndicator
// 0x0008 (0x0008 - 0x0000)
struct W_IncomingGrenadeInstance_C_BP_InitializeIndicator final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetonationTime;                                    // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_BP_InitializeIndicator) == 0x000004, "Wrong alignment on W_IncomingGrenadeInstance_C_BP_InitializeIndicator");
static_assert(sizeof(W_IncomingGrenadeInstance_C_BP_InitializeIndicator) == 0x000008, "Wrong size on W_IncomingGrenadeInstance_C_BP_InitializeIndicator");
static_assert(offsetof(W_IncomingGrenadeInstance_C_BP_InitializeIndicator, ElapsedTime) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_BP_InitializeIndicator::ElapsedTime' has a wrong offset!");
static_assert(offsetof(W_IncomingGrenadeInstance_C_BP_InitializeIndicator, DetonationTime) == 0x000004, "Member 'W_IncomingGrenadeInstance_C_BP_InitializeIndicator::DetonationTime' has a wrong offset!");

// Function W_IncomingGrenadeInstance.W_IncomingGrenadeInstance_C.BP_HideIndicator
// 0x0001 (0x0001 - 0x0000)
struct W_IncomingGrenadeInstance_C_BP_HideIndicator final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingGrenadeInstance_C_BP_HideIndicator) == 0x000001, "Wrong alignment on W_IncomingGrenadeInstance_C_BP_HideIndicator");
static_assert(sizeof(W_IncomingGrenadeInstance_C_BP_HideIndicator) == 0x000001, "Wrong size on W_IncomingGrenadeInstance_C_BP_HideIndicator");
static_assert(offsetof(W_IncomingGrenadeInstance_C_BP_HideIndicator, bInstant) == 0x000000, "Member 'W_IncomingGrenadeInstance_C_BP_HideIndicator::bInstant' has a wrong offset!");

}

