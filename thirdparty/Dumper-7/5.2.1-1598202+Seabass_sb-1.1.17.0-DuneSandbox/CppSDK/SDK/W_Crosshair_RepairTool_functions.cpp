#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Crosshair_RepairTool

#include "Basic.hpp"

#include "W_Crosshair_RepairTool_classes.hpp"
#include "W_Crosshair_RepairTool_parameters.hpp"


namespace SDK
{

// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.CleanupPreviousModuleHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFVehicleModuleHighlight&  ModuleHighlightInfo                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::CleanupPreviousModuleHighlight(const struct FFVehicleModuleHighlight& ModuleHighlightInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "CleanupPreviousModuleHighlight");

	Params::W_Crosshair_RepairTool_C_CleanupPreviousModuleHighlight Parms{};

	Parms.ModuleHighlightInfo = std::move(ModuleHighlightInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.ClearModuleInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      ErrorMsg                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ClearHighlights                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::ClearModuleInfo(bool Invalid, const class FText& ErrorMsg, bool ClearHighlights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "ClearModuleInfo");

	Params::W_Crosshair_RepairTool_C_ClearModuleInfo Parms{};

	Parms.Invalid = Invalid;
	Parms.ErrorMsg = std::move(ErrorMsg);
	Parms.ClearHighlights = ClearHighlights;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Crosshair_RepairTool_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Crosshair_RepairTool_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.ExecuteUbergraph_W_Crosshair_RepairTool
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::ExecuteUbergraph_W_Crosshair_RepairTool(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "ExecuteUbergraph_W_Crosshair_RepairTool");

	Params::W_Crosshair_RepairTool_C_ExecuteUbergraph_W_Crosshair_RepairTool Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.HandleRepairThreshold
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneVehicle*                     Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVehicleModuleInfo&        ModuleInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UW_Crosshair_RepairTool_C::HandleRepairThreshold(class ADuneVehicle* Vehicle, const struct FVehicleModuleInfo& ModuleInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "HandleRepairThreshold");

	Params::W_Crosshair_RepairTool_C_HandleRepairThreshold Parms{};

	Parms.Vehicle = Vehicle;
	Parms.ModuleInfo = std::move(ModuleInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.HideErrorMessage
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_RepairTool_C::HideErrorMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "HideErrorMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.HighlightModule
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleModuleType                      ModuleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADuneVehicle*                     Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Internal                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::HighlightModule(EVehicleModuleType ModuleType, class ADuneVehicle* Vehicle, bool Selection, bool Internal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "HighlightModule");

	Params::W_Crosshair_RepairTool_C_HighlightModule Parms{};

	Parms.ModuleType = ModuleType;
	Parms.Vehicle = Vehicle;
	Parms.Selection = Selection;
	Parms.Internal = Internal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.IsFiring
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Firing                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::IsFiring(bool* Firing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "IsFiring");

	Params::W_Crosshair_RepairTool_C_IsFiring Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Firing != nullptr)
		*Firing = Parms.Firing;
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.OnHUDRemoved
// (Event, Protected, BlueprintEvent)

void UW_Crosshair_RepairTool_C::OnHUDRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "OnHUDRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.OnPawnRemoved
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            InPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::OnPawnRemoved(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "OnPawnRemoved");

	Params::W_Crosshair_RepairTool_C_OnPawnRemoved Parms{};

	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.OnPendingRemoveFromParent
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InstantRemove                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::OnPendingRemoveFromParent(bool* InstantRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "OnPendingRemoveFromParent");

	Params::W_Crosshair_RepairTool_C_OnPendingRemoveFromParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InstantRemove != nullptr)
		*InstantRemove = Parms.InstantRemove;
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.OnWeaponHolsterToggled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bInHolstered                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::OnWeaponHolsterToggled(const bool bInHolstered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "OnWeaponHolsterToggled");

	Params::W_Crosshair_RepairTool_C_OnWeaponHolsterToggled Parms{};

	Parms.bInHolstered = bInHolstered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "PreConstruct");

	Params::W_Crosshair_RepairTool_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.SetModuleName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneVehicle*                     Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVehicleModuleInfo&        ModuleInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UW_Crosshair_RepairTool_C::SetModuleName(class ADuneVehicle* Vehicle, const struct FVehicleModuleInfo& ModuleInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "SetModuleName");

	Params::W_Crosshair_RepairTool_C_SetModuleName Parms{};

	Parms.Vehicle = Vehicle;
	Parms.ModuleInfo = std::move(ModuleInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.SetRepairProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   m_Progress                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::SetRepairProgress(float m_Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "SetRepairProgress");

	Params::W_Crosshair_RepairTool_C_SetRepairProgress Parms{};

	Parms.m_Progress = m_Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.SetVehicleModuleHighlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneVehicle*                     Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVehicleModuleInfo&        ModuleInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UW_Crosshair_RepairTool_C::SetVehicleModuleHighlight(class ADuneVehicle* Vehicle, const struct FVehicleModuleInfo& ModuleInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "SetVehicleModuleHighlight");

	Params::W_Crosshair_RepairTool_C_SetVehicleModuleHighlight Parms{};

	Parms.Vehicle = Vehicle;
	Parms.ModuleInfo = std::move(ModuleInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.ShowErrorMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::ShowErrorMessage(const class FText& Message, double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "ShowErrorMessage");

	Params::W_Crosshair_RepairTool_C_ShowErrorMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "Tick");

	Params::W_Crosshair_RepairTool_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateCrosshairCut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::UpdateCrosshairCut(bool Valid, bool Invalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateCrosshairCut");

	Params::W_Crosshair_RepairTool_C_UpdateCrosshairCut Parms{};

	Parms.Valid = Valid;
	Parms.Invalid = Invalid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateCrosshairRepair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::UpdateCrosshairRepair(bool Valid, bool Invalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateCrosshairRepair");

	Params::W_Crosshair_RepairTool_C_UpdateCrosshairRepair Parms{};

	Parms.Valid = Valid;
	Parms.Invalid = Invalid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateCustomizeMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_RepairTool_C::UpdateCustomizeMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateCustomizeMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateCuttingMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_RepairTool_C::UpdateCuttingMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateCuttingMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateRepairMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_RepairTool_C::UpdateRepairMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateRepairMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateRepairProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::UpdateRepairProgress(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateRepairProgress");

	Params::W_Crosshair_RepairTool_C_UpdateRepairProgress Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateVehicleBar
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_RepairTool_C::UpdateVehicleBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateVehicleBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_RepairTool.W_Crosshair_RepairTool_C.UpdateVehicleBarWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DecayedHealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Malfunction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_RepairTool_C::UpdateVehicleBarWidgets(double Health, double DecayedHealth, bool Malfunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_RepairTool_C", "UpdateVehicleBarWidgets");

	Params::W_Crosshair_RepairTool_C_UpdateVehicleBarWidgets Parms{};

	Parms.Health = Health;
	Parms.DecayedHealth = DecayedHealth;
	Parms.Malfunction = Malfunction;

	UObject::ProcessEvent(Func, &Parms);
}

}

