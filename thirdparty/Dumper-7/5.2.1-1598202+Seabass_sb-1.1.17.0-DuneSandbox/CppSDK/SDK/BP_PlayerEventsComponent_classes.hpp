#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerEventsComponent

#include "Basic.hpp"

#include "FPlayerEventsPOI_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerEventsComponent.BP_PlayerEventsComponent_C
// 0x0090 (0x01B8 - 0x0128)
class UBP_PlayerEventsComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0128(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	uint8                                         Tier;                                              // 0x0130(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         StartPhase;                                        // 0x0131(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         DynamicSpiceFields;                                // 0x0138(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<TSoftClassPtr<class UClass>>           Spice_Field_Sizes;                                 // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FFPlayerEventsPOI>              CachedPOIArray;                                    // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FName, double>                     CachedPOIs;                                        // 0x0168(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void TryTriggerNearestPvEDescriptor();
	void SetPvEComposition(const class FString& NewComposition);
	void RequestPvEDebugInfo();
	void RequestPvECompositionLocation();
	void ReportEventMsg(const class FString& Msg);
	void ReceivePOIs(const TArray<struct FFPlayerEventsPOI>& POIs);
	void ParseAndAddPOI(class AActor* InActor, TArray<struct FFPlayerEventsPOI>& POIs, class FName InType, const struct FFTeleportMapPOITypes& POIType);
	void OnOpen(bool Admin_);
	void LogFoundPOIs(int32 NumberOfPOIs, class FName Type);
	void GetPOIs(class UObject* Instigator, class FName Type);
	void GetCachedPOIs(class FName InType, class UObject* Instigator, TArray<struct FFPlayerEventsPOI>* POIs);
	void FindItemDrivenContractPOIs(class UObject* Instigator, class FName InType, TArray<struct FFPlayerEventsPOI>& POIs);
	void FindContractsLocationsPOIs(class UObject* Instigator, class FName InType, TArray<struct FFPlayerEventsPOI>& POIs);
	void ExecuteUbergraph_BP_PlayerEventsComponent(int32 EntryPoint);
	void AddPOI(TArray<struct FFPlayerEventsPOI>& POIs, const class FString& Name_0, class FName Type, uint8 SubType, class AActor* Actor);
	void AddLocationPOI(TArray<struct FFPlayerEventsPOI>& POIs, const class FString& Name_0, class FName Type, uint8 SubType, class AActor* Actor, const struct FVector& Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerEventsComponent_C">();
	}
	static class UBP_PlayerEventsComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerEventsComponent_C>();
	}
};
static_assert(alignof(UBP_PlayerEventsComponent_C) == 0x000008, "Wrong alignment on UBP_PlayerEventsComponent_C");
static_assert(sizeof(UBP_PlayerEventsComponent_C) == 0x0001B8, "Wrong size on UBP_PlayerEventsComponent_C");
static_assert(offsetof(UBP_PlayerEventsComponent_C, UberGraphFrame) == 0x000128, "Member 'UBP_PlayerEventsComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PlayerEventsComponent_C, Tier) == 0x000130, "Member 'UBP_PlayerEventsComponent_C::Tier' has a wrong offset!");
static_assert(offsetof(UBP_PlayerEventsComponent_C, StartPhase) == 0x000131, "Member 'UBP_PlayerEventsComponent_C::StartPhase' has a wrong offset!");
static_assert(offsetof(UBP_PlayerEventsComponent_C, DynamicSpiceFields) == 0x000138, "Member 'UBP_PlayerEventsComponent_C::DynamicSpiceFields' has a wrong offset!");
static_assert(offsetof(UBP_PlayerEventsComponent_C, Spice_Field_Sizes) == 0x000148, "Member 'UBP_PlayerEventsComponent_C::Spice_Field_Sizes' has a wrong offset!");
static_assert(offsetof(UBP_PlayerEventsComponent_C, CachedPOIArray) == 0x000158, "Member 'UBP_PlayerEventsComponent_C::CachedPOIArray' has a wrong offset!");
static_assert(offsetof(UBP_PlayerEventsComponent_C, CachedPOIs) == 0x000168, "Member 'UBP_PlayerEventsComponent_C::CachedPOIs' has a wrong offset!");

}

