#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhysicsDensityValidator_PerSectionData

#include "Basic.hpp"

#include "UE4Dreamworld_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PhysicsDensityValidator_PerSectionData.BP_PhysicsDensityValidator_PerSectionData_C
// 0x00F0 (0x0160 - 0x0070)
class UBP_PhysicsDensityValidator_PerSectionData_C final : public USceneValidator
{
public:
	TArray<class UPrimitiveComponent*>            PrimitiveComponents;                               // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int64                                         TotalBodies;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UBP_PhysicsDensityValidator_PerClassData_C*> PerClassDataMap;          // 0x0088(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FBox                                   SectionBounds;                                     // 0x00D8(0x0038)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<class UPrimitiveComponent*, int32>       ComponentBodies;                                   // 0x0110(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void Add_Component_Data(class UPrimitiveComponent* PrimitiveComponent, int32 NumBodies);
	void AddComponentToPerClassData(class UPrimitiveComponent* PrimitiveComponent, int32 NumBodies);
	void GetPerClassData(class UClass* Class_0, class UBP_PhysicsDensityValidator_PerClassData_C** PerClassData);
	void IncrementTotalBodies(int32 Incr);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PhysicsDensityValidator_PerSectionData_C">();
	}
	static class UBP_PhysicsDensityValidator_PerSectionData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PhysicsDensityValidator_PerSectionData_C>();
	}
};
static_assert(alignof(UBP_PhysicsDensityValidator_PerSectionData_C) == 0x000008, "Wrong alignment on UBP_PhysicsDensityValidator_PerSectionData_C");
static_assert(sizeof(UBP_PhysicsDensityValidator_PerSectionData_C) == 0x000160, "Wrong size on UBP_PhysicsDensityValidator_PerSectionData_C");
static_assert(offsetof(UBP_PhysicsDensityValidator_PerSectionData_C, PrimitiveComponents) == 0x000070, "Member 'UBP_PhysicsDensityValidator_PerSectionData_C::PrimitiveComponents' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsDensityValidator_PerSectionData_C, TotalBodies) == 0x000080, "Member 'UBP_PhysicsDensityValidator_PerSectionData_C::TotalBodies' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsDensityValidator_PerSectionData_C, PerClassDataMap) == 0x000088, "Member 'UBP_PhysicsDensityValidator_PerSectionData_C::PerClassDataMap' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsDensityValidator_PerSectionData_C, SectionBounds) == 0x0000D8, "Member 'UBP_PhysicsDensityValidator_PerSectionData_C::SectionBounds' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsDensityValidator_PerSectionData_C, ComponentBodies) == 0x000110, "Member 'UBP_PhysicsDensityValidator_PerSectionData_C::ComponentBodies' has a wrong offset!");

}

