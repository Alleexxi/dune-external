#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LandsraadControlPointWidget

#include "Basic.hpp"

#include "F_LandsraadHUDGuiData_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Update Player Faction Count 
// 0x0038 (0x0038 - 0x0000)
struct W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_ final
{
public:
	float                                         ALPHA;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgress_Progress_ImplicitCast;        // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_) == 0x000038, "Wrong size on W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, ALPHA) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::ALPHA' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000020, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_Lerp_A_ImplicitCast) == 0x000028, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_SetProgress_Progress_ImplicitCast) == 0x000030, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_SetProgress_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000034, "Member 'W_LandsraadControlPointWidget_C_Update_Player_Faction_Count_::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Update Banner Progress
// 0x0030 (0x0030 - 0x0000)
struct W_LandsraadControlPointWidget_C_Update_Banner_Progress final
{
public:
	float                                         ALPHA;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Update_Banner_Progress) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Update_Banner_Progress");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Update_Banner_Progress) == 0x000030, "Wrong size on W_LandsraadControlPointWidget_C_Update_Banner_Progress");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Banner_Progress, ALPHA) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Update_Banner_Progress::ALPHA' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Banner_Progress, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Update_Banner_Progress::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Banner_Progress, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000010, "Member 'W_LandsraadControlPointWidget_C_Update_Banner_Progress::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Banner_Progress, CallFunc_Lerp_B_ImplicitCast) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_Update_Banner_Progress::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Banner_Progress, CallFunc_Lerp_A_ImplicitCast) == 0x000020, "Member 'W_LandsraadControlPointWidget_C_Update_Banner_Progress::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Update_Banner_Progress, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000028, "Member 'W_LandsraadControlPointWidget_C_Update_Banner_Progress::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Setup Faction Icon
// 0x00C8 (0x00C8 - 0x0000)
struct W_LandsraadControlPointWidget_C_Setup_Faction_Icon final
{
public:
	struct FEFaction                              Faction;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LandsraadHUDGuiData                 CallFunc_Map_Find_Value;                           // 0x0010(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0044(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0014)()
	struct FF_LandsraadHUDGuiData                 CallFunc_Map_Find_Value_1;                         // 0x006C(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00A0(0x0014)()
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value_2;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Setup_Faction_Icon");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon) == 0x0000C8, "Wrong size on W_LandsraadControlPointWidget_C_Setup_Faction_Icon");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, Faction) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::Faction' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, Temp_byte_Variable) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, Temp_byte_Variable_1) == 0x000009, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000A, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, Temp_bool_Variable) == 0x00000B, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, K2Node_Select_Default) == 0x00000C, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, K2Node_MakeStruct_SlateColor) == 0x000044, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_Map_Find_Value_1) == 0x00006C, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_Map_Find_ReturnValue_1) == 0x00009C, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, K2Node_MakeStruct_SlateColor_2) == 0x0000A0, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_Map_Find_Value_2) == 0x0000B8, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Faction_Icon, CallFunc_Map_Find_ReturnValue_2) == 0x0000C0, "Member 'W_LandsraadControlPointWidget_C_Setup_Faction_Icon::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Setup Contested Tween
// 0x0020 (0x0020 - 0x0000)
struct W_LandsraadControlPointWidget_C_Setup_Contested_Tween final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTween*                                 CallFunc_CreateTween_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Setup_Contested_Tween) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Setup_Contested_Tween");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Setup_Contested_Tween) == 0x000020, "Wrong size on W_LandsraadControlPointWidget_C_Setup_Contested_Tween");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Contested_Tween, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Setup_Contested_Tween::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Contested_Tween, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_LandsraadControlPointWidget_C_Setup_Contested_Tween::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Setup_Contested_Tween, CallFunc_CreateTween_ReturnValue) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_Setup_Contested_Tween::CallFunc_CreateTween_ReturnValue' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Set Progress Color from Faction
// 0x0060 (0x0060 - 0x0000)
struct W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction final
{
public:
	struct FEFaction                              Faction;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LandsraadHUDGuiData                 CallFunc_Map_Find_Value;                           // 0x001C(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction) == 0x000004, "Wrong alignment on W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction) == 0x000060, "Wrong size on W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction, Faction) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction::Faction' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction, Temp_struct_Variable) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction, Temp_bool_Variable) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction, CallFunc_Map_Find_Value) == 0x00001C, "Member 'W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction, CallFunc_Map_Find_ReturnValue) == 0x00004C, "Member 'W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction, K2Node_Select_Default) == 0x000050, "Member 'W_LandsraadControlPointWidget_C_Set_Progress_Color_from_Faction::K2Node_Select_Default' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Set Player Faction Count
// 0x0028 (0x0028 - 0x0000)
struct W_LandsraadControlPointWidget_C_Set_Player_Faction_Count final
{
public:
	int32                                         Atreides_Count;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Harkonnen_Count;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetProgress_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Set_Player_Faction_Count");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count) == 0x000028, "Wrong size on W_LandsraadControlPointWidget_C_Set_Player_Faction_Count");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, Atreides_Count) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::Atreides_Count' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, Harkonnen_Count) == 0x000004, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::Harkonnen_Count' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, CallFunc_GetProgress_ReturnValue) == 0x00000C, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::CallFunc_GetProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Player_Faction_Count, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_LandsraadControlPointWidget_C_Set_Player_Faction_Count::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Set Banner Progress
// 0x0030 (0x0030 - 0x0000)
struct W_LandsraadControlPointWidget_C_Set_Banner_Progress final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTween*                                 CallFunc_CreateTween_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_New_Progress_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Set_Banner_Progress) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Set_Banner_Progress");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Set_Banner_Progress) == 0x000030, "Wrong size on W_LandsraadControlPointWidget_C_Set_Banner_Progress");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Banner_Progress, Progress) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Set_Banner_Progress::Progress' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Banner_Progress, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Set_Banner_Progress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Banner_Progress, CallFunc_CreateTween_ReturnValue) == 0x000010, "Member 'W_LandsraadControlPointWidget_C_Set_Banner_Progress::CallFunc_CreateTween_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Banner_Progress, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_Set_Banner_Progress::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Set_Banner_Progress, K2Node_VariableSet_New_Progress_Value_ImplicitCast) == 0x000028, "Member 'W_LandsraadControlPointWidget_C_Set_Banner_Progress::K2Node_VariableSet_New_Progress_Value_ImplicitCast' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LandsraadControlPointWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_PreConstruct) == 0x000001, "Wrong alignment on W_LandsraadControlPointWidget_C_PreConstruct");
static_assert(sizeof(W_LandsraadControlPointWidget_C_PreConstruct) == 0x000001, "Wrong size on W_LandsraadControlPointWidget_C_PreConstruct");
static_assert(offsetof(W_LandsraadControlPointWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnHouseTaskRevealChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged final
{
public:
	bool                                          bIsHouseTaskRevealedForPlayer;                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged) == 0x000001, "Wrong alignment on W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged) == 0x000001, "Wrong size on W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged, bIsHouseTaskRevealedForPlayer) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnHouseTaskRevealChanged::bIsHouseTaskRevealedForPlayer' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnHouseIdentityChanged
// 0x0020 (0x0020 - 0x0000)
struct W_LandsraadControlPointWidget_C_OnHouseIdentityChanged final
{
public:
	class UTexture2D*                             HouseBannerTexture;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerFacingHouseName;                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnHouseIdentityChanged) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_OnHouseIdentityChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnHouseIdentityChanged) == 0x000020, "Wrong size on W_LandsraadControlPointWidget_C_OnHouseIdentityChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnHouseIdentityChanged, HouseBannerTexture) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnHouseIdentityChanged::HouseBannerTexture' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnHouseIdentityChanged, PlayerFacingHouseName) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_OnHouseIdentityChanged::PlayerFacingHouseName' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnControlPointStateChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LandsraadControlPointWidget_C_OnControlPointStateChanged final
{
public:
	ELandsraadControlPointState                   NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnControlPointStateChanged) == 0x000001, "Wrong alignment on W_LandsraadControlPointWidget_C_OnControlPointStateChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnControlPointStateChanged) == 0x000001, "Wrong size on W_LandsraadControlPointWidget_C_OnControlPointStateChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnControlPointStateChanged, NewState) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnControlPointStateChanged::NewState' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnControllingFactionChanged
// 0x0008 (0x0008 - 0x0000)
struct W_LandsraadControlPointWidget_C_OnControllingFactionChanged final
{
public:
	struct FEFaction                              NewFaction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnControllingFactionChanged) == 0x000004, "Wrong alignment on W_LandsraadControlPointWidget_C_OnControllingFactionChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnControllingFactionChanged) == 0x000008, "Wrong size on W_LandsraadControlPointWidget_C_OnControllingFactionChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnControllingFactionChanged, NewFaction) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnControllingFactionChanged::NewFaction' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnContestantCountChanged
// 0x000C (0x000C - 0x0000)
struct W_LandsraadControlPointWidget_C_OnContestantCountChanged final
{
public:
	bool                                          bIsBeingContested;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AtreidesCount;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HarkonnenCount;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnContestantCountChanged) == 0x000004, "Wrong alignment on W_LandsraadControlPointWidget_C_OnContestantCountChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnContestantCountChanged) == 0x00000C, "Wrong size on W_LandsraadControlPointWidget_C_OnContestantCountChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnContestantCountChanged, bIsBeingContested) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnContestantCountChanged::bIsBeingContested' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnContestantCountChanged, AtreidesCount) == 0x000004, "Member 'W_LandsraadControlPointWidget_C_OnContestantCountChanged::AtreidesCount' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnContestantCountChanged, HarkonnenCount) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_OnContestantCountChanged::HarkonnenCount' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnCapturingFactionChanged
// 0x0008 (0x0008 - 0x0000)
struct W_LandsraadControlPointWidget_C_OnCapturingFactionChanged final
{
public:
	struct FEFaction                              NewFaction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnCapturingFactionChanged) == 0x000004, "Wrong alignment on W_LandsraadControlPointWidget_C_OnCapturingFactionChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnCapturingFactionChanged) == 0x000008, "Wrong size on W_LandsraadControlPointWidget_C_OnCapturingFactionChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnCapturingFactionChanged, NewFaction) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnCapturingFactionChanged::NewFaction' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.OnCaptureProgressChanged
// 0x0004 (0x0004 - 0x0000)
struct W_LandsraadControlPointWidget_C_OnCaptureProgressChanged final
{
public:
	int32                                         NewProgress;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_OnCaptureProgressChanged) == 0x000004, "Wrong alignment on W_LandsraadControlPointWidget_C_OnCaptureProgressChanged");
static_assert(sizeof(W_LandsraadControlPointWidget_C_OnCaptureProgressChanged) == 0x000004, "Wrong size on W_LandsraadControlPointWidget_C_OnCaptureProgressChanged");
static_assert(offsetof(W_LandsraadControlPointWidget_C_OnCaptureProgressChanged, NewProgress) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_OnCaptureProgressChanged::NewProgress' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.Get Control Point Status Text
// 0x00D8 (0x00D8 - 0x0000)
struct W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text final
{
public:
	ELandsraadControlPointState                   State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContested;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	ELandsraadControlPointState                   Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00A8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00C0(0x0018)()
};
static_assert(alignof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text");
static_assert(sizeof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text) == 0x0000D8, "Wrong size on W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, State) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::State' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, IsContested) == 0x000001, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::IsContested' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Text) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Text' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_bool_Variable) == 0x000020, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_text_Variable) == 0x000028, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_byte_Variable) == 0x000040, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_text_Variable_1) == 0x000048, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_text_Variable_2) == 0x000060, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_text_Variable_3) == 0x000078, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, Temp_text_Variable_4) == 0x000090, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, K2Node_Select_Default) == 0x0000A8, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text, K2Node_Select_Default_1) == 0x0000C0, "Member 'W_LandsraadControlPointWidget_C_Get_Control_Point_Status_Text::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LandsraadControlPointWidget.W_LandsraadControlPointWidget_C.ExecuteUbergraph_W_LandsraadControlPointWidget
// 0x0110 (0x0110 - 0x0000)
struct W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NewProgress;                          // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEFaction                              K2Node_Event_NewFaction_1;                         // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELandsraadControlPointState                   K2Node_Event_NewState;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEFaction                              K2Node_Event_NewFaction;                           // 0x002C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_LandsraadHUDGuiData                 CallFunc_Map_Find_Value;                           // 0x0044(0x0030)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0014)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsBeingContested;                    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AtreidesCount;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_HarkonnenCount;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Get_Control_Point_Status_Text_Text;       // 0x0098(0x0018)()
	class FText                                   CallFunc_Get_Control_Point_Status_Text_Text_1;     // 0x00B0(0x0018)()
	bool                                          K2Node_Event_bIsHouseTaskRevealedForPlayer;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_HouseBannerTexture;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_PlayerFacingHouseName;                // 0x00D8(0x0018)(ConstParm)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Start_Contested_Bar_Opacity_ImplicitCast; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget) == 0x000008, "Wrong alignment on W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget");
static_assert(sizeof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget) == 0x000110, "Wrong size on W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, EntryPoint) == 0x000000, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, Temp_bool_Variable) == 0x000004, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, Temp_byte_Variable) == 0x000005, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, Temp_byte_Variable_1) == 0x000006, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, Temp_bool_Variable_1) == 0x000007, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, Temp_byte_Variable_2) == 0x000008, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, Temp_byte_Variable_3) == 0x000009, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_NewProgress) == 0x00000C, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_NewProgress' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_NewFaction_1) == 0x000010, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_NewFaction_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_NewState) == 0x000028, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_NewFaction) == 0x00002C, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_NewFaction' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_Map_Find_Value) == 0x000044, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_Map_Find_ReturnValue) == 0x000074, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_IsDesignTime) == 0x00008C, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_bIsBeingContested) == 0x00008D, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_bIsBeingContested' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_AtreidesCount) == 0x000090, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_AtreidesCount' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_HarkonnenCount) == 0x000094, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_HarkonnenCount' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_Get_Control_Point_Status_Text_Text) == 0x000098, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_Get_Control_Point_Status_Text_Text' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_Get_Control_Point_Status_Text_Text_1) == 0x0000B0, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_Get_Control_Point_Status_Text_Text_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_bIsHouseTaskRevealedForPlayer) == 0x0000C8, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_bIsHouseTaskRevealedForPlayer' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_HouseBannerTexture) == 0x0000D0, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_HouseBannerTexture' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Event_PlayerFacingHouseName) == 0x0000D8, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Event_PlayerFacingHouseName' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Select_Default) == 0x0000F0, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x0000F1, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_Select_Default_1) == 0x0000F2, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_SelectFloat_ReturnValue) == 0x0000F8, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, CallFunc_GetRenderOpacity_ReturnValue) == 0x000100, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget, K2Node_VariableSet_Start_Contested_Bar_Opacity_ImplicitCast) == 0x000108, "Member 'W_LandsraadControlPointWidget_C_ExecuteUbergraph_W_LandsraadControlPointWidget::K2Node_VariableSet_Start_Contested_Bar_Opacity_ImplicitCast' has a wrong offset!");

}

