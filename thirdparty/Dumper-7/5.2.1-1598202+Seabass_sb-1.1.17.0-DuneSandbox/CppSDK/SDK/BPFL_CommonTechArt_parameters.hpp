#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_CommonTechArt

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AssetRegistry_structs.hpp"


namespace SDK::Params
{

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Clamp Linear Color
// 0x00A8 (0x00A8 - 0x0000)
struct BPFL_CommonTechArt_C_Clamp_Linear_Color final
{
public:
	struct FLinearColor                           In_Color;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Clamped_Color;                                     // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_2;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_3;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Clamp_Linear_Color) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Clamp_Linear_Color");
static_assert(sizeof(BPFL_CommonTechArt_C_Clamp_Linear_Color) == 0x0000A8, "Wrong size on BPFL_CommonTechArt_C_Clamp_Linear_Color");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, In_Color) == 0x000000, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::In_Color' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, Min) == 0x000010, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::Min' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, Max) == 0x000018, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::Max' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, __WorldContext) == 0x000020, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, Clamped_Color) == 0x000028, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::Clamped_Color' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_BreakColor_R) == 0x000038, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_BreakColor_G) == 0x00003C, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_BreakColor_B) == 0x000040, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_BreakColor_A) == 0x000044, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_ReturnValue_1) == 0x000050, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_ReturnValue_2) == 0x000058, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_ReturnValue_3) == 0x000060, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_MakeColor_ReturnValue) == 0x000068, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_Value_ImplicitCast) == 0x000078, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_Value_ImplicitCast_1) == 0x000080, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_Value_ImplicitCast_2) == 0x000088, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_FClamp_Value_ImplicitCast_3) == 0x000090, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_FClamp_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_MakeColor_R_ImplicitCast) == 0x000098, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_MakeColor_A_ImplicitCast) == 0x00009C, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_MakeColor_B_ImplicitCast) == 0x0000A0, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Clamp_Linear_Color, CallFunc_MakeColor_G_ImplicitCast) == 0x0000A4, "Member 'BPFL_CommonTechArt_C_Clamp_Linear_Color::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Get System Path from Level path
// 0x00B0 (0x00B0 - 0x0000)
struct BPFL_CommonTechArt_C_Get_System_Path_from_Level_path final
{
public:
	class FString                                 In_Path;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Return_Value;                                      // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RootDir_ReturnValue;                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Get_System_Path_from_Level_path");
static_assert(sizeof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path) == 0x0000B0, "Wrong size on BPFL_CommonTechArt_C_Get_System_Path_from_Level_path");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, In_Path) == 0x000000, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::In_Path' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, __WorldContext) == 0x000010, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, Return_Value) == 0x000018, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::Return_Value' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_RootDir_ReturnValue) == 0x000028, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_RootDir_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Replace_ReturnValue) == 0x000038, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Split_LeftS) == 0x000058, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Split_RightS) == 0x000068, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Split_ReturnValue) == 0x000078, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Contains_ReturnValue) == 0x000079, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_SelectString_ReturnValue) == 0x000080, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Get_System_Path_from_Level_path, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BPFL_CommonTechArt_C_Get_System_Path_from_Level_path::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.LinearColorToVector4
// 0x0080 (0x0080 - 0x0000)
struct BPFL_CommonTechArt_C_LinearColorToVector4 final
{
public:
	struct FLinearColor                           Linear_Color;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Vector_4;                                          // 0x0020(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_LinearColorToVector4) == 0x000010, "Wrong alignment on BPFL_CommonTechArt_C_LinearColorToVector4");
static_assert(sizeof(BPFL_CommonTechArt_C_LinearColorToVector4) == 0x000080, "Wrong size on BPFL_CommonTechArt_C_LinearColorToVector4");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, Linear_Color) == 0x000000, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::Linear_Color' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, __WorldContext) == 0x000010, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, Vector_4) == 0x000020, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::Vector_4' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, CallFunc_MakeVector4_ReturnValue) == 0x000040, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, CallFunc_MakeVector4_X_ImplicitCast) == 0x000060, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::CallFunc_MakeVector4_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, CallFunc_MakeVector4_Y_ImplicitCast) == 0x000068, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::CallFunc_MakeVector4_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, CallFunc_MakeVector4_Z_ImplicitCast) == 0x000070, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::CallFunc_MakeVector4_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_LinearColorToVector4, CallFunc_MakeVector4_W_ImplicitCast) == 0x000078, "Member 'BPFL_CommonTechArt_C_LinearColorToVector4::CallFunc_MakeVector4_W_ImplicitCast' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Pack Channel Selection Into Float
// 0x00B8 (0x00B8 - 0x0000)
struct BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float final
{
public:
	struct FLinearColor                           Channel_Selection;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Packed_Float;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Clamp_Linear_Color_Clamped_Color;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast_1;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast_2;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast_3;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float");
static_assert(sizeof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float) == 0x0000B8, "Wrong size on BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, Channel_Selection) == 0x000000, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::Channel_Selection' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, __WorldContext) == 0x000010, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, Packed_Float) == 0x000018, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::Packed_Float' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Clamp_Linear_Color_Clamped_Color) == 0x000020, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Clamp_Linear_Color_Clamped_Color' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_BreakColor_R) == 0x000030, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_BreakColor_G) == 0x000034, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_BreakColor_B) == 0x000038, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_BreakColor_A) == 0x00003C, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_ReturnValue) == 0x000040, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_ReturnValue_1) == 0x000044, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Multiply_IntInt_ReturnValue) == 0x000048, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000058, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_ReturnValue_2) == 0x000060, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_ReturnValue_3) == 0x000064, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000068, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x00006C, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000070, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000078, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_A_ImplicitCast) == 0x000098, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_A_ImplicitCast_1) == 0x0000A0, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_A_ImplicitCast_2) == 0x0000A8, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float, CallFunc_Round_A_ImplicitCast_3) == 0x0000B0, "Member 'BPFL_CommonTechArt_C_Pack_Channel_Selection_Into_Float::CallFunc_Round_A_ImplicitCast_3' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Pack Linear Color Into Float
// 0x00C8 (0x00C8 - 0x0000)
struct BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        PackedFloat;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float");
static_assert(sizeof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float) == 0x0000C8, "Wrong size on BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, Color) == 0x000000, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::Color' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, __WorldContext) == 0x000010, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, PackedFloat) == 0x000018, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::PackedFloat' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_BreakColor_R) == 0x000020, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_BreakColor_G) == 0x000024, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_BreakColor_B) == 0x000028, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_BreakColor_A) == 0x00002C, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_FFloor_ReturnValue) == 0x000040, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_FFloor_ReturnValue_1) == 0x000058, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000068, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_FFloor_ReturnValue_2) == 0x000078, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000080, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000088, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000B0, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0000B8, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float, CallFunc_FClamp_Value_ImplicitCast) == 0x0000C0, "Member 'BPFL_CommonTechArt_C_Pack_Linear_Color_Into_Float::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Pack Normalized Vector Into Float
// 0x00B8 (0x00B8 - 0x0000)
struct BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        PackedFloat;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float");
static_assert(sizeof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float) == 0x0000B8, "Wrong size on BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, Vector) == 0x000000, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::Vector' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, __WorldContext) == 0x000018, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, PackedFloat) == 0x000020, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::PackedFloat' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_BreakVector_X) == 0x000040, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_BreakVector_Y) == 0x000048, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_BreakVector_Z) == 0x000050, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_FFloor_ReturnValue) == 0x000068, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_FFloor_ReturnValue_1) == 0x00006C, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_FFloor_ReturnValue_2) == 0x000090, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000098, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BPFL_CommonTechArt_C_Pack_Normalized_Vector_Into_Float::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.SetDefaultCustomPrimitiveDataColorLinearRGB
// 0x0068 (0x0068 - 0x0000)
struct BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         DataIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InColor;                                           // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB");
static_assert(sizeof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB) == 0x000068, "Wrong size on BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, Target) == 0x000000, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::Target' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, DataIndex) == 0x000008, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::DataIndex' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, InColor) == 0x00000C, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::InColor' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, __WorldContext) == 0x000020, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_BreakColor_R) == 0x000028, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_BreakColor_G) == 0x00002C, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_BreakColor_B) == 0x000030, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_BreakColor_A) == 0x000034, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_MakeVector_X_ImplicitCast) == 0x000050, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_MakeVector_Y_ImplicitCast) == 0x000058, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB, CallFunc_MakeVector_Z_ImplicitCast) == 0x000060, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGB::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.SetDefaultCustomPrimitiveDataColorLinearRGBA
// 0x0080 (0x0080 - 0x0000)
struct BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         DataIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InColor;                                           // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA) == 0x000010, "Wrong alignment on BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA");
static_assert(sizeof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA) == 0x000080, "Wrong size on BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, Target) == 0x000000, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::Target' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, DataIndex) == 0x000008, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::DataIndex' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, InColor) == 0x00000C, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::InColor' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, __WorldContext) == 0x000020, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_BreakColor_R) == 0x000028, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_BreakColor_G) == 0x00002C, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_BreakColor_B) == 0x000030, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_BreakColor_A) == 0x000034, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_MakeVector4_ReturnValue) == 0x000040, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_MakeVector4_X_ImplicitCast) == 0x000060, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_MakeVector4_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_MakeVector4_Y_ImplicitCast) == 0x000068, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_MakeVector4_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_MakeVector4_Z_ImplicitCast) == 0x000070, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_MakeVector4_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA, CallFunc_MakeVector4_W_ImplicitCast) == 0x000078, "Member 'BPFL_CommonTechArt_C_SetDefaultCustomPrimitiveDataColorLinearRGBA::CallFunc_MakeVector4_W_ImplicitCast' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Vector Elements Ordered By Size
// 0x0098 (0x0098 - 0x0000)
struct BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size final
{
public:
	struct FVector                                Vecotor_to_process;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Element_Size_Ordered_Vector;                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxElement_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinElement_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size");
static_assert(sizeof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size) == 0x000098, "Wrong size on BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, Vecotor_to_process) == 0x000000, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::Vecotor_to_process' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, __WorldContext) == 0x000018, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, Element_Size_Ordered_Vector) == 0x000020, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::Element_Size_Ordered_Vector' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_GetMaxElement_ReturnValue) == 0x000038, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_BreakVector_X) == 0x000040, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_BreakVector_Y) == 0x000048, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_BreakVector_Z) == 0x000050, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_GetMinElement_ReturnValue) == 0x000058, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BPFL_CommonTechArt_C_Vector_Elements_Ordered_By_Size::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPFL_CommonTechArt.BPFL_CommonTechArt_C.Gather Dependencies
// 0x0170 (0x0170 - 0x0000)
struct BPFL_CommonTechArt_C_Gather_Dependencies final
{
public:
	TArray<struct FAssetData>                     Objects_to_check;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UClass*>                         Classes_to_collect_;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Recursive;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Also_scan_references_;                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAssetData>                     Referenced_Assets_Data_;                           // 0x0030(0x0010)(Parm, OutParm)
	struct FAssetData                             Current_Asset;                                     // 0x0040(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FAssetData>                     Referenced_Assets;                                 // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetRegistryDependencyOptions        K2Node_MakeStruct_AssetRegistryDependencyOptions;  // 0x00D4(0x0005)(NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FAssetRegistryDependencyOptions        K2Node_MakeStruct_AssetRegistryDependencyOptions_1; // 0x00F0(0x0005)(NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue_1;           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_K2_GetDependencies_OutDependencies;       // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_GetDependencies_ReturnValue;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_K2_GetReferencers_OutReferencers;         // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_GetReferencers_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPackageName_OutAssetData;      // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPackageName_ReturnValue;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetClass_ReturnValue;                     // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CommonTechArt_C_Gather_Dependencies) == 0x000008, "Wrong alignment on BPFL_CommonTechArt_C_Gather_Dependencies");
static_assert(sizeof(BPFL_CommonTechArt_C_Gather_Dependencies) == 0x000170, "Wrong size on BPFL_CommonTechArt_C_Gather_Dependencies");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Objects_to_check) == 0x000000, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Objects_to_check' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Classes_to_collect_) == 0x000010, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Classes_to_collect_' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Recursive) == 0x000020, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Recursive' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Also_scan_references_) == 0x000021, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Also_scan_references_' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, __WorldContext) == 0x000028, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Referenced_Assets_Data_) == 0x000030, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Referenced_Assets_Data_' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Current_Asset) == 0x000040, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Current_Asset' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Referenced_Assets) == 0x0000A8, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Referenced_Assets' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000C4, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_Contains_ReturnValue) == 0x0000C5, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C8, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000CC, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000D0, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, K2Node_MakeStruct_AssetRegistryDependencyOptions) == 0x0000D4, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::K2Node_MakeStruct_AssetRegistryDependencyOptions' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_GetAssetRegistry_ReturnValue) == 0x0000E0, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, K2Node_MakeStruct_AssetRegistryDependencyOptions_1) == 0x0000F0, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::K2Node_MakeStruct_AssetRegistryDependencyOptions_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_GetAssetRegistry_ReturnValue_1) == 0x0000F8, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_GetAssetRegistry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_K2_GetDependencies_OutDependencies) == 0x000108, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_K2_GetDependencies_OutDependencies' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_K2_GetDependencies_ReturnValue) == 0x000118, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_K2_GetDependencies_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_K2_GetReferencers_OutReferencers) == 0x000120, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_K2_GetReferencers_OutReferencers' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_K2_GetReferencers_ReturnValue) == 0x000130, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_K2_GetReferencers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_Get_Item) == 0x000134, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_GetAssetsByPackageName_OutAssetData) == 0x000140, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_GetAssetsByPackageName_OutAssetData' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_GetAssetsByPackageName_ReturnValue) == 0x000150, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_GetAssetsByPackageName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_Length_ReturnValue) == 0x000154, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_GetClass_ReturnValue) == 0x000160, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_GetClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CommonTechArt_C_Gather_Dependencies, CallFunc_Array_Contains_ReturnValue_1) == 0x000168, "Member 'BPFL_CommonTechArt_C_Gather_Dependencies::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

}

