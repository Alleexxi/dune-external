#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_SardMultitool_CreateMultitool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_SardMultitool_CreateMultitool.GC_SardMultitool_CreateMultitool_C
// 0x0028 (0x03D8 - 0x03B0)
class AGC_SardMultitool_CreateMultitool_C : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachBone;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TempSkeletalMeshComponent;                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AnimMontage;                                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_SardMultitool_CreateMultitool(int32 EntryPoint);
	void OnApplication_1(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void OnLoopingStart_1(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void OnRecurring_1(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void OnRemoval_1(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_SardMultitool_CreateMultitool_C">();
	}
	static class AGC_SardMultitool_CreateMultitool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_SardMultitool_CreateMultitool_C>();
	}
};
static_assert(alignof(AGC_SardMultitool_CreateMultitool_C) == 0x000008, "Wrong alignment on AGC_SardMultitool_CreateMultitool_C");
static_assert(sizeof(AGC_SardMultitool_CreateMultitool_C) == 0x0003D8, "Wrong size on AGC_SardMultitool_CreateMultitool_C");
static_assert(offsetof(AGC_SardMultitool_CreateMultitool_C, UberGraphFrame) == 0x0003B0, "Member 'AGC_SardMultitool_CreateMultitool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_SardMultitool_CreateMultitool_C, DefaultSceneRoot) == 0x0003B8, "Member 'AGC_SardMultitool_CreateMultitool_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_SardMultitool_CreateMultitool_C, AttachBone) == 0x0003C0, "Member 'AGC_SardMultitool_CreateMultitool_C::AttachBone' has a wrong offset!");
static_assert(offsetof(AGC_SardMultitool_CreateMultitool_C, TempSkeletalMeshComponent) == 0x0003C8, "Member 'AGC_SardMultitool_CreateMultitool_C::TempSkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(AGC_SardMultitool_CreateMultitool_C, AnimMontage) == 0x0003D0, "Member 'AGC_SardMultitool_CreateMultitool_C::AnimMontage' has a wrong offset!");

}

