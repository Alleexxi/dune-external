#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTD_HasDeployedMine

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BTD_HasDeployedMine.BP_BTD_HasDeployedMine_C.GetDeployedMineFromAbility
// 0x0040 (0x0040 - 0x0000)
struct BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility final
{
public:
	const class UDWGameplayAbility*               AbilityInstance;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UGA_Throw_Base_C*                       K2Node_DynamicCast_AsGA_Throw_Base;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_PlaceMine_Remote_C*                 K2Node_DynamicCast_AsGA_Place_Mine_Remote;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_PlaceMine_Suspensor_Stabilization_C* K2Node_DynamicCast_AsGA_Place_Mine_Suspensor_Stabilization; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility) == 0x000008, "Wrong alignment on BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility");
static_assert(sizeof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility) == 0x000040, "Wrong size on BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, AbilityInstance) == 0x000000, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::AbilityInstance' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, ReturnValue) == 0x000008, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, K2Node_DynamicCast_AsGA_Throw_Base) == 0x000010, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::K2Node_DynamicCast_AsGA_Throw_Base' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, K2Node_DynamicCast_AsGA_Place_Mine_Remote) == 0x000020, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::K2Node_DynamicCast_AsGA_Place_Mine_Remote' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, K2Node_DynamicCast_AsGA_Place_Mine_Suspensor_Stabilization) == 0x000030, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::K2Node_DynamicCast_AsGA_Place_Mine_Suspensor_Stabilization' has a wrong offset!");
static_assert(offsetof(BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_BTD_HasDeployedMine_C_GetDeployedMineFromAbility::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

