#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StaticCivilian

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StaticCivilian.BP_StaticCivilian_C
// 0x00E8 (0x0470 - 0x0388)
class ABP_StaticCivilian_C final : public AStaticCivilianBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDuneAudioEmitterComponent*             DuneAudioEmitter;                                  // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCustomizableSkeletalComponent*         MutableComp;                                       // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponentBudgeted*         SkeletalMeshComponentBudgeted;                     // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CapsuleCollider;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UCustomizableObjectInstance>> Mutable_COI_s;                         // 0x03B8(0x0010)(Edit, BlueprintVisible)
	class UAnimSequence*                          Idle_Animation;                                    // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  Breaker_Animations;                                // 0x03D0(0x0010)(Edit, BlueprintVisible)
	double                                        Breaker_Chance;                                    // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Prop_Mesh;                                         // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Prop_Socket;                                       // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Prop_Transform;                                    // 0x0400(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CapsuleHasCollision;                               // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClientInitStaticNPC();
	void ExecuteUbergraph_BP_StaticCivilian(int32 EntryPoint);
	void OnLoaded_8C2C334448F384AB2D19848F0504956F(class UObject* Loaded);
	void PickRandomCOI(TSoftObjectPtr<class UCustomizableObjectInstance>* COI);
	void PlayAudio(class UFcAudioEvent* AudioEvent);
	void Preview_Appearance();
	void ReceiveBeginPlay();
	void SetMutableAppearance(class UCustomizableSkeletalComponent* Mutable_Component);
	void SetProp();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StaticCivilian_C">();
	}
	static class ABP_StaticCivilian_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StaticCivilian_C>();
	}
};
static_assert(alignof(ABP_StaticCivilian_C) == 0x000010, "Wrong alignment on ABP_StaticCivilian_C");
static_assert(sizeof(ABP_StaticCivilian_C) == 0x000470, "Wrong size on ABP_StaticCivilian_C");
static_assert(offsetof(ABP_StaticCivilian_C, UberGraphFrame) == 0x000388, "Member 'ABP_StaticCivilian_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, DuneAudioEmitter) == 0x000390, "Member 'ABP_StaticCivilian_C::DuneAudioEmitter' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, MutableComp) == 0x000398, "Member 'ABP_StaticCivilian_C::MutableComp' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, SkeletalMeshComponentBudgeted) == 0x0003A0, "Member 'ABP_StaticCivilian_C::SkeletalMeshComponentBudgeted' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, CapsuleCollider) == 0x0003A8, "Member 'ABP_StaticCivilian_C::CapsuleCollider' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, DefaultSceneRoot) == 0x0003B0, "Member 'ABP_StaticCivilian_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Mutable_COI_s) == 0x0003B8, "Member 'ABP_StaticCivilian_C::Mutable_COI_s' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Idle_Animation) == 0x0003C8, "Member 'ABP_StaticCivilian_C::Idle_Animation' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Breaker_Animations) == 0x0003D0, "Member 'ABP_StaticCivilian_C::Breaker_Animations' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Breaker_Chance) == 0x0003E0, "Member 'ABP_StaticCivilian_C::Breaker_Chance' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Prop_Mesh) == 0x0003E8, "Member 'ABP_StaticCivilian_C::Prop_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Prop_Socket) == 0x0003F0, "Member 'ABP_StaticCivilian_C::Prop_Socket' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, Prop_Transform) == 0x000400, "Member 'ABP_StaticCivilian_C::Prop_Transform' has a wrong offset!");
static_assert(offsetof(ABP_StaticCivilian_C, CapsuleHasCollision) == 0x000460, "Member 'ABP_StaticCivilian_C::CapsuleHasCollision' has a wrong offset!");

}

