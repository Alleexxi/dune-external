#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_GadgetsAbilities

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.Check Should Alternate Input Mode
// 0x0040 (0x0040 - 0x0000)
struct BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode final
{
public:
	class ADunePlayerCharacter*                   Dune_Player_Character;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_BP_PlayerFlagsGetter_ReturnValue;         // 0x0018(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode");
static_assert(sizeof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode) == 0x000040, "Wrong size on BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode");
static_assert(offsetof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode, Dune_Player_Character) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode::Dune_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode, __WorldContext) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode, ReturnValue) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode, CallFunc_BP_PlayerFlagsGetter_ReturnValue) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode::CallFunc_BP_PlayerFlagsGetter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode, CallFunc_HasTag_ReturnValue) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.GetAngleToActor
// 0x0088 (0x0088 - 0x0000)
struct BPFL_GadgetsAbilities_C_GetAngleToActor final
{
public:
	class AActor*                                 LookingActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Angle_To_Attacker;                                 // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetween_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_GetAngleToActor) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_GetAngleToActor");
static_assert(sizeof(BPFL_GadgetsAbilities_C_GetAngleToActor) == 0x000088, "Wrong size on BPFL_GadgetsAbilities_C_GetAngleToActor");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, LookingActor) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::LookingActor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, TargetActor) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::TargetActor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, Angle_To_Attacker) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::Angle_To_Attacker' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000068, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_GetAngleToActor, CallFunc_AngleBetween_ReturnValue) == 0x000080, "Member 'BPFL_GadgetsAbilities_C_GetAngleToActor::CallFunc_AngleBetween_ReturnValue' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsAbilityUsingHoldInput
// 0x0048 (0x0048 - 0x0000)
struct BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput final
{
public:
	class AActor*                                 Ability_Owner;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Gamepad_Uses_Hold_Input;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Keyboard_Uses_Hold_Input;                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Uses_Hold_Input;                                   // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_Should_Alternate_Input_Mode;                 // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Should_Alternate_Input_Mode_ReturnValue; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               CallFunc_GetInputMode_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput");
static_assert(sizeof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput) == 0x000048, "Wrong size on BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, Ability_Owner) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::Ability_Owner' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, In_Gamepad_Uses_Hold_Input) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::In_Gamepad_Uses_Hold_Input' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, In_Keyboard_Uses_Hold_Input) == 0x000009, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::In_Keyboard_Uses_Hold_Input' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, Uses_Hold_Input) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::Uses_Hold_Input' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, Local_Should_Alternate_Input_Mode) == 0x000019, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::Local_Should_Alternate_Input_Mode' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, Temp_bool_Variable) == 0x00001A, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_DynamicCast_AsDune_Player_Character) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, Temp_bool_Variable_1) == 0x000029, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, CallFunc_Check_Should_Alternate_Input_Mode_ReturnValue) == 0x00002A, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::CallFunc_Check_Should_Alternate_Input_Mode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_DynamicCast_AsDune_Player_Controller) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_DynamicCast_AsDune_Player_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, CallFunc_GetInputMode_ReturnValue) == 0x000041, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::CallFunc_GetInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_SwitchEnum_CmpSuccess) == 0x000042, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_Select_Default) == 0x000044, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, CallFunc_Not_PreBool_ReturnValue_1) == 0x000045, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput, K2Node_Select_Default_1) == 0x000046, "Member 'BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput::K2Node_Select_Default_1' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsActorFacingTarget
// 0x00A0 (0x00A0 - 0x0000)
struct BPFL_GadgetsAbilities_C_IsActorFacingTarget final
{
public:
	class AActor*                                 LookingActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLooking;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_IsActorFacingTarget) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_IsActorFacingTarget");
static_assert(sizeof(BPFL_GadgetsAbilities_C_IsActorFacingTarget) == 0x0000A0, "Wrong size on BPFL_GadgetsAbilities_C_IsActorFacingTarget");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, LookingActor) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::LookingActor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, TargetActor) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::TargetActor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, Angle) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::Angle' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, __WorldContext) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, IsLooking) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::IsLooking' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_GetActorForwardVector_ReturnValue) == 0x000040, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000070, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_Dot_VectorVector_ReturnValue) == 0x000088, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_DegAcos_ReturnValue) == 0x000090, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsActorFacingTarget, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BPFL_GadgetsAbilities_C_IsActorFacingTarget::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsDamageTypeInArray
// 0x0040 (0x0040 - 0x0000)
struct BPFL_GadgetsAbilities_C_IsDamageTypeInArray final
{
public:
	TArray<class UClass*>                         Filter;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_IsDamageTypeInArray");
static_assert(sizeof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray) == 0x000040, "Wrong size on BPFL_GadgetsAbilities_C_IsDamageTypeInArray");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, Filter) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::Filter' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, DamageType) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::DamageType' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, __WorldContext) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, Result) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::Result' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, CallFunc_ClassIsChildOf_ReturnValue) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInArray, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsDamageTypeInSet
// 0x0080 (0x0080 - 0x0000)
struct BPFL_GadgetsAbilities_C_IsDamageTypeInSet final
{
public:
	TSet<class UClass*>                           Filter;                                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UClass*                                 DamageType;                                        // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Set_ToArray_Result;                       // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsDamageTypeInArray_Result;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_IsDamageTypeInSet");
static_assert(sizeof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet) == 0x000080, "Wrong size on BPFL_GadgetsAbilities_C_IsDamageTypeInSet");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet, Filter) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInSet::Filter' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet, DamageType) == 0x000050, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInSet::DamageType' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet, __WorldContext) == 0x000058, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInSet::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet, Result) == 0x000060, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInSet::Result' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet, CallFunc_Set_ToArray_Result) == 0x000068, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInSet::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_IsDamageTypeInSet, CallFunc_IsDamageTypeInArray_Result) == 0x000078, "Member 'BPFL_GadgetsAbilities_C_IsDamageTypeInSet::CallFunc_IsDamageTypeInArray_Result' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.MulticastPlayAudioOnCharacter
// 0x0028 (0x0028 - 0x0000)
struct BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter final
{
public:
	class UFcAudioEvent*                          AudioEvent;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DuneCharacter;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter");
static_assert(sizeof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter) == 0x000028, "Wrong size on BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter");
static_assert(offsetof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter, AudioEvent) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter::AudioEvent' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter, DuneCharacter) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter::DuneCharacter' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter, K2Node_DynamicCast_AsDune_Character) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.PlayAudioOnCharacter
// 0x0028 (0x0028 - 0x0000)
struct BPFL_GadgetsAbilities_C_PlayAudioOnCharacter final
{
public:
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DuneCharacter;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_PlayAudioOnCharacter");
static_assert(sizeof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter) == 0x000028, "Wrong size on BPFL_GadgetsAbilities_C_PlayAudioOnCharacter");
static_assert(offsetof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter, AudioEvent) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_PlayAudioOnCharacter::AudioEvent' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter, DuneCharacter) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_PlayAudioOnCharacter::DuneCharacter' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_PlayAudioOnCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter, K2Node_DynamicCast_AsDune_Character) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_PlayAudioOnCharacter::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_PlayAudioOnCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_PlayAudioOnCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetCameraContextEnabled
// 0x0060 (0x0060 - 0x0000)
struct BPFL_GadgetsAbilities_C_SetCameraContextEnabled final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CameraContext;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCameraManager*               K2Node_DynamicCast_AsDune_Player_Camera_Manager;   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_SetCameraContextEnabled");
static_assert(sizeof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled) == 0x000060, "Wrong size on BPFL_GadgetsAbilities_C_SetCameraContextEnabled");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, Actor) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, CameraContext) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::CameraContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, bIsEnabled) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::bIsEnabled' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, __WorldContext) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, K2Node_DynamicCast_AsDune_Character) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, CallFunc_IsLocallyControlled_ReturnValue) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, K2Node_DynamicCast_AsPlayer_Controller) == 0x000040, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, K2Node_DynamicCast_AsDune_Player_Camera_Manager) == 0x000050, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::K2Node_DynamicCast_AsDune_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetCameraContextEnabled, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BPFL_GadgetsAbilities_C_SetCameraContextEnabled::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetHUDModeOverrideActive
// 0x0068 (0x0068 - 0x0000)
struct BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHUDMode                                      NewHUDMode;                                        // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeActive;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDMode                                      CachedPreviousMode;                                // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedIsOverrideActive;                            // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneHUD*                               LocalHUD;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHUDMode                                      CallFunc_GetHUDMode_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneHUD*                               K2Node_DynamicCast_AsDune_HUD;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive");
static_assert(sizeof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive) == 0x000068, "Wrong size on BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, Actor) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, NewHUDMode) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::NewHUDMode' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, ShouldBeActive) == 0x000009, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::ShouldBeActive' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CachedPreviousMode) == 0x00000A, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CachedPreviousMode' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CachedIsOverrideActive) == 0x00000B, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CachedIsOverrideActive' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, LocalHUD) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::LocalHUD' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CallFunc_GetHUDMode_ReturnValue) == 0x000022, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CallFunc_GetHUDMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, K2Node_DynamicCast_AsDune_Player_Character) == 0x000028, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, K2Node_DynamicCast_AsPlayer_Controller) == 0x000040, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, K2Node_DynamicCast_AsDune_HUD) == 0x000058, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::K2Node_DynamicCast_AsDune_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetInputContextEnabled
// 0x0078 (0x0078 - 0x0000)
struct BPFL_GadgetsAbilities_C_SetInputContextEnabled final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   InputContext;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnabled;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, NoDestructor)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModifyContextOptions                  Temp_struct_Variable_1;                            // 0x005C(0x0010)(ConstParm, NoDestructor)
	struct FEInputContext                         K2Node_MakeStruct_EInputContext;                   // 0x006C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_SetInputContextEnabled) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_SetInputContextEnabled");
static_assert(sizeof(BPFL_GadgetsAbilities_C_SetInputContextEnabled) == 0x000078, "Wrong size on BPFL_GadgetsAbilities_C_SetInputContextEnabled");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, Actor) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, InputContext) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::InputContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, bIsEnabled) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::bIsEnabled' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, __WorldContext) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, Temp_struct_Variable) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, K2Node_DynamicCast_AsDune_Character) == 0x000030, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, CallFunc_IsLocallyControlled_ReturnValue) == 0x000048, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, K2Node_DynamicCast_AsPlayer_Controller) == 0x000050, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, Temp_struct_Variable_1) == 0x00005C, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetInputContextEnabled, K2Node_MakeStruct_EInputContext) == 0x00006C, "Member 'BPFL_GadgetsAbilities_C_SetInputContextEnabled::K2Node_MakeStruct_EInputContext' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetMovementInputBlockActive
// 0x0028 (0x0028 - 0x0000)
struct BPFL_GadgetsAbilities_C_SetMovementInputBlockActive final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMovementInputBlocked;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeBlocked;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_SetMovementInputBlockActive");
static_assert(sizeof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive) == 0x000028, "Wrong size on BPFL_GadgetsAbilities_C_SetMovementInputBlockActive");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, Actor) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, IsMovementInputBlocked) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::IsMovementInputBlocked' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, ShouldBeBlocked) == 0x000009, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::ShouldBeBlocked' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_SetMovementInputBlockActive, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BPFL_GadgetsAbilities_C_SetMovementInputBlockActive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.StopAudioOnCharacter
// 0x0028 (0x0028 - 0x0000)
struct BPFL_GadgetsAbilities_C_StopAudioOnCharacter final
{
public:
	const class UFcAudioEvent*                    AudioEvent;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DuneCharacter;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter) == 0x000008, "Wrong alignment on BPFL_GadgetsAbilities_C_StopAudioOnCharacter");
static_assert(sizeof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter) == 0x000028, "Wrong size on BPFL_GadgetsAbilities_C_StopAudioOnCharacter");
static_assert(offsetof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter, AudioEvent) == 0x000000, "Member 'BPFL_GadgetsAbilities_C_StopAudioOnCharacter::AudioEvent' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter, DuneCharacter) == 0x000008, "Member 'BPFL_GadgetsAbilities_C_StopAudioOnCharacter::DuneCharacter' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter, __WorldContext) == 0x000010, "Member 'BPFL_GadgetsAbilities_C_StopAudioOnCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter, K2Node_DynamicCast_AsDune_Character) == 0x000018, "Member 'BPFL_GadgetsAbilities_C_StopAudioOnCharacter::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(BPFL_GadgetsAbilities_C_StopAudioOnCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_GadgetsAbilities_C_StopAudioOnCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

