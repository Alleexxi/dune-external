#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_HRK_1MGC_Chassis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AB_HRK_1MGC_Chassis_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_HRK_1MGC_Chassis.AB_HRK_1MGC_Chassis_C
// 0x0A10 (0x0F30 - 0x0520)
class UAB_HRK_1MGC_Chassis_C final : public UWheeledVehicleAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AB_HRK_1MGC_Chassis::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;          // 0x0528(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0538(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0540(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0548(0x0020)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0568(0x0470)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x09D8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0A20(0x0048)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x0A68(0x0100)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x0B68(0x0100)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0C68(0x0078)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0CE0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D58(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0DA0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0DE8(0x00E0)()
	double                                        __CustomProperty_Forward_CED48A544C6CC92D000CFD95FDAB0107; // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_Steering_CED48A544C6CC92D000CFD95FDAB0107; // 0x0ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Steering;                                          // 0x0ED8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward;                                           // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBoosting;                                       // 0x0EE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInAir;                                          // 0x0EE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasDriver;                                        // 0x0EEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EEB[0x5];                                      // 0x0EEB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      VFXDamageSmoke;                                    // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ChassisDestroy_;                                   // 0x0EF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF9[0x7];                                      // 0x0EF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Smoke;                                             // 0x0F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Sparkles_01;                                       // 0x0F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Sparkles_02;                                       // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Niagara_System_Chassis;                            // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Niagara_System_Chassis_Durability;                 // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Chassis_Destroy;                               // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_HRK_1MGC_Chassis_AnimGraphNode_BlendSpacePlayer_51819BDB42C556A56DB68E9E3426D2C9();
	void ExecuteUbergraph_AB_HRK_1MGC_Chassis(int32 EntryPoint);
	void OnVehicleModuleBroken(const EVehicleModuleType ModuleType);
	void OnVehicleModuleDurabilityChanged(const EVehicleModuleType ModuleType, float RelativeDurability);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_HRK_1MGC_Chassis_C">();
	}
	static class UAB_HRK_1MGC_Chassis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_HRK_1MGC_Chassis_C>();
	}
};
static_assert(alignof(UAB_HRK_1MGC_Chassis_C) == 0x000010, "Wrong alignment on UAB_HRK_1MGC_Chassis_C");
static_assert(sizeof(UAB_HRK_1MGC_Chassis_C) == 0x000F30, "Wrong size on UAB_HRK_1MGC_Chassis_C");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, UberGraphFrame) == 0x000520, "Member 'UAB_HRK_1MGC_Chassis_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, __AnimBlueprintMutables) == 0x000528, "Member 'UAB_HRK_1MGC_Chassis_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimBlueprintExtension_PropertyAccess) == 0x000538, "Member 'UAB_HRK_1MGC_Chassis_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimBlueprintExtension_Base) == 0x000540, "Member 'UAB_HRK_1MGC_Chassis_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_Root) == 0x000548, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_ControlRig) == 0x000568, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_BlendListByBool_1) == 0x0009D8, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_BlendListByBool) == 0x000A20, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_ModifyCurve_1) == 0x000A68, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_ModifyCurve) == 0x000B68, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000C68, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_BlendSpacePlayer) == 0x000CE0, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_SequencePlayer_1) == 0x000D58, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_SequencePlayer) == 0x000DA0, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, AnimGraphNode_LayeredBoneBlend) == 0x000DE8, "Member 'UAB_HRK_1MGC_Chassis_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, __CustomProperty_Forward_CED48A544C6CC92D000CFD95FDAB0107) == 0x000EC8, "Member 'UAB_HRK_1MGC_Chassis_C::__CustomProperty_Forward_CED48A544C6CC92D000CFD95FDAB0107' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, __CustomProperty_Steering_CED48A544C6CC92D000CFD95FDAB0107) == 0x000ED0, "Member 'UAB_HRK_1MGC_Chassis_C::__CustomProperty_Steering_CED48A544C6CC92D000CFD95FDAB0107' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Steering) == 0x000ED8, "Member 'UAB_HRK_1MGC_Chassis_C::Steering' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Forward) == 0x000EE0, "Member 'UAB_HRK_1MGC_Chassis_C::Forward' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, bIsBoosting) == 0x000EE8, "Member 'UAB_HRK_1MGC_Chassis_C::bIsBoosting' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, bIsInAir) == 0x000EE9, "Member 'UAB_HRK_1MGC_Chassis_C::bIsInAir' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, bHasDriver) == 0x000EEA, "Member 'UAB_HRK_1MGC_Chassis_C::bHasDriver' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, VFXDamageSmoke) == 0x000EF0, "Member 'UAB_HRK_1MGC_Chassis_C::VFXDamageSmoke' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, ChassisDestroy_) == 0x000EF8, "Member 'UAB_HRK_1MGC_Chassis_C::ChassisDestroy_' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Smoke) == 0x000F00, "Member 'UAB_HRK_1MGC_Chassis_C::Smoke' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Sparkles_01) == 0x000F08, "Member 'UAB_HRK_1MGC_Chassis_C::Sparkles_01' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Sparkles_02) == 0x000F10, "Member 'UAB_HRK_1MGC_Chassis_C::Sparkles_02' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Niagara_System_Chassis) == 0x000F18, "Member 'UAB_HRK_1MGC_Chassis_C::Niagara_System_Chassis' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, Niagara_System_Chassis_Durability) == 0x000F20, "Member 'UAB_HRK_1MGC_Chassis_C::Niagara_System_Chassis_Durability' has a wrong offset!");
static_assert(offsetof(UAB_HRK_1MGC_Chassis_C, VFX_Chassis_Destroy) == 0x000F28, "Member 'UAB_HRK_1MGC_Chassis_C::VFX_Chassis_Destroy' has a wrong offset!");

}

