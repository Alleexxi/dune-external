#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_SDS_Chassis_CtrlRig

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass SK_SDS_Chassis_CtrlRig.SK_SDS_Chassis_CtrlRig_C
// 0x00F0 (0x04F0 - 0x0400)
class USK_SDS_Chassis_CtrlRig_C final : public UControlRig
{
public:
	struct FVector                                Front_Leg_Target;                                  // 0x0400(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Front_Foot_Target;                                 // 0x0418(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center_Leg_L_Target;                               // 0x0430(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center_Foot_L_Target;                              // 0x0448(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center_Leg_R_Target;                               // 0x0460(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center_Foot_R_Target;                              // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rear_Leg_L_Target;                                 // 0x0490(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rear_Foot_L_Target;                                // 0x04A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rear_Leg_R_Target;                                 // 0x04C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rear_Foot_R_Target;                                // 0x04D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SK_SDS_Chassis_CtrlRig_C">();
	}
	static class USK_SDS_Chassis_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USK_SDS_Chassis_CtrlRig_C>();
	}
};
static_assert(alignof(USK_SDS_Chassis_CtrlRig_C) == 0x000008, "Wrong alignment on USK_SDS_Chassis_CtrlRig_C");
static_assert(sizeof(USK_SDS_Chassis_CtrlRig_C) == 0x0004F0, "Wrong size on USK_SDS_Chassis_CtrlRig_C");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Front_Leg_Target) == 0x000400, "Member 'USK_SDS_Chassis_CtrlRig_C::Front_Leg_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Front_Foot_Target) == 0x000418, "Member 'USK_SDS_Chassis_CtrlRig_C::Front_Foot_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Center_Leg_L_Target) == 0x000430, "Member 'USK_SDS_Chassis_CtrlRig_C::Center_Leg_L_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Center_Foot_L_Target) == 0x000448, "Member 'USK_SDS_Chassis_CtrlRig_C::Center_Foot_L_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Center_Leg_R_Target) == 0x000460, "Member 'USK_SDS_Chassis_CtrlRig_C::Center_Leg_R_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Center_Foot_R_Target) == 0x000478, "Member 'USK_SDS_Chassis_CtrlRig_C::Center_Foot_R_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Rear_Leg_L_Target) == 0x000490, "Member 'USK_SDS_Chassis_CtrlRig_C::Rear_Leg_L_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Rear_Foot_L_Target) == 0x0004A8, "Member 'USK_SDS_Chassis_CtrlRig_C::Rear_Foot_L_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Rear_Leg_R_Target) == 0x0004C0, "Member 'USK_SDS_Chassis_CtrlRig_C::Rear_Leg_R_Target' has a wrong offset!");
static_assert(offsetof(USK_SDS_Chassis_CtrlRig_C, Rear_Foot_R_Target) == 0x0004D8, "Member 'USK_SDS_Chassis_CtrlRig_C::Rear_Foot_R_Target' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_SDS_Chassis_CtrlRig.RigVMMemory_Literal
// 0x0350 (0x0380 - 0x0030)
class SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___SetTransform_Item__Const;             // 0x0030(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___SetTransform_Space__Const;            // 0x003C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___SetTransform_bInitial__Const;         // 0x003D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_Value__Const;            // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__Const; // 0x00A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_Primary__Const;           // 0x00B8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_Secondary__Const;         // 0x0100(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimBoneMath_Weight__Const;            // 0x0148(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimBoneMath_DebugSettings__Const;     // 0x0150(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___MathFloatClamp_Minimum__Const;        // 0x01C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Maximum__Const;        // 0x01C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___KalmanFloat_BufferSize__Const;        // 0x01C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___SetTransform_bPropagateToChildren__Const; // 0x01CC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___SetTransform_1_Item__Const;           // 0x01D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_2_Item__Const;           // 0x01DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_3_Item__Const;           // 0x01E8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_Item__Const;           // 0x01F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_1_Item__Const;         // 0x0200(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_Primary__Const;       // 0x0210(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_Secondary__Const;     // 0x0258(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___SetTransform_4_1_1_Item__Const;       // 0x02A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_1_1_1_Item__Const;     // 0x02AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_1_1_1_1_Item__Const;   // 0x02B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTransform_4_1_1_1_2_Item__Const;   // 0x02C4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_Item__Const;                  // 0x02D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__Const;               // 0x02E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_Item__Const;     // 0x0328(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Secondary__Const;             // 0x0338(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_SDS_Chassis_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal) == 0x000380, "Wrong size on SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_Item__Const) == 0x000030, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_Space__Const) == 0x00003C, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_bInitial__Const) == 0x00003D, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_bInitial__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_Value__Const) == 0x000040, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_Rotator__Const) == 0x0000A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_Rotator__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_Primary__Const) == 0x0000B8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_Secondary__Const) == 0x000100, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_Secondary__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_Weight__Const) == 0x000148, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_Weight__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_DebugSettings__Const) == 0x000150, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_Minimum__Const) == 0x0001C0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_Maximum__Const) == 0x0001C4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___KalmanFloat_BufferSize__Const) == 0x0001C8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___KalmanFloat_BufferSize__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_bPropagateToChildren__Const) == 0x0001CC, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_1_Item__Const) == 0x0001D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_2_Item__Const) == 0x0001DC, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_3_Item__Const) == 0x0001E8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_4_Item__Const) == 0x0001F4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_4_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_4_1_Item__Const) == 0x000200, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_4_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_4_1_Primary__Const) == 0x000210, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_4_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_4_1_Secondary__Const) == 0x000258, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_4_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_4_1_1_Item__Const) == 0x0002A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_4_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_4_1_1_1_Item__Const) == 0x0002AC, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_4_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_4_1_1_1_1_Item__Const) == 0x0002B8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_4_1_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___SetTransform_4_1_1_1_2_Item__Const) == 0x0002C4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___SetTransform_4_1_1_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_Item__Const) == 0x0002D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_Primary__Const) == 0x0002E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_Item__Const) == 0x000328, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_Secondary__Const) == 0x000338, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_Secondary__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_SDS_Chassis_CtrlRig.RigVMMemory_Work
// 0x1CE0 (0x1D10 - 0x0030)
class SK_SDS_Chassis_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_Result;     // 0x0030(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_Result;       // 0x0050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x0070(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x00D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_Value;        // 0x00E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_Result;                   // 0x0100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Result;                // 0x0104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_Result;     // 0x0108(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_Result;                   // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___ToRigSpace_Location_Global;           // 0x0180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_Primary__IO;              // 0x0198(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_PrimaryCachedSpace;       // 0x01E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_SecondaryCachedSpace;     // 0x01F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_bIsInitialized;           // 0x0200(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_Value;      // 0x0210(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Value;                 // 0x0230(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_Buffer;                   // 0x0238(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_LastInsertIndex;          // 0x0248(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__IO; // 0x0258(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___SetTransform_Value__IO;               // 0x0270(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_CachedIndex;             // 0x02D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_Result;   // 0x02E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_Result;     // 0x0300(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_1_Transform;             // 0x0320(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_CachedIndex;           // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_2_Value;      // 0x0390(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_1_Result;                 // 0x03B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_1_Result;              // 0x03B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_1_Result;   // 0x03B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_1_Result;                 // 0x03D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___ToRigSpace_Location_1_Global;         // 0x0430(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_Primary__IO;            // 0x0448(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_PrimaryCachedSpace;     // 0x0490(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_SecondaryCachedSpace;   // 0x04A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_1_bIsInitialized;         // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_1_Value;    // 0x04C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_1_Value;               // 0x04E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_1_Buffer;                 // 0x04E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_1_LastInsertIndex;        // 0x04F8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_Rotator__IO; // 0x0508(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___SetTransform_1_Value__IO;             // 0x0520(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_1_CachedIndex;           // 0x0580(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_Result;   // 0x0590(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_3_Result;     // 0x05B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_5C8[0x8];                                      // 0x05C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_2_Transform;             // 0x05D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_CachedIndex;           // 0x0630(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_3_Value;      // 0x0640(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_2_Result;                 // 0x0660(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_Result;              // 0x0664(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_2_Result;   // 0x0668(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_2_Result;                 // 0x0680(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___ToRigSpace_Location_2_Global;         // 0x06E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_2_Primary__IO;            // 0x06F8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_2_PrimaryCachedSpace;     // 0x0740(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_2_SecondaryCachedSpace;   // 0x0750(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_2_bIsInitialized;         // 0x0760(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_2_Value;    // 0x0770(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_Value;               // 0x0790(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_2_Buffer;                 // 0x0798(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_2_LastInsertIndex;        // 0x07A8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_Rotator__IO; // 0x07B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___SetTransform_2_Value__IO;             // 0x07D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_2_CachedIndex;           // 0x0830(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_Result;   // 0x0840(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_4_Result;     // 0x0860(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_878[0x8];                                      // 0x0878(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_3_Transform;             // 0x0880(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_CachedIndex;           // 0x08E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_4_Value;      // 0x08F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_3_Result;                 // 0x0910(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_Result;              // 0x0914(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_3_Result;   // 0x0918(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_3_Result;                 // 0x0930(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___ToRigSpace_Location_3_Global;         // 0x0990(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_3_Primary__IO;            // 0x09A8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_3_PrimaryCachedSpace;     // 0x09F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_3_SecondaryCachedSpace;   // 0x0A00(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_3_bIsInitialized;         // 0x0A10(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_3_Value;    // 0x0A20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_Value;               // 0x0A40(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A44[0x4];                                      // 0x0A44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_3_Buffer;                 // 0x0A48(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_3_LastInsertIndex;        // 0x0A58(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_Rotator__IO; // 0x0A68(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___SetTransform_3_Value__IO;             // 0x0A80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_3_CachedIndex;           // 0x0AE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_Result;   // 0x0AF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_Result;     // 0x0B10(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_B28[0x8];                                      // 0x0B28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_Transform;             // 0x0B30(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_CachedIndex;           // 0x0B90(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_Value;      // 0x0BA0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_Result;                 // 0x0BC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_Result;              // 0x0BC4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_Result;   // 0x0BC8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_Result;                 // 0x0BE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_Global;         // 0x0C40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_Primary__IO;            // 0x0C58(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_PrimaryCachedSpace;     // 0x0CA0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_SecondaryCachedSpace;   // 0x0CB0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_bIsInitialized;         // 0x0CC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_Value;    // 0x0CD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_Value;               // 0x0CF0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF4[0x4];                                      // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_Buffer;                 // 0x0CF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_LastInsertIndex;        // 0x0D08(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_Rotator__IO; // 0x0D18(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___SetTransform_4_Value__IO;             // 0x0D30(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_CachedIndex;           // 0x0D90(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_1_Result; // 0x0DA0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_1_Result;               // 0x0DC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_Result;            // 0x0DC4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_1_Result; // 0x0DC8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_1_Result;               // 0x0DE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_Transform;           // 0x0E40(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_CachedIndex;         // 0x0EA0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_1_Global;       // 0x0EB0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_Primary__IO;          // 0x0EC8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_PrimaryCachedSpace;   // 0x0F10(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_SecondaryCachedSpace; // 0x0F20(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_1_bIsInitialized;       // 0x0F30(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_1_Value;  // 0x0F40(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_Value;             // 0x0F60(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F64[0x4];                                      // 0x0F64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_1_Buffer;               // 0x0F68(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_1_LastInsertIndex;      // 0x0F78(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_1_Result;   // 0x0F88(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_1_Value;    // 0x0FA0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_1_Rotator__IO; // 0x0FC0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_FD8[0x8];                                      // 0x0FD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_1_Value__IO;           // 0x0FE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_1_CachedIndex;         // 0x1040(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_1_1_Result; // 0x1050(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_1_1_Result;             // 0x1070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_Result;          // 0x1074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_1_1_Result; // 0x1078(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_1_1_Result;             // 0x1090(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_1_Transform;         // 0x10F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_CachedIndex;       // 0x1150(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_1_1_Global;     // 0x1160(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_1_Primary__IO;        // 0x1178(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_PrimaryCachedSpace; // 0x11C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_SecondaryCachedSpace; // 0x11D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_1_1_bIsInitialized;     // 0x11E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_1_1_Value; // 0x11F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_Value;           // 0x1210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1214[0x4];                                     // 0x1214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_1_1_Buffer;             // 0x1218(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_1_1_LastInsertIndex;    // 0x1228(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_1_1_Result; // 0x1238(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_1_1_Value;  // 0x1250(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_1_1_Rotator__IO; // 0x1270(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1288[0x8];                                     // 0x1288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_1_1_Value__IO;         // 0x1290(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_1_1_CachedIndex;       // 0x12F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_1_1_1_Result; // 0x1300(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_1_1_1_Result;           // 0x1320(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_1_Result;        // 0x1324(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_1_1_1_Result; // 0x1328(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_1_1_1_Result;           // 0x1340(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_1_1_Transform;       // 0x13A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_1_CachedIndex;     // 0x1400(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_1_1_1_Global;   // 0x1410(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_1_1_Primary__IO;      // 0x1428(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_1_PrimaryCachedSpace; // 0x1470(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_1_SecondaryCachedSpace; // 0x1480(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_1_1_1_bIsInitialized;   // 0x1490(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_1_1_1_Value; // 0x14A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_1_Value;         // 0x14C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C4[0x4];                                     // 0x14C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_1_1_1_Buffer;           // 0x14C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_1_1_1_LastInsertIndex;  // 0x14D8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_1_1_1_Result; // 0x14E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_1_1_1_Value; // 0x1500(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_1_1_1_Rotator__IO; // 0x1520(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1538[0x8];                                     // 0x1538(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_1_1_1_Value__IO;       // 0x1540(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_1_1_1_CachedIndex;     // 0x15A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_1_1_1_1_Result; // 0x15B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_1_1_1_1_Result;         // 0x15D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_1_1_Result;      // 0x15D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_1_1_1_1_Result; // 0x15D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_1_1_1_1_Result;         // 0x15F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_1_1_1_Transform;     // 0x1650(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_1_1_CachedIndex;   // 0x16B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_1_1_1_1_Global; // 0x16C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_1_1_1_Primary__IO;    // 0x16D8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_1_1_PrimaryCachedSpace; // 0x1720(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_1_1_SecondaryCachedSpace; // 0x1730(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_1_1_1_1_bIsInitialized; // 0x1740(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_1_1_1_1_Value; // 0x1750(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_1_1_Value;       // 0x1770(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1774[0x4];                                     // 0x1774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_1_1_1_1_Buffer;         // 0x1778(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_1_1_1_1_LastInsertIndex; // 0x1788(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_1_1_1_1_Result; // 0x1798(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_1_1_1_1_Value; // 0x17B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_1_1_1_1_Rotator__IO; // 0x17D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_17E8[0x8];                                     // 0x17E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_1_1_1_1_Value__IO;     // 0x17F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_1_1_1_1_CachedIndex;   // 0x1850(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_1_1_1_2_Result; // 0x1860(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_4_1_1_1_2_Result;         // 0x1880(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_1_2_Result;      // 0x1884(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_4_1_1_1_2_Result; // 0x1888(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_4_1_1_1_2_Result;         // 0x18A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_1_1_2_Transform;     // 0x1900(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_1_2_CachedIndex;   // 0x1960(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_4_1_1_1_2_Global; // 0x1970(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_4_1_1_1_2_Primary__IO;    // 0x1988(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_1_2_PrimaryCachedSpace; // 0x19D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_4_1_1_1_2_SecondaryCachedSpace; // 0x19E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_4_1_1_1_2_bIsInitialized; // 0x19F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_4_1_1_1_2_Value; // 0x1A00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_4_1_1_1_2_Value;       // 0x1A20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A24[0x4];                                     // 0x1A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_4_1_1_1_2_Buffer;         // 0x1A28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_4_1_1_1_2_LastInsertIndex; // 0x1A38(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_5_1_1_1_2_Result; // 0x1A48(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_5_1_1_1_2_Value; // 0x1A60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_1_1_1_2_Rotator__IO; // 0x1A80(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1A98[0x8];                                     // 0x1A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SetTransform_4_1_1_1_2_Value__IO;     // 0x1AA0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTransform_4_1_1_1_2_CachedIndex;   // 0x1B00(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_Transform;       // 0x1B10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_CachedIndex;     // 0x1B70(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__IO;                  // 0x1B80(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_CachedItem;                   // 0x1BC8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_PrimaryCachedSpace;           // 0x1BD8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_SecondaryCachedSpace;         // 0x1BE8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_bIsInitialized;               // 0x1BF8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1C08[0x8];                                     // 0x1C08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x1C10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x1C70(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__IO;                // 0x1C80(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_CachedItem;                 // 0x1CC8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_PrimaryCachedSpace;         // 0x1CD8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_SecondaryCachedSpace;       // 0x1CE8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_bIsInitialized;             // 0x1CF8(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_SDS_Chassis_CtrlRig.RigVMMemory_Work", true>();
	}
	static class SK_SDS_Chassis_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_SDS_Chassis_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on SK_SDS_Chassis_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work) == 0x001D10, "Wrong size on SK_SDS_Chassis_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Result) == 0x000030, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Result) == 0x000050, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x000070, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x0000D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_Value) == 0x0000E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Result) == 0x000100, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Result) == 0x000104, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_Result) == 0x000108, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_Result) == 0x000120, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_Global) == 0x000180, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_Primary__IO) == 0x000198, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_PrimaryCachedSpace) == 0x0001E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_SecondaryCachedSpace) == 0x0001F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_bIsInitialized) == 0x000200, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_Value) == 0x000210, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Value) == 0x000230, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Buffer) == 0x000238, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_LastInsertIndex) == 0x000248, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Rotator__IO) == 0x000258, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_Value__IO) == 0x000270, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_CachedIndex) == 0x0002D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Result) == 0x0002E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Result) == 0x000300, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_Transform) == 0x000320, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_CachedIndex) == 0x000380, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Value) == 0x000390, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_Result) == 0x0003B0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_1_Result) == 0x0003B4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_1_Result) == 0x0003B8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_Result) == 0x0003D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_1_Global) == 0x000430, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_1_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_Primary__IO) == 0x000448, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_PrimaryCachedSpace) == 0x000490, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_SecondaryCachedSpace) == 0x0004A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_bIsInitialized) == 0x0004B0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_1_Value) == 0x0004C0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_1_Value) == 0x0004E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_Buffer) == 0x0004E8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_LastInsertIndex) == 0x0004F8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Rotator__IO) == 0x000508, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_1_Value__IO) == 0x000520, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_1_CachedIndex) == 0x000580, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Result) == 0x000590, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_Result) == 0x0005B0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_2_Transform) == 0x0005D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_2_CachedIndex) == 0x000630, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_3_Value) == 0x000640, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_3_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_2_Result) == 0x000660, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_Result) == 0x000664, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_2_Result) == 0x000668, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_2_Result) == 0x000680, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_2_Global) == 0x0006E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_2_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_2_Primary__IO) == 0x0006F8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_2_PrimaryCachedSpace) == 0x000740, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_2_SecondaryCachedSpace) == 0x000750, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_2_bIsInitialized) == 0x000760, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_2_Value) == 0x000770, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_2_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_Value) == 0x000790, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_2_Buffer) == 0x000798, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_2_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_2_LastInsertIndex) == 0x0007A8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_2_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Rotator__IO) == 0x0007B8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_2_Value__IO) == 0x0007D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_2_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_2_CachedIndex) == 0x000830, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Result) == 0x000840, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_4_Result) == 0x000860, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_4_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_3_Transform) == 0x000880, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_3_CachedIndex) == 0x0008E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_4_Value) == 0x0008F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_4_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_3_Result) == 0x000910, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_3_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_Result) == 0x000914, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_3_Result) == 0x000918, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_3_Result) == 0x000930, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_3_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_3_Global) == 0x000990, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_3_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_3_Primary__IO) == 0x0009A8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_3_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_3_PrimaryCachedSpace) == 0x0009F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_3_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_3_SecondaryCachedSpace) == 0x000A00, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_3_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_3_bIsInitialized) == 0x000A10, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_3_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_3_Value) == 0x000A20, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_3_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_Value) == 0x000A40, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_3_Buffer) == 0x000A48, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_3_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_3_LastInsertIndex) == 0x000A58, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_3_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Rotator__IO) == 0x000A68, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_3_Value__IO) == 0x000A80, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_3_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_3_CachedIndex) == 0x000AE0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Result) == 0x000AF0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_Result) == 0x000B10, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_Transform) == 0x000B30, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_CachedIndex) == 0x000B90, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_Value) == 0x000BA0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_Result) == 0x000BC0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_Result) == 0x000BC4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_Result) == 0x000BC8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_Result) == 0x000BE0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_Global) == 0x000C40, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_Primary__IO) == 0x000C58, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_PrimaryCachedSpace) == 0x000CA0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_SecondaryCachedSpace) == 0x000CB0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_bIsInitialized) == 0x000CC0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_Value) == 0x000CD0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_Value) == 0x000CF0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_Buffer) == 0x000CF8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_LastInsertIndex) == 0x000D08, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Rotator__IO) == 0x000D18, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_Value__IO) == 0x000D30, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_CachedIndex) == 0x000D90, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_Result) == 0x000DA0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_Result) == 0x000DC0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_Result) == 0x000DC4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_Result) == 0x000DC8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_Result) == 0x000DE0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_Transform) == 0x000E40, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_CachedIndex) == 0x000EA0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_1_Global) == 0x000EB0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_1_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_Primary__IO) == 0x000EC8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_PrimaryCachedSpace) == 0x000F10, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_SecondaryCachedSpace) == 0x000F20, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_bIsInitialized) == 0x000F30, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_Value) == 0x000F40, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_Value) == 0x000F60, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_Buffer) == 0x000F68, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_LastInsertIndex) == 0x000F78, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_Result) == 0x000F88, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_Value) == 0x000FA0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_Rotator__IO) == 0x000FC0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_Value__IO) == 0x000FE0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_CachedIndex) == 0x001040, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_Result) == 0x001050, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_Result) == 0x001070, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_Result) == 0x001074, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_Result) == 0x001078, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_Result) == 0x001090, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_Transform) == 0x0010F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_CachedIndex) == 0x001150, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_1_1_Global) == 0x001160, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_1_1_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_Primary__IO) == 0x001178, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_PrimaryCachedSpace) == 0x0011C0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_SecondaryCachedSpace) == 0x0011D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_bIsInitialized) == 0x0011E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_Value) == 0x0011F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_Value) == 0x001210, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_Buffer) == 0x001218, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_LastInsertIndex) == 0x001228, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_Result) == 0x001238, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_Value) == 0x001250, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_Rotator__IO) == 0x001270, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_Value__IO) == 0x001290, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_CachedIndex) == 0x0012F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_1_Result) == 0x001300, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_Result) == 0x001320, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_1_Result) == 0x001324, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_1_Result) == 0x001328, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_Result) == 0x001340, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_Transform) == 0x0013A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_CachedIndex) == 0x001400, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_1_1_1_Global) == 0x001410, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_1_1_1_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_Primary__IO) == 0x001428, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_PrimaryCachedSpace) == 0x001470, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_SecondaryCachedSpace) == 0x001480, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_bIsInitialized) == 0x001490, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_1_Value) == 0x0014A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_1_Value) == 0x0014C0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_Buffer) == 0x0014C8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_LastInsertIndex) == 0x0014D8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_1_Result) == 0x0014E8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_1_Value) == 0x001500, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_1_Rotator__IO) == 0x001520, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_1_Value__IO) == 0x001540, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_1_CachedIndex) == 0x0015A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_1_1_Result) == 0x0015B0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_1_Result) == 0x0015D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_1_1_Result) == 0x0015D4, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_1_1_Result) == 0x0015D8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_1_Result) == 0x0015F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_1_Transform) == 0x001650, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_1_CachedIndex) == 0x0016B0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_1_1_1_1_Global) == 0x0016C0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_1_1_1_1_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_1_Primary__IO) == 0x0016D8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_1_PrimaryCachedSpace) == 0x001720, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_1_SecondaryCachedSpace) == 0x001730, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_1_bIsInitialized) == 0x001740, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_1_1_Value) == 0x001750, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_1_1_Value) == 0x001770, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_1_Buffer) == 0x001778, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_1_LastInsertIndex) == 0x001788, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_1_1_Result) == 0x001798, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_1_1_Value) == 0x0017B0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_1_1_Rotator__IO) == 0x0017D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_1_1_Value__IO) == 0x0017F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_1_1_CachedIndex) == 0x001850, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_1_2_Result) == 0x001860, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_2_Result) == 0x001880, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_1_2_Result) == 0x001884, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_1_2_Result) == 0x001888, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_2_Result) == 0x0018A0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_2_Transform) == 0x001900, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_1_2_CachedIndex) == 0x001960, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_4_1_1_1_2_Global) == 0x001970, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_4_1_1_1_2_Global' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_2_Primary__IO) == 0x001988, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_2_PrimaryCachedSpace) == 0x0019D0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_2_SecondaryCachedSpace) == 0x0019E0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_4_1_1_1_2_bIsInitialized) == 0x0019F0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_4_1_1_1_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_4_1_1_1_2_Value) == 0x001A00, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_4_1_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_4_1_1_1_2_Value) == 0x001A20, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_4_1_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_2_Buffer) == 0x001A28, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_2_Buffer' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_4_1_1_1_2_LastInsertIndex) == 0x001A38, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_4_1_1_1_2_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_1_2_Result) == 0x001A48, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_5_1_1_1_2_Value) == 0x001A60, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_5_1_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_1_1_2_Rotator__IO) == 0x001A80, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_1_1_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_1_2_Value__IO) == 0x001AA0, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_1_2_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___SetTransform_4_1_1_1_2_CachedIndex) == 0x001B00, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___SetTransform_4_1_1_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_Transform) == 0x001B10, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_CachedIndex) == 0x001B70, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_Primary__IO) == 0x001B80, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_CachedItem) == 0x001BC8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_PrimaryCachedSpace) == 0x001BD8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_SecondaryCachedSpace) == 0x001BE8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_bIsInitialized) == 0x001BF8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x001C10, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x001C70, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_Primary__IO) == 0x001C80, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_CachedItem) == 0x001CC8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_PrimaryCachedSpace) == 0x001CD8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_SecondaryCachedSpace) == 0x001CE8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_SDS_Chassis_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_bIsInitialized) == 0x001CF8, "Member 'SK_SDS_Chassis_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_bIsInitialized' has a wrong offset!");

}

