#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_BlindSpotTarget

#include "Basic.hpp"

#include "GC_BlindSpotTarget_classes.hpp"
#include "GC_BlindSpotTarget_parameters.hpp"


namespace SDK
{

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.ExecuteUbergraph_GC_BlindSpotTarget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_BlindSpotTarget_C::ExecuteUbergraph_GC_BlindSpotTarget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "ExecuteUbergraph_GC_BlindSpotTarget");

	Params::GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.GetAttractorPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         AttractorPoint                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_BlindSpotTarget_C::GetAttractorPoint(struct FVector* AttractorPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "GetAttractorPoint");

	Params::GC_BlindSpotTarget_C_GetAttractorPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttractorPoint != nullptr)
		*AttractorPoint = std::move(Parms.AttractorPoint);
}


// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.GetBeamPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          SourceObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   FallbackPosition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BeamPoint                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_BlindSpotTarget_C::GetBeamPoint(class UObject* SourceObject, const struct FVector& FallbackPosition, struct FVector* BeamPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "GetBeamPoint");

	Params::GC_BlindSpotTarget_C_GetBeamPoint Parms{};

	Parms.SourceObject = SourceObject;
	Parms.FallbackPosition = std::move(FallbackPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (BeamPoint != nullptr)
		*BeamPoint = std::move(Parms.BeamPoint);
}


// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.GetHaloPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          SourceObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   FallbackPosition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         HaloPoint                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_BlindSpotTarget_C::GetHaloPoint(class UObject* SourceObject, const struct FVector& FallbackPosition, struct FVector* HaloPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "GetHaloPoint");

	Params::GC_BlindSpotTarget_C_GetHaloPoint Parms{};

	Parms.SourceObject = SourceObject;
	Parms.FallbackPosition = std::move(FallbackPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (HaloPoint != nullptr)
		*HaloPoint = std::move(Parms.HaloPoint);
}


// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_BlindSpotTarget_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "OnRemove");

	Params::GC_BlindSpotTarget_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_BlindSpotTarget_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "ReceiveTick");

	Params::GC_BlindSpotTarget_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.WhileActive
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_BlindSpotTarget_C::WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_BlindSpotTarget_C", "WhileActive");

	Params::GC_BlindSpotTarget_C_WhileActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

