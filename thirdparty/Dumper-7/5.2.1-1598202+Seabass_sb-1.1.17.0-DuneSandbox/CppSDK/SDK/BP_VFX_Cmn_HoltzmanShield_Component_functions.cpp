#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VFX_Cmn_HoltzmanShield_Component

#include "Basic.hpp"

#include "BP_VFX_Cmn_HoltzmanShield_Component_classes.hpp"
#include "BP_VFX_Cmn_HoltzmanShield_Component_parameters.hpp"


namespace SDK
{

// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.UpdateSlowbladePenetration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneCharacter*                   Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  PenetrationDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::UpdateSlowbladePenetration(class ADuneCharacter* Instigator, double PenetrationDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "UpdateSlowbladePenetration");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_UpdateSlowbladePenetration Parms{};

	Parms.Instigator = Instigator;
	Parms.PenetrationDuration = PenetrationDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.UpdatePenetrationMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::UpdatePenetrationMaterial(double StartTime, double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "UpdatePenetrationMaterial");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_UpdatePenetrationMaterial Parms{};

	Parms.StartTime = StartTime;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.UpdatePenetration
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::UpdatePenetration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "UpdatePenetration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.UpdateBurrowDartPenetration
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::UpdateBurrowDartPenetration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "UpdateBurrowDartPenetration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.TraceFromCameraToActor
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHitResult*                      OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::TraceFromCameraToActor(struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "TraceFromCameraToActor");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_TraceFromCameraToActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ToggleShieldVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::ToggleShieldVisibility(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ToggleShieldVisibility");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_ToggleShieldVisibility Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ShouldSpawnBouncingDarts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InDamageTypeClass                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::ShouldSpawnBouncingDarts(class UClass* InDamageTypeClass, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ShouldSpawnBouncingDarts");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_ShouldSpawnBouncingDarts Parms{};

	Parms.InDamageTypeClass = InDamageTypeClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ShieldImpactFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitRes                                                 (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Penetrate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::ShieldImpactFX(const struct FHitResult& HitRes, bool Penetrate, class UClass* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ShieldImpactFX");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_ShieldImpactFX Parms{};

	Parms.HitRes = std::move(HitRes);
	Parms.Penetrate = Penetrate;
	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.RemoveShieldISM
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInstancedBuildingComponent*      InstancedBuildingComponent                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                InstanceTransform                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::RemoveShieldISM(class UInstancedBuildingComponent* InstancedBuildingComponent, const struct FTransform& InstanceTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "RemoveShieldISM");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_RemoveShieldISM Parms{};

	Parms.InstancedBuildingComponent = InstancedBuildingComponent;
	Parms.InstanceTransform = std::move(InstanceTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.RemoveDamageStacks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::RemoveDamageStacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "RemoveDamageStacks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.RegisterShieldHit
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHitIsMelee                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::RegisterShieldHit(bool bHitIsMelee, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "RegisterShieldHit");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_RegisterShieldHit Parms{};

	Parms.bHitIsMelee = bHitIsMelee;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ReceiveTick");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.PrintDamageValues
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RelativeDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ShieldDepletionFactor_                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::PrintDamageValues(double RelativeDamage, double ShieldDepletionFactor_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "PrintDamageValues");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_PrintDamageValues Parms{};

	Parms.RelativeDamage = RelativeDamage;
	Parms.ShieldDepletionFactor_ = ShieldDepletionFactor_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.PlayToggleAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayVfxAnimation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::PlayToggleAnim(bool On, bool PlayVfxAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "PlayToggleAnim");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_PlayToggleAnim Parms{};

	Parms.On = On;
	Parms.PlayVfxAnimation = PlayVfxAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnVerticalBoundsUpdated
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FFloatRange&               VerticalBounds                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnVerticalBoundsUpdated(const struct FFloatRange& VerticalBounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnVerticalBoundsUpdated");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnVerticalBoundsUpdated Parms{};

	Parms.VerticalBounds = std::move(VerticalBounds);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnStopPenetration
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ADuneCharacter*             InstigatorCharacter                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnStopPenetration(const class ADuneCharacter* InstigatorCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnStopPenetration");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnStopPenetration Parms{};

	Parms.InstigatorCharacter = InstigatorCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnStartPenetration
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ADuneCharacter*             InstigatorCharacter                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PenetrationDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnStartPenetration(const class ADuneCharacter* InstigatorCharacter, float PenetrationDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnStartPenetration");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnStartPenetration Parms{};

	Parms.InstigatorCharacter = InstigatorCharacter;
	Parms.PenetrationDuration = PenetrationDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnShieldToggled
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bToggledOn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EShieldStateChangeReason&         ShieldStateChangeReason                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlayVfxAnimation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnShieldToggled(bool bToggledOn, const EShieldStateChangeReason& ShieldStateChangeReason, bool bPlayVfxAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnShieldToggled");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnShieldToggled Parms{};

	Parms.bToggledOn = bToggledOn;
	Parms.ShieldStateChangeReason = ShieldStateChangeReason;
	Parms.bPlayVfxAnimation = bPlayVfxAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnShieldMeleed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                InHitResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnShieldMeleed(const struct FHitResult& InHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnShieldMeleed");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnShieldMeleed Parms{};

	Parms.InHitResult = std::move(InHitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnShieldLaserHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float                             Intensity                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnShieldLaserHit(const float Intensity, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnShieldLaserHit");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnShieldLaserHit Parms{};

	Parms.Intensity = Intensity;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnShieldDamaged
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float                             RelativeDamage                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             ShieldDepletionFactor                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// TSubclassOf<class UDuneDamageType>      DamageTypeClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnShieldDamaged(const float RelativeDamage, const float ShieldDepletionFactor, const struct FHitResult& HitResult, TSubclassOf<class UDuneDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnShieldDamaged");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnShieldDamaged Parms{};

	Parms.RelativeDamage = RelativeDamage;
	Parms.ShieldDepletionFactor = ShieldDepletionFactor;
	Parms.HitResult = std::move(HitResult);
	Parms.DamageTypeClass = DamageTypeClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnInstancesAddedToIBC
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class UInstancedBuildingComponent*InstancedBuildingComponent                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const TArray<int32>&                    InstanceIndexes                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsShieldActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnInstancesAddedToIBC(const class UInstancedBuildingComponent* InstancedBuildingComponent, const TArray<int32>& InstanceIndexes, bool IsShieldActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnInstancesAddedToIBC");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnInstancesAddedToIBC Parms{};

	Parms.InstancedBuildingComponent = InstancedBuildingComponent;
	Parms.InstanceIndexes = std::move(InstanceIndexes);
	Parms.IsShieldActive = IsShieldActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnInstanceRemovedFromIBC
// (Event, Public, BlueprintEvent)
// Parameters:
// const class UInstancedBuildingComponent*InstancedBuildingComponent                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                InstanceTransform                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnInstanceRemovedFromIBC(const class UInstancedBuildingComponent* InstancedBuildingComponent, const struct FTransform& InstanceTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnInstanceRemovedFromIBC");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnInstanceRemovedFromIBC Parms{};

	Parms.InstancedBuildingComponent = InstancedBuildingComponent;
	Parms.InstanceTransform = std::move(InstanceTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnInstanceAddedToIBC
// (Event, Public, BlueprintEvent)
// Parameters:
// const class UInstancedBuildingComponent*InstancedBuildingComponent                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsShieldActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnInstanceAddedToIBC(const class UInstancedBuildingComponent* InstancedBuildingComponent, int32 InstanceIndex, bool IsShieldActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnInstanceAddedToIBC");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnInstanceAddedToIBC Parms{};

	Parms.InstancedBuildingComponent = InstancedBuildingComponent;
	Parms.InstanceIndex = InstanceIndex;
	Parms.IsShieldActive = IsShieldActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnBurrowDartsRemoved
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnBurrowDartsRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnBurrowDartsRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.OnBurrowDartDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBurrowingDart&            BurrowDart                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::OnBurrowDartDamage(const struct FBurrowingDart& BurrowDart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "OnBurrowDartDamage");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_OnBurrowDartDamage Parms{};

	Parms.BurrowDart = std::move(BurrowDart);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.GetRandomHitLocationWithinActorBounds
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHitResult                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

struct FHitResult UBP_VFX_Cmn_HoltzmanShield_Component_C::GetRandomHitLocationWithinActorBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "GetRandomHitLocationWithinActorBounds");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_GetRandomHitLocationWithinActorBounds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ExecuteUbergraph_BP_VFX_Cmn_HoltzmanShield_Component
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::ExecuteUbergraph_BP_VFX_Cmn_HoltzmanShield_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ExecuteUbergraph_BP_VFX_Cmn_HoltzmanShield_Component");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_ExecuteUbergraph_BP_VFX_Cmn_HoltzmanShield_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.DamageStacksDecay
// (BlueprintCallable, BlueprintEvent)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::DamageStacksDecay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "DamageStacksDecay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.CreateShield_StaticMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>&    StaticMeshComponents                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::CreateShield_StaticMesh(TArray<class UStaticMeshComponent*>& StaticMeshComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "CreateShield_StaticMesh");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_CreateShield_StaticMesh Parms{};

	Parms.StaticMeshComponents = std::move(StaticMeshComponents);

	UObject::ProcessEvent(Func, &Parms);

	StaticMeshComponents = std::move(Parms.StaticMeshComponents);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.CreateShield_SkeletalMesh
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USkeletalMeshComponent*>&  SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::CreateShield_SkeletalMesh(TArray<class USkeletalMeshComponent*>& SkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "CreateShield_SkeletalMesh");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_CreateShield_SkeletalMesh Parms{};

	Parms.SkeletalMeshComponent = std::move(SkeletalMeshComponent);

	UObject::ProcessEvent(Func, &Parms);

	SkeletalMeshComponent = std::move(Parms.SkeletalMeshComponent);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.CreateShield_ISM
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UInstancedStaticMeshComponent*>&ISMComponents                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::CreateShield_ISM(TArray<class UInstancedStaticMeshComponent*>& ISMComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "CreateShield_ISM");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_CreateShield_ISM Parms{};

	Parms.ISMComponents = std::move(ISMComponents);

	UObject::ProcessEvent(Func, &Parms);

	ISMComponents = std::move(Parms.ISMComponents);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.CreateShield_HISM
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UHierarchicalInstancedStaticMeshComponent*>&HISMComponents                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::CreateShield_HISM(TArray<class UHierarchicalInstancedStaticMeshComponent*>& HISMComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "CreateShield_HISM");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_CreateShield_HISM Parms{};

	Parms.HISMComponents = std::move(HISMComponents);

	UObject::ProcessEvent(Func, &Parms);

	HISMComponents = std::move(Parms.HISMComponents);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.CreateOverlayMaterialInstance
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        OverlayMaterialInstnace                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::CreateOverlayMaterialInstance(bool IsCharacter, class UMaterialInstanceDynamic** OverlayMaterialInstnace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "CreateOverlayMaterialInstance");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_CreateOverlayMaterialInstance Parms{};

	Parms.IsCharacter = IsCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (OverlayMaterialInstnace != nullptr)
		*OverlayMaterialInstnace = Parms.OverlayMaterialInstnace;
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.ConvertHitToLinearColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ShouldPenetrateShield                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UBP_VFX_Cmn_HoltzmanShield_Component_C::ConvertHitToLinearColor(const struct FHitResult& Hit, bool ShouldPenetrateShield)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "ConvertHitToLinearColor");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_ConvertHitToLinearColor Parms{};

	Parms.Hit = std::move(Hit);
	Parms.ShouldPenetrateShield = ShouldPenetrateShield;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.AddDamageStacks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RelativeDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::AddDamageStacks(double RelativeDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "AddDamageStacks");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_AddDamageStacks Parms{};

	Parms.RelativeDamage = RelativeDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.Add Shield ISM Batched
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInstancedBuildingComponent*      InstancedBuildingComponent                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<int32>&                          InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsShieldActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::Add_Shield_ISM_Batched(class UInstancedBuildingComponent* InstancedBuildingComponent, TArray<int32>& InstanceIndex, bool IsShieldActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "Add Shield ISM Batched");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_Add_Shield_ISM_Batched Parms{};

	Parms.InstancedBuildingComponent = InstancedBuildingComponent;
	Parms.InstanceIndex = std::move(InstanceIndex);
	Parms.IsShieldActive = IsShieldActive;

	UObject::ProcessEvent(Func, &Parms);

	InstanceIndex = std::move(Parms.InstanceIndex);
}


// Function BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C.Add Shield ISM
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInstancedBuildingComponent*      InstancedBuildingComponent                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsShieldActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VFX_Cmn_HoltzmanShield_Component_C::Add_Shield_ISM(class UInstancedBuildingComponent* InstancedBuildingComponent, int32 InstanceIndex, bool IsShieldActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VFX_Cmn_HoltzmanShield_Component_C", "Add Shield ISM");

	Params::BP_VFX_Cmn_HoltzmanShield_Component_C_Add_Shield_ISM Parms{};

	Parms.InstancedBuildingComponent = InstancedBuildingComponent;
	Parms.InstanceIndex = InstanceIndex;
	Parms.IsShieldActive = IsShieldActive;

	UObject::ProcessEvent(Func, &Parms);
}

}

