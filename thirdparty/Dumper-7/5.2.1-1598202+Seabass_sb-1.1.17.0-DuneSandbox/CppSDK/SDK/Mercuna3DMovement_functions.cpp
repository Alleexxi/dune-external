#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mercuna3DMovement

#include "Basic.hpp"

#include "Mercuna3DMovement_classes.hpp"
#include "Mercuna3DMovement_parameters.hpp"


namespace SDK
{

// Function Mercuna3DMovement.Mercuna3DMovementComponent.AddImpulse
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Impulse                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMercuna3DMovementComponent::AddImpulse(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "AddImpulse");

	Params::Mercuna3DMovementComponent_AddImpulse Parms{};

	Parms.Impulse = std::move(Impulse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetAngularVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   NewAngVel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMercuna3DMovementComponent::SetAngularVelocity(const struct FVector& NewAngVel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "SetAngularVelocity");

	Params::Mercuna3DMovementComponent_SetAngularVelocity Parms{};

	Parms.NewAngVel = std::move(NewAngVel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetMovementProperties
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMercuna3DMovementProperties&NewMovementProperties                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMercuna3DMovementComponent::SetMovementProperties(const struct FMercuna3DMovementProperties& NewMovementProperties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "SetMovementProperties");

	Params::Mercuna3DMovementComponent_SetMovementProperties Parms{};

	Parms.NewMovementProperties = std::move(NewMovementProperties);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetVelocitiesFromPhysics
// (Final, Native, Public, BlueprintCallable)

void UMercuna3DMovementComponent::SetVelocitiesFromPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "SetVelocitiesFromPhysics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Mercuna3DMovement.Mercuna3DMovementComponent.SetVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   NewVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMercuna3DMovementComponent::SetVelocity(const struct FVector& NewVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "SetVelocity");

	Params::Mercuna3DMovementComponent_SetVelocity Parms{};

	Parms.NewVelocity = std::move(NewVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Mercuna3DMovement.Mercuna3DMovementComponent.GetLocalRotationRate
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UMercuna3DMovementComponent::GetLocalRotationRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "GetLocalRotationRate");

	Params::Mercuna3DMovementComponent_GetLocalRotationRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Mercuna3DMovement.Mercuna3DMovementComponent.GetLocalVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMercuna3DMovementComponent::GetLocalVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mercuna3DMovementComponent", "GetLocalVelocity");

	Params::Mercuna3DMovementComponent_GetLocalVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

