#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Turret_SentrySeeker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Turret_SentrySeeker.BP_Turret_SentrySeeker_C
// 0x0150 (0x04A0 - 0x0350)
class ABP_Turret_SentrySeeker_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        leftBarrel;                                        // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        rightBarrel;                                       // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TurretCollision1;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FlarePlane;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_LensFlareBillboard_Component_C*     BP_LensFlareBillboard_Component;                   // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gad_1H_Choam_SentryTurret;                      // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TurretCollision;                                   // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageableActorComponent*              DamageableActor;                                   // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDuneAudioEmitterComponent*             DuneAudioEmitter;                                  // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         AbilityLevel;                                      // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         CurrentTarget;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPostFire;                                     // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPostFailToFindTarget;                         // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AttackName;                                        // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        CachedBaseDamage;                                  // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayPreAttackLoop;                                // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         DuneCharInstigator;                                // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Tuning_Key_Name;                                   // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        CacheDuration;                                     // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DestructionVFX;                                    // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         ShootImpactVFX;                                    // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         ShootVFX;                                          // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SuspensorOnSpawned_VFX;                            // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SuspensorLoopOnSpawned_VFX;                        // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SpawnVFX;                                          // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          DestructionSFX;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          ShootSFX;                                          // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Overlapping_Actors;                                // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bGoodTargetFound;                                  // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFcAudioEvent*                          SpawnSFX;                                          // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Cached;                                        // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          StartLoopSFX;                                      // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          StopLoopSFX;                                       // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         MuzzleVFX;                                         // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ShotCount;                                         // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CacheHiddenCooldownHandle;                         // 0x0484(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CachedCooldownFull;                                // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyHiddenCooldown();
	void ApplyRealCooldown();
	void AttackLoop();
	void BndEvt__BP_Mine_Remote_DamageableActor_K2Node_ComponentBoundEvent_1_HandleDeathOrDefeatOnServerSignature__DelegateSignature(const struct FInstigatorInfo& InstigatorInfo, const bool bIsDeath, TSubclassOf<class UDuneDamageType> DeathDefeatCausingDamageType);
	void CacheTuningValues();
	void CheckLineOfSight(bool* bSuccess);
	void ExecuteUbergraph_BP_Turret_SentrySeeker(int32 EntryPoint);
	void FireShot(class ADuneCharacter* ShootAt);
	void FireShotVisuals(class ADuneCharacter* ShootVisualsAt);
	void PruneTargetableMembers();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void RemoveHiddenCooldown();
	void RotateHead();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Turret_SentrySeeker_C">();
	}
	static class ABP_Turret_SentrySeeker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Turret_SentrySeeker_C>();
	}
};
static_assert(alignof(ABP_Turret_SentrySeeker_C) == 0x000008, "Wrong alignment on ABP_Turret_SentrySeeker_C");
static_assert(sizeof(ABP_Turret_SentrySeeker_C) == 0x0004A0, "Wrong size on ABP_Turret_SentrySeeker_C");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, UberGraphFrame) == 0x000350, "Member 'ABP_Turret_SentrySeeker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, leftBarrel) == 0x000358, "Member 'ABP_Turret_SentrySeeker_C::leftBarrel' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, rightBarrel) == 0x000360, "Member 'ABP_Turret_SentrySeeker_C::rightBarrel' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, TurretCollision1) == 0x000368, "Member 'ABP_Turret_SentrySeeker_C::TurretCollision1' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, FlarePlane) == 0x000370, "Member 'ABP_Turret_SentrySeeker_C::FlarePlane' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, BP_LensFlareBillboard_Component) == 0x000378, "Member 'ABP_Turret_SentrySeeker_C::BP_LensFlareBillboard_Component' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, SM_Gad_1H_Choam_SentryTurret) == 0x000380, "Member 'ABP_Turret_SentrySeeker_C::SM_Gad_1H_Choam_SentryTurret' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, TurretCollision) == 0x000388, "Member 'ABP_Turret_SentrySeeker_C::TurretCollision' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DamageableActor) == 0x000390, "Member 'ABP_Turret_SentrySeeker_C::DamageableActor' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DuneAudioEmitter) == 0x000398, "Member 'ABP_Turret_SentrySeeker_C::DuneAudioEmitter' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DefaultSceneRoot) == 0x0003A0, "Member 'ABP_Turret_SentrySeeker_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, AbilityLevel) == 0x0003A8, "Member 'ABP_Turret_SentrySeeker_C::AbilityLevel' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, CurrentTarget) == 0x0003B0, "Member 'ABP_Turret_SentrySeeker_C::CurrentTarget' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DelayPostFire) == 0x0003B8, "Member 'ABP_Turret_SentrySeeker_C::DelayPostFire' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DelayPostFailToFindTarget) == 0x0003BC, "Member 'ABP_Turret_SentrySeeker_C::DelayPostFailToFindTarget' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, AttackName) == 0x0003C0, "Member 'ABP_Turret_SentrySeeker_C::AttackName' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, CachedBaseDamage) == 0x0003D0, "Member 'ABP_Turret_SentrySeeker_C::CachedBaseDamage' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DelayPreAttackLoop) == 0x0003D8, "Member 'ABP_Turret_SentrySeeker_C::DelayPreAttackLoop' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DuneCharInstigator) == 0x0003E0, "Member 'ABP_Turret_SentrySeeker_C::DuneCharInstigator' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, Tuning_Key_Name) == 0x0003E8, "Member 'ABP_Turret_SentrySeeker_C::Tuning_Key_Name' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, CacheDuration) == 0x0003F8, "Member 'ABP_Turret_SentrySeeker_C::CacheDuration' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DestructionVFX) == 0x000400, "Member 'ABP_Turret_SentrySeeker_C::DestructionVFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, ShootImpactVFX) == 0x000408, "Member 'ABP_Turret_SentrySeeker_C::ShootImpactVFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, ShootVFX) == 0x000410, "Member 'ABP_Turret_SentrySeeker_C::ShootVFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, SuspensorOnSpawned_VFX) == 0x000418, "Member 'ABP_Turret_SentrySeeker_C::SuspensorOnSpawned_VFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, SuspensorLoopOnSpawned_VFX) == 0x000420, "Member 'ABP_Turret_SentrySeeker_C::SuspensorLoopOnSpawned_VFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, SpawnVFX) == 0x000428, "Member 'ABP_Turret_SentrySeeker_C::SpawnVFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, DestructionSFX) == 0x000430, "Member 'ABP_Turret_SentrySeeker_C::DestructionSFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, ShootSFX) == 0x000438, "Member 'ABP_Turret_SentrySeeker_C::ShootSFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, Overlapping_Actors) == 0x000440, "Member 'ABP_Turret_SentrySeeker_C::Overlapping_Actors' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, bGoodTargetFound) == 0x000450, "Member 'ABP_Turret_SentrySeeker_C::bGoodTargetFound' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, SpawnSFX) == 0x000458, "Member 'ABP_Turret_SentrySeeker_C::SpawnSFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, VFX_Cached) == 0x000460, "Member 'ABP_Turret_SentrySeeker_C::VFX_Cached' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, StartLoopSFX) == 0x000468, "Member 'ABP_Turret_SentrySeeker_C::StartLoopSFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, StopLoopSFX) == 0x000470, "Member 'ABP_Turret_SentrySeeker_C::StopLoopSFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, MuzzleVFX) == 0x000478, "Member 'ABP_Turret_SentrySeeker_C::MuzzleVFX' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, ShotCount) == 0x000480, "Member 'ABP_Turret_SentrySeeker_C::ShotCount' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, CacheHiddenCooldownHandle) == 0x000484, "Member 'ABP_Turret_SentrySeeker_C::CacheHiddenCooldownHandle' has a wrong offset!");
static_assert(offsetof(ABP_Turret_SentrySeeker_C, CachedCooldownFull) == 0x000498, "Member 'ABP_Turret_SentrySeeker_C::CachedCooldownFull' has a wrong offset!");

}

