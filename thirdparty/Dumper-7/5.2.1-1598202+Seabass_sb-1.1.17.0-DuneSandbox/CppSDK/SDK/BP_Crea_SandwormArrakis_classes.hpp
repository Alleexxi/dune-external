#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Crea_SandwormArrakis

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FFlipBookDisplacementData_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Crea_SandwormArrakis.BP_Crea_SandwormArrakis_C
// 0x0248 (0x0AA8 - 0x0860)
class ABP_Crea_SandwormArrakis_C final : public ASandwormPawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0860(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Wormsign;                                          // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Vertical_Attack_Normalized_Flipbook_Anim_Range_5077F6B74FD5CE2A9E6F13AF711ABE7D; // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Vertical_Attack__Direction_5077F6B74FD5CE2A9E6F13AF711ABE7D; // 0x0874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_875[0x3];                                      // 0x0875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Vertical_Attack;                                   // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Breach_Normalized_Flipbook_Anim_Range_A3BF31984FE7868A8C9563903A784011; // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Breach__Direction_A3BF31984FE7868A8C9563903A784011; // 0x0884(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_885[0x3];                                      // 0x0885(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Breach;                                            // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_3_OpenMouthLerpValue_1391DE624BDBAA5AC20817BF6785FE34; // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_3__Direction_1391DE624BDBAA5AC20817BF6785FE34; // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_895[0x3];                                      // 0x0895(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_3;                                        // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_OpenMouthLerpValue_DEC9EBF94AA886600585E081A4A84F75; // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_DEC9EBF94AA886600585E081A4A84F75; // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A5[0x3];                                      // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_OpenMouthLerpValue_71DC6E004879DEE43E95D28FADB5D7D8; // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_71DC6E004879DEE43E95D28FADB5D7D8; // 0x08B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_LerpTime_CCCBEF65488E1AAD97B86992AC6E5ECA; // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_CCCBEF65488E1AAD97B86992AC6E5ECA; // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C5[0x3];                                      // 0x08C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCurrentSocketRising;                              // 0x08D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentPosition;                                   // 0x08D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentDirection;                                  // 0x08F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LineThickness;                                     // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimSetupDelay;                                    // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentSocketDistanceToSurface;                    // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DMapLerpValue;                                     // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FVector>                   RisingSocketIndices;                               // 0x0928(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FVector>                   FallingSocketIndices;                              // 0x0978(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                SandwormSocketForwardVector;                       // 0x09C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugPrintDistanceFromLandscape;                  // 0x09E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      HorizontalAttackDisplacementValues;                // 0x09E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      EmptyDisplacementValues;                           // 0x09F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      TransitionResultDisplacementValues;                // 0x0A08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        RoamingAttackDisplacementLerp;                     // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WormsignTraceHandle;                               // 0x0A20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplacementTransitionActive;                     // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OpenMouthLerpCapture;                              // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FColor>                         Colors;                                            // 0x0A38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FColor                                 CurrentColor;                                      // 0x0A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFFlipBookDisplacementData             Flipbook_Data;                                     // 0x0A50(0x0028)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NumFramesXY;                                       // 0x0A78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlipbookDisplacementScale;                         // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NormalizedTime;                                    // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULandscapeDisplacementMap*              FlipbookDisplacementMap;                           // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bTriggerFlipbookDisplacement;                      // 0x0AA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Breach__FinishedFunc();
	void Breach__UpdateFunc();
	void CalculateJawInterpolationValue();
	void Enter_Surface_Event(const struct FVector& Location, const struct FVector& Direction, int32 SocketIndex);
	void ExecuteUbergraph_BP_Crea_SandwormArrakis(int32 EntryPoint);
	void Exit_Surface_Event(const struct FVector& Location, const struct FVector& Direction, int32 SocketIndex);
	void GetAnimDisplacementArray(ESandwormAnimationType AnimationType, TArray<struct FVector2D>* OutArray);
	void InitAnimationDisplacement(ESandwormAnimationType CurrentAnimationType);
	void InitializeFlipbookForAnim(ESandwormAnimationType CurrentAnimationType);
	void RenderFlipbookDisplacement();
	void SetChaseAttackState(ESandwormChaseAttackStateType Chase_State);
	void SetFlipbookData(double Start_Frame, double End_Frame, double Grid_Size, double Offset_X, double Offset_Y, struct FFFlipBookDisplacementData* NewParam);
	void SetMouthDisplacementByJawOpening();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void Timeline_2__UpdateFunc();
	void Timeline_3__FinishedFunc();
	void Timeline_3__UpdateFunc();
	void TransitionDisplacement(ESandwormAnimationType SrcAnimation, ESandwormAnimationType DstAnimation);
	void UpdateSandDisplacement(ESandwormAnimationType CurrentAnimationType);
	void UpdateWormsign(bool bEnabled);
	void Vertical_Attack__FinishedFunc();
	void Vertical_Attack__UpdateFunc();

	void GetDistanceFromLandscape(const struct FVector& Location, double* Z) const;
	void GetLandscapeLocation(const struct FVector& Location, struct FVector* HitLocation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Crea_SandwormArrakis_C">();
	}
	static class ABP_Crea_SandwormArrakis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Crea_SandwormArrakis_C>();
	}
};
static_assert(alignof(ABP_Crea_SandwormArrakis_C) == 0x000008, "Wrong alignment on ABP_Crea_SandwormArrakis_C");
static_assert(sizeof(ABP_Crea_SandwormArrakis_C) == 0x000AA8, "Wrong size on ABP_Crea_SandwormArrakis_C");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, UberGraphFrame) == 0x000860, "Member 'ABP_Crea_SandwormArrakis_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Wormsign) == 0x000868, "Member 'ABP_Crea_SandwormArrakis_C::Wormsign' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Vertical_Attack_Normalized_Flipbook_Anim_Range_5077F6B74FD5CE2A9E6F13AF711ABE7D) == 0x000870, "Member 'ABP_Crea_SandwormArrakis_C::Vertical_Attack_Normalized_Flipbook_Anim_Range_5077F6B74FD5CE2A9E6F13AF711ABE7D' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Vertical_Attack__Direction_5077F6B74FD5CE2A9E6F13AF711ABE7D) == 0x000874, "Member 'ABP_Crea_SandwormArrakis_C::Vertical_Attack__Direction_5077F6B74FD5CE2A9E6F13AF711ABE7D' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Vertical_Attack) == 0x000878, "Member 'ABP_Crea_SandwormArrakis_C::Vertical_Attack' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Breach_Normalized_Flipbook_Anim_Range_A3BF31984FE7868A8C9563903A784011) == 0x000880, "Member 'ABP_Crea_SandwormArrakis_C::Breach_Normalized_Flipbook_Anim_Range_A3BF31984FE7868A8C9563903A784011' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Breach__Direction_A3BF31984FE7868A8C9563903A784011) == 0x000884, "Member 'ABP_Crea_SandwormArrakis_C::Breach__Direction_A3BF31984FE7868A8C9563903A784011' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Breach) == 0x000888, "Member 'ABP_Crea_SandwormArrakis_C::Breach' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_3_OpenMouthLerpValue_1391DE624BDBAA5AC20817BF6785FE34) == 0x000890, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_3_OpenMouthLerpValue_1391DE624BDBAA5AC20817BF6785FE34' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_3__Direction_1391DE624BDBAA5AC20817BF6785FE34) == 0x000894, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_3__Direction_1391DE624BDBAA5AC20817BF6785FE34' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_3) == 0x000898, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_3' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_2_OpenMouthLerpValue_DEC9EBF94AA886600585E081A4A84F75) == 0x0008A0, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_2_OpenMouthLerpValue_DEC9EBF94AA886600585E081A4A84F75' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_2__Direction_DEC9EBF94AA886600585E081A4A84F75) == 0x0008A4, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_2__Direction_DEC9EBF94AA886600585E081A4A84F75' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_2) == 0x0008A8, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_1_OpenMouthLerpValue_71DC6E004879DEE43E95D28FADB5D7D8) == 0x0008B0, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_1_OpenMouthLerpValue_71DC6E004879DEE43E95D28FADB5D7D8' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_1__Direction_71DC6E004879DEE43E95D28FADB5D7D8) == 0x0008B4, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_1__Direction_71DC6E004879DEE43E95D28FADB5D7D8' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_1) == 0x0008B8, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_0_LerpTime_CCCBEF65488E1AAD97B86992AC6E5ECA) == 0x0008C0, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_0_LerpTime_CCCBEF65488E1AAD97B86992AC6E5ECA' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_0__Direction_CCCBEF65488E1AAD97B86992AC6E5ECA) == 0x0008C4, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_0__Direction_CCCBEF65488E1AAD97B86992AC6E5ECA' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Timeline_0) == 0x0008C8, "Member 'ABP_Crea_SandwormArrakis_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, CurrentIndex) == 0x0008D0, "Member 'ABP_Crea_SandwormArrakis_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, bCurrentSocketRising) == 0x0008D4, "Member 'ABP_Crea_SandwormArrakis_C::bCurrentSocketRising' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, CurrentPosition) == 0x0008D8, "Member 'ABP_Crea_SandwormArrakis_C::CurrentPosition' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, CurrentDirection) == 0x0008F0, "Member 'ABP_Crea_SandwormArrakis_C::CurrentDirection' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, LineThickness) == 0x000908, "Member 'ABP_Crea_SandwormArrakis_C::LineThickness' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, AnimSetupDelay) == 0x000910, "Member 'ABP_Crea_SandwormArrakis_C::AnimSetupDelay' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, CurrentSocketDistanceToSurface) == 0x000918, "Member 'ABP_Crea_SandwormArrakis_C::CurrentSocketDistanceToSurface' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, DMapLerpValue) == 0x000920, "Member 'ABP_Crea_SandwormArrakis_C::DMapLerpValue' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, RisingSocketIndices) == 0x000928, "Member 'ABP_Crea_SandwormArrakis_C::RisingSocketIndices' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, FallingSocketIndices) == 0x000978, "Member 'ABP_Crea_SandwormArrakis_C::FallingSocketIndices' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, SandwormSocketForwardVector) == 0x0009C8, "Member 'ABP_Crea_SandwormArrakis_C::SandwormSocketForwardVector' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, bDebugPrintDistanceFromLandscape) == 0x0009E0, "Member 'ABP_Crea_SandwormArrakis_C::bDebugPrintDistanceFromLandscape' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, HorizontalAttackDisplacementValues) == 0x0009E8, "Member 'ABP_Crea_SandwormArrakis_C::HorizontalAttackDisplacementValues' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, EmptyDisplacementValues) == 0x0009F8, "Member 'ABP_Crea_SandwormArrakis_C::EmptyDisplacementValues' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, TransitionResultDisplacementValues) == 0x000A08, "Member 'ABP_Crea_SandwormArrakis_C::TransitionResultDisplacementValues' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, RoamingAttackDisplacementLerp) == 0x000A18, "Member 'ABP_Crea_SandwormArrakis_C::RoamingAttackDisplacementLerp' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, WormsignTraceHandle) == 0x000A20, "Member 'ABP_Crea_SandwormArrakis_C::WormsignTraceHandle' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, bDisplacementTransitionActive) == 0x000A28, "Member 'ABP_Crea_SandwormArrakis_C::bDisplacementTransitionActive' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, OpenMouthLerpCapture) == 0x000A30, "Member 'ABP_Crea_SandwormArrakis_C::OpenMouthLerpCapture' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Colors) == 0x000A38, "Member 'ABP_Crea_SandwormArrakis_C::Colors' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, CurrentColor) == 0x000A48, "Member 'ABP_Crea_SandwormArrakis_C::CurrentColor' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, Flipbook_Data) == 0x000A50, "Member 'ABP_Crea_SandwormArrakis_C::Flipbook_Data' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, NumFramesXY) == 0x000A78, "Member 'ABP_Crea_SandwormArrakis_C::NumFramesXY' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, FlipbookDisplacementScale) == 0x000A88, "Member 'ABP_Crea_SandwormArrakis_C::FlipbookDisplacementScale' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, NormalizedTime) == 0x000A90, "Member 'ABP_Crea_SandwormArrakis_C::NormalizedTime' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, FlipbookDisplacementMap) == 0x000A98, "Member 'ABP_Crea_SandwormArrakis_C::FlipbookDisplacementMap' has a wrong offset!");
static_assert(offsetof(ABP_Crea_SandwormArrakis_C, bTriggerFlipbookDisplacement) == 0x000AA0, "Member 'ABP_Crea_SandwormArrakis_C::bTriggerFlipbookDisplacement' has a wrong offset!");

}

