#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SliderOptionDiamond

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_SliderOptionDiamond.W_SliderOptionDiamond_C.ExecuteUbergraph_W_SliderOptionDiamond
// 0x0120 (0x0120 - 0x0000)
struct W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWidgetState                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWidgetState                                  Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableWidget*                    K2Node_Event_Widget;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EWidgetState                                  K2Node_Event_NewState;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0014(0x0014)()
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00D0)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0100(0x0014)()
};
static_assert(alignof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond) == 0x000010, "Wrong alignment on W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond");
static_assert(sizeof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond) == 0x000120, "Wrong size on W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, EntryPoint) == 0x000000, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, Temp_byte_Variable) == 0x000004, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, Temp_byte_Variable_1) == 0x000005, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, K2Node_Event_Widget) == 0x000008, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, K2Node_Event_NewState) == 0x000010, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, K2Node_Event_IsDesignTime) == 0x000011, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, K2Node_Select_Default) == 0x000014, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond, K2Node_Select_Default_1) == 0x000100, "Member 'W_SliderOptionDiamond_C_ExecuteUbergraph_W_SliderOptionDiamond::K2Node_Select_Default_1' has a wrong offset!");

// Function W_SliderOptionDiamond.W_SliderOptionDiamond_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SliderOptionDiamond_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SliderOptionDiamond_C_PreConstruct) == 0x000001, "Wrong alignment on W_SliderOptionDiamond_C_PreConstruct");
static_assert(sizeof(W_SliderOptionDiamond_C_PreConstruct) == 0x000001, "Wrong size on W_SliderOptionDiamond_C_PreConstruct");
static_assert(offsetof(W_SliderOptionDiamond_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SliderOptionDiamond_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SliderOptionDiamond.W_SliderOptionDiamond_C.ReceiveOnWidgetStateChanged
// 0x0010 (0x0010 - 0x0000)
struct W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged final
{
public:
	class UInteractableWidget*                    Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EWidgetState                                  NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged) == 0x000008, "Wrong alignment on W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged");
static_assert(sizeof(W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged) == 0x000010, "Wrong size on W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged");
static_assert(offsetof(W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged, Widget) == 0x000000, "Member 'W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged::Widget' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged, NewState) == 0x000008, "Member 'W_SliderOptionDiamond_C_ReceiveOnWidgetStateChanged::NewState' has a wrong offset!");

// Function W_SliderOptionDiamond.W_SliderOptionDiamond_C.IsInteractable
// 0x0002 (0x0002 - 0x0000)
struct W_SliderOptionDiamond_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractable_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SliderOptionDiamond_C_IsInteractable) == 0x000001, "Wrong alignment on W_SliderOptionDiamond_C_IsInteractable");
static_assert(sizeof(W_SliderOptionDiamond_C_IsInteractable) == 0x000002, "Wrong size on W_SliderOptionDiamond_C_IsInteractable");
static_assert(offsetof(W_SliderOptionDiamond_C_IsInteractable, ReturnValue) == 0x000000, "Member 'W_SliderOptionDiamond_C_IsInteractable::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SliderOptionDiamond_C_IsInteractable, CallFunc_IsInteractable_ReturnValue) == 0x000001, "Member 'W_SliderOptionDiamond_C_IsInteractable::CallFunc_IsInteractable_ReturnValue' has a wrong offset!");

}

