#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PortableLight

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_PortableLight.GA_PortableLight_C.ExecuteUbergraph_GA_PortableLight
// 0x0048 (0x0048 - 0x0000)
struct GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeWaited;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeWaited)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputPress*            CallFunc_WaitInputPress_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight) == 0x000008, "Wrong alignment on GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight");
static_assert(sizeof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight) == 0x000048, "Wrong size on GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, EntryPoint) == 0x000000, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, K2Node_CustomEvent_TimeWaited) == 0x000004, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::K2Node_CustomEvent_TimeWaited' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, Temp_real_Variable) == 0x000018, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, CallFunc_WaitInputPress_ReturnValue) == 0x000020, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::CallFunc_WaitInputPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, K2Node_Event_bWasCancelled) == 0x00002A, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000030, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, K2Node_DynamicCast_AsDune_Player_Character) == 0x000038, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_PortableLight_C_ExecuteUbergraph_GA_PortableLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_PortableLight.GA_PortableLight_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_PortableLight_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PortableLight_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_PortableLight_C_K2_OnEndAbility");
static_assert(sizeof(GA_PortableLight_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_PortableLight_C_K2_OnEndAbility");
static_assert(offsetof(GA_PortableLight_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_PortableLight_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_PortableLight.GA_PortableLight_C.OnPress_0F39368642470FA4C0DF9EA50802F4FB
// 0x0004 (0x0004 - 0x0000)
struct GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB) == 0x000004, "Wrong alignment on GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB");
static_assert(sizeof(GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB) == 0x000004, "Wrong size on GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB");
static_assert(offsetof(GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB, TimeWaited) == 0x000000, "Member 'GA_PortableLight_C_OnPress_0F39368642470FA4C0DF9EA50802F4FB::TimeWaited' has a wrong offset!");

}

