#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_StandardButton.W_StandardButton_C
// 0x00F0 (0x0600 - 0x0510)
class UW_StandardButton_C final : public UButtonWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pressed;                                           // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hovered;                                           // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDuneImage*                             BottomRighTriangle;                                // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             Button;                                            // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ContentHorizontalBox;                              // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             Glow;                                              // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             IconSlot;                                          // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               InputActionSizeBox;                                // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Purple_Button;                                     // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Normal_Button_Material;                            // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Special__Button_Material;                          // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Locked_Button_Material;                            // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Disabled_Button_Material;                          // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Normal_Button_color;                               // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Special_Button_Color;                              // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Locked_Button_Color;                               // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material_Instance;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Icon_Slot_;                                    // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Icon_Left_Alligned_;                               // 0x05B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BA[0x2];                                      // 0x05BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Icon_Slot_Padding;                                 // 0x05BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                ContentPadding;                                    // 0x05CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BoldFont;                                          // 0x05DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DarkerFont;                                        // 0x05DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5DE[0x2];                                      // 0x05DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Button_Desired_Size;                               // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Initial_Button_Desired_Size;                       // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetDesiredSize(const struct FVector2D& DesiredSize, bool Clear);
	void PreConstruct(bool IsDesignTime);
	void OnPressedStateChanged(class UButtonWidget* Widget, bool bNewState);
	void OnOverrideDesiredSize(const struct FVector2D& DesiredSize);
	void OnHoveredStateChanged(class UButtonWidget* Widget, bool bNewState);
	void OnClearOverrideDesiredSize();
	void OnButtonStateChanged(class UButtonWidget* Widget, EButtonWidgetState bNewButtonState);
	void Get_Default_Button_Material(class UMaterialInstance** Material);
	void Get_Default_Button_Glow_Color(struct FLinearColor* Glow_Color);
	void ExecuteUbergraph_W_StandardButton(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_StandardButton_C">();
	}
	static class UW_StandardButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_StandardButton_C>();
	}
};
static_assert(alignof(UW_StandardButton_C) == 0x000010, "Wrong alignment on UW_StandardButton_C");
static_assert(sizeof(UW_StandardButton_C) == 0x000600, "Wrong size on UW_StandardButton_C");
static_assert(offsetof(UW_StandardButton_C, UberGraphFrame) == 0x000510, "Member 'UW_StandardButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Pressed) == 0x000518, "Member 'UW_StandardButton_C::Pressed' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Hovered) == 0x000520, "Member 'UW_StandardButton_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, BottomRighTriangle) == 0x000528, "Member 'UW_StandardButton_C::BottomRighTriangle' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Button) == 0x000530, "Member 'UW_StandardButton_C::Button' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, ContentHorizontalBox) == 0x000538, "Member 'UW_StandardButton_C::ContentHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Glow) == 0x000540, "Member 'UW_StandardButton_C::Glow' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, IconSlot) == 0x000548, "Member 'UW_StandardButton_C::IconSlot' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, InputActionSizeBox) == 0x000550, "Member 'UW_StandardButton_C::InputActionSizeBox' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Purple_Button) == 0x000558, "Member 'UW_StandardButton_C::Purple_Button' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Normal_Button_Material) == 0x000560, "Member 'UW_StandardButton_C::Normal_Button_Material' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Special__Button_Material) == 0x000568, "Member 'UW_StandardButton_C::Special__Button_Material' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Locked_Button_Material) == 0x000570, "Member 'UW_StandardButton_C::Locked_Button_Material' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Disabled_Button_Material) == 0x000578, "Member 'UW_StandardButton_C::Disabled_Button_Material' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Normal_Button_color) == 0x000580, "Member 'UW_StandardButton_C::Normal_Button_color' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Special_Button_Color) == 0x000590, "Member 'UW_StandardButton_C::Special_Button_Color' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Locked_Button_Color) == 0x0005A0, "Member 'UW_StandardButton_C::Locked_Button_Color' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Material_Instance) == 0x0005B0, "Member 'UW_StandardButton_C::Material_Instance' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Use_Icon_Slot_) == 0x0005B8, "Member 'UW_StandardButton_C::Use_Icon_Slot_' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Icon_Left_Alligned_) == 0x0005B9, "Member 'UW_StandardButton_C::Icon_Left_Alligned_' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Icon_Slot_Padding) == 0x0005BC, "Member 'UW_StandardButton_C::Icon_Slot_Padding' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, ContentPadding) == 0x0005CC, "Member 'UW_StandardButton_C::ContentPadding' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, BoldFont) == 0x0005DC, "Member 'UW_StandardButton_C::BoldFont' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, DarkerFont) == 0x0005DD, "Member 'UW_StandardButton_C::DarkerFont' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Button_Desired_Size) == 0x0005E0, "Member 'UW_StandardButton_C::Button_Desired_Size' has a wrong offset!");
static_assert(offsetof(UW_StandardButton_C, Initial_Button_Desired_Size) == 0x0005F0, "Member 'UW_StandardButton_C::Initial_Button_Desired_Size' has a wrong offset!");

}

