#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_IndicatorNew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_IndicatorNew.W_IndicatorNew_C
// 0x00B0 (0x04A0 - 0x03F0)
class UW_IndicatorNew_C final : public UIndicatorNewWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       m_NewGlow;                                         // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDuneImage*                             GlowImg;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             IMGIndicatorNew;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             Linework;                                          // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Desired_Size;                                      // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Glow_;                                      // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Use_Linework_;                              // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A[0x2];                                      // 0x042A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            GlowColorDisabled;                                 // 0x042C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            GlowColorEnabled;                                  // 0x0440(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              MessageIcon;                                       // 0x0458(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInterface*                     DiamondIcon;                                       // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Message_Desired_Size;                              // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_IndicatorNew(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Set_Disabled(bool IsDisabled_);
	void SetIndicatorNewIcon(const EIndicatorNewStyle IndicatorNewStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_IndicatorNew_C">();
	}
	static class UW_IndicatorNew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_IndicatorNew_C>();
	}
};
static_assert(alignof(UW_IndicatorNew_C) == 0x000010, "Wrong alignment on UW_IndicatorNew_C");
static_assert(sizeof(UW_IndicatorNew_C) == 0x0004A0, "Wrong size on UW_IndicatorNew_C");
static_assert(offsetof(UW_IndicatorNew_C, UberGraphFrame) == 0x0003F0, "Member 'UW_IndicatorNew_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, m_NewGlow) == 0x0003F8, "Member 'UW_IndicatorNew_C::m_NewGlow' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, GlowImg) == 0x000400, "Member 'UW_IndicatorNew_C::GlowImg' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, IMGIndicatorNew) == 0x000408, "Member 'UW_IndicatorNew_C::IMGIndicatorNew' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, Linework) == 0x000410, "Member 'UW_IndicatorNew_C::Linework' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, Desired_Size) == 0x000418, "Member 'UW_IndicatorNew_C::Desired_Size' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, Should_Glow_) == 0x000428, "Member 'UW_IndicatorNew_C::Should_Glow_' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, Should_Use_Linework_) == 0x000429, "Member 'UW_IndicatorNew_C::Should_Use_Linework_' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, GlowColorDisabled) == 0x00042C, "Member 'UW_IndicatorNew_C::GlowColorDisabled' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, GlowColorEnabled) == 0x000440, "Member 'UW_IndicatorNew_C::GlowColorEnabled' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, MessageIcon) == 0x000458, "Member 'UW_IndicatorNew_C::MessageIcon' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, DiamondIcon) == 0x000488, "Member 'UW_IndicatorNew_C::DiamondIcon' has a wrong offset!");
static_assert(offsetof(UW_IndicatorNew_C, Message_Desired_Size) == 0x000490, "Member 'UW_IndicatorNew_C::Message_Desired_Size' has a wrong offset!");

}

