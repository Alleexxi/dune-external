#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Cursor

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Cursor.W_Cursor_C.ExecuteUbergraph_W_Cursor
// 0x00A8 (0x00A8 - 0x0000)
struct W_Cursor_C_ExecuteUbergraph_W_Cursor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EGUIControlMode Mode)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDuneMouseCursorVisible_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               CallFunc_GetGUIControlMode_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bVisible)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0040(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               K2Node_CustomEvent_Mode;                           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller;       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               Temp_byte_Variable_3;                              // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible;                       // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Cursor_C_ExecuteUbergraph_W_Cursor) == 0x000008, "Wrong alignment on W_Cursor_C_ExecuteUbergraph_W_Cursor");
static_assert(sizeof(W_Cursor_C_ExecuteUbergraph_W_Cursor) == 0x0000A8, "Wrong size on W_Cursor_C_ExecuteUbergraph_W_Cursor");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, EntryPoint) == 0x000000, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_byte_Variable) == 0x000004, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_byte_Variable_1) == 0x000005, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_bool_Variable) == 0x000018, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, CallFunc_IsDuneMouseCursorVisible_ReturnValue) == 0x000019, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::CallFunc_IsDuneMouseCursorVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, CallFunc_GetGUIControlMode_ReturnValue) == 0x00001A, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::CallFunc_GetGUIControlMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_real_Variable) == 0x000020, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_real_Variable_1) == 0x000028, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_Event_MyGeometry) == 0x000040, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_Event_InDeltaTime) == 0x000078, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_byte_Variable_2) == 0x00007C, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_CustomEvent_Mode) == 0x00007D, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_CustomEvent_Mode' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_DynamicCast_AsDune_Player_Controller) == 0x000088, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_DynamicCast_AsDune_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000092, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_byte_Variable_3) == 0x000093, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_Select_Default) == 0x000094, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_byte_Variable_4) == 0x000095, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_CustomEvent_bVisible) == 0x000096, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_CustomEvent_bVisible' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, Temp_byte_Variable_5) == 0x000097, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_Select_Default_1) == 0x000098, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, K2Node_Select_Default_2) == 0x0000A0, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_ExecuteUbergraph_W_Cursor, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0000A4, "Member 'W_Cursor_C_ExecuteUbergraph_W_Cursor::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_Cursor.W_Cursor_C.OnDuneMouseVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Cursor_C_OnDuneMouseVisibilityChanged final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Cursor_C_OnDuneMouseVisibilityChanged) == 0x000001, "Wrong alignment on W_Cursor_C_OnDuneMouseVisibilityChanged");
static_assert(sizeof(W_Cursor_C_OnDuneMouseVisibilityChanged) == 0x000001, "Wrong size on W_Cursor_C_OnDuneMouseVisibilityChanged");
static_assert(offsetof(W_Cursor_C_OnDuneMouseVisibilityChanged, bVisible) == 0x000000, "Member 'W_Cursor_C_OnDuneMouseVisibilityChanged::bVisible' has a wrong offset!");

// Function W_Cursor.W_Cursor_C.OnGUIModeChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Cursor_C_OnGUIModeChanged final
{
public:
	EGUIControlMode                               Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Cursor_C_OnGUIModeChanged) == 0x000001, "Wrong alignment on W_Cursor_C_OnGUIModeChanged");
static_assert(sizeof(W_Cursor_C_OnGUIModeChanged) == 0x000001, "Wrong size on W_Cursor_C_OnGUIModeChanged");
static_assert(offsetof(W_Cursor_C_OnGUIModeChanged, Mode) == 0x000000, "Member 'W_Cursor_C_OnGUIModeChanged::Mode' has a wrong offset!");

// Function W_Cursor.W_Cursor_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Cursor_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Cursor_C_Tick) == 0x000004, "Wrong alignment on W_Cursor_C_Tick");
static_assert(sizeof(W_Cursor_C_Tick) == 0x00003C, "Wrong size on W_Cursor_C_Tick");
static_assert(offsetof(W_Cursor_C_Tick, MyGeometry) == 0x000000, "Member 'W_Cursor_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Cursor_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Cursor_C_Tick::InDeltaTime' has a wrong offset!");

}

