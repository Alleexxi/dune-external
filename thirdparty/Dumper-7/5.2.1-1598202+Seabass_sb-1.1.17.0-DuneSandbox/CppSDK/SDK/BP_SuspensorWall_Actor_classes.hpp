#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SuspensorWall_Actor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SuspensorWall_Actor.BP_SuspensorWall_Actor_C
// 0x0160 (0x04B8 - 0x0358)
class ABP_SuspensorWall_Actor_C final : public ADuneAbilityAudioActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDuneAudioEmitterComponent*             DuneAudioEmitter;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCoverPoint3;                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCoverPoint;                              // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_VFX_Cmn_ProximityRender_Component_C* BP_VFX_Cmn_ProximityRender_Component;             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ProximityCollision;                                // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MeshForProximity;                                  // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshForCollision;                                  // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceFromImpactToSpawnDart;                     // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityScalarOnWallHit;                           // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         PreLoadedFX;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorShooterToHitDirection;                       // 0x03B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraParticleSystem;                             // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SuspensorWallMaterial;                             // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSet<class UDuneCharacterMovementComponent*>  OverlapList;                                       // 0x03E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UFcAudioEvent*                          Audio_Activate;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          Audio_LoopStart;                                   // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          Audio_LoopEnd;                                     // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         AudioDelayPostActivation;                          // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFcAudioEvent*                          Audio_OnHit;                                       // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          Audio_OnEndOverlap;                                // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFcAudioEvent*                          Audio_OnOverlap;                                   // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 AbilityNameForTelemetry;                           // 0x0468(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        FXDuration;                                        // 0x0478(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Tracking_Called_From;                              // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bForceYawOnly;                                     // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WallSize;                                          // 0x04A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_SuspensorWall_Actor_MeshForCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_SuspensorWall_Actor_MeshForCollision_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_SuspensorWall_Actor_ProximityCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_SuspensorWall_Actor_ProximityCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CallOnHit(class UPrimitiveComponent* InHitComponent, class AActor* InOtherActor, class UPrimitiveComponent* InOtherComp, const struct FVector& InNormalImpulse, const struct FHitResult& InHit);
	void CancelAbilitiesBySuspend(class AActor* Actor);
	void CleanupVisuals();
	void Deactivate();
	void ExecuteUbergraph_BP_SuspensorWall_Actor(int32 EntryPoint);
	class UPrimitiveComponent* GetComponentForCollision();
	void On_Hit(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void SetVFXLifespan(double LifeSpan);
	void SpawnNiagaraEffect(class UTextureRenderTarget2D* RT);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SuspensorWall_Actor_C">();
	}
	static class ABP_SuspensorWall_Actor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SuspensorWall_Actor_C>();
	}
};
static_assert(alignof(ABP_SuspensorWall_Actor_C) == 0x000008, "Wrong alignment on ABP_SuspensorWall_Actor_C");
static_assert(sizeof(ABP_SuspensorWall_Actor_C) == 0x0004B8, "Wrong size on ABP_SuspensorWall_Actor_C");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, UberGraphFrame) == 0x000358, "Member 'ABP_SuspensorWall_Actor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, DuneAudioEmitter) == 0x000360, "Member 'ABP_SuspensorWall_Actor_C::DuneAudioEmitter' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, ChildActorCoverPoint3) == 0x000368, "Member 'ABP_SuspensorWall_Actor_C::ChildActorCoverPoint3' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, ChildActorCoverPoint) == 0x000370, "Member 'ABP_SuspensorWall_Actor_C::ChildActorCoverPoint' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, BP_VFX_Cmn_ProximityRender_Component) == 0x000378, "Member 'ABP_SuspensorWall_Actor_C::BP_VFX_Cmn_ProximityRender_Component' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, ProximityCollision) == 0x000380, "Member 'ABP_SuspensorWall_Actor_C::ProximityCollision' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, MeshForProximity) == 0x000388, "Member 'ABP_SuspensorWall_Actor_C::MeshForProximity' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, MeshForCollision) == 0x000390, "Member 'ABP_SuspensorWall_Actor_C::MeshForCollision' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Root) == 0x000398, "Member 'ABP_SuspensorWall_Actor_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, DistanceFromImpactToSpawnDart) == 0x0003A0, "Member 'ABP_SuspensorWall_Actor_C::DistanceFromImpactToSpawnDart' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, VelocityScalarOnWallHit) == 0x0003A8, "Member 'ABP_SuspensorWall_Actor_C::VelocityScalarOnWallHit' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, PreLoadedFX) == 0x0003B0, "Member 'ABP_SuspensorWall_Actor_C::PreLoadedFX' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, VectorShooterToHitDirection) == 0x0003B8, "Member 'ABP_SuspensorWall_Actor_C::VectorShooterToHitDirection' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, NiagaraParticleSystem) == 0x0003D0, "Member 'ABP_SuspensorWall_Actor_C::NiagaraParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, SuspensorWallMaterial) == 0x0003D8, "Member 'ABP_SuspensorWall_Actor_C::SuspensorWallMaterial' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, OverlapList) == 0x0003E0, "Member 'ABP_SuspensorWall_Actor_C::OverlapList' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Audio_Activate) == 0x000430, "Member 'ABP_SuspensorWall_Actor_C::Audio_Activate' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Audio_LoopStart) == 0x000438, "Member 'ABP_SuspensorWall_Actor_C::Audio_LoopStart' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Audio_LoopEnd) == 0x000440, "Member 'ABP_SuspensorWall_Actor_C::Audio_LoopEnd' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, AudioDelayPostActivation) == 0x000448, "Member 'ABP_SuspensorWall_Actor_C::AudioDelayPostActivation' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Audio_OnHit) == 0x000450, "Member 'ABP_SuspensorWall_Actor_C::Audio_OnHit' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Audio_OnEndOverlap) == 0x000458, "Member 'ABP_SuspensorWall_Actor_C::Audio_OnEndOverlap' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Audio_OnOverlap) == 0x000460, "Member 'ABP_SuspensorWall_Actor_C::Audio_OnOverlap' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, AbilityNameForTelemetry) == 0x000468, "Member 'ABP_SuspensorWall_Actor_C::AbilityNameForTelemetry' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, FXDuration) == 0x000478, "Member 'ABP_SuspensorWall_Actor_C::FXDuration' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, Tracking_Called_From) == 0x000480, "Member 'ABP_SuspensorWall_Actor_C::Tracking_Called_From' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, bForceYawOnly) == 0x000490, "Member 'ABP_SuspensorWall_Actor_C::bForceYawOnly' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, DuneCharacter) == 0x000498, "Member 'ABP_SuspensorWall_Actor_C::DuneCharacter' has a wrong offset!");
static_assert(offsetof(ABP_SuspensorWall_Actor_C, WallSize) == 0x0004A0, "Member 'ABP_SuspensorWall_Actor_C::WallSize' has a wrong offset!");

}

