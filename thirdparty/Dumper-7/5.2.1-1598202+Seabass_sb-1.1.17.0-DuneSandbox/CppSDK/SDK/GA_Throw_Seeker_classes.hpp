#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Throw_Seeker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_Throw_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Throw_Seeker.GA_Throw_Seeker_C
// 0x0020 (0x0720 - 0x0700)
class UGA_Throw_Seeker_C final : public UGA_Throw_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Throw_Seeker_C;                  // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bPendingCleanup;                                   // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CachedStartTIme;                                   // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinTimeReactivationAllowed;                        // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CleanupSeeker();
	void ExecuteUbergraph_GA_Throw_Seeker(int32 EntryPoint);
	void K2_ActivateAbility();
	void OnSeekerDestroyed(class AActor* DestroyedActor);
	void OnThrowableThrown(class ABP_ProjectileThrowableBase_C* SpawnedThrowable);
	void ReactivateSeeker();
	void TriggerShortPress(double TimeHeld);
	void TryCommitOnRelease(bool* bCommit);

	struct FAbilityDisplayData GetDisplayData(const class UAbilitySystemComponent* InstigatorASC) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Throw_Seeker_C">();
	}
	static class UGA_Throw_Seeker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Throw_Seeker_C>();
	}
};
static_assert(alignof(UGA_Throw_Seeker_C) == 0x000008, "Wrong alignment on UGA_Throw_Seeker_C");
static_assert(sizeof(UGA_Throw_Seeker_C) == 0x000720, "Wrong size on UGA_Throw_Seeker_C");
static_assert(offsetof(UGA_Throw_Seeker_C, UberGraphFrame_GA_Throw_Seeker_C) == 0x000700, "Member 'UGA_Throw_Seeker_C::UberGraphFrame_GA_Throw_Seeker_C' has a wrong offset!");
static_assert(offsetof(UGA_Throw_Seeker_C, bPendingCleanup) == 0x000708, "Member 'UGA_Throw_Seeker_C::bPendingCleanup' has a wrong offset!");
static_assert(offsetof(UGA_Throw_Seeker_C, CachedStartTIme) == 0x000710, "Member 'UGA_Throw_Seeker_C::CachedStartTIme' has a wrong offset!");
static_assert(offsetof(UGA_Throw_Seeker_C, MinTimeReactivationAllowed) == 0x000718, "Member 'UGA_Throw_Seeker_C::MinTimeReactivationAllowed' has a wrong offset!");

}

