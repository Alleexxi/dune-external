#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MeleeAction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_MeleeAction.GA_MeleeAction_C
// 0x00C8 (0x05F8 - 0x0530)
class UGA_MeleeAction_C final : public UDuneGameplayAction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPossibleMeleeAction                   CurrentMeleeAction;                                // 0x0538(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsRetrigger;                                       // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputRelease*          WaitInputReleaseTaskHandle;                        // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentTargetActor;                                // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAbilityTask*>                   AbilityTasks;                                      // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        TimeOfAttack;                                      // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EMeleeActionInputKey, EMeleeActionInputMode> InputKeyStates_OLD;                            // 0x05A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAbilityTask_WaitMontageSectionChanged* WaitMontageSectionChangedHandle;                   // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Added_2D58F26C4355603A940859B5311DEEDF();
	void Added_B0A1A8DF43FF096FE70CFBAEEEB8FDDF();
	void AquireSoftLockTarget();
	void CallCancelAbilityWithReason(const class FString& CancelReason);
	void CallEndAbilityWithReason(const class FString& CancelReason);
	void CollectTask(class UAbilityTask* AbilityTask);
	void DebugPrintCurrentMeleeAction();
	void EndAllCollectedTasks();
	void EndIfNoMontageIsPlaying(bool* EndAbilityCalled);
	void Evaluate_Melee_Action_Conditions(bool Update_Softlock, bool IsRetrigger_0, class AActor* TargetCharacter, bool TriggeredByEvent, class FName CurrentMontageSection, EMeleeActionInputMode InputMode);
	void EventReceived_3FC2D2BE4A3E09D83D4FD49CB7BFF869(const struct FGameplayEventData& Payload);
	void EventReceived_DF5E5A6342F09C95C20A48ADE7E75C84(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_MeleeAction(int32 EntryPoint);
	class ADuneCharacter* GetOwnerCharacter();
	void HandleInputReleased(bool TestAlreadyReleased);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void LogString(const class FString& String);
	void OnBlendOut_C7C380174D95CF761AB4F5A61B60AA20();
	void OnCancelled_C7C380174D95CF761AB4F5A61B60AA20();
	void OnCompleted_C7C380174D95CF761AB4F5A61B60AA20();
	void OnConditionFulfilled();
	void OnConditionNotFulfilled();
	void OnFinish_3053AE83472658287CE3CA9CDFFE50F6();
	void OnHitCharacter(class AActor* HitActor);
	void OnInputPressed();
	void OnInputReleased(double TimeHeld);
	void OnInterrupted_C7C380174D95CF761AB4F5A61B60AA20();
	void OnMontageSectionChanged(class UAnimMontage* Montage, class FName PreviousSectionName, class FName SectionName);
	void OnMovementDirectionInputChanged();
	void OnMovementDirectionInputChanged_6D4C346A4344E38B70357F8724E5C316();
	void OnRelease_8D3839854F311371DE4419AB7EC4230F(float TimeHeld);
	void OnRetrigger();
	void OnSectionChanged_2F876F7E4FB37B1B833B479B65121784(const class UAnimMontage* Montage, const class FName& PrevSectionName, const class FName& SectionName);
	void PlayerFaceForward();
	void PlayMontageOrJumpSection();
	void StopSprinting();
	void SubscribeToMontageSectionChanged();
	void TryEnterMeleeSubstate(bool* EnteredSubstate);
	void TryExitMeleeSubstate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_MeleeAction_C">();
	}
	static class UGA_MeleeAction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_MeleeAction_C>();
	}
};
static_assert(alignof(UGA_MeleeAction_C) == 0x000008, "Wrong alignment on UGA_MeleeAction_C");
static_assert(sizeof(UGA_MeleeAction_C) == 0x0005F8, "Wrong size on UGA_MeleeAction_C");
static_assert(offsetof(UGA_MeleeAction_C, UberGraphFrame) == 0x000530, "Member 'UGA_MeleeAction_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, CurrentMeleeAction) == 0x000538, "Member 'UGA_MeleeAction_C::CurrentMeleeAction' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, IsRetrigger) == 0x000570, "Member 'UGA_MeleeAction_C::IsRetrigger' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, WaitInputReleaseTaskHandle) == 0x000578, "Member 'UGA_MeleeAction_C::WaitInputReleaseTaskHandle' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, CurrentTargetActor) == 0x000580, "Member 'UGA_MeleeAction_C::CurrentTargetActor' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, AbilityTasks) == 0x000588, "Member 'UGA_MeleeAction_C::AbilityTasks' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, TimeOfAttack) == 0x000598, "Member 'UGA_MeleeAction_C::TimeOfAttack' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, InputKeyStates_OLD) == 0x0005A0, "Member 'UGA_MeleeAction_C::InputKeyStates_OLD' has a wrong offset!");
static_assert(offsetof(UGA_MeleeAction_C, WaitMontageSectionChangedHandle) == 0x0005F0, "Member 'UGA_MeleeAction_C::WaitMontageSectionChangedHandle' has a wrong offset!");

}

