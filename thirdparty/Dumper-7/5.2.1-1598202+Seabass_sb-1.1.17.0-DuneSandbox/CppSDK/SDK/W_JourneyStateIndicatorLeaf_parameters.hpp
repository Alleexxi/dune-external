#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_JourneyStateIndicatorLeaf

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function W_JourneyStateIndicatorLeaf.W_JourneyStateIndicatorLeaf_C.UpdateProgress
// 0x0001 (0x0001 - 0x0000)
struct W_JourneyStateIndicatorLeaf_C_UpdateProgress final
{
public:
	EJourneyState                                 InJourneyState;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_JourneyStateIndicatorLeaf_C_UpdateProgress) == 0x000001, "Wrong alignment on W_JourneyStateIndicatorLeaf_C_UpdateProgress");
static_assert(sizeof(W_JourneyStateIndicatorLeaf_C_UpdateProgress) == 0x000001, "Wrong size on W_JourneyStateIndicatorLeaf_C_UpdateProgress");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_UpdateProgress, InJourneyState) == 0x000000, "Member 'W_JourneyStateIndicatorLeaf_C_UpdateProgress::InJourneyState' has a wrong offset!");

// Function W_JourneyStateIndicatorLeaf.W_JourneyStateIndicatorLeaf_C.SetUpLinkVisibility
// 0x0001 (0x0001 - 0x0000)
struct W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility final
{
public:
	ESlateVisibility                              LinkVisibility;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility) == 0x000001, "Wrong alignment on W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility");
static_assert(sizeof(W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility) == 0x000001, "Wrong size on W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility, LinkVisibility) == 0x000000, "Member 'W_JourneyStateIndicatorLeaf_C_SetUpLinkVisibility::LinkVisibility' has a wrong offset!");

// Function W_JourneyStateIndicatorLeaf.W_JourneyStateIndicatorLeaf_C.Set Line Visibility
// 0x0001 (0x0001 - 0x0000)
struct W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility) == 0x000001, "Wrong alignment on W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility");
static_assert(sizeof(W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility) == 0x000001, "Wrong size on W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility, InVisibility) == 0x000000, "Member 'W_JourneyStateIndicatorLeaf_C_Set_Line_Visibility::InVisibility' has a wrong offset!");

// Function W_JourneyStateIndicatorLeaf.W_JourneyStateIndicatorLeaf_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_JourneyStateIndicatorLeaf_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_JourneyStateIndicatorLeaf_C_PreConstruct) == 0x000001, "Wrong alignment on W_JourneyStateIndicatorLeaf_C_PreConstruct");
static_assert(sizeof(W_JourneyStateIndicatorLeaf_C_PreConstruct) == 0x000001, "Wrong size on W_JourneyStateIndicatorLeaf_C_PreConstruct");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_JourneyStateIndicatorLeaf_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_JourneyStateIndicatorLeaf.W_JourneyStateIndicatorLeaf_C.OnJourneyStateChanged
// 0x0001 (0x0001 - 0x0000)
struct W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged final
{
public:
	EJourneyState                                 InJourneyState;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged) == 0x000001, "Wrong alignment on W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged");
static_assert(sizeof(W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged) == 0x000001, "Wrong size on W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged, InJourneyState) == 0x000000, "Member 'W_JourneyStateIndicatorLeaf_C_OnJourneyStateChanged::InJourneyState' has a wrong offset!");

// Function W_JourneyStateIndicatorLeaf.W_JourneyStateIndicatorLeaf_C.ExecuteUbergraph_W_JourneyStateIndicatorLeaf
// 0x0050 (0x0050 - 0x0000)
struct W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_LinkVisibility;                       // 0x000B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJourneyState                                 K2Node_Event_InJourneyState_1;                     // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJourneyState                                 K2Node_Event_InJourneyState;                       // 0x0012(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerState*                       K2Node_DynamicCast_AsDune_Player_State;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMnemonicRecallActorComponent*          CallFunc_GetMnemonicRecallActorComponent_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetProgress_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf) == 0x000008, "Wrong alignment on W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf");
static_assert(sizeof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf) == 0x000050, "Wrong size on W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, EntryPoint) == 0x000000, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, Temp_byte_Variable) == 0x000004, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, Temp_bool_Variable) == 0x000005, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, Temp_byte_Variable_1) == 0x000006, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, Temp_byte_Variable_2) == 0x000007, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_Event_IsDesignTime) == 0x000009, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, Temp_byte_Variable_3) == 0x00000A, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_Event_LinkVisibility) == 0x00000B, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_Event_LinkVisibility' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_Event_InJourneyState_1) == 0x00000C, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_Event_InJourneyState_1' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_SwitchEnum_CmpSuccess) == 0x00000E, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_Select_Default) == 0x00000F, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, Temp_bool_Variable_1) == 0x000010, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_Select_Default_1) == 0x000011, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_Event_InJourneyState) == 0x000012, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_Event_InJourneyState' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_DynamicCast_AsDune_Player_Controller) == 0x000020, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_DynamicCast_AsDune_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_DynamicCast_AsDune_Player_State) == 0x000030, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_DynamicCast_AsDune_Player_State' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, CallFunc_GetMnemonicRecallActorComponent_ReturnValue) == 0x000040, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::CallFunc_GetMnemonicRecallActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf, CallFunc_GetProgress_ReturnValue) == 0x000048, "Member 'W_JourneyStateIndicatorLeaf_C_ExecuteUbergraph_W_JourneyStateIndicatorLeaf::CallFunc_GetProgress_ReturnValue' has a wrong offset!");

}

