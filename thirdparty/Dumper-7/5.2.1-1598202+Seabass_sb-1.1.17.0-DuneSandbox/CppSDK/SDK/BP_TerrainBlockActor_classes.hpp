#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TerrainBlockActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TerrainBlockActor.BP_TerrainBlockActor_C
// 0x0058 (0x04C8 - 0x0470)
class ABP_TerrainBlockActor_C final : public ATerrainBlockActor
{
public:
	bool                                          SnapSeaOfSand;                                     // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SnapTransition;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SnapBias;                                          // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SnapRoundness;                                     // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SnapHeightOffset;                                  // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugArea;                                         // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SnapOrder;                                         // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SnapHeightOffsetGizmo;                             // 0x04A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowHeightPlane;                                   // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   WorldmassHeightPlaneDebug;                         // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Move_to_Bottom();
	void Move_to_Top();
	void Update_Worldmass();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TerrainBlockActor_C">();
	}
	static class ABP_TerrainBlockActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TerrainBlockActor_C>();
	}
};
static_assert(alignof(ABP_TerrainBlockActor_C) == 0x000008, "Wrong alignment on ABP_TerrainBlockActor_C");
static_assert(sizeof(ABP_TerrainBlockActor_C) == 0x0004C8, "Wrong size on ABP_TerrainBlockActor_C");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapSeaOfSand) == 0x000470, "Member 'ABP_TerrainBlockActor_C::SnapSeaOfSand' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapTransition) == 0x000478, "Member 'ABP_TerrainBlockActor_C::SnapTransition' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapBias) == 0x000480, "Member 'ABP_TerrainBlockActor_C::SnapBias' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapRoundness) == 0x000488, "Member 'ABP_TerrainBlockActor_C::SnapRoundness' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapHeightOffset) == 0x000490, "Member 'ABP_TerrainBlockActor_C::SnapHeightOffset' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, DebugArea) == 0x000498, "Member 'ABP_TerrainBlockActor_C::DebugArea' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapOrder) == 0x00049C, "Member 'ABP_TerrainBlockActor_C::SnapOrder' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, SnapHeightOffsetGizmo) == 0x0004A0, "Member 'ABP_TerrainBlockActor_C::SnapHeightOffsetGizmo' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, ShowHeightPlane) == 0x0004B8, "Member 'ABP_TerrainBlockActor_C::ShowHeightPlane' has a wrong offset!");
static_assert(offsetof(ABP_TerrainBlockActor_C, WorldmassHeightPlaneDebug) == 0x0004C0, "Member 'ABP_TerrainBlockActor_C::WorldmassHeightPlaneDebug' has a wrong offset!");

}

