#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Parry_BlockedHit

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Parry_BlockedHit.GC_Parry_BlockedHit_C.OnExecute
// 0x0140 (0x0140 - 0x0000)
struct GC_Parry_BlockedHit_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Parry_BlockedHit_C_OnExecute) == 0x000008, "Wrong alignment on GC_Parry_BlockedHit_C_OnExecute");
static_assert(sizeof(GC_Parry_BlockedHit_C_OnExecute) == 0x000140, "Wrong size on GC_Parry_BlockedHit_C_OnExecute");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_Parry_BlockedHit_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, Parameters) == 0x000008, "Member 'GC_Parry_BlockedHit_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, ReturnValue) == 0x0000E0, "Member 'GC_Parry_BlockedHit_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, K2Node_DynamicCast_AsCharacter) == 0x0000E8, "Member 'GC_Parry_BlockedHit_C_OnExecute::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GC_Parry_BlockedHit_C_OnExecute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000F8, "Member 'GC_Parry_BlockedHit_C_OnExecute::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, K2Node_DynamicCast_AsPawn) == 0x000100, "Member 'GC_Parry_BlockedHit_C_OnExecute::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'GC_Parry_BlockedHit_C_OnExecute::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, CallFunc_GetController_ReturnValue) == 0x000110, "Member 'GC_Parry_BlockedHit_C_OnExecute::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, CallFunc_IsLocallyControlled_ReturnValue) == 0x000118, "Member 'GC_Parry_BlockedHit_C_OnExecute::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, K2Node_DynamicCast_AsPlayer_Controller) == 0x000120, "Member 'GC_Parry_BlockedHit_C_OnExecute::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'GC_Parry_BlockedHit_C_OnExecute::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000130, "Member 'GC_Parry_BlockedHit_C_OnExecute::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Parry_BlockedHit_C_OnExecute, CallFunc_StartCameraShake_ReturnValue) == 0x000138, "Member 'GC_Parry_BlockedHit_C_OnExecute::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");

}

