#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BleedStrike

#include "Basic.hpp"

#include "GA_BleedStrike_classes.hpp"
#include "GA_BleedStrike_parameters.hpp"


namespace SDK
{

// Function GA_BleedStrike.GA_BleedStrike_C.Added_0D8D32CE46F57510FE4DB29F6AF58138
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::Added_0D8D32CE46F57510FE4DB29F6AF58138()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "Added_0D8D32CE46F57510FE4DB29F6AF58138");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.CacheMeleeWeaponData
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::CacheMeleeWeaponData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "CacheMeleeWeaponData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.EventReceived_E61524BF40939B206B89ACB376B7821E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_BleedStrike_C::EventReceived_E61524BF40939B206B89ACB376B7821E(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "EventReceived_E61524BF40939B206B89ACB376B7821E");

	Params::GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.ExecuteUbergraph_GA_BleedStrike
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BleedStrike_C::ExecuteUbergraph_GA_BleedStrike(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "ExecuteUbergraph_GA_BleedStrike");

	Params::GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.HandleMovement
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::HandleMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "HandleMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.InitializeDefaults
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::InitializeDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "InitializeDefaults");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.InitializeDefaults NPC
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::InitializeDefaults_NPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "InitializeDefaults NPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.InitializeStaticProperties
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilitySpec&      Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UGA_BleedStrike_C::InitializeStaticProperties(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "InitializeStaticProperties");

	Params::GA_BleedStrike_C_InitializeStaticProperties Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Spec = std::move(Spec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_BleedStrike_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_BleedStrike_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "K2_ActivateAbilityFromEvent");

	Params::GA_BleedStrike_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BleedStrike_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "K2_OnEndAbility");

	Params::GA_BleedStrike_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnBlendOut_F4847CD34B7BA6E8C78E308618990083
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnBlendOut_F4847CD34B7BA6E8C78E308618990083()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnBlendOut_F4847CD34B7BA6E8C78E308618990083");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnCancelled_F4847CD34B7BA6E8C78E308618990083
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnCancelled_F4847CD34B7BA6E8C78E308618990083()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnCancelled_F4847CD34B7BA6E8C78E308618990083");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnCompleted_F4847CD34B7BA6E8C78E308618990083
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnCompleted_F4847CD34B7BA6E8C78E308618990083()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnCompleted_F4847CD34B7BA6E8C78E308618990083");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnConnectHitEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_BleedStrike_C::OnConnectHitEvent(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnConnectHitEvent");

	Params::GA_BleedStrike_C_OnConnectHitEvent Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnFinish_0243103641DB2C2A8E8A3D8AFE95EF0E
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnFinish_0243103641DB2C2A8E8A3D8AFE95EF0E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnFinish_0243103641DB2C2A8E8A3D8AFE95EF0E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnFinish_8D09EE894168A83BAF490A99C678C0C8
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnFinish_8D09EE894168A83BAF490A99C678C0C8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnFinish_8D09EE894168A83BAF490A99C678C0C8");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnFinish_C1C0B47743556CA0446418B142AA085C
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnFinish_C1C0B47743556CA0446418B142AA085C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnFinish_C1C0B47743556CA0446418B142AA085C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.OnInterrupted_F4847CD34B7BA6E8C78E308618990083
// (BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::OnInterrupted_F4847CD34B7BA6E8C78E308618990083()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "OnInterrupted_F4847CD34B7BA6E8C78E308618990083");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.PrintDebugStringToChannelWithAbilityName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DebugString                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Channel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EDebugLevel                             DebugLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BleedStrike_C::PrintDebugStringToChannelWithAbilityName(const class FString& DebugString, class UClass* Channel, EDebugLevel DebugLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "PrintDebugStringToChannelWithAbilityName");

	Params::GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName Parms{};

	Parms.DebugString = std::move(DebugString);
	Parms.Channel = Channel;
	Parms.DebugLevel = DebugLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.RotateToHitActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_BleedStrike_C::RotateToHitActor(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "RotateToHitActor");

	Params::GA_BleedStrike_C_RotateToHitActor Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BleedStrike.GA_BleedStrike_C.Select Montage to Play NPC
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_BleedStrike_C::Select_Montage_to_Play_NPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "Select Montage to Play NPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_BleedStrike.GA_BleedStrike_C.SelectMontageToPlay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ShouldPlayHeavyMeleeFromRight                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BleedStrike_C::SelectMontageToPlay(double ShouldPlayHeavyMeleeFromRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BleedStrike_C", "SelectMontageToPlay");

	Params::GA_BleedStrike_C_SelectMontageToPlay Parms{};

	Parms.ShouldPlayHeavyMeleeFromRight = ShouldPlayHeavyMeleeFromRight;

	UObject::ProcessEvent(Func, &Parms);
}

}

