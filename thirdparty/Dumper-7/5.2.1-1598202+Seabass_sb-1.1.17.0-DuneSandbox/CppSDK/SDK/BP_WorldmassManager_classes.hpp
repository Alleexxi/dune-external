#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldmassManager

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ELandscapeBlueprintBrushLayerType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WorldmassManager.BP_WorldmassManager_C
// 0x0020 (0x0370 - 0x0350)
class ABP_WorldmassManager_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldmassConfig_C*                  Config;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        Brushes;                                           // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient)

public:
	void Update_Worldmass(class UObject* RequestSource);
	void BrushRenderLayer(class UObject* Brush, ELandscapeBlueprintBrushLayerType LayerType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WorldmassManager_C">();
	}
	static class ABP_WorldmassManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WorldmassManager_C>();
	}
};
static_assert(alignof(ABP_WorldmassManager_C) == 0x000008, "Wrong alignment on ABP_WorldmassManager_C");
static_assert(sizeof(ABP_WorldmassManager_C) == 0x000370, "Wrong size on ABP_WorldmassManager_C");
static_assert(offsetof(ABP_WorldmassManager_C, DefaultSceneRoot) == 0x000350, "Member 'ABP_WorldmassManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WorldmassManager_C, Config) == 0x000358, "Member 'ABP_WorldmassManager_C::Config' has a wrong offset!");
static_assert(offsetof(ABP_WorldmassManager_C, Brushes) == 0x000360, "Member 'ABP_WorldmassManager_C::Brushes' has a wrong offset!");

}

