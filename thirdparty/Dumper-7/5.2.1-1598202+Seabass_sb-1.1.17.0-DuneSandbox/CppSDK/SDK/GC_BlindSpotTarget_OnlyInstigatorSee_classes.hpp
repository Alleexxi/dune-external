#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_BlindSpotTarget_OnlyInstigatorSee

#include "Basic.hpp"

#include "GC_BlindSpotTarget_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_BlindSpotTarget_OnlyInstigatorSee.GC_BlindSpotTarget_OnlyInstigatorSee_C
// 0x0018 (0x0438 - 0x0420)
class AGC_BlindSpotTarget_OnlyInstigatorSee_C final : public AGC_BlindSpotTarget_C
{
public:
	bool                                          CasterShouldSee;                                   // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFcAudioEvent*                          Audio_AffectedPlayer;                              // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CachedVFX;                                         // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_BlindSpotTarget_OnlyInstigatorSee_C">();
	}
	static class AGC_BlindSpotTarget_OnlyInstigatorSee_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_BlindSpotTarget_OnlyInstigatorSee_C>();
	}
};
static_assert(alignof(AGC_BlindSpotTarget_OnlyInstigatorSee_C) == 0x000008, "Wrong alignment on AGC_BlindSpotTarget_OnlyInstigatorSee_C");
static_assert(sizeof(AGC_BlindSpotTarget_OnlyInstigatorSee_C) == 0x000438, "Wrong size on AGC_BlindSpotTarget_OnlyInstigatorSee_C");
static_assert(offsetof(AGC_BlindSpotTarget_OnlyInstigatorSee_C, CasterShouldSee) == 0x000420, "Member 'AGC_BlindSpotTarget_OnlyInstigatorSee_C::CasterShouldSee' has a wrong offset!");
static_assert(offsetof(AGC_BlindSpotTarget_OnlyInstigatorSee_C, Audio_AffectedPlayer) == 0x000428, "Member 'AGC_BlindSpotTarget_OnlyInstigatorSee_C::Audio_AffectedPlayer' has a wrong offset!");
static_assert(offsetof(AGC_BlindSpotTarget_OnlyInstigatorSee_C, CachedVFX) == 0x000430, "Member 'AGC_BlindSpotTarget_OnlyInstigatorSee_C::CachedVFX' has a wrong offset!");

}

