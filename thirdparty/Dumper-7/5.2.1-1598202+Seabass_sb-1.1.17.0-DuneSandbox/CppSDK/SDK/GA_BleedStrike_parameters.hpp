#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BleedStrike

#include "Basic.hpp"

#include "DreamworldPreInit_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_BleedStrike.GA_BleedStrike_C.CacheMeleeWeaponData
// 0x0018 (0x0018 - 0x0000)
struct GA_BleedStrike_C_CacheMeleeWeaponData final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCachedMeleeDataWithOutputParam_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_CacheMeleeWeaponData) == 0x000008, "Wrong alignment on GA_BleedStrike_C_CacheMeleeWeaponData");
static_assert(sizeof(GA_BleedStrike_C_CacheMeleeWeaponData) == 0x000018, "Wrong size on GA_BleedStrike_C_CacheMeleeWeaponData");
static_assert(offsetof(GA_BleedStrike_C_CacheMeleeWeaponData, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_BleedStrike_C_CacheMeleeWeaponData::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_CacheMeleeWeaponData, K2Node_DynamicCast_AsDune_Character) == 0x000008, "Member 'GA_BleedStrike_C_CacheMeleeWeaponData::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_CacheMeleeWeaponData, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_BleedStrike_C_CacheMeleeWeaponData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_CacheMeleeWeaponData, CallFunc_GetCachedMeleeDataWithOutputParam_ReturnValue) == 0x000011, "Member 'GA_BleedStrike_C_CacheMeleeWeaponData::CallFunc_GetCachedMeleeDataWithOutputParam_ReturnValue' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.EventReceived_E61524BF40939B206B89ACB376B7821E
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E) == 0x000008, "Wrong alignment on GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E");
static_assert(sizeof(GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E) == 0x0000B0, "Wrong size on GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E");
static_assert(offsetof(GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E, Payload) == 0x000000, "Member 'GA_BleedStrike_C_EventReceived_E61524BF40939B206B89ACB376B7821E::Payload' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.ExecuteUbergraph_GA_BleedStrike
// 0x0610 (0x0610 - 0x0000)
struct GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x0028(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;  // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00E8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCost_ReturnValue;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCooldown_ReturnValue;     // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x020C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              K2Node_Event_ActorInfo;                            // 0x0220(0x0048)(ConstParm, ContainsInstancedReference)
	struct FGameplayAbilitySpec                   K2Node_Event_Spec;                                 // 0x0268(0x0100)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3; // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character_1;             // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0388(0x00B0)(ConstParm)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAB_DAI_MasterHumanoid_C*               K2Node_DynamicCast_AsAB_DAI_Master_Humanoid;       // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsNPC_ReturnValue;                     // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneNpcCharacter*                      K2Node_DynamicCast_AsDune_Npc_Character;           // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0474(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue_1;                  // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49A[0x2];                                      // 0x049A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x049C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCheatEnabled_ReturnValue;               // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWaitWithRootMotion* CallFunc_CreateAbilityTask_ReturnValue;     // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x04C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEnterSubstateByTag_ReturnValue;        // 0x04D0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2[0x2];                                      // 0x04D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_2;     // 0x04D4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryExitSubstateByTag_ReturnValue;         // 0x04DC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD[0x3];                                      // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4; // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5; // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue_2;                  // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x051C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0530(0x00B0)()
	class UMeleeRPCDataWrapper*                   K2Node_DynamicCast_AsMelee_RPCData_Wrapper;        // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x05EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USandwormSettings*                CallFunc_GetSandwormSettings_ReturnValue;          // 0x05F0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectMontageToPlay_ShouldPlayHeavyMeleeFromRight_ImplicitCast; // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast;              // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast_1;            // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast_2;            // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike) == 0x000008, "Wrong alignment on GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike");
static_assert(sizeof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike) == 0x000610, "Wrong size on GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, EntryPoint) == 0x000000, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_AsDune_Character) == 0x000018, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CustomEvent_Payload_1) == 0x000028, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, Temp_struct_Variable) == 0x0000E8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000198, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001C4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001D4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001E4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_Event_bWasCancelled) == 0x0001F4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0001F8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000200, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_K2_CommitAbilityCost_ReturnValue) == 0x000208, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_K2_CommitAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_K2_CommitAbilityCooldown_ReturnValue) == 0x000209, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_K2_CommitAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00020C, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000218, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_Event_ActorInfo) == 0x000220, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_Event_ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_Event_Spec) == 0x000268, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_Event_Spec' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_1) == 0x000368, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3) == 0x000370, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_AsDune_Character_1) == 0x000378, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_AsDune_Character_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_bSuccess_1) == 0x000380, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_Event_EventData) == 0x000388, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetComponentByClass_ReturnValue) == 0x000438, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitDelay_ReturnValue) == 0x000440, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAnimInstance_ReturnValue) == 0x000448, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_2) == 0x000450, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_AsAB_DAI_Master_Humanoid) == 0x000458, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_AsAB_DAI_Master_Humanoid' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_bSuccess_2) == 0x000460, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetIsNPC_ReturnValue) == 0x000461, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetIsNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_AsDune_Npc_Character) == 0x000468, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_AsDune_Npc_Character' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_bSuccess_3) == 0x000470, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_6) == 0x000474, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_FMax_ReturnValue) == 0x000488, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitDelay_ReturnValue_1) == 0x000490, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitDelay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000498, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_3) == 0x000499, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_7) == 0x00049C, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_AsDune_Player_Character) == 0x0004B0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_bSuccess_4) == 0x0004B8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsCheatEnabled_ReturnValue) == 0x0004B9, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsCheatEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_CreateAbilityTask_ReturnValue) == 0x0004C0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_CreateAbilityTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x0004C8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_TryEnterSubstateByTag_ReturnValue) == 0x0004D0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_TryEnterSubstateByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_4) == 0x0004D1, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_MakeLiteralGameplayTag_ReturnValue_2) == 0x0004D4, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_MakeLiteralGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_TryExitSubstateByTag_ReturnValue) == 0x0004DC, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_TryExitSubstateByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4) == 0x0004E0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5) == 0x0004E8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0004F0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetObjectClass_ReturnValue) == 0x0004F8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitDelay_ReturnValue_2) == 0x000500, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitDelay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetClassDisplayName_ReturnValue) == 0x000508, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_5) == 0x000518, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CreateDelegate_OutputDelegate_8) == 0x00051C, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_CustomEvent_Payload) == 0x000530, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_AsMelee_RPCData_Wrapper) == 0x0005E0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_AsMelee_RPCData_Wrapper' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, K2Node_DynamicCast_bSuccess_5) == 0x0005E8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_K2_HasAuthority_ReturnValue) == 0x0005E9, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_6) == 0x0005EA, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_IsValid_ReturnValue_7) == 0x0005EB, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_GetSandwormSettings_ReturnValue) == 0x0005F0, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_GetSandwormSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_SelectMontageToPlay_ShouldPlayHeavyMeleeFromRight_ImplicitCast) == 0x0005F8, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_SelectMontageToPlay_ShouldPlayHeavyMeleeFromRight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitDelay_Time_ImplicitCast) == 0x000600, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitDelay_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitDelay_Time_ImplicitCast_1) == 0x000604, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitDelay_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike, CallFunc_WaitDelay_Time_ImplicitCast_2) == 0x000608, "Member 'GA_BleedStrike_C_ExecuteUbergraph_GA_BleedStrike::CallFunc_WaitDelay_Time_ImplicitCast_2' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.InitializeDefaults
// 0x0030 (0x0030 - 0x0000)
struct GA_BleedStrike_C_InitializeDefaults final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneNpcCharacter*                      K2Node_DynamicCast_AsDune_Npc_Character;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_InitializeDefaults) == 0x000008, "Wrong alignment on GA_BleedStrike_C_InitializeDefaults");
static_assert(sizeof(GA_BleedStrike_C_InitializeDefaults) == 0x000030, "Wrong size on GA_BleedStrike_C_InitializeDefaults");
static_assert(offsetof(GA_BleedStrike_C_InitializeDefaults, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_BleedStrike_C_InitializeDefaults::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_InitializeDefaults, K2Node_DynamicCast_AsDune_Character) == 0x000008, "Member 'GA_BleedStrike_C_InitializeDefaults::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_InitializeDefaults, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_BleedStrike_C_InitializeDefaults::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_InitializeDefaults, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000018, "Member 'GA_BleedStrike_C_InitializeDefaults::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_InitializeDefaults, K2Node_DynamicCast_AsDune_Npc_Character) == 0x000020, "Member 'GA_BleedStrike_C_InitializeDefaults::K2Node_DynamicCast_AsDune_Npc_Character' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_InitializeDefaults, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_BleedStrike_C_InitializeDefaults::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.InitializeStaticProperties
// 0x0148 (0x0148 - 0x0000)
struct GA_BleedStrike_C_InitializeStaticProperties final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayAbilitySpec                   Spec;                                              // 0x0048(0x0100)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_BleedStrike_C_InitializeStaticProperties) == 0x000008, "Wrong alignment on GA_BleedStrike_C_InitializeStaticProperties");
static_assert(sizeof(GA_BleedStrike_C_InitializeStaticProperties) == 0x000148, "Wrong size on GA_BleedStrike_C_InitializeStaticProperties");
static_assert(offsetof(GA_BleedStrike_C_InitializeStaticProperties, ActorInfo) == 0x000000, "Member 'GA_BleedStrike_C_InitializeStaticProperties::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_InitializeStaticProperties, Spec) == 0x000048, "Member 'GA_BleedStrike_C_InitializeStaticProperties::Spec' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BleedStrike_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_BleedStrike_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_BleedStrike_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_BleedStrike_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_BleedStrike_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_BleedStrike_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_BleedStrike_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_BleedStrike_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_BleedStrike_C_K2_OnEndAbility");
static_assert(sizeof(GA_BleedStrike_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_BleedStrike_C_K2_OnEndAbility");
static_assert(offsetof(GA_BleedStrike_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_BleedStrike_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.OnConnectHitEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BleedStrike_C_OnConnectHitEvent final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_BleedStrike_C_OnConnectHitEvent) == 0x000008, "Wrong alignment on GA_BleedStrike_C_OnConnectHitEvent");
static_assert(sizeof(GA_BleedStrike_C_OnConnectHitEvent) == 0x0000B0, "Wrong size on GA_BleedStrike_C_OnConnectHitEvent");
static_assert(offsetof(GA_BleedStrike_C_OnConnectHitEvent, Payload) == 0x000000, "Member 'GA_BleedStrike_C_OnConnectHitEvent::Payload' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.PrintDebugStringToChannelWithAbilityName
// 0x0050 (0x0050 - 0x0000)
struct GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName final
{
public:
	class FString                                 DebugString;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 Channel;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDebugLevel                                   DebugLevel;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName) == 0x000008, "Wrong alignment on GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName");
static_assert(sizeof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName) == 0x000050, "Wrong size on GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName");
static_assert(offsetof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName, DebugString) == 0x000000, "Member 'GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName::DebugString' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName, Channel) == 0x000010, "Member 'GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName::Channel' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName, DebugLevel) == 0x000018, "Member 'GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName::DebugLevel' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'GA_BleedStrike_C_PrintDebugStringToChannelWithAbilityName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.RotateToHitActor
// 0x0080 (0x0080 - 0x0000)
struct GA_BleedStrike_C_RotateToHitActor final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_RotateToHitActor) == 0x000008, "Wrong alignment on GA_BleedStrike_C_RotateToHitActor");
static_assert(sizeof(GA_BleedStrike_C_RotateToHitActor) == 0x000080, "Wrong size on GA_BleedStrike_C_RotateToHitActor");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, HitActor) == 0x000000, "Member 'GA_BleedStrike_C_RotateToHitActor::HitActor' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_FindLookAtRotation_ReturnValue) == 0x000038, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_RotateToHitActor, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000078, "Member 'GA_BleedStrike_C_RotateToHitActor::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function GA_BleedStrike.GA_BleedStrike_C.SelectMontageToPlay
// 0x0010 (0x0010 - 0x0000)
struct GA_BleedStrike_C_SelectMontageToPlay final
{
public:
	double                                        ShouldPlayHeavyMeleeFromRight;                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BleedStrike_C_SelectMontageToPlay) == 0x000008, "Wrong alignment on GA_BleedStrike_C_SelectMontageToPlay");
static_assert(sizeof(GA_BleedStrike_C_SelectMontageToPlay) == 0x000010, "Wrong size on GA_BleedStrike_C_SelectMontageToPlay");
static_assert(offsetof(GA_BleedStrike_C_SelectMontageToPlay, ShouldPlayHeavyMeleeFromRight) == 0x000000, "Member 'GA_BleedStrike_C_SelectMontageToPlay::ShouldPlayHeavyMeleeFromRight' has a wrong offset!");
static_assert(offsetof(GA_BleedStrike_C_SelectMontageToPlay, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'GA_BleedStrike_C_SelectMontageToPlay::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

