#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Env_SetDressing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ECollisionProfiles_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Env_SetDressing.BP_Env_SetDressing_C
// 0x0040 (0x0390 - 0x0350)
class ABP_Env_SetDressing_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Root;                                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 Mesh_Components;                                   // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	ECollisionProfiles                            Collision_Profile_Override;                        // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Wear_Factor;                                       // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sand_Factor;                                       // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sand_Color;                                        // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Material_Parameters;                      // 0x038C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Env_SetDressing(int32 EntryPoint);
	void Gather_Mesh_Components();
	void Iterate_Over_Mesh_Components();
	void ModifyTickratesBasedOnRelevancy(class UActorComponent* Component_to_modify_tickrate, class UPrimitiveComponent* Component_to_check_visibility);
	void PostUserConstructionScript();
	void Set_Collision_Profile_();
	void Set_Custom_Primitive_Data(class UPrimitiveComponent* Primitive_Component);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Env_SetDressing_C">();
	}
	static class ABP_Env_SetDressing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Env_SetDressing_C>();
	}
};
static_assert(alignof(ABP_Env_SetDressing_C) == 0x000008, "Wrong alignment on ABP_Env_SetDressing_C");
static_assert(sizeof(ABP_Env_SetDressing_C) == 0x000390, "Wrong size on ABP_Env_SetDressing_C");
static_assert(offsetof(ABP_Env_SetDressing_C, UberGraphFrame) == 0x000350, "Member 'ABP_Env_SetDressing_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Root) == 0x000358, "Member 'ABP_Env_SetDressing_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Mesh_Components) == 0x000360, "Member 'ABP_Env_SetDressing_C::Mesh_Components' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Collision_Profile_Override) == 0x000370, "Member 'ABP_Env_SetDressing_C::Collision_Profile_Override' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Wear_Factor) == 0x000374, "Member 'ABP_Env_SetDressing_C::Wear_Factor' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Sand_Factor) == 0x000378, "Member 'ABP_Env_SetDressing_C::Sand_Factor' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Sand_Color) == 0x00037C, "Member 'ABP_Env_SetDressing_C::Sand_Color' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_C, Override_Material_Parameters) == 0x00038C, "Member 'ABP_Env_SetDressing_C::Override_Material_Parameters' has a wrong offset!");

}

