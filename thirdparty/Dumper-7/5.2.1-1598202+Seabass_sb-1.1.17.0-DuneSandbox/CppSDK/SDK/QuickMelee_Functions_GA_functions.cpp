#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickMelee_Functions_GA

#include "Basic.hpp"

#include "QuickMelee_Functions_GA_classes.hpp"
#include "QuickMelee_Functions_GA_parameters.hpp"


namespace SDK
{

// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.AccessMeleeComponentForWeaponData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::AccessMeleeComponentForWeaponData(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "AccessMeleeComponentForWeaponData");

	Params::QuickMelee_Functions_GA_C_AccessMeleeComponentForWeaponData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.BP_OnAvatarSet
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityActorInfo& InActorInfo                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UQuickMelee_Functions_GA_C::BP_OnAvatarSet(const struct FGameplayAbilityActorInfo& InActorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "BP_OnAvatarSet");

	Params::QuickMelee_Functions_GA_C_BP_OnAvatarSet Parms{};

	Parms.InActorInfo = std::move(InActorInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.CalculateCurrentTracePositions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketNameStart                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADuneCharacter*                   OwnerCharacter_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFirstTrace_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketNameEnd                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector3f*                       Start                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector3f*                       End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::CalculateCurrentTracePositions(class FName SocketNameStart, class ADuneCharacter* OwnerCharacter_0, bool IsFirstTrace_0, class FName SocketNameEnd, struct FVector3f* Start, struct FVector3f* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "CalculateCurrentTracePositions");

	Params::QuickMelee_Functions_GA_C_CalculateCurrentTracePositions Parms{};

	Parms.SocketNameStart = SocketNameStart;
	Parms.OwnerCharacter_0 = OwnerCharacter_0;
	Parms.IsFirstTrace_0 = IsFirstTrace_0;
	Parms.SocketNameEnd = SocketNameEnd;

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = std::move(Parms.Start);

	if (End != nullptr)
		*End = std::move(Parms.End);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.CalculateDefaultTracePositions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::CalculateDefaultTracePositions(class AActor* OwnerActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "CalculateDefaultTracePositions");

	Params::QuickMelee_Functions_GA_C_CalculateDefaultTracePositions Parms{};

	Parms.OwnerActor_0 = OwnerActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.CallCancelAbilityWithReason
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    CancelReason                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::CallCancelAbilityWithReason(const class FString& CancelReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "CallCancelAbilityWithReason");

	Params::QuickMelee_Functions_GA_C_CallCancelAbilityWithReason Parms{};

	Parms.CancelReason = std::move(CancelReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.CallEndAbilityWithReason
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    EndReason                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::CallEndAbilityWithReason(const class FString& EndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "CallEndAbilityWithReason");

	Params::QuickMelee_Functions_GA_C_CallEndAbilityWithReason Parms{};

	Parms.EndReason = std::move(EndReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.CommitMeleeAbilityCost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsQuickAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UQuickMelee_Functions_GA_C::CommitMeleeAbilityCost(bool IsQuickAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "CommitMeleeAbilityCost");

	Params::QuickMelee_Functions_GA_C_CommitMeleeAbilityCost Parms{};

	Parms.IsQuickAttack = IsQuickAttack;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.CommitToMeleeAttack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsQuickAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::CommitToMeleeAttack(bool IsQuickAttack, bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "CommitToMeleeAttack");

	Params::QuickMelee_Functions_GA_C_CommitToMeleeAttack Parms{};

	Parms.IsQuickAttack = IsQuickAttack;

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.ExecuteUbergraph_QuickMelee_Functions_GA
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::ExecuteUbergraph_QuickMelee_Functions_GA(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "ExecuteUbergraph_QuickMelee_Functions_GA");

	Params::QuickMelee_Functions_GA_C_ExecuteUbergraph_QuickMelee_Functions_GA Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.InitializeDefaults
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::InitializeDefaults(bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "InitializeDefaults");

	Params::QuickMelee_Functions_GA_C_InitializeDefaults Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.InitializeDefaultsForRetrigger
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::InitializeDefaultsForRetrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "InitializeDefaultsForRetrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UQuickMelee_Functions_GA_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UQuickMelee_Functions_GA_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "K2_ActivateAbilityFromEvent");

	Params::QuickMelee_Functions_GA_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "K2_OnEndAbility");

	Params::QuickMelee_Functions_GA_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnAbilityCanceled
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnAbilityCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnAbilityCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnAbilityEndedNormally
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnAbilityEndedNormally()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnAbilityEndedNormally");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnAnimationComplete
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnAnimationComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnAnimationComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnAttackTriggered
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnAttackTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnAttackTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnBlendOut_505ABDB64A391C07387ED0A4968CE9E1
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnBlendOut_505ABDB64A391C07387ED0A4968CE9E1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnBlendOut_505ABDB64A391C07387ED0A4968CE9E1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnBlendOut_DC0C26354CFA0B372CCB229CAAB92E3E
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnBlendOut_DC0C26354CFA0B372CCB229CAAB92E3E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnBlendOut_DC0C26354CFA0B372CCB229CAAB92E3E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnCancelled_505ABDB64A391C07387ED0A4968CE9E1
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnCancelled_505ABDB64A391C07387ED0A4968CE9E1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnCancelled_505ABDB64A391C07387ED0A4968CE9E1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnCancelled_DC0C26354CFA0B372CCB229CAAB92E3E
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnCancelled_DC0C26354CFA0B372CCB229CAAB92E3E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnCancelled_DC0C26354CFA0B372CCB229CAAB92E3E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnCompleted_505ABDB64A391C07387ED0A4968CE9E1
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnCompleted_505ABDB64A391C07387ED0A4968CE9E1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnCompleted_505ABDB64A391C07387ED0A4968CE9E1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnCompleted_DC0C26354CFA0B372CCB229CAAB92E3E
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnCompleted_DC0C26354CFA0B372CCB229CAAB92E3E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnCompleted_DC0C26354CFA0B372CCB229CAAB92E3E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnFinish_174097B145498FB824A169910FD979FE
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnFinish_174097B145498FB824A169910FD979FE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnFinish_174097B145498FB824A169910FD979FE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnFinish_24D6AC0D4950EACE6641199F2C93D009
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnFinish_24D6AC0D4950EACE6641199F2C93D009()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnFinish_24D6AC0D4950EACE6641199F2C93D009");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnFinish_91D6FCCA4BF59FA3183B16BD59697B2E
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnFinish_91D6FCCA4BF59FA3183B16BD59697B2E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnFinish_91D6FCCA4BF59FA3183B16BD59697B2E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnInterrupted_505ABDB64A391C07387ED0A4968CE9E1
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnInterrupted_505ABDB64A391C07387ED0A4968CE9E1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnInterrupted_505ABDB64A391C07387ED0A4968CE9E1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnInterrupted_DC0C26354CFA0B372CCB229CAAB92E3E
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnInterrupted_DC0C26354CFA0B372CCB229CAAB92E3E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnInterrupted_DC0C26354CFA0B372CCB229CAAB92E3E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnRelease_0A1E35734858BE58D89986939D587DAC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeHeld                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::OnRelease_0A1E35734858BE58D89986939D587DAC(float TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnRelease_0A1E35734858BE58D89986939D587DAC");

	Params::QuickMelee_Functions_GA_C_OnRelease_0A1E35734858BE58D89986939D587DAC Parms{};

	Parms.TimeHeld = TimeHeld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.OnRetrigger
// (Event, Public, BlueprintEvent)

void UQuickMelee_Functions_GA_C::OnRetrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "OnRetrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.PlayerFaceForward
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::PlayerFaceForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "PlayerFaceForward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.PlayQuickAttackAnimation
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::PlayQuickAttackAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "PlayQuickAttackAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.PlaySheatheFX
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::PlaySheatheFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "PlaySheatheFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.PlaySwooshFX
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::PlaySwooshFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "PlaySwooshFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.PlayUnsheatheFX
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::PlayUnsheatheFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "PlayUnsheatheFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.Select Melee Animation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::Select_Melee_Animation(bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "Select Melee Animation");

	Params::QuickMelee_Functions_GA_C_Select_Melee_Animation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.StartMeleeAttack
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::StartMeleeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "StartMeleeAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.StartWindup
// (BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::StartWindup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "StartWindup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.TraceForExecutionTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   TriggeringExecutionAttack                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::TraceForExecutionTarget(bool* TriggeringExecutionAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "TraceForExecutionTarget");

	Params::QuickMelee_Functions_GA_C_TraceForExecutionTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TriggeringExecutionAttack != nullptr)
		*TriggeringExecutionAttack = Parms.TriggeringExecutionAttack;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.Trigger Quick Attack
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::Trigger_Quick_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "Trigger Quick Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.Trigger Slow Attack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::Trigger_Slow_Attack(bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "Trigger Slow Attack");

	Params::QuickMelee_Functions_GA_C_Trigger_Slow_Attack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.TriggerHitLag
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldPauseMontage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::TriggerHitLag(bool ShouldPauseMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "TriggerHitLag");

	Params::QuickMelee_Functions_GA_C_TriggerHitLag Parms{};

	Parms.ShouldPauseMontage = ShouldPauseMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.TryEnterMeleeSubstate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   EnteredSubstate                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::TryEnterMeleeSubstate(bool* EnteredSubstate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "TryEnterMeleeSubstate");

	Params::QuickMelee_Functions_GA_C_TryEnterMeleeSubstate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EnteredSubstate != nullptr)
		*EnteredSubstate = Parms.EnteredSubstate;
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.TryExitMeleeSubstate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UQuickMelee_Functions_GA_C::TryExitMeleeSubstate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "TryExitMeleeSubstate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickMelee_Functions_GA.QuickMelee_Functions_GA_C.ValidateMeleeIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentMeleeIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MeleeAnimArrayLength                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AttackingFromRight                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ValidatedMeleeIndex                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickMelee_Functions_GA_C::ValidateMeleeIndex(int32 CurrentMeleeIndex, int32 MeleeAnimArrayLength, bool AttackingFromRight, int32* ValidatedMeleeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickMelee_Functions_GA_C", "ValidateMeleeIndex");

	Params::QuickMelee_Functions_GA_C_ValidateMeleeIndex Parms{};

	Parms.CurrentMeleeIndex = CurrentMeleeIndex;
	Parms.MeleeAnimArrayLength = MeleeAnimArrayLength;
	Parms.AttackingFromRight = AttackingFromRight;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidatedMeleeIndex != nullptr)
		*ValidatedMeleeIndex = Parms.ValidatedMeleeIndex;
}

}

