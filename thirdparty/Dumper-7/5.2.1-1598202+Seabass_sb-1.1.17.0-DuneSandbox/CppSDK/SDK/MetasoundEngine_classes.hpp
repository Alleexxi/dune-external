#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MetasoundEngine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "MetasoundEngine_structs.hpp"
#include "MetasoundFrontend_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class MetasoundEngine.MetasoundGeneratorHandle
// 0x0040 (0x0070 - 0x0030)
class UMetasoundGeneratorHandle final : public UObject
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0030(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       CachedMetasoundSource;                             // 0x0040(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x28];                                      // 0x0048(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UMetasoundGeneratorHandle* CreateMetaSoundGeneratorHandle(class UAudioComponent* OnComponent);

	bool ApplyParameterPack(class UMetasoundParameterPack* Pack);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetasoundGeneratorHandle">();
	}
	static class UMetasoundGeneratorHandle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetasoundGeneratorHandle>();
	}
};
static_assert(alignof(UMetasoundGeneratorHandle) == 0x000008, "Wrong alignment on UMetasoundGeneratorHandle");
static_assert(sizeof(UMetasoundGeneratorHandle) == 0x000070, "Wrong size on UMetasoundGeneratorHandle");
static_assert(offsetof(UMetasoundGeneratorHandle, AudioComponent) == 0x000030, "Member 'UMetasoundGeneratorHandle::AudioComponent' has a wrong offset!");
static_assert(offsetof(UMetasoundGeneratorHandle, CachedMetasoundSource) == 0x000040, "Member 'UMetasoundGeneratorHandle::CachedMetasoundSource' has a wrong offset!");

// Class MetasoundEngine.MetaSoundSource
// 0x03A8 (0x0890 - 0x04E8)
class alignas(0x10) UMetaSoundSource final : public USoundWaveProcedural
{
public:
	uint8                                         Pad_4E8[0x68];                                     // 0x04E8(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetasoundFrontendDocument             RootMetaSoundDocument;                             // 0x0550(0x01C8)(Edit, Protected, NativeAccessSpecifierProtected)
	TSet<class FString>                           ReferencedAssetClassKeys;                          // 0x0718(0x0050)(Protected, NativeAccessSpecifierProtected)
	TSet<class UObject*>                          ReferencedAssetClassObjects;                       // 0x0768(0x0050)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSet<struct FSoftObjectPath>                  ReferenceAssetClassCache;                          // 0x07B8(0x0050)(Protected, NativeAccessSpecifierProtected)
	EMetasoundSourceAudioFormat                   OutputFormat;                                      // 0x0808(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_809[0x3];                                      // 0x0809(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  AssetClassID;                                      // 0x080C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81C[0x74];                                     // 0x081C(0x0074)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetaSoundSource">();
	}
	static class UMetaSoundSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetaSoundSource>();
	}
};
static_assert(alignof(UMetaSoundSource) == 0x000010, "Wrong alignment on UMetaSoundSource");
static_assert(sizeof(UMetaSoundSource) == 0x000890, "Wrong size on UMetaSoundSource");
static_assert(offsetof(UMetaSoundSource, RootMetaSoundDocument) == 0x000550, "Member 'UMetaSoundSource::RootMetaSoundDocument' has a wrong offset!");
static_assert(offsetof(UMetaSoundSource, ReferencedAssetClassKeys) == 0x000718, "Member 'UMetaSoundSource::ReferencedAssetClassKeys' has a wrong offset!");
static_assert(offsetof(UMetaSoundSource, ReferencedAssetClassObjects) == 0x000768, "Member 'UMetaSoundSource::ReferencedAssetClassObjects' has a wrong offset!");
static_assert(offsetof(UMetaSoundSource, ReferenceAssetClassCache) == 0x0007B8, "Member 'UMetaSoundSource::ReferenceAssetClassCache' has a wrong offset!");
static_assert(offsetof(UMetaSoundSource, OutputFormat) == 0x000808, "Member 'UMetaSoundSource::OutputFormat' has a wrong offset!");
static_assert(offsetof(UMetaSoundSource, AssetClassID) == 0x00080C, "Member 'UMetaSoundSource::AssetClassID' has a wrong offset!");

// Class MetasoundEngine.MetaSoundSettings
// 0x0048 (0x0088 - 0x0040)
class UMetaSoundSettings final : public UDeveloperSettings
{
public:
	bool                                          bAutoUpdateEnabled;                                // 0x0040(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMetasoundFrontendClassName>    AutoUpdateDenylist;                                // 0x0048(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FDefaultMetaSoundAssetAutoUpdateSettings> AutoUpdateAssetDenylist;                 // 0x0058(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          bAutoUpdateLogWarningOnDroppedConnection;          // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDirectoryPath>                 DirectoriesToRegister;                             // 0x0070(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         DenyListCacheChangeID;                             // 0x0080(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetaSoundSettings">();
	}
	static class UMetaSoundSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetaSoundSettings>();
	}
};
static_assert(alignof(UMetaSoundSettings) == 0x000008, "Wrong alignment on UMetaSoundSettings");
static_assert(sizeof(UMetaSoundSettings) == 0x000088, "Wrong size on UMetaSoundSettings");
static_assert(offsetof(UMetaSoundSettings, bAutoUpdateEnabled) == 0x000040, "Member 'UMetaSoundSettings::bAutoUpdateEnabled' has a wrong offset!");
static_assert(offsetof(UMetaSoundSettings, AutoUpdateDenylist) == 0x000048, "Member 'UMetaSoundSettings::AutoUpdateDenylist' has a wrong offset!");
static_assert(offsetof(UMetaSoundSettings, AutoUpdateAssetDenylist) == 0x000058, "Member 'UMetaSoundSettings::AutoUpdateAssetDenylist' has a wrong offset!");
static_assert(offsetof(UMetaSoundSettings, bAutoUpdateLogWarningOnDroppedConnection) == 0x000068, "Member 'UMetaSoundSettings::bAutoUpdateLogWarningOnDroppedConnection' has a wrong offset!");
static_assert(offsetof(UMetaSoundSettings, DirectoriesToRegister) == 0x000070, "Member 'UMetaSoundSettings::DirectoriesToRegister' has a wrong offset!");
static_assert(offsetof(UMetaSoundSettings, DenyListCacheChangeID) == 0x000080, "Member 'UMetaSoundSettings::DenyListCacheChangeID' has a wrong offset!");

// Class MetasoundEngine.MetasoundEditorGraphBase
// 0x0000 (0x0068 - 0x0068)
class UMetasoundEditorGraphBase final : public UEdGraph
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetasoundEditorGraphBase">();
	}
	static class UMetasoundEditorGraphBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetasoundEditorGraphBase>();
	}
};
static_assert(alignof(UMetasoundEditorGraphBase) == 0x000008, "Wrong alignment on UMetasoundEditorGraphBase");
static_assert(sizeof(UMetasoundEditorGraphBase) == 0x000068, "Wrong size on UMetasoundEditorGraphBase");

// Class MetasoundEngine.MetaSoundPatch
// 0x0330 (0x0360 - 0x0030)
class UMetaSoundPatch final : public UObject
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMetasoundFrontendDocument             RootMetaSoundDocument;                             // 0x0098(0x01C8)(Edit, Protected, NativeAccessSpecifierProtected)
	TSet<class FString>                           ReferencedAssetClassKeys;                          // 0x0260(0x0050)(Protected, NativeAccessSpecifierProtected)
	TSet<class UObject*>                          ReferencedAssetClassObjects;                       // 0x02B0(0x0050)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSet<struct FSoftObjectPath>                  ReferenceAssetClassCache;                          // 0x0300(0x0050)(Protected, NativeAccessSpecifierProtected)
	struct FGuid                                  AssetClassID;                                      // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetaSoundPatch">();
	}
	static class UMetaSoundPatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetaSoundPatch>();
	}
};
static_assert(alignof(UMetaSoundPatch) == 0x000008, "Wrong alignment on UMetaSoundPatch");
static_assert(sizeof(UMetaSoundPatch) == 0x000360, "Wrong size on UMetaSoundPatch");
static_assert(offsetof(UMetaSoundPatch, RootMetaSoundDocument) == 0x000098, "Member 'UMetaSoundPatch::RootMetaSoundDocument' has a wrong offset!");
static_assert(offsetof(UMetaSoundPatch, ReferencedAssetClassKeys) == 0x000260, "Member 'UMetaSoundPatch::ReferencedAssetClassKeys' has a wrong offset!");
static_assert(offsetof(UMetaSoundPatch, ReferencedAssetClassObjects) == 0x0002B0, "Member 'UMetaSoundPatch::ReferencedAssetClassObjects' has a wrong offset!");
static_assert(offsetof(UMetaSoundPatch, ReferenceAssetClassCache) == 0x000300, "Member 'UMetaSoundPatch::ReferenceAssetClassCache' has a wrong offset!");
static_assert(offsetof(UMetaSoundPatch, AssetClassID) == 0x000350, "Member 'UMetaSoundPatch::AssetClassID' has a wrong offset!");

// Class MetasoundEngine.MetaSoundAssetSubsystem
// 0x01B0 (0x01E8 - 0x0038)
class UMetaSoundAssetSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMetaSoundAsyncAssetDependencies> LoadingDependencies;                             // 0x0040(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x198];                                     // 0x0050(0x0198)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RegisterAssetClassesInDirectories(const TArray<struct FMetaSoundAssetDirectory>& Directories);
	void UnregisterAssetClassesInDirectories(const TArray<struct FMetaSoundAssetDirectory>& Directories);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetaSoundAssetSubsystem">();
	}
	static class UMetaSoundAssetSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetaSoundAssetSubsystem>();
	}
};
static_assert(alignof(UMetaSoundAssetSubsystem) == 0x000008, "Wrong alignment on UMetaSoundAssetSubsystem");
static_assert(sizeof(UMetaSoundAssetSubsystem) == 0x0001E8, "Wrong size on UMetaSoundAssetSubsystem");
static_assert(offsetof(UMetaSoundAssetSubsystem, LoadingDependencies) == 0x000040, "Member 'UMetaSoundAssetSubsystem::LoadingDependencies' has a wrong offset!");

}

