#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ArmorStatusWidget

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.Set Slot Equipped Visual State
// 0x0080 (0x0080 - 0x0000)
struct W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State final
{
public:
	EEquipmentSlot                                Equipment_Slot;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Item_Equipped;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynamic_Material;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Slot_Image;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_GetEquipmentSlotImage_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsArmorSlot_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_1;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State) == 0x000008, "Wrong alignment on W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State");
static_assert(sizeof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State) == 0x000080, "Wrong size on W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, Equipment_Slot) == 0x000000, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::Equipment_Slot' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, Has_Item_Equipped) == 0x000001, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::Has_Item_Equipped' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, Dynamic_Material) == 0x000008, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::Dynamic_Material' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, Slot_Image) == 0x000010, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::Slot_Image' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_GetEquipmentSlotImage_ReturnValue) == 0x000020, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_GetEquipmentSlotImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_IsArmorSlot_ReturnValue) == 0x000050, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_IsArmorSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000054, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, K2Node_MakeStruct_LinearColor_1) == 0x000064, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, K2Node_MakeStruct_A_ImplicitCast) == 0x000074, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State, K2Node_MakeStruct_A_ImplicitCast_1) == 0x000078, "Member 'W_ArmorStatusWidget_C_Set_Slot_Equipped_Visual_State::K2Node_MakeStruct_A_ImplicitCast_1' has a wrong offset!");

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.Set Slot Durability Visual State
// 0x0078 (0x0078 - 0x0000)
struct W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State final
{
public:
	EEquipmentSlot                                Equipment_Slot;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          Durability_State;                                  // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynamic_Material;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Slot_Image;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsArmorSlot_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_GetEquipmentSlotImage_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Get_Item_Color_From_Durability_State_ReturnValue; // 0x0038(0x0014)()
	struct FSlateColor                            CallFunc_Get_Item_Color_From_Durability_State_ReturnValue_1; // 0x004C(0x0014)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State) == 0x000008, "Wrong alignment on W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State");
static_assert(sizeof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State) == 0x000078, "Wrong size on W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, Equipment_Slot) == 0x000000, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::Equipment_Slot' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, Durability_State) == 0x000001, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::Durability_State' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, Dynamic_Material) == 0x000008, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::Dynamic_Material' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, Slot_Image) == 0x000010, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::Slot_Image' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_IsArmorSlot_ReturnValue) == 0x000020, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_IsArmorSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_GetEquipmentSlotImage_ReturnValue) == 0x000028, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_GetEquipmentSlotImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000032, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_BooleanOR_ReturnValue_1) == 0x000034, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_Get_Item_Color_From_Durability_State_ReturnValue) == 0x000038, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_Get_Item_Color_From_Durability_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_Get_Item_Color_From_Durability_State_ReturnValue_1) == 0x00004C, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_Get_Item_Color_From_Durability_State_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, K2Node_MakeStruct_LinearColor) == 0x000060, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'W_ArmorStatusWidget_C_Set_Slot_Durability_Visual_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.Set Armor Visibility
// 0x0010 (0x0010 - 0x0000)
struct W_ArmorStatusWidget_C_Set_Armor_Visibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_Set_Armor_Visibility) == 0x000008, "Wrong alignment on W_ArmorStatusWidget_C_Set_Armor_Visibility");
static_assert(sizeof(W_ArmorStatusWidget_C_Set_Armor_Visibility) == 0x000010, "Wrong size on W_ArmorStatusWidget_C_Set_Armor_Visibility");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Armor_Visibility, Visible) == 0x000000, "Member 'W_ArmorStatusWidget_C_Set_Armor_Visibility::Visible' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_Set_Armor_Visibility, Image) == 0x000008, "Member 'W_ArmorStatusWidget_C_Set_Armor_Visibility::Image' has a wrong offset!");

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.ExecuteUbergraph_W_ArmorStatusWidget
// 0x00B8 (0x00B8 - 0x0000)
struct W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Tier;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	EEquipmentSlot                                K2Node_Event_EquipmentSlot_1;                      // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          K2Node_Event_DurabilityState;                      // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DurabilityPercentage;                 // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	EEquipmentSlot                                K2Node_Event_EquipmentSlot;                        // 0x0088(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasItemEquipped;                     // 0x0089(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	const class UBP_ItemDurabilitySettings_C*     K2Node_DynamicCast_AsBP_Item_Durability_Settings;  // 0x00A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget) == 0x000008, "Wrong alignment on W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget");
static_assert(sizeof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget) == 0x0000B8, "Wrong size on W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, EntryPoint) == 0x000000, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_Event_Tier) == 0x000004, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_Event_Tier' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_Event_EquipmentSlot_1) == 0x000020, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_Event_EquipmentSlot_1' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_Event_DurabilityState) == 0x000021, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_Event_DurabilityState' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_Event_DurabilityPercentage) == 0x000024, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_Event_DurabilityPercentage' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_MakeArray_Array) == 0x000078, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_Event_EquipmentSlot) == 0x000088, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_Event_EquipmentSlot' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_Event_bHasItemEquipped) == 0x000089, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_Event_bHasItemEquipped' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, CallFunc_Format_ReturnValue) == 0x000090, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_DynamicCast_AsBP_Item_Durability_Settings) == 0x0000A8, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_DynamicCast_AsBP_Item_Durability_Settings' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'W_ArmorStatusWidget_C_ExecuteUbergraph_W_ArmorStatusWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.BP_OnSlotHasItemChanged
// 0x0002 (0x0002 - 0x0000)
struct W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged final
{
public:
	EEquipmentSlot                                EquipmentSlot;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasItemEquipped;                                  // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged) == 0x000001, "Wrong alignment on W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged");
static_assert(sizeof(W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged) == 0x000002, "Wrong size on W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged");
static_assert(offsetof(W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged, EquipmentSlot) == 0x000000, "Member 'W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged, bHasItemEquipped) == 0x000001, "Member 'W_ArmorStatusWidget_C_BP_OnSlotHasItemChanged::bHasItemEquipped' has a wrong offset!");

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.BP_OnSlotDurabilityChanged
// 0x0008 (0x0008 - 0x0000)
struct W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged final
{
public:
	EEquipmentSlot                                EquipmentSlot;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          DurabilityState;                                   // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurabilityPercentage;                              // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged) == 0x000004, "Wrong alignment on W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged");
static_assert(sizeof(W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged) == 0x000008, "Wrong size on W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged");
static_assert(offsetof(W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged, EquipmentSlot) == 0x000000, "Member 'W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged, DurabilityState) == 0x000001, "Member 'W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged::DurabilityState' has a wrong offset!");
static_assert(offsetof(W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged, DurabilityPercentage) == 0x000004, "Member 'W_ArmorStatusWidget_C_BP_OnSlotDurabilityChanged::DurabilityPercentage' has a wrong offset!");

// Function W_ArmorStatusWidget.W_ArmorStatusWidget_C.BP_OnDehydrationBiomeProtectionTierChanged
// 0x0004 (0x0004 - 0x0000)
struct W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged) == 0x000004, "Wrong alignment on W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged");
static_assert(sizeof(W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged) == 0x000004, "Wrong size on W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged");
static_assert(offsetof(W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged, Tier) == 0x000000, "Member 'W_ArmorStatusWidget_C_BP_OnDehydrationBiomeProtectionTierChanged::Tier' has a wrong offset!");

}

