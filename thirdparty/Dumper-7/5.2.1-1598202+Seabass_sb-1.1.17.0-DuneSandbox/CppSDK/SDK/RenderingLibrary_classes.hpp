#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RenderingLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Renderer_structs.hpp"


namespace SDK
{

// Class RenderingLibrary.FuncomRenderingLibrary
// 0x0000 (0x0030 - 0x0030)
class UFuncomRenderingLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BatchDrawMaterialToRenderTargetMinimal(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UMaterialInterface* Material, struct FDrawToRenderTargetMinimalContext& RenderBatchContext, bool bUseRenderPass, ESimpleRenderPassExecutionStage RenderPassExecutionStage);
	static void BeginDrawMaterialBatchMinimal(class UObject* WorldContextObject, struct FDrawToRenderTargetMinimalContext* RenderBatchContext);
	static void DrawMaterialToRenderTargetMinimal(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UMaterialInterface* Material, bool bUseRenderPass, ESimpleRenderPassExecutionStage RenderPassExecutionStage);
	static void EndDrawMaterialBatchMinimal(class UObject* WorldContextObject, struct FDrawToRenderTargetMinimalContext& RenderBatchContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FuncomRenderingLibrary">();
	}
	static class UFuncomRenderingLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFuncomRenderingLibrary>();
	}
};
static_assert(alignof(UFuncomRenderingLibrary) == 0x000008, "Wrong alignment on UFuncomRenderingLibrary");
static_assert(sizeof(UFuncomRenderingLibrary) == 0x000030, "Wrong size on UFuncomRenderingLibrary");

}

