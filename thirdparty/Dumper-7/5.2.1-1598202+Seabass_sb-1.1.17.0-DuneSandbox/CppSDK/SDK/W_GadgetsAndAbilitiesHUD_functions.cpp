#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GadgetsAndAbilitiesHUD

#include "Basic.hpp"

#include "W_GadgetsAndAbilitiesHUD_classes.hpp"
#include "W_GadgetsAndAbilitiesHUD_parameters.hpp"


namespace SDK
{

// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.UpdateSpiceStateOverlay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADuneCharacter*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::UpdateSpiceStateOverlay(class ADuneCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "UpdateSpiceStateOverlay");

	Params::W_GadgetsAndAbilitiesHUD_C_UpdateSpiceStateOverlay Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.UpdateSpiceStateMinMax
// (BlueprintCallable, BlueprintEvent)

void UW_GadgetsAndAbilitiesHUD_C::UpdateSpiceStateMinMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "UpdateSpiceStateMinMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.UpdateInputHintVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::UpdateInputHintVisibility(int32 Selection, bool Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "UpdateInputHintVisibility");

	Params::W_GadgetsAndAbilitiesHUD_C_UpdateInputHintVisibility Parms{};

	Parms.Selection = Selection;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Tick");

	Params::W_GadgetsAndAbilitiesHUD_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Setup Spice State Visuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESpiceState                             Current_State                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpiceState                             Previous_State                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::Setup_Spice_State_Visuals(ESpiceState Current_State, ESpiceState Previous_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Setup Spice State Visuals");

	Params::W_GadgetsAndAbilitiesHUD_C_Setup_Spice_State_Visuals Parms{};

	Parms.Current_State = Current_State;
	Parms.Previous_State = Previous_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Set Spice Bar Total
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::Set_Spice_Bar_Total(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Set Spice Bar Total");

	Params::W_GadgetsAndAbilitiesHUD_C_Set_Spice_Bar_Total Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Set Spice Bar Progress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::Set_Spice_Bar_Progress(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Set Spice Bar Progress");

	Params::W_GadgetsAndAbilitiesHUD_C_Set_Spice_Bar_Progress Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Set Reactivation State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInputActionWidget*               Input_Action_Widget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ELabelPosition                          Label_Position                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Reactivation_Text                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_GadgetsAndAbilitiesHUD_C::Set_Reactivation_State(class UInputActionWidget* Input_Action_Widget, ELabelPosition Label_Position, const class FText& Reactivation_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Set Reactivation State");

	Params::W_GadgetsAndAbilitiesHUD_C_Set_Reactivation_State Parms{};

	Parms.Input_Action_Widget = Input_Action_Widget;
	Parms.Label_Position = Label_Position;
	Parms.Reactivation_Text = std::move(Reactivation_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnTotalRemainingSpiceAmountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             RemainingSpice                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::OnTotalRemainingSpiceAmountChanged(const float RemainingSpice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnTotalRemainingSpiceAmountChanged");

	Params::W_GadgetsAndAbilitiesHUD_C_OnTotalRemainingSpiceAmountChanged Parms{};

	Parms.RemainingSpice = RemainingSpice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnSpiceStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESpiceState                             PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpiceState                             NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::OnSpiceStateChanged(ESpiceState PrevState, ESpiceState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnSpiceStateChanged");

	Params::W_GadgetsAndAbilitiesHUD_C_OnSpiceStateChanged Parms{};

	Parms.PrevState = PrevState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnSpiceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             CurrentSpice                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             MaxSpice                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::OnSpiceChanged(const float CurrentSpice, const float MaxSpice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnSpiceChanged");

	Params::W_GadgetsAndAbilitiesHUD_C_OnSpiceChanged Parms{};

	Parms.CurrentSpice = CurrentSpice;
	Parms.MaxSpice = MaxSpice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnSpiceAddictedReset
// (Event, Protected, BlueprintEvent)

void UW_GadgetsAndAbilitiesHUD_C::OnSpiceAddictedReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnSpiceAddictedReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnSpiceAddictedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsSpiceAddicted                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::OnSpiceAddictedChanged(const bool bIsSpiceAddicted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnSpiceAddictedChanged");

	Params::W_GadgetsAndAbilitiesHUD_C_OnSpiceAddictedChanged Parms{};

	Parms.bIsSpiceAddicted = bIsSpiceAddicted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnSlotFilledChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UGadgetOrAbilitySlotHUDWidget*    SlotWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const int32                             SlotIndex                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              bIsFilled                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::OnSlotFilledChanged(class UGadgetOrAbilitySlotHUDWidget* SlotWidget, const int32 SlotIndex, const bool bIsFilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnSlotFilledChanged");

	Params::W_GadgetsAndAbilitiesHUD_C_OnSlotFilledChanged Parms{};

	Parms.SlotWidget = SlotWidget;
	Parms.SlotIndex = SlotIndex;
	Parms.bIsFilled = bIsFilled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.OnReactivationStateChanged_Middle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reactivatable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Reactivation_Text                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_GadgetsAndAbilitiesHUD_C::OnReactivationStateChanged_Middle(bool Reactivatable, const class FText& Reactivation_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "OnReactivationStateChanged_Middle");

	Params::W_GadgetsAndAbilitiesHUD_C_OnReactivationStateChanged_Middle Parms{};

	Parms.Reactivatable = Reactivatable;
	Parms.Reactivation_Text = std::move(Reactivation_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.ForceUpdateOnSpiceChanged
// (BlueprintCallable, BlueprintEvent)

void UW_GadgetsAndAbilitiesHUD_C::ForceUpdateOnSpiceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "ForceUpdateOnSpiceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.ExecuteUbergraph_W_GadgetsAndAbilitiesHUD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GadgetsAndAbilitiesHUD_C::ExecuteUbergraph_W_GadgetsAndAbilitiesHUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "ExecuteUbergraph_W_GadgetsAndAbilitiesHUD");

	Params::W_GadgetsAndAbilitiesHUD_C_ExecuteUbergraph_W_GadgetsAndAbilitiesHUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_GadgetsAndAbilitiesHUD_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_GadgetsAndAbilitiesHUD.W_GadgetsAndAbilitiesHUD_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_GadgetsAndAbilitiesHUD_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GadgetsAndAbilitiesHUD_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

