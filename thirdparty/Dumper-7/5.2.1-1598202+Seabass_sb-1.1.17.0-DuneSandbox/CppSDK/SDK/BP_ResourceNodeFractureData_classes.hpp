#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourceNodeFractureData

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ResourceNodeFractureData.BP_ResourceNodeFractureData_C
// 0x0030 (0x0068 - 0x0038)
class UBP_ResourceNodeFractureData_C final : public UPrimaryDataAsset
{
public:
	class UClass*                                 ResourceNodeDestructible;                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DrawSystem;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MeltMesh;                                          // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DestructionVFX;                                    // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MeltMaterial;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ResourceNodeFractureData_C">();
	}
	static class UBP_ResourceNodeFractureData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ResourceNodeFractureData_C>();
	}
};
static_assert(alignof(UBP_ResourceNodeFractureData_C) == 0x000008, "Wrong alignment on UBP_ResourceNodeFractureData_C");
static_assert(sizeof(UBP_ResourceNodeFractureData_C) == 0x000068, "Wrong size on UBP_ResourceNodeFractureData_C");
static_assert(offsetof(UBP_ResourceNodeFractureData_C, ResourceNodeDestructible) == 0x000038, "Member 'UBP_ResourceNodeFractureData_C::ResourceNodeDestructible' has a wrong offset!");
static_assert(offsetof(UBP_ResourceNodeFractureData_C, SkeletalMesh) == 0x000040, "Member 'UBP_ResourceNodeFractureData_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(UBP_ResourceNodeFractureData_C, DrawSystem) == 0x000048, "Member 'UBP_ResourceNodeFractureData_C::DrawSystem' has a wrong offset!");
static_assert(offsetof(UBP_ResourceNodeFractureData_C, MeltMesh) == 0x000050, "Member 'UBP_ResourceNodeFractureData_C::MeltMesh' has a wrong offset!");
static_assert(offsetof(UBP_ResourceNodeFractureData_C, DestructionVFX) == 0x000058, "Member 'UBP_ResourceNodeFractureData_C::DestructionVFX' has a wrong offset!");
static_assert(offsetof(UBP_ResourceNodeFractureData_C, MeltMaterial) == 0x000060, "Member 'UBP_ResourceNodeFractureData_C::MeltMaterial' has a wrong offset!");

}

