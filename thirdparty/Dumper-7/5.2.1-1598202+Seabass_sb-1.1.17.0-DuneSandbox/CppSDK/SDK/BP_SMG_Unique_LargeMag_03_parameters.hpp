#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SMG_Unique_LargeMag_03

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_SMG_Unique_LargeMag_03.BP_SMG_Unique_LargeMag_03_C.BP_ModifyPreMitigationDamage
// 0x0140 (0x0140 - 0x0000)
struct BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage final
{
public:
	float                                         InOutDamage;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponState                           WeaponState;                                       // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionEntry_InOutDamage_ImplicitCast;     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSetRef_Value_ImplicitCast;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage) == 0x000008, "Wrong alignment on BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage");
static_assert(sizeof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage) == 0x000140, "Wrong size on BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, InOutDamage) == 0x000000, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::InOutDamage' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, WeaponState) == 0x000008, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::WeaponState' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, HitResult) == 0x000018, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::HitResult' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000100, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_FTrunc_ReturnValue) == 0x000110, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000114, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_SelectFloat_ReturnValue) == 0x000118, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, K2Node_FunctionEntry_InOutDamage_ImplicitCast) == 0x000128, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::K2Node_FunctionEntry_InOutDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000130, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage, K2Node_VariableSetRef_Value_ImplicitCast) == 0x000138, "Member 'BP_SMG_Unique_LargeMag_03_C_BP_ModifyPreMitigationDamage::K2Node_VariableSetRef_Value_ImplicitCast' has a wrong offset!");

}

