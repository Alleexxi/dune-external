#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Crosshair_RepairTool

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FVehicleModuleHighlight_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Crosshair_RepairTool.W_Crosshair_RepairTool_C
// 0x01F0 (0x06B0 - 0x04C0)
class UW_Crosshair_RepairTool_C final : public UCrosshairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AimAtVehicle_Cut;                                  // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AimAtVehicle_Repair;                               // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Crosshair_Customize;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_cut_Bottom;                              // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_cut_Left;                                // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_cut_Right;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_cut_Top;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_repair_Bottom;                           // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_repair_Left;                             // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_repair_Right;                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Crosshair_repair_Top;                              // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairDefault_Diamond;                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CrosshairRing_Repair;                              // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CircularProgressBar_C*               Cut_ProgressBar;                                   // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ErrorContainer;                                    // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_BuildMenuSubactionEntry_C*           m_EntryAssembleWidget;                             // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_BuildMenuSubactionEntry_C*           m_EntryCustomizeWidget;                            // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_BuildMenuSubactionEntry_C*           m_EntryCuttingWidget;                              // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_BuildMenuSubactionEntry_C*           m_EntryRepairWidget;                               // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ModuleStatusMessageTxt;                            // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         NameContainer;                                     // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CircularProgressBar_C*               Repair_ProgressBar;                                // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CircularProgressBar_C*               Repair_ProgressBarDecayed;                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CircularProgressBar_C*               Repair_ProgressBarThreshold;                       // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TXT_VehicleStatus;                                 // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                VehicleModuleInfo;                                 // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VehicleModuleName;                                 // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Modes;                              // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCurveLinearColor*                      ColorGradient;                                     // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VehicleBarPreview;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeldingTorchBase*                      Welding_Torch;                                     // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWeaponActorComponent*                  Weapon;                                            // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          isAimingAtVehicle;                                 // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CrosshairAnimationPlayed;                          // 0x05C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CrosshairAnimationPlayed_isBig;                    // 0x05CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CB[0x5];                                      // 0x05CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EVehicleModuleType, struct FFVehicleModuleHighlight> VehicleModuleHighlightInfos;           // 0x05D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           ModuleHighlightOutlineColor;                       // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DurabilityAtRepairStart;                           // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetRepairProgress;                              // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PreviousAimTargetComponent;                        // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FLinearColor                           ModuleFillHighlightColor;                          // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVehicleModuleInfo                     Current_Module_Info;                               // 0x0658(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class ADuneVehicle*                           Current_Vehicle;                                   // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CleanupPreviousModuleHighlight(const struct FFVehicleModuleHighlight& ModuleHighlightInfo);
	void ClearModuleInfo(bool Invalid, const class FText& ErrorMsg, bool ClearHighlights);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_W_Crosshair_RepairTool(int32 EntryPoint);
	void HandleRepairThreshold(class ADuneVehicle* Vehicle, const struct FVehicleModuleInfo& ModuleInfo);
	void HideErrorMessage();
	void HighlightModule(EVehicleModuleType ModuleType, class ADuneVehicle* Vehicle, bool Selection, bool Internal);
	void IsFiring(bool* Firing);
	void OnHUDRemoved();
	void OnPawnRemoved(class APawn* InPawn);
	void OnPendingRemoveFromParent(bool* InstantRemove);
	void OnWeaponHolsterToggled(const bool bInHolstered);
	void PreConstruct(bool IsDesignTime);
	void SetModuleName(class ADuneVehicle* Vehicle, const struct FVehicleModuleInfo& ModuleInfo);
	void SetRepairProgress(float m_Progress);
	void SetVehicleModuleHighlight(class ADuneVehicle* Vehicle, const struct FVehicleModuleInfo& ModuleInfo);
	void ShowErrorMessage(const class FText& Message, double Time);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateCrosshairCut(bool Valid, bool Invalid);
	void UpdateCrosshairRepair(bool Valid, bool Invalid);
	void UpdateCustomizeMode();
	void UpdateCuttingMode();
	void UpdateRepairMode();
	void UpdateRepairProgress(double DeltaTime);
	void UpdateVehicleBar();
	void UpdateVehicleBarWidgets(double Health, double DecayedHealth, bool Malfunction);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Crosshair_RepairTool_C">();
	}
	static class UW_Crosshair_RepairTool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Crosshair_RepairTool_C>();
	}
};
static_assert(alignof(UW_Crosshair_RepairTool_C) == 0x000010, "Wrong alignment on UW_Crosshair_RepairTool_C");
static_assert(sizeof(UW_Crosshair_RepairTool_C) == 0x0006B0, "Wrong size on UW_Crosshair_RepairTool_C");
static_assert(offsetof(UW_Crosshair_RepairTool_C, UberGraphFrame) == 0x0004C0, "Member 'UW_Crosshair_RepairTool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, AimAtVehicle_Cut) == 0x0004C8, "Member 'UW_Crosshair_RepairTool_C::AimAtVehicle_Cut' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, AimAtVehicle_Repair) == 0x0004D0, "Member 'UW_Crosshair_RepairTool_C::AimAtVehicle_Repair' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_Customize) == 0x0004D8, "Member 'UW_Crosshair_RepairTool_C::Crosshair_Customize' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_cut_Bottom) == 0x0004E0, "Member 'UW_Crosshair_RepairTool_C::Crosshair_cut_Bottom' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_cut_Left) == 0x0004E8, "Member 'UW_Crosshair_RepairTool_C::Crosshair_cut_Left' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_cut_Right) == 0x0004F0, "Member 'UW_Crosshair_RepairTool_C::Crosshair_cut_Right' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_cut_Top) == 0x0004F8, "Member 'UW_Crosshair_RepairTool_C::Crosshair_cut_Top' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_repair_Bottom) == 0x000500, "Member 'UW_Crosshair_RepairTool_C::Crosshair_repair_Bottom' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_repair_Left) == 0x000508, "Member 'UW_Crosshair_RepairTool_C::Crosshair_repair_Left' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_repair_Right) == 0x000510, "Member 'UW_Crosshair_RepairTool_C::Crosshair_repair_Right' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Crosshair_repair_Top) == 0x000518, "Member 'UW_Crosshair_RepairTool_C::Crosshair_repair_Top' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, CrosshairDefault_Diamond) == 0x000520, "Member 'UW_Crosshair_RepairTool_C::CrosshairDefault_Diamond' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, CrosshairRing_Repair) == 0x000528, "Member 'UW_Crosshair_RepairTool_C::CrosshairRing_Repair' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Cut_ProgressBar) == 0x000530, "Member 'UW_Crosshair_RepairTool_C::Cut_ProgressBar' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, ErrorContainer) == 0x000538, "Member 'UW_Crosshair_RepairTool_C::ErrorContainer' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, m_EntryAssembleWidget) == 0x000540, "Member 'UW_Crosshair_RepairTool_C::m_EntryAssembleWidget' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, m_EntryCustomizeWidget) == 0x000548, "Member 'UW_Crosshair_RepairTool_C::m_EntryCustomizeWidget' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, m_EntryCuttingWidget) == 0x000550, "Member 'UW_Crosshair_RepairTool_C::m_EntryCuttingWidget' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, m_EntryRepairWidget) == 0x000558, "Member 'UW_Crosshair_RepairTool_C::m_EntryRepairWidget' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, ModuleStatusMessageTxt) == 0x000560, "Member 'UW_Crosshair_RepairTool_C::ModuleStatusMessageTxt' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, NameContainer) == 0x000568, "Member 'UW_Crosshair_RepairTool_C::NameContainer' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Repair_ProgressBar) == 0x000570, "Member 'UW_Crosshair_RepairTool_C::Repair_ProgressBar' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Repair_ProgressBarDecayed) == 0x000578, "Member 'UW_Crosshair_RepairTool_C::Repair_ProgressBarDecayed' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Repair_ProgressBarThreshold) == 0x000580, "Member 'UW_Crosshair_RepairTool_C::Repair_ProgressBarThreshold' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, TXT_VehicleStatus) == 0x000588, "Member 'UW_Crosshair_RepairTool_C::TXT_VehicleStatus' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, VehicleModuleInfo) == 0x000590, "Member 'UW_Crosshair_RepairTool_C::VehicleModuleInfo' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, VehicleModuleName) == 0x000598, "Member 'UW_Crosshair_RepairTool_C::VehicleModuleName' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, WidgetSwitcher_Modes) == 0x0005A0, "Member 'UW_Crosshair_RepairTool_C::WidgetSwitcher_Modes' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, ColorGradient) == 0x0005A8, "Member 'UW_Crosshair_RepairTool_C::ColorGradient' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, VehicleBarPreview) == 0x0005B0, "Member 'UW_Crosshair_RepairTool_C::VehicleBarPreview' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Welding_Torch) == 0x0005B8, "Member 'UW_Crosshair_RepairTool_C::Welding_Torch' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Weapon) == 0x0005C0, "Member 'UW_Crosshair_RepairTool_C::Weapon' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, isAimingAtVehicle) == 0x0005C8, "Member 'UW_Crosshair_RepairTool_C::isAimingAtVehicle' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, CrosshairAnimationPlayed) == 0x0005C9, "Member 'UW_Crosshair_RepairTool_C::CrosshairAnimationPlayed' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, CrosshairAnimationPlayed_isBig) == 0x0005CA, "Member 'UW_Crosshair_RepairTool_C::CrosshairAnimationPlayed_isBig' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, VehicleModuleHighlightInfos) == 0x0005D0, "Member 'UW_Crosshair_RepairTool_C::VehicleModuleHighlightInfos' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, ModuleHighlightOutlineColor) == 0x000620, "Member 'UW_Crosshair_RepairTool_C::ModuleHighlightOutlineColor' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, DurabilityAtRepairStart) == 0x000630, "Member 'UW_Crosshair_RepairTool_C::DurabilityAtRepairStart' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, TargetRepairProgress) == 0x000638, "Member 'UW_Crosshair_RepairTool_C::TargetRepairProgress' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, PreviousAimTargetComponent) == 0x000640, "Member 'UW_Crosshair_RepairTool_C::PreviousAimTargetComponent' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, ModuleFillHighlightColor) == 0x000648, "Member 'UW_Crosshair_RepairTool_C::ModuleFillHighlightColor' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Current_Module_Info) == 0x000658, "Member 'UW_Crosshair_RepairTool_C::Current_Module_Info' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_RepairTool_C, Current_Vehicle) == 0x0006A8, "Member 'UW_Crosshair_RepairTool_C::Current_Vehicle' has a wrong offset!");

}

