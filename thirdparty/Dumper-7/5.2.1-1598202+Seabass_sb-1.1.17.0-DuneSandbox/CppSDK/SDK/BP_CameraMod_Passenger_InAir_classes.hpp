#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraMod_Passenger_InAir

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CameraMod_Passenger_InAir.BP_CameraMod_Passenger_InAir_C
// 0x0020 (0x00C0 - 0x00A0)
class UBP_CameraMod_Passenger_InAir_C final : public UDuneCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ADuneWheeledVehicle*                    As_Dune_Wheeled_Vehicle;                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          WasInAir;                                          // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AirTime;                                           // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
	void ExecuteUbergraph_BP_CameraMod_Passenger_InAir(int32 EntryPoint);
	void OnAddedToCamera();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CameraMod_Passenger_InAir_C">();
	}
	static class UBP_CameraMod_Passenger_InAir_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CameraMod_Passenger_InAir_C>();
	}
};
static_assert(alignof(UBP_CameraMod_Passenger_InAir_C) == 0x000008, "Wrong alignment on UBP_CameraMod_Passenger_InAir_C");
static_assert(sizeof(UBP_CameraMod_Passenger_InAir_C) == 0x0000C0, "Wrong size on UBP_CameraMod_Passenger_InAir_C");
static_assert(offsetof(UBP_CameraMod_Passenger_InAir_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_CameraMod_Passenger_InAir_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_Passenger_InAir_C, As_Dune_Wheeled_Vehicle) == 0x0000A8, "Member 'UBP_CameraMod_Passenger_InAir_C::As_Dune_Wheeled_Vehicle' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_Passenger_InAir_C, WasInAir) == 0x0000B0, "Member 'UBP_CameraMod_Passenger_InAir_C::WasInAir' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_Passenger_InAir_C, AirTime) == 0x0000B8, "Member 'UBP_CameraMod_Passenger_InAir_C::AirTime' has a wrong offset!");

}

