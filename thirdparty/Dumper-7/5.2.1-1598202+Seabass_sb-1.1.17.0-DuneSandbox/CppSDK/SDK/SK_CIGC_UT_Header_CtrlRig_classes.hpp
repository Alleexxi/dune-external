#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_CIGC_UT_Header_CtrlRig

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass SK_CIGC_UT_Header_CtrlRig.SK_CIGC_UT_Header_CtrlRig_C
// 0x0030 (0x0430 - 0x0400)
class USK_CIGC_UT_Header_CtrlRig_C final : public UControlRig
{
public:
	struct FVector                                HeaderOffset_L;                                    // 0x0400(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HeaderOffset_R;                                    // 0x0418(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SK_CIGC_UT_Header_CtrlRig_C">();
	}
	static class USK_CIGC_UT_Header_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USK_CIGC_UT_Header_CtrlRig_C>();
	}
};
static_assert(alignof(USK_CIGC_UT_Header_CtrlRig_C) == 0x000008, "Wrong alignment on USK_CIGC_UT_Header_CtrlRig_C");
static_assert(sizeof(USK_CIGC_UT_Header_CtrlRig_C) == 0x000430, "Wrong size on USK_CIGC_UT_Header_CtrlRig_C");
static_assert(offsetof(USK_CIGC_UT_Header_CtrlRig_C, HeaderOffset_L) == 0x000400, "Member 'USK_CIGC_UT_Header_CtrlRig_C::HeaderOffset_L' has a wrong offset!");
static_assert(offsetof(USK_CIGC_UT_Header_CtrlRig_C, HeaderOffset_R) == 0x000418, "Member 'USK_CIGC_UT_Header_CtrlRig_C::HeaderOffset_R' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_CIGC_UT_Header_CtrlRig.RigVMMemory_Literal
// 0x0540 (0x0570 - 0x0030)
class SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_Item__Const;   // 0x0030(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__Const; // 0x00A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	ERigVMTransformSpace                          RigVMModel___RigUnit_GetTransform_3_Space__Const;  // 0x00B8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_GetTransform_3_bInitial__Const; // 0x00B9(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_Primary__Const;         // 0x00C0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_Secondary__Const;       // 0x0108(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimBoneMath_1_Weight__Const;          // 0x0150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0xC];                                      // 0x0154(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimBoneMath_1_DebugSettings__Const;   // 0x0160(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_1_Primary__Const;       // 0x01D0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___MathFloatLerp_1_T__Const;             // 0x0218(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_Minimum__Const;      // 0x021C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_Maximum__Const;      // 0x0220(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___KalmanFloat_2_BufferSize__Const;      // 0x0224(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Clamp_Minimum__Const;                 // 0x0228(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Clamp_Maximum__Const;                 // 0x022C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___OffsetTransformForItem_bPropagateToChildren__Const; // 0x0230(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_Item__Const;     // 0x0234(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__Const;    // 0x0240(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_8_Item__Const;   // 0x02A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_1_Item__Const;   // 0x02AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_8_1_Item__Const; // 0x02B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_1_1_Item__Const; // 0x02C4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_Item__Const;             // 0x02D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_1_2_Item__Const; // 0x02DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_2_Item__Const;   // 0x02E8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_12_Item__Const;  // 0x02F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_2_1_Item__Const; // 0x0300(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_12_1_Item__Const; // 0x030C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_2_1_1_Item__Const; // 0x0318(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_2_1_2_Item__Const; // 0x0324(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__Const;               // 0x0330(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___AimItem_2_Item__Const;                // 0x0378(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_Primary__Const;             // 0x0388(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___AimItem_1_1_Item__Const;              // 0x03D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_Primary__Const;           // 0x03E0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_ItemA__Const;  // 0x0428(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_ItemB__Const;  // 0x0434(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_EffectorItem__Const; // 0x0440(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigVMStructNode_0_Item__Const;        // 0x044C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_B__Const;                // 0x0458(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_PrimaryAxis__Const; // 0x0460(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxis__Const; // 0x0478(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxisWeight__Const; // 0x0490(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathVectorAdd_B__Const;               // 0x0498(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EControlRigVectorKind                         RigVMModel___TwoBoneIKSimplePerItem_PoleVectorKind__Const; // 0x04B0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___TwoBoneIKSimplePerItem_PoleVectorSpace__Const; // 0x04B4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___TwoBoneIKSimplePerItem_StretchStartRatio__Const; // 0x04C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___TwoBoneIKSimplePerItem_StretchMaximumRatio__Const; // 0x04C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_TwoBoneIKSimple_DebugSettings RigVMModel___TwoBoneIKSimplePerItem_DebugSettings__Const; // 0x04D0(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_Item__Const; // 0x0540(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_B__Const;                // 0x054C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___VerletIntegrateVector_Strength__Const; // 0x0550(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___VerletIntegrateVector_Damp__Const;    // 0x0554(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___VerletIntegrateVector_Blend__Const;   // 0x0558(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Minimum__Const;        // 0x055C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_Maximum__Const;        // 0x0560(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const; // 0x0564(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_CIGC_UT_Header_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal) == 0x000570, "Wrong size on SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_Item__Const) == 0x000030, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_OffsetTransform__Const) == 0x000040, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_Rotator__Const) == 0x0000A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_Rotator__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_3_Space__Const) == 0x0000B8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_3_Space__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_3_bInitial__Const) == 0x0000B9, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_3_bInitial__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_1_Primary__Const) == 0x0000C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_1_Secondary__Const) == 0x000108, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_1_Weight__Const) == 0x000150, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_1_DebugSettings__Const) == 0x000160, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_1_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimBoneMath_1_1_Primary__Const) == 0x0001D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimBoneMath_1_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatLerp_1_T__Const) == 0x000218, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatLerp_1_T__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_Minimum__Const) == 0x00021C, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_Maximum__Const) == 0x000220, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___KalmanFloat_2_BufferSize__Const) == 0x000224, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___KalmanFloat_2_BufferSize__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___Clamp_Minimum__Const) == 0x000228, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___Clamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___Clamp_Maximum__Const) == 0x00022C, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___Clamp_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_bPropagateToChildren__Const) == 0x000230, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Item__Const) == 0x000234, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Value__Const) == 0x000240, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_8_Item__Const) == 0x0002A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_8_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_1_Item__Const) == 0x0002AC, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_8_1_Item__Const) == 0x0002B8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_8_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_1_1_Item__Const) == 0x0002C4, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___GetTransform_Item__Const) == 0x0002D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_1_2_Item__Const) == 0x0002DC, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_2_Item__Const) == 0x0002E8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_12_Item__Const) == 0x0002F4, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_12_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_2_1_Item__Const) == 0x000300, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_12_1_Item__Const) == 0x00030C, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_12_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_2_1_1_Item__Const) == 0x000318, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_2_1_2_Item__Const) == 0x000324, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_2_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_Primary__Const) == 0x000330, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_2_Item__Const) == 0x000378, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_2_Primary__Const) == 0x000388, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_2_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_1_1_Item__Const) == 0x0003D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___AimItem_1_1_Primary__Const) == 0x0003E0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___AimItem_1_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_ItemA__Const) == 0x000428, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_ItemA__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_ItemB__Const) == 0x000434, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_ItemB__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_EffectorItem__Const) == 0x000440, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_EffectorItem__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigVMStructNode_0_Item__Const) == 0x00044C, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigVMStructNode_0_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatAdd_B__Const) == 0x000458, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatAdd_B__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_PrimaryAxis__Const) == 0x000460, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_PrimaryAxis__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxis__Const) == 0x000478, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxis__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxisWeight__Const) == 0x000490, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_SecondaryAxisWeight__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathVectorAdd_B__Const) == 0x000498, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathVectorAdd_B__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_PoleVectorKind__Const) == 0x0004B0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_PoleVectorKind__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_PoleVectorSpace__Const) == 0x0004B4, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_PoleVectorSpace__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_StretchStartRatio__Const) == 0x0004C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_StretchStartRatio__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_StretchMaximumRatio__Const) == 0x0004C4, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_StretchMaximumRatio__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___TwoBoneIKSimplePerItem_DebugSettings__Const) == 0x0004D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___TwoBoneIKSimplePerItem_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Item__Const) == 0x000540, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_B__Const) == 0x00054C, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_B__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___VerletIntegrateVector_Strength__Const) == 0x000550, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___VerletIntegrateVector_Strength__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___VerletIntegrateVector_Damp__Const) == 0x000554, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___VerletIntegrateVector_Damp__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___VerletIntegrateVector_Blend__Const) == 0x000558, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___VerletIntegrateVector_Blend__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_Minimum__Const) == 0x00055C, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_Maximum__Const) == 0x000560, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const) == 0x000564, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_CIGC_UT_Header_CtrlRig.RigVMMemory_Work
// 0x1660 (0x1690 - 0x0030)
class SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_Result;     // 0x0030(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_2_Result;                 // 0x0050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_Result;              // 0x0054(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatLerp_1_Result;               // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_Result;     // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___AimBoneMath_1_Result;                 // 0x0080(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_3_Transform;     // 0x00E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_3_CachedIndex;   // 0x0140(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_1_Global;         // 0x0150(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_Primary__IO;            // 0x0168(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_PrimaryCachedSpace;     // 0x01B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_SecondaryCachedSpace;   // 0x01C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_1_bIsInitialized;         // 0x01D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_2_Value;      // 0x01E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatLerp_1_A;                    // 0x0200(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionToRotator_2_1_Result;   // 0x0208(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___AimBoneMath_1_1_Result;               // 0x0220(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_3_1_Transform;   // 0x0280(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_3_1_CachedIndex; // 0x02E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_2_Global;         // 0x02F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimBoneMath_1_1_Primary__IO;          // 0x0308(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_1_PrimaryCachedSpace;   // 0x0350(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimBoneMath_1_1_SecondaryCachedSpace; // 0x0360(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimBoneMath_1_1_bIsInitialized;       // 0x0370(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_2_1_Value;    // 0x0380(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatLerp_1_B;                    // 0x03A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_2_Buffer;                 // 0x03A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_2_LastInsertIndex;        // 0x03B8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__IO; // 0x03C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         RigVMModel___KalmanFilter_Result;                  // 0x03E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Clamp_Result;                         // 0x03E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Interpolate_Result;                   // 0x03E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___From_World_Global;                    // 0x03F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Interpolate_A;                        // 0x0408(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___From_World_1_Global;                  // 0x0410(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Interpolate_B;                        // 0x0428(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFilter_Buffer;                  // 0x0430(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFilter_LastInsertIndex;         // 0x0440(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___OffsetTransformForItem_OffsetTransform__IO; // 0x0450(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_CachedIndex;   // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_9_Transform;     // 0x04C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_9_CachedIndex;   // 0x0520(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_8_Transform;     // 0x0530(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_8_CachedIndex;   // 0x0590(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__IO;       // 0x05A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_CachedIndex;     // 0x0600(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_9_1_Transform;   // 0x0610(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_9_1_CachedIndex; // 0x0670(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_8_1_Transform;   // 0x0680(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_8_1_CachedIndex; // 0x06E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_1_Value__IO;     // 0x06F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_1_CachedIndex;   // 0x0750(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x0760(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x07C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_2_Transform;             // 0x07D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_CachedIndex;           // 0x0830(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_1_1_Value__IO;   // 0x0840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_1_1_CachedIndex; // 0x08A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_2_1_Transform;           // 0x08B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_1_CachedIndex;         // 0x0910(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_1_2_Value__IO;   // 0x0920(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_1_2_CachedIndex; // 0x0980(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_11_Transform;    // 0x0990(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_11_CachedIndex;  // 0x09F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_12_Transform;    // 0x0A00(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_12_CachedIndex;  // 0x0A60(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_2_Value__IO;     // 0x0A70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_2_CachedIndex;   // 0x0AD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_11_1_Transform;  // 0x0AE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_11_1_CachedIndex; // 0x0B40(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_12_1_Transform;  // 0x0B50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_12_1_CachedIndex; // 0x0BB0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_2_1_Value__IO;   // 0x0BC0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_2_1_CachedIndex; // 0x0C20(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_Transform;             // 0x0C30(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_CachedIndex;           // 0x0C90(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_1_Transform;           // 0x0CA0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_1_CachedIndex;         // 0x0D00(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_2_1_1_Value__IO; // 0x0D10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_2_1_1_CachedIndex; // 0x0D70(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_Transform;           // 0x0D80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_CachedIndex;         // 0x0DE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_2_1_2_Value__IO; // 0x0DF0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_2_1_2_CachedIndex; // 0x0E50(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_6_Transform;     // 0x0E60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_6_CachedIndex;   // 0x0EC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__IO;                  // 0x0ED0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_CachedItem;                   // 0x0F18(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_PrimaryCachedSpace;           // 0x0F28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_SecondaryCachedSpace;         // 0x0F38(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_bIsInitialized;               // 0x0F48(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_F58[0x8];                                      // 0x0F58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_7_Transform;     // 0x0F60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_7_CachedIndex;   // 0x0FC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__IO;                // 0x0FD0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_CachedItem;                 // 0x1018(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_PrimaryCachedSpace;         // 0x1028(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_SecondaryCachedSpace;       // 0x1038(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_bIsInitialized;             // 0x1048(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1058[0x8];                                     // 0x1058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_4_Transform;     // 0x1060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_4_CachedIndex;   // 0x10C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_2_Primary__IO;                // 0x10D0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_CachedItem;                 // 0x1118(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_PrimaryCachedSpace;         // 0x1128(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_2_SecondaryCachedSpace;       // 0x1138(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_2_bIsInitialized;             // 0x1148(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1158[0x8];                                     // 0x1158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_5_Transform;     // 0x1160(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_5_CachedIndex;   // 0x11C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_Primary__IO;              // 0x11D0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_CachedItem;               // 0x1218(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_PrimaryCachedSpace;       // 0x1228(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_SecondaryCachedSpace;     // 0x1238(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_bIsInitialized;           // 0x1248(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1258[0x8];                                     // 0x1258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_Result;   // 0x1260(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionToRotator_1_Result;     // 0x1280(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1298[0x8];                                     // 0x1298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigVMStructNode_0_Transform;          // 0x12A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigVMStructNode_0_CachedIndex;        // 0x1300(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionToRotator_1_Value;      // 0x1310(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_Result;                  // 0x1330(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_A;                       // 0x1334(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_Rotator__IO; // 0x1338(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___TwoBoneIKSimplePerItem_Effector__IO;  // 0x1350(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathVectorAdd_Result;                 // 0x13B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C8[0x8];                                     // 0x13C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x13D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x1430(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___MathVectorAdd_A;                      // 0x1440(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedItemAIndex; // 0x1458(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedItemBIndex; // 0x1468(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedEffectorItemIndex; // 0x1478(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___TwoBoneIKSimplePerItem_CachedPoleVectorSpaceIndex; // 0x1488(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatClamp_Result;                // 0x1498(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149C[0x4];                                     // 0x149C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___VerletIntegrateVector_Velocity;       // 0x14A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_Result;                  // 0x14B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14BC[0x4];                                     // 0x14BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x14C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x1520(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatMul_A;                       // 0x1530(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1534[0x4];                                     // 0x1534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___VerletIntegrateVector_Target__IO;     // 0x1538(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___VerletIntegrateVector_Position;       // 0x1550(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___VerletIntegrateVector_Acceleration;   // 0x1568(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigVMSimPoint>                 RigVMModel___VerletIntegrateVector_Point;          // 0x1580(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___VerletIntegrateVector_bInitialized;   // 0x1590(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___MathFloatClamp_Value;                 // 0x15A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A4[0xC];                                     // 0x15A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO; // 0x15B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex; // 0x1610(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO; // 0x1620(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x1680(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_CIGC_UT_Header_CtrlRig.RigVMMemory_Work", true>();
	}
	static class SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work) == 0x001690, "Wrong size on SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Result) == 0x000030, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_2_Result) == 0x000050, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_2_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_Result) == 0x000054, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatLerp_1_Result) == 0x000058, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatLerp_1_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Result) == 0x000060, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_Result) == 0x000080, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_Transform) == 0x0000E0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_CachedIndex) == 0x000140, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_1_Global) == 0x000150, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_1_Global' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_Primary__IO) == 0x000168, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_PrimaryCachedSpace) == 0x0001B0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_SecondaryCachedSpace) == 0x0001C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_bIsInitialized) == 0x0001D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_Value) == 0x0001E0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_Value' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatLerp_1_A) == 0x000200, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatLerp_1_A' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_1_Result) == 0x000208, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_1_Result) == 0x000220, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_1_Transform) == 0x000280, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_3_1_CachedIndex) == 0x0002E0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_2_Global) == 0x0002F0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_2_Global' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_1_Primary__IO) == 0x000308, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_1_PrimaryCachedSpace) == 0x000350, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_1_SecondaryCachedSpace) == 0x000360, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimBoneMath_1_1_bIsInitialized) == 0x000370, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimBoneMath_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_2_1_Value) == 0x000380, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_2_1_Value' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatLerp_1_B) == 0x0003A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatLerp_1_B' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_2_Buffer) == 0x0003A8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_2_Buffer' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_2_LastInsertIndex) == 0x0003B8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_2_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Rotator__IO) == 0x0003C8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFilter_Result) == 0x0003E0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFilter_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___Clamp_Result) == 0x0003E4, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___Clamp_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___Interpolate_Result) == 0x0003E8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___Interpolate_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___From_World_Global) == 0x0003F0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___From_World_Global' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___Interpolate_A) == 0x000408, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___Interpolate_A' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___From_World_1_Global) == 0x000410, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___From_World_1_Global' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___Interpolate_B) == 0x000428, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___Interpolate_B' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFilter_Buffer) == 0x000430, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFilter_Buffer' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFilter_LastInsertIndex) == 0x000440, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFilter_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_OffsetTransform__IO) == 0x000450, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_CachedIndex) == 0x0004B0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_9_Transform) == 0x0004C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_9_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_9_CachedIndex) == 0x000520, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_9_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_8_Transform) == 0x000530, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_8_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_8_CachedIndex) == 0x000590, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_8_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_Value__IO) == 0x0005A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_CachedIndex) == 0x000600, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_9_1_Transform) == 0x000610, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_9_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_9_1_CachedIndex) == 0x000670, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_9_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_8_1_Transform) == 0x000680, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_8_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_8_1_CachedIndex) == 0x0006E0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_8_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_Value__IO) == 0x0006F0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_CachedIndex) == 0x000750, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x000760, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x0007C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_2_Transform) == 0x0007D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_2_CachedIndex) == 0x000830, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_1_Value__IO) == 0x000840, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_1_CachedIndex) == 0x0008A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_2_1_Transform) == 0x0008B0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_2_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_2_1_CachedIndex) == 0x000910, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_2_Value__IO) == 0x000920, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_2_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_2_CachedIndex) == 0x000980, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_11_Transform) == 0x000990, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_11_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_11_CachedIndex) == 0x0009F0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_11_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_12_Transform) == 0x000A00, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_12_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_12_CachedIndex) == 0x000A60, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_12_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_Value__IO) == 0x000A70, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_CachedIndex) == 0x000AD0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_11_1_Transform) == 0x000AE0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_11_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_11_1_CachedIndex) == 0x000B40, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_11_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_12_1_Transform) == 0x000B50, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_12_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_12_1_CachedIndex) == 0x000BB0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_12_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_1_Value__IO) == 0x000BC0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_1_CachedIndex) == 0x000C20, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_Transform) == 0x000C30, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_CachedIndex) == 0x000C90, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_1_Transform) == 0x000CA0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_1_CachedIndex) == 0x000D00, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_1_1_Value__IO) == 0x000D10, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_1_1_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_1_1_CachedIndex) == 0x000D70, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_2_Transform) == 0x000D80, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___GetTransform_1_2_CachedIndex) == 0x000DE0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___GetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_1_2_Value__IO) == 0x000DF0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_1_2_Value__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_1_2_CachedIndex) == 0x000E50, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_Transform) == 0x000E60, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_CachedIndex) == 0x000EC0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_Primary__IO) == 0x000ED0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_CachedItem) == 0x000F18, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_PrimaryCachedSpace) == 0x000F28, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_SecondaryCachedSpace) == 0x000F38, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_bIsInitialized) == 0x000F48, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_7_Transform) == 0x000F60, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_7_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_7_CachedIndex) == 0x000FC0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_7_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_Primary__IO) == 0x000FD0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_CachedItem) == 0x001018, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_PrimaryCachedSpace) == 0x001028, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_SecondaryCachedSpace) == 0x001038, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_bIsInitialized) == 0x001048, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_Transform) == 0x001060, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_CachedIndex) == 0x0010C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_Primary__IO) == 0x0010D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_CachedItem) == 0x001118, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_PrimaryCachedSpace) == 0x001128, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_SecondaryCachedSpace) == 0x001138, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_2_bIsInitialized) == 0x001148, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_2_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_5_Transform) == 0x001160, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_5_CachedIndex) == 0x0011C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_Primary__IO) == 0x0011D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_CachedItem) == 0x001218, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_PrimaryCachedSpace) == 0x001228, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_SecondaryCachedSpace) == 0x001238, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___AimItem_1_1_bIsInitialized) == 0x001248, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___AimItem_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Result) == 0x001260, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_Result) == 0x001280, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigVMStructNode_0_Transform) == 0x0012A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigVMStructNode_0_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigVMStructNode_0_CachedIndex) == 0x001300, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigVMStructNode_0_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionToRotator_1_Value) == 0x001310, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionToRotator_1_Value' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_Result) == 0x001330, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_A) == 0x001334, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_A' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Rotator__IO) == 0x001338, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_Effector__IO) == 0x001350, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_Effector__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_Result) == 0x0013B0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x0013D0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x001430, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathVectorAdd_A) == 0x001440, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathVectorAdd_A' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedItemAIndex) == 0x001458, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedItemAIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedItemBIndex) == 0x001468, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedItemBIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedEffectorItemIndex) == 0x001478, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedEffectorItemIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___TwoBoneIKSimplePerItem_CachedPoleVectorSpaceIndex) == 0x001488, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___TwoBoneIKSimplePerItem_CachedPoleVectorSpaceIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Result) == 0x001498, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___VerletIntegrateVector_Velocity) == 0x0014A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___VerletIntegrateVector_Velocity' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_Result) == 0x0014B8, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_Transform) == 0x0014C0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_CachedIndex) == 0x001520, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_A) == 0x001530, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_A' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___VerletIntegrateVector_Target__IO) == 0x001538, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___VerletIntegrateVector_Target__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___VerletIntegrateVector_Position) == 0x001550, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___VerletIntegrateVector_Position' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___VerletIntegrateVector_Acceleration) == 0x001568, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___VerletIntegrateVector_Acceleration' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___VerletIntegrateVector_Point) == 0x001580, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___VerletIntegrateVector_Point' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___VerletIntegrateVector_bInitialized) == 0x001590, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___VerletIntegrateVector_bInitialized' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_Value) == 0x0015A0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_Value' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO) == 0x0015B0, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex) == 0x001610, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO) == 0x001620, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex) == 0x001680, "Member 'SK_CIGC_UT_Header_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex' has a wrong offset!");

}

