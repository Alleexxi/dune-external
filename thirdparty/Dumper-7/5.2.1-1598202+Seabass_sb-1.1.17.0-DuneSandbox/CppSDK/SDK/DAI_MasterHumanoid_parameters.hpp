#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DAI_MasterHumanoid

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DAI_MasterHumanoid.DAI_MasterHumanoid_C.Locomotion
// 0x0010 (0x0010 - 0x0000)
struct DAI_MasterHumanoid_C_Locomotion final
{
public:
	struct FPoseLink                              Locomotion_0;                                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(DAI_MasterHumanoid_C_Locomotion) == 0x000008, "Wrong alignment on DAI_MasterHumanoid_C_Locomotion");
static_assert(sizeof(DAI_MasterHumanoid_C_Locomotion) == 0x000010, "Wrong size on DAI_MasterHumanoid_C_Locomotion");
static_assert(offsetof(DAI_MasterHumanoid_C_Locomotion, Locomotion_0) == 0x000000, "Member 'DAI_MasterHumanoid_C_Locomotion::Locomotion_0' has a wrong offset!");

// Function DAI_MasterHumanoid.DAI_MasterHumanoid_C.Cloth_kawaii
// 0x0028 (0x0028 - 0x0000)
struct DAI_MasterHumanoid_C_Cloth_kawaii final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          HasWeaponInHand;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              Cloth_kawaii_0;                                    // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(DAI_MasterHumanoid_C_Cloth_kawaii) == 0x000008, "Wrong alignment on DAI_MasterHumanoid_C_Cloth_kawaii");
static_assert(sizeof(DAI_MasterHumanoid_C_Cloth_kawaii) == 0x000028, "Wrong size on DAI_MasterHumanoid_C_Cloth_kawaii");
static_assert(offsetof(DAI_MasterHumanoid_C_Cloth_kawaii, InPose) == 0x000000, "Member 'DAI_MasterHumanoid_C_Cloth_kawaii::InPose' has a wrong offset!");
static_assert(offsetof(DAI_MasterHumanoid_C_Cloth_kawaii, HasWeaponInHand) == 0x000010, "Member 'DAI_MasterHumanoid_C_Cloth_kawaii::HasWeaponInHand' has a wrong offset!");
static_assert(offsetof(DAI_MasterHumanoid_C_Cloth_kawaii, Cloth_kawaii_0) == 0x000018, "Member 'DAI_MasterHumanoid_C_Cloth_kawaii::Cloth_kawaii_0' has a wrong offset!");

// Function DAI_MasterHumanoid.DAI_MasterHumanoid_C.Ability
// 0x0030 (0x0030 - 0x0000)
struct DAI_MasterHumanoid_C_Ability final
{
public:
	struct FPoseLink                              In_Pose;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseWithMontage;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Ability_0;                                         // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(DAI_MasterHumanoid_C_Ability) == 0x000008, "Wrong alignment on DAI_MasterHumanoid_C_Ability");
static_assert(sizeof(DAI_MasterHumanoid_C_Ability) == 0x000030, "Wrong size on DAI_MasterHumanoid_C_Ability");
static_assert(offsetof(DAI_MasterHumanoid_C_Ability, In_Pose) == 0x000000, "Member 'DAI_MasterHumanoid_C_Ability::In_Pose' has a wrong offset!");
static_assert(offsetof(DAI_MasterHumanoid_C_Ability, InPoseWithMontage) == 0x000010, "Member 'DAI_MasterHumanoid_C_Ability::InPoseWithMontage' has a wrong offset!");
static_assert(offsetof(DAI_MasterHumanoid_C_Ability, Ability_0) == 0x000020, "Member 'DAI_MasterHumanoid_C_Ability::Ability_0' has a wrong offset!");

}

