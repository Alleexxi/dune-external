#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TankMiniPaperdoll

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TankMiniPaperdoll.W_TankMiniPaperdoll_C
// 0x0080 (0x04E0 - 0x0460)
class UW_TankMiniPaperdoll_C final : public UVehicleModuleStatusWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_VehicleModuleIcon_C*                 Chassi;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 HullFront;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 HullRear;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 LeftRearTread;                                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 LeftTread;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 RightRearTread;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 RightTread;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            Default_Color;                                     // 0x04A0(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShowText;                                          // 0x04B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_VehicleModuleIcon_C*>         VehicleImages;                                     // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              Image_Size;                                        // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDuneImage*                             Current_Vehicle_Module;                            // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateVehicleModule(const EVehicleModuleType ModuleType, const EVehicleModuleAttachState AttachState, const float Durability, const EItemDurabilityState DurabilityState, const float DecayedMaxDurability);
	void PreConstruct(bool IsDesignTime);
	void InitVehicleModule(const EVehicleModuleType ModuleType, const class FText& ModuleName, const TSoftObjectPtr<class UTexture2D>& ModuleIcon, const EVehicleModuleAttachState AttachState, const float Durability, const EItemDurabilityState DurabilityState, const float DecayedMaxDurability);
	class UW_VehicleModuleIcon_C* Get_Vehicle_Module_Image(EVehicleModuleType Module);
	void ExecuteUbergraph_W_TankMiniPaperdoll(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TankMiniPaperdoll_C">();
	}
	static class UW_TankMiniPaperdoll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TankMiniPaperdoll_C>();
	}
};
static_assert(alignof(UW_TankMiniPaperdoll_C) == 0x000010, "Wrong alignment on UW_TankMiniPaperdoll_C");
static_assert(sizeof(UW_TankMiniPaperdoll_C) == 0x0004E0, "Wrong size on UW_TankMiniPaperdoll_C");
static_assert(offsetof(UW_TankMiniPaperdoll_C, UberGraphFrame) == 0x000460, "Member 'UW_TankMiniPaperdoll_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, Chassi) == 0x000468, "Member 'UW_TankMiniPaperdoll_C::Chassi' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, HullFront) == 0x000470, "Member 'UW_TankMiniPaperdoll_C::HullFront' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, HullRear) == 0x000478, "Member 'UW_TankMiniPaperdoll_C::HullRear' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, LeftRearTread) == 0x000480, "Member 'UW_TankMiniPaperdoll_C::LeftRearTread' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, LeftTread) == 0x000488, "Member 'UW_TankMiniPaperdoll_C::LeftTread' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, RightRearTread) == 0x000490, "Member 'UW_TankMiniPaperdoll_C::RightRearTread' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, RightTread) == 0x000498, "Member 'UW_TankMiniPaperdoll_C::RightTread' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, Default_Color) == 0x0004A0, "Member 'UW_TankMiniPaperdoll_C::Default_Color' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, ShowText) == 0x0004B4, "Member 'UW_TankMiniPaperdoll_C::ShowText' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, VehicleImages) == 0x0004B8, "Member 'UW_TankMiniPaperdoll_C::VehicleImages' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, Image_Size) == 0x0004C8, "Member 'UW_TankMiniPaperdoll_C::Image_Size' has a wrong offset!");
static_assert(offsetof(UW_TankMiniPaperdoll_C, Current_Vehicle_Module) == 0x0004D8, "Member 'UW_TankMiniPaperdoll_C::Current_Vehicle_Module' has a wrong offset!");

}

