#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HitIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_HitIndicator.W_HitIndicator_C
// 0x0060 (0x0600 - 0x05A0)
class UW_HitIndicator_C final : public UHitIndicatorWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EnemyShieldedAnim;                                 // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnemyCritAnim;                                     // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnemyKillAnim;                                     // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnemyHitAnim;                                      // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IMG_CritMarker;                                    // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_HitMarker;                                     // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_KillMarker;                                    // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_SkullMarker;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             IMG_DamageShard;                                   // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IMG_ShieldShard;                                   // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MAT_HitIndicator;                                  // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ShowShieldedMarker();
	void ShowKillMarker();
	void ShowHitMarker();
	void ShowDownedMarker();
	void ShowCritMarker();
	void OnTookDirectionalDamage(class UIncomingDamageInstanceWidget* IncomingDamageInstanceWidget, const bool bShielded);
	void ExecuteUbergraph_W_HitIndicator(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_HitIndicator_C">();
	}
	static class UW_HitIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_HitIndicator_C>();
	}
};
static_assert(alignof(UW_HitIndicator_C) == 0x000010, "Wrong alignment on UW_HitIndicator_C");
static_assert(sizeof(UW_HitIndicator_C) == 0x000600, "Wrong size on UW_HitIndicator_C");
static_assert(offsetof(UW_HitIndicator_C, UberGraphFrame) == 0x0005A0, "Member 'UW_HitIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, EnemyShieldedAnim) == 0x0005A8, "Member 'UW_HitIndicator_C::EnemyShieldedAnim' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, EnemyCritAnim) == 0x0005B0, "Member 'UW_HitIndicator_C::EnemyCritAnim' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, EnemyKillAnim) == 0x0005B8, "Member 'UW_HitIndicator_C::EnemyKillAnim' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, EnemyHitAnim) == 0x0005C0, "Member 'UW_HitIndicator_C::EnemyHitAnim' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, IMG_CritMarker) == 0x0005C8, "Member 'UW_HitIndicator_C::IMG_CritMarker' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, IMG_HitMarker) == 0x0005D0, "Member 'UW_HitIndicator_C::IMG_HitMarker' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, IMG_KillMarker) == 0x0005D8, "Member 'UW_HitIndicator_C::IMG_KillMarker' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, IMG_SkullMarker) == 0x0005E0, "Member 'UW_HitIndicator_C::IMG_SkullMarker' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, IMG_DamageShard) == 0x0005E8, "Member 'UW_HitIndicator_C::IMG_DamageShard' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, IMG_ShieldShard) == 0x0005F0, "Member 'UW_HitIndicator_C::IMG_ShieldShard' has a wrong offset!");
static_assert(offsetof(UW_HitIndicator_C, MAT_HitIndicator) == 0x0005F8, "Member 'UW_HitIndicator_C::MAT_HitIndicator' has a wrong offset!");

}

