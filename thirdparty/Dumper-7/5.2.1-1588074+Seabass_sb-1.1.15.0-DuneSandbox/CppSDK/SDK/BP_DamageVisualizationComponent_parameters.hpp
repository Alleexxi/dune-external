#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageVisualizationComponent

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "FDVSModuleData_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FDVSHitMarkerCache_structs.hpp"


namespace SDK::Params
{

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.UpdateMask
// 0x0140 (0x0140 - 0x0000)
struct BP_DamageVisualizationComponent_C_UpdateMask final
{
public:
	struct FFDVSModuleData                        FDVSModuleData;                                    // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          HitMarker;                                         // 0x0040(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UMeshComponent*                         CollisionMeshComponent;                            // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFDVSModuleData                        ModuleData;                                        // 0x0068(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          bNeedsUnwrap;                                      // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         VisualMeshComponent;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OriginalMaterialCache;                             // 0x00B8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryInitModuleData_bIsInitialized;         // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryInitModuleData_bNeedsUnwrap;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFDVSModuleData                        CallFunc_Map_Find_Value;                           // 0x00D0(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0118(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_UpdateMask) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_UpdateMask");
static_assert(sizeof(BP_DamageVisualizationComponent_C_UpdateMask) == 0x000140, "Wrong size on BP_DamageVisualizationComponent_C_UpdateMask");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, FDVSModuleData) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::FDVSModuleData' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, HitMarker) == 0x000040, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::HitMarker' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CollisionMeshComponent) == 0x000060, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CollisionMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, ModuleData) == 0x000068, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::ModuleData' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, bNeedsUnwrap) == 0x0000A8, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::bNeedsUnwrap' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, VisualMeshComponent) == 0x0000B0, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::VisualMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, OriginalMaterialCache) == 0x0000B8, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::OriginalMaterialCache' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_TryInitModuleData_bIsInitialized) == 0x0000CC, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_TryInitModuleData_bIsInitialized' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_TryInitModuleData_bNeedsUnwrap) == 0x0000CD, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_TryInitModuleData_bNeedsUnwrap' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_Map_Find_ReturnValue) == 0x000110, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_GetMaterials_ReturnValue) == 0x000118, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_UpdateMask, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'BP_DamageVisualizationComponent_C_UpdateMask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.TryInitModuleData
// 0x00F0 (0x00F0 - 0x0000)
struct BP_DamageVisualizationComponent_C_TryInitModuleData final
{
public:
	class UMeshComponent*                         CollisionMeshComponent;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitialized_0;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedsUnwrap;                                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bComponentNeedsUnwrap;                             // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsComponentInitialized;                           // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0030(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFDVSModuleData                        CallFunc_Map_Find_Value;                           // 0x0060(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue_2;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFDVSModuleData                        K2Node_MakeStruct_FDVSModuleData;                  // 0x00B0(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_TryInitModuleData) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_TryInitModuleData");
static_assert(sizeof(BP_DamageVisualizationComponent_C_TryInitModuleData) == 0x0000F0, "Wrong size on BP_DamageVisualizationComponent_C_TryInitModuleData");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CollisionMeshComponent) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CollisionMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, bIsInitialized_0) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::bIsInitialized_0' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, bNeedsUnwrap) == 0x000009, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::bNeedsUnwrap' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, bComponentNeedsUnwrap) == 0x00000A, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::bComponentNeedsUnwrap' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, bIsComponentInitialized) == 0x00000B, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::bIsComponentInitialized' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_GetAttachParent_ReturnValue) == 0x000010, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000018, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, K2Node_DynamicCast_AsMesh_Component) == 0x000020, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000029, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_GetMaterials_ReturnValue) == 0x000030, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_GetMaterial_ReturnValue) == 0x000040, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000050, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_CreateRenderTarget2D_ReturnValue_1) == 0x000058, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_CreateRenderTarget2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, CallFunc_CreateRenderTarget2D_ReturnValue_2) == 0x0000A8, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::CallFunc_CreateRenderTarget2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_TryInitModuleData, K2Node_MakeStruct_FDVSModuleData) == 0x0000B0, "Member 'BP_DamageVisualizationComponent_C_TryInitModuleData::K2Node_MakeStruct_FDVSModuleData' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ShowAllMeshComponents
// 0x0070 (0x0070 - 0x0000)
struct BP_DamageVisualizationComponent_C_ShowAllMeshComponents final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFDVSModuleData>                CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFDVSModuleData                        CallFunc_Array_Get_Item;                           // 0x0028(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_ShowAllMeshComponents");
static_assert(sizeof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents) == 0x000070, "Wrong size on BP_DamageVisualizationComponent_C_ShowAllMeshComponents");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ShowAllMeshComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_DamageVisualizationComponent_C_ShowAllMeshComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.Setup
// 0x0078 (0x0078 - 0x0000)
struct BP_DamageVisualizationComponent_C_Setup final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CollisionMeshes;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 AllMeshes;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         RenderTargetHitMaskResolution;                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RenderTargetUnwrapResolution;                      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         SkeletalMeshes;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           StaticMeshes;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_Setup) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_Setup");
static_assert(sizeof(BP_DamageVisualizationComponent_C_Setup) == 0x000078, "Wrong size on BP_DamageVisualizationComponent_C_Setup");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, Actor) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_Setup::Actor' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, CollisionMeshes) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_Setup::CollisionMeshes' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, AllMeshes) == 0x000018, "Member 'BP_DamageVisualizationComponent_C_Setup::AllMeshes' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, RenderTargetHitMaskResolution) == 0x000028, "Member 'BP_DamageVisualizationComponent_C_Setup::RenderTargetHitMaskResolution' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, RenderTargetUnwrapResolution) == 0x00002C, "Member 'BP_DamageVisualizationComponent_C_Setup::RenderTargetUnwrapResolution' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, SkeletalMeshes) == 0x000030, "Member 'BP_DamageVisualizationComponent_C_Setup::SkeletalMeshes' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, StaticMeshes) == 0x000040, "Member 'BP_DamageVisualizationComponent_C_Setup::StaticMeshes' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000050, "Member 'BP_DamageVisualizationComponent_C_Setup::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'BP_DamageVisualizationComponent_C_Setup::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000060, "Member 'BP_DamageVisualizationComponent_C_Setup::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000068, "Member 'BP_DamageVisualizationComponent_C_Setup::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Setup, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000070, "Member 'BP_DamageVisualizationComponent_C_Setup::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DamageVisualizationComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DamageVisualizationComponent_C_ReceiveTick");
static_assert(sizeof(BP_DamageVisualizationComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_DamageVisualizationComponent_C_ReceiveTick");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.OnUpdateHitMarker
// 0x0028 (0x0028 - 0x0000)
struct BP_DamageVisualizationComponent_C_OnUpdateHitMarker final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          HitMarker;                                         // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_OnUpdateHitMarker) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_OnUpdateHitMarker");
static_assert(sizeof(BP_DamageVisualizationComponent_C_OnUpdateHitMarker) == 0x000028, "Wrong size on BP_DamageVisualizationComponent_C_OnUpdateHitMarker");
static_assert(offsetof(BP_DamageVisualizationComponent_C_OnUpdateHitMarker, MeshComponent) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_OnUpdateHitMarker::MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_OnUpdateHitMarker, HitMarker) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_OnUpdateHitMarker::HitMarker' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.OnModuleHit
// 0x0028 (0x0028 - 0x0000)
struct BP_DamageVisualizationComponent_C_OnModuleHit final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          HitMarker;                                         // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_OnModuleHit) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_OnModuleHit");
static_assert(sizeof(BP_DamageVisualizationComponent_C_OnModuleHit) == 0x000028, "Wrong size on BP_DamageVisualizationComponent_C_OnModuleHit");
static_assert(offsetof(BP_DamageVisualizationComponent_C_OnModuleHit, Mesh) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_OnModuleHit::Mesh' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_OnModuleHit, HitMarker) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_OnModuleHit::HitMarker' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.OnHitMarkerAdded
// 0x0108 (0x0108 - 0x0000)
struct BP_DamageVisualizationComponent_C_OnHitMarkerAdded final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FDamageVisualizationHitMarker          HitMarker;                                         // 0x00E8(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_OnHitMarkerAdded) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_OnHitMarkerAdded");
static_assert(sizeof(BP_DamageVisualizationComponent_C_OnHitMarkerAdded) == 0x000108, "Wrong size on BP_DamageVisualizationComponent_C_OnHitMarkerAdded");
static_assert(offsetof(BP_DamageVisualizationComponent_C_OnHitMarkerAdded, HitResult) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_OnHitMarkerAdded::HitResult' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_OnHitMarkerAdded, HitMarker) == 0x0000E8, "Member 'BP_DamageVisualizationComponent_C_OnHitMarkerAdded::HitMarker' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.Init
// 0x0008 (0x0008 - 0x0000)
struct BP_DamageVisualizationComponent_C_Init final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_Init) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_Init");
static_assert(sizeof(BP_DamageVisualizationComponent_C_Init) == 0x000008, "Wrong size on BP_DamageVisualizationComponent_C_Init");
static_assert(offsetof(BP_DamageVisualizationComponent_C_Init, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_Init::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.HideAllMeshComponentsExcept
// 0x0070 (0x0070 - 0x0000)
struct BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFDVSModuleData>                CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FFDVSModuleData                        CallFunc_Array_Get_Item;                           // 0x0028(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept");
static_assert(sizeof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept) == 0x000070, "Wrong size on BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, MeshComponent) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ExecuteUbergraph_BP_DamageVisualizationComponent
// 0x02A8 (0x02A8 - 0x0000)
struct BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_CustomEvent_Mesh;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          K2Node_CustomEvent_HitMarker;                      // 0x0020(0x0020)(NoDestructor)
	struct FFDVSModuleData                        CallFunc_Map_Find_Value;                           // 0x0040(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FDamageVisualizationHitMarker          K2Node_Event_HitMarker_1;                          // 0x0170(0x0020)(NoDestructor)
	struct FFDVSHitMarkerCache                    K2Node_MakeStruct_FDVSHitMarkerCache;              // 0x0190(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_Event_MeshComponent;                        // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          K2Node_Event_HitMarker;                            // 0x0200(0x0020)(NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0220(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFDVSModuleData>                CallFunc_Map_Values_Values;                        // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFDVSModuleData                        CallFunc_Array_Get_Item;                           // 0x0250(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent");
static_assert(sizeof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent) == 0x0002A8, "Wrong size on BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, EntryPoint) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_CustomEvent_Mesh) == 0x000018, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_CustomEvent_Mesh' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_CustomEvent_HitMarker) == 0x000020, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_CustomEvent_HitMarker' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_Event_HitResult) == 0x000088, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_Event_HitMarker_1) == 0x000170, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_Event_HitMarker_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_MakeStruct_FDVSHitMarkerCache) == 0x000190, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_MakeStruct_FDVSHitMarkerCache' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Array_Add_ReturnValue) == 0x0001F0, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_Event_MeshComponent) == 0x0001F8, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_Event_MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, K2Node_Event_HitMarker) == 0x000200, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::K2Node_Event_HitMarker' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_K2_SetTimer_ReturnValue) == 0x000220, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000228, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000229, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_IsServer_ReturnValue) == 0x00022A, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x00022B, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, Temp_int_Loop_Counter_Variable_1) == 0x00022C, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Map_Values_Values) == 0x000230, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000240, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000248, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, Temp_int_Array_Index_Variable_1) == 0x00024C, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Array_Get_Item) == 0x000250, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Array_Length_ReturnValue_1) == 0x000290, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Array_Get_Item_1) == 0x000298, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002A0, "Member 'BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.DrawSingle
// 0x03C0 (0x03C0 - 0x0000)
struct BP_DamageVisualizationComponent_C_DrawSingle final
{
public:
	struct FFDVSModuleData                        FDVSModuleData;                                    // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          HitMarker;                                         // 0x0040(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bNeedsUnwrap;                                      // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CollisionMeshComponent;                            // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFDVSModuleData                        ModuleData;                                        // 0x0070(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0xD];                                       // 0x00B3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_Select_Default_2;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFDVSModuleData                        CallFunc_Map_Find_Value;                           // 0x0140(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x02B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_DrawSingle) == 0x000010, "Wrong alignment on BP_DamageVisualizationComponent_C_DrawSingle");
static_assert(sizeof(BP_DamageVisualizationComponent_C_DrawSingle) == 0x0003C0, "Wrong size on BP_DamageVisualizationComponent_C_DrawSingle");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, FDVSModuleData) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::FDVSModuleData' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, HitMarker) == 0x000040, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::HitMarker' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, bNeedsUnwrap) == 0x000060, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::bNeedsUnwrap' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CollisionMeshComponent) == 0x000068, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CollisionMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, ModuleData) == 0x000070, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::ModuleData' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, Temp_bool_Variable) == 0x0000B0, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, Temp_bool_Variable_1) == 0x0000B1, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, Temp_bool_Variable_2) == 0x0000B2, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000C0, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, K2Node_Select_Default) == 0x000120, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000129, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Not_PreBool_ReturnValue_2) == 0x00012A, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, K2Node_Select_Default_1) == 0x000130, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, K2Node_Select_Default_2) == 0x000138, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Map_Find_Value) == 0x000140, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Map_Find_ReturnValue) == 0x000180, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000188, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_GetOwner_ReturnValue) == 0x000190, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000198, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B0, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001C8, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0002B0, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_InverseTransformLocation_ReturnValue) == 0x000398, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawSingle, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0003B0, "Member 'BP_DamageVisualizationComponent_C_DrawSingle::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.DrawImmediate
// 0x0158 (0x0158 - 0x0000)
struct BP_DamageVisualizationComponent_C_DrawImmediate final
{
public:
	struct FFDVSModuleData                        FDVSModuleData;                                    // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDamageVisualizationHitMarker          HitMarker;                                         // 0x0040(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DamageVisualizationComponent_C_DrawImmediate) == 0x000008, "Wrong alignment on BP_DamageVisualizationComponent_C_DrawImmediate");
static_assert(sizeof(BP_DamageVisualizationComponent_C_DrawImmediate) == 0x000158, "Wrong size on BP_DamageVisualizationComponent_C_DrawImmediate");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawImmediate, FDVSModuleData) == 0x000000, "Member 'BP_DamageVisualizationComponent_C_DrawImmediate::FDVSModuleData' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawImmediate, HitMarker) == 0x000040, "Member 'BP_DamageVisualizationComponent_C_DrawImmediate::HitMarker' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawImmediate, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000060, "Member 'BP_DamageVisualizationComponent_C_DrawImmediate::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DamageVisualizationComponent_C_DrawImmediate, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000148, "Member 'BP_DamageVisualizationComponent_C_DrawImmediate::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

}

