#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletalMeshDrawComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletalMeshDrawComponent.BP_SkeletalMeshDrawComponent_C
// 0x0030 (0x1160 - 0x1130)
class UBP_SkeletalMeshDrawComponent_C final : public USkeletalMeshComponent
{
public:
	int32                                         DrawRenderTargetSize;                              // 0x1130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    HitRenderTargetFormat;                             // 0x1134(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1135[0x3];                                     // 0x1135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      DrawSystemNiagaraComponent;                        // 0x1138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 HitSystemRenderTarget;                             // 0x1140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HitSystemDMI;                                      // 0x1148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DrawSystemNiagaraSystem;                           // 0x1150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkinnedMeshComponent*                  Mesh_Component;                                    // 0x1158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void FnReset();
	void FnInitializeHitSystem();
	void FnDrawFromDamage(const TArray<struct FMulticastDamageInfo>& DamageInfo, double DrawStrength, double DrawSize);
	void FnDraw(const struct FVector& DrawLocation, double DrawStrength, double DrawSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletalMeshDrawComponent_C">();
	}
	static class UBP_SkeletalMeshDrawComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkeletalMeshDrawComponent_C>();
	}
};
static_assert(alignof(UBP_SkeletalMeshDrawComponent_C) == 0x000010, "Wrong alignment on UBP_SkeletalMeshDrawComponent_C");
static_assert(sizeof(UBP_SkeletalMeshDrawComponent_C) == 0x001160, "Wrong size on UBP_SkeletalMeshDrawComponent_C");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, DrawRenderTargetSize) == 0x001130, "Member 'UBP_SkeletalMeshDrawComponent_C::DrawRenderTargetSize' has a wrong offset!");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, HitRenderTargetFormat) == 0x001134, "Member 'UBP_SkeletalMeshDrawComponent_C::HitRenderTargetFormat' has a wrong offset!");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, DrawSystemNiagaraComponent) == 0x001138, "Member 'UBP_SkeletalMeshDrawComponent_C::DrawSystemNiagaraComponent' has a wrong offset!");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, HitSystemRenderTarget) == 0x001140, "Member 'UBP_SkeletalMeshDrawComponent_C::HitSystemRenderTarget' has a wrong offset!");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, HitSystemDMI) == 0x001148, "Member 'UBP_SkeletalMeshDrawComponent_C::HitSystemDMI' has a wrong offset!");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, DrawSystemNiagaraSystem) == 0x001150, "Member 'UBP_SkeletalMeshDrawComponent_C::DrawSystemNiagaraSystem' has a wrong offset!");
static_assert(offsetof(UBP_SkeletalMeshDrawComponent_C, Mesh_Component) == 0x001158, "Member 'UBP_SkeletalMeshDrawComponent_C::Mesh_Component' has a wrong offset!");

}

