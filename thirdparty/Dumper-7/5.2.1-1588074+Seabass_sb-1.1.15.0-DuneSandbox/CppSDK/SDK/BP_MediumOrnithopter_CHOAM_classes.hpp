#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MediumOrnithopter_CHOAM

#include "Basic.hpp"

#include "BP_OrnithopterBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MediumOrnithopter_CHOAM.BP_MediumOrnithopter_CHOAM_C
// 0x0030 (0x2150 - 0x2120)
class ABP_MediumOrnithopter_CHOAM_C final : public ABP_OrnithopterBase_C
{
public:
	class UDuneVehicleSeatComponent*              PassengerSeat1;                                    // 0x2120(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDuneVehicleSeatComponent*              PassengerSeat;                                     // 0x2128(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      ImmediatePhysicsWingletsCollision;                 // 0x2130(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      ImmediatePhysicsBodyCollision;                     // 0x2138(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDuneVehicleSeatComponent*              CopilotSeat;                                       // 0x2140(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MediumOrnithopter_CHOAM_C">();
	}
	static class ABP_MediumOrnithopter_CHOAM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MediumOrnithopter_CHOAM_C>();
	}
};
static_assert(alignof(ABP_MediumOrnithopter_CHOAM_C) == 0x000010, "Wrong alignment on ABP_MediumOrnithopter_CHOAM_C");
static_assert(sizeof(ABP_MediumOrnithopter_CHOAM_C) == 0x002150, "Wrong size on ABP_MediumOrnithopter_CHOAM_C");
static_assert(offsetof(ABP_MediumOrnithopter_CHOAM_C, PassengerSeat1) == 0x002120, "Member 'ABP_MediumOrnithopter_CHOAM_C::PassengerSeat1' has a wrong offset!");
static_assert(offsetof(ABP_MediumOrnithopter_CHOAM_C, PassengerSeat) == 0x002128, "Member 'ABP_MediumOrnithopter_CHOAM_C::PassengerSeat' has a wrong offset!");
static_assert(offsetof(ABP_MediumOrnithopter_CHOAM_C, ImmediatePhysicsWingletsCollision) == 0x002130, "Member 'ABP_MediumOrnithopter_CHOAM_C::ImmediatePhysicsWingletsCollision' has a wrong offset!");
static_assert(offsetof(ABP_MediumOrnithopter_CHOAM_C, ImmediatePhysicsBodyCollision) == 0x002138, "Member 'ABP_MediumOrnithopter_CHOAM_C::ImmediatePhysicsBodyCollision' has a wrong offset!");
static_assert(offsetof(ABP_MediumOrnithopter_CHOAM_C, CopilotSeat) == 0x002140, "Member 'ABP_MediumOrnithopter_CHOAM_C::CopilotSeat' has a wrong offset!");

}

