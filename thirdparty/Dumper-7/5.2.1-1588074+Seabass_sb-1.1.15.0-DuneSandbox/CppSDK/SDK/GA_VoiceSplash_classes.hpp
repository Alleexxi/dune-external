#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_VoiceSplash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_VoiceSplash.GA_VoiceSplash_C
// 0x0030 (0x0548 - 0x0518)
class UGA_VoiceSplash_C final : public UDuneGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0518(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPoiseDamageData                       PoiseDamage;                                       // 0x0520(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SplashTarget;                                      // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SplashInstigator;                                  // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SplashRadius;                                      // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_VoiceSplash(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_VoiceSplash_C">();
	}
	static class UGA_VoiceSplash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_VoiceSplash_C>();
	}
};
static_assert(alignof(UGA_VoiceSplash_C) == 0x000008, "Wrong alignment on UGA_VoiceSplash_C");
static_assert(sizeof(UGA_VoiceSplash_C) == 0x000548, "Wrong size on UGA_VoiceSplash_C");
static_assert(offsetof(UGA_VoiceSplash_C, UberGraphFrame) == 0x000518, "Member 'UGA_VoiceSplash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_VoiceSplash_C, PoiseDamage) == 0x000520, "Member 'UGA_VoiceSplash_C::PoiseDamage' has a wrong offset!");
static_assert(offsetof(UGA_VoiceSplash_C, SplashTarget) == 0x000530, "Member 'UGA_VoiceSplash_C::SplashTarget' has a wrong offset!");
static_assert(offsetof(UGA_VoiceSplash_C, SplashInstigator) == 0x000538, "Member 'UGA_VoiceSplash_C::SplashInstigator' has a wrong offset!");
static_assert(offsetof(UGA_VoiceSplash_C, SplashRadius) == 0x000540, "Member 'UGA_VoiceSplash_C::SplashRadius' has a wrong offset!");

}

