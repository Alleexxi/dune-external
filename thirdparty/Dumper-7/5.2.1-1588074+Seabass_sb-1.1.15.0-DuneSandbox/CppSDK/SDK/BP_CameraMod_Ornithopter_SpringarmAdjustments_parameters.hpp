#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraMod_Ornithopter_SpringarmAdjustments

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "FglCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CameraMod_Ornithopter_SpringarmAdjustments.BP_CameraMod_Ornithopter_SpringarmAdjustments_C.BlueprintModifyCamera
// 0x0600 (0x0600 - 0x0000)
struct BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ViewLocation;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ViewRotation;                                      // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         FOV;                                               // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewViewLocation;                                   // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewViewRotation;                                   // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         NewFOV;                                            // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HarnessingTargetPitch;                             // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToGround;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HarnessTargetZOffset;                              // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TODirectionLength;                                 // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasTargetAttachedToHarness;                       // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasPotentialHarnessTarget;                        // 0x0099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HarnessTargetActor;                                // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HarnessAttachedActor;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          bHarnessReelingDown;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHarnessReelingUp;                                 // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHarnessModeActive;                                // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotator_ReturnValue;            // 0x00C8(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEntityId                              CallFunc_GetEntityID_ReturnValue;                  // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FOrnithopterEffectsDriverComponent     CallFunc_FglGetOrnithopterEffectsDriverComponent_OutOrnithopterEffectsDriverComponent; // 0x0120(0x01C8)(ContainsInstancedReference)
	EFglBlueprintResult                           CallFunc_FglGetOrnithopterEffectsDriverComponent_ReturnValue; // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetHarnessData_CurrentActor;              // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetHarnessData_PotentialActor;            // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHarnessData_bIsHarnessing;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHarnessData_bIsReelingUp;              // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHarnessData_bIsReelingDown;            // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHarnessData_bCanReelDown;              // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHarnessData_bIsAttachable;             // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHarnessData_bCanBeHarnessed;           // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModel                                 CallFunc_GetVehicleModel_ReturnValue;              // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0307(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotator_ReturnValue_1;          // 0x03F0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0498(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast;  // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast;  // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DistanceToGround_ImplicitCast;  // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_1;       // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast;               // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ModifySpringArmLength_InModifier_ImplicitCast; // 0x05D4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast_1; // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast_1; // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1;   // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera) == 0x000008, "Wrong alignment on BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera");
static_assert(sizeof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera) == 0x000600, "Wrong size on BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, DeltaTime) == 0x000000, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, ViewLocation) == 0x000008, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::ViewLocation' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, ViewRotation) == 0x000020, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::ViewRotation' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, FOV) == 0x000038, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::FOV' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, NewViewLocation) == 0x000040, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::NewViewLocation' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, NewViewRotation) == 0x000058, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::NewViewRotation' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, NewFOV) == 0x000070, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::NewFOV' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, HarnessingTargetPitch) == 0x000078, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::HarnessingTargetPitch' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, DistanceToGround) == 0x000080, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::DistanceToGround' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, HarnessTargetZOffset) == 0x000088, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::HarnessTargetZOffset' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, TODirectionLength) == 0x000090, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::TODirectionLength' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, bHasTargetAttachedToHarness) == 0x000098, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::bHasTargetAttachedToHarness' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, bHasPotentialHarnessTarget) == 0x000099, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::bHasPotentialHarnessTarget' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, HarnessTargetActor) == 0x0000A0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::HarnessTargetActor' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, HarnessAttachedActor) == 0x0000A8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::HarnessAttachedActor' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, bHarnessReelingDown) == 0x0000B0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::bHarnessReelingDown' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, bHarnessReelingUp) == 0x0000B1, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::bHarnessReelingUp' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, bHarnessModeActive) == 0x0000B2, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::bHarnessModeActive' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_Not_PreBool_ReturnValue) == 0x0000B3, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BooleanAND_ReturnValue) == 0x0000B4, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetOwningPlayerController_ReturnValue) == 0x0000B8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetControlRotator_ReturnValue) == 0x0000C8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetControlRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Roll) == 0x0000E0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Pitch) == 0x0000E4, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Yaw) == 0x0000E8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_ReturnValue) == 0x0000F0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetEntityID_ReturnValue) == 0x000118, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetEntityID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_FglGetOrnithopterEffectsDriverComponent_OutOrnithopterEffectsDriverComponent) == 0x000120, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_FglGetOrnithopterEffectsDriverComponent_OutOrnithopterEffectsDriverComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_FglGetOrnithopterEffectsDriverComponent_ReturnValue) == 0x0002E8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_FglGetOrnithopterEffectsDriverComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, K2Node_SwitchEnum_CmpSuccess) == 0x0002E9, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_CurrentActor) == 0x0002F0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_CurrentActor' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_PotentialActor) == 0x0002F8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_PotentialActor' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_bIsHarnessing) == 0x000300, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_bIsHarnessing' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_bIsReelingUp) == 0x000301, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_bIsReelingUp' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_bIsReelingDown) == 0x000302, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_bIsReelingDown' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_bCanReelDown) == 0x000303, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_bCanReelDown' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_bIsAttachable) == 0x000304, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_bIsAttachable' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetHarnessData_bCanBeHarnessed) == 0x000305, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetHarnessData_bCanBeHarnessed' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetVehicleModel_ReturnValue) == 0x000306, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetVehicleModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000307, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Roll_1) == 0x000308, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Pitch_1) == 0x00030C, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Yaw_1) == 0x000310, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_ReturnValue) == 0x000318, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000330, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_FInterpTo_ReturnValue) == 0x000348, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Roll_2) == 0x000350, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Pitch_2) == 0x000354, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Yaw_2) == 0x000358, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_SelectFloat_ReturnValue) == 0x000360, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_NormalizeAxis_ReturnValue) == 0x000368, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_ReturnValue_1) == 0x000370, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_SignOfFloat_ReturnValue) == 0x000388, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_Abs_ReturnValue) == 0x000390, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetVelocity_ReturnValue) == 0x000398, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_VSize_ReturnValue) == 0x0003B0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetFloatValue_ReturnValue) == 0x0003C0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003C8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_FInterpTo_ReturnValue_1) == 0x0003D0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetControlRotation_ReturnValue) == 0x0003D8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetControlRotator_ReturnValue_1) == 0x0003F0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetControlRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_SelectRotator_ReturnValue) == 0x000408, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Roll_3) == 0x000420, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Pitch_3) == 0x000424, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Yaw_3) == 0x000428, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_ReturnValue_1) == 0x000430, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000438, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_ReturnValue_2) == 0x000440, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Roll_4) == 0x000458, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Pitch_4) == 0x00045C, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_BreakRotator_Yaw_4) == 0x000460, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_ReturnValue_3) == 0x000468, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_ReturnValue_4) == 0x000480, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000498, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast) == 0x000580, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast) == 0x000588, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x000590, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000598, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0005A0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, K2Node_VariableSet_DistanceToGround_ImplicitCast) == 0x0005A8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::K2Node_VariableSet_DistanceToGround_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_FInterpTo_DeltaTime_ImplicitCast_1) == 0x0005B0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_FInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0005B8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_Abs_A_ImplicitCast) == 0x0005C0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_SignOfFloat_A_ImplicitCast) == 0x0005C8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_SignOfFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0005D0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ModifySpringArmLength_InModifier_ImplicitCast) == 0x0005D4, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ModifySpringArmLength_InModifier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0005D8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast_1) == 0x0005E0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_MinAngleDegrees_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast_1) == 0x0005E8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_MaxAngleDegrees_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1) == 0x0005F0, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0005F8, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_BlueprintModifyCamera::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function BP_CameraMod_Ornithopter_SpringarmAdjustments.BP_CameraMod_Ornithopter_SpringarmAdjustments_C.ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments
// 0x0020 (0x0020 - 0x0000)
struct BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneOrnithopter*                       K2Node_DynamicCast_AsDune_Ornithopter;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments) == 0x000008, "Wrong alignment on BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments");
static_assert(sizeof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments) == 0x000020, "Wrong size on BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments, EntryPoint) == 0x000000, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments, K2Node_DynamicCast_AsDune_Ornithopter) == 0x000010, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments::K2Node_DynamicCast_AsDune_Ornithopter' has a wrong offset!");
static_assert(offsetof(BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CameraMod_Ornithopter_SpringarmAdjustments_C_ExecuteUbergraph_BP_CameraMod_Ornithopter_SpringarmAdjustments::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

