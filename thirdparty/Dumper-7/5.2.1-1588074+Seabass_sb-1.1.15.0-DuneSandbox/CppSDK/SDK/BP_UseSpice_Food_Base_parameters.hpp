#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UseSpice_Food_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_UseSpice_Food_Base.BP_UseSpice_Food_Base_C.BP_CanUse
// 0x00A0 (0x00A0 - 0x0000)
struct BP_UseSpice_Food_Base_C_BP_CanUse final
{
public:
	const class AController*                      Instigator;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           Target;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECanUse                                       ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECanUse                                       CallFunc_BP_CanUse_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECanUse                                       Temp_byte_Variable;                                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECanUse                                       K2Node_Select_Default;                             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseSpice_Food_Base_C_BP_CanUse) == 0x000008, "Wrong alignment on BP_UseSpice_Food_Base_C_BP_CanUse");
static_assert(sizeof(BP_UseSpice_Food_Base_C_BP_CanUse) == 0x0000A0, "Wrong size on BP_UseSpice_Food_Base_C_BP_CanUse");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, Instigator) == 0x000000, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::Instigator' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, Target) == 0x000008, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::Target' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, ReturnValue) == 0x000010, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, Temp_bool_Variable) == 0x000011, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, K2Node_DynamicCast_AsDune_Player_Character) == 0x000018, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_BP_CanUse_ReturnValue) == 0x000021, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_BP_CanUse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000040, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000050, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000058, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000068, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000070, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000080, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000088, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000098, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, Temp_byte_Variable) == 0x000099, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_BooleanOR_ReturnValue) == 0x00009A, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_BooleanOR_ReturnValue_1) == 0x00009B, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, CallFunc_BooleanOR_ReturnValue_2) == 0x00009C, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_BP_CanUse, K2Node_Select_Default) == 0x00009D, "Member 'BP_UseSpice_Food_Base_C_BP_CanUse::K2Node_Select_Default' has a wrong offset!");

// Function BP_UseSpice_Food_Base.BP_UseSpice_Food_Base_C.GetSpicePerStack
// 0x0030 (0x0030 - 0x0000)
struct BP_UseSpice_Food_Base_C_GetSpicePerStack final
{
public:
	double                                        SpicePerStack;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseSpice_Food_Base_C_GetSpicePerStack) == 0x000008, "Wrong alignment on BP_UseSpice_Food_Base_C_GetSpicePerStack");
static_assert(sizeof(BP_UseSpice_Food_Base_C_GetSpicePerStack) == 0x000030, "Wrong size on BP_UseSpice_Food_Base_C_GetSpicePerStack");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, SpicePerStack) == 0x000000, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::SpicePerStack' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000008, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, CallFunc_EvaluateCurveTableRow_OutXY) == 0x00000C, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast) == 0x000020, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_UseSpice_Food_Base_C_GetSpicePerStack, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_UseSpice_Food_Base_C_GetSpicePerStack::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

