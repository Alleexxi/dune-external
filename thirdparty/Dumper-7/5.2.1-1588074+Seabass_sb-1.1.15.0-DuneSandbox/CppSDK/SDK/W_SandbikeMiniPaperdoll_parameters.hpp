#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SandbikeMiniPaperdoll

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_SandbikeMiniPaperdoll.W_SandbikeMiniPaperdoll_C.UpdateVehicleModule
// 0x0010 (0x0010 - 0x0000)
struct W_SandbikeMiniPaperdoll_C_UpdateVehicleModule final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleAttachState                     AttachState;                                       // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Durability;                                        // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          DurabilityState;                                   // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecayedMaxDurability;                              // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule) == 0x000004, "Wrong alignment on W_SandbikeMiniPaperdoll_C_UpdateVehicleModule");
static_assert(sizeof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule) == 0x000010, "Wrong size on W_SandbikeMiniPaperdoll_C_UpdateVehicleModule");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule, ModuleType) == 0x000000, "Member 'W_SandbikeMiniPaperdoll_C_UpdateVehicleModule::ModuleType' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule, AttachState) == 0x000001, "Member 'W_SandbikeMiniPaperdoll_C_UpdateVehicleModule::AttachState' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule, Durability) == 0x000004, "Member 'W_SandbikeMiniPaperdoll_C_UpdateVehicleModule::Durability' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule, DurabilityState) == 0x000008, "Member 'W_SandbikeMiniPaperdoll_C_UpdateVehicleModule::DurabilityState' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_UpdateVehicleModule, DecayedMaxDurability) == 0x00000C, "Member 'W_SandbikeMiniPaperdoll_C_UpdateVehicleModule::DecayedMaxDurability' has a wrong offset!");

// Function W_SandbikeMiniPaperdoll.W_SandbikeMiniPaperdoll_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SandbikeMiniPaperdoll_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SandbikeMiniPaperdoll_C_PreConstruct) == 0x000001, "Wrong alignment on W_SandbikeMiniPaperdoll_C_PreConstruct");
static_assert(sizeof(W_SandbikeMiniPaperdoll_C_PreConstruct) == 0x000001, "Wrong size on W_SandbikeMiniPaperdoll_C_PreConstruct");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SandbikeMiniPaperdoll_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SandbikeMiniPaperdoll.W_SandbikeMiniPaperdoll_C.InitVehicleModule
// 0x0060 (0x0060 - 0x0000)
struct W_SandbikeMiniPaperdoll_C_InitVehicleModule final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ModuleName;                                        // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TSoftObjectPtr<class UTexture2D>              ModuleIcon;                                        // 0x0020(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	EVehicleModuleAttachState                     AttachState;                                       // 0x0050(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Durability;                                        // 0x0054(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          DurabilityState;                                   // 0x0058(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecayedMaxDurability;                              // 0x005C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SandbikeMiniPaperdoll_C_InitVehicleModule) == 0x000008, "Wrong alignment on W_SandbikeMiniPaperdoll_C_InitVehicleModule");
static_assert(sizeof(W_SandbikeMiniPaperdoll_C_InitVehicleModule) == 0x000060, "Wrong size on W_SandbikeMiniPaperdoll_C_InitVehicleModule");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, ModuleType) == 0x000000, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::ModuleType' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, ModuleName) == 0x000008, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::ModuleName' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, ModuleIcon) == 0x000020, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::ModuleIcon' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, AttachState) == 0x000050, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::AttachState' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, Durability) == 0x000054, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::Durability' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, DurabilityState) == 0x000058, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::DurabilityState' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_InitVehicleModule, DecayedMaxDurability) == 0x00005C, "Member 'W_SandbikeMiniPaperdoll_C_InitVehicleModule::DecayedMaxDurability' has a wrong offset!");

// Function W_SandbikeMiniPaperdoll.W_SandbikeMiniPaperdoll_C.Get Vehicle Module Image
// 0x00C8 (0x00C8 - 0x0000)
struct W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image final
{
public:
	EVehicleModuleType                            Module;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_VehicleModuleIcon_C*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_18;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_19;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 Temp_object_Variable_20;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image) == 0x000008, "Wrong alignment on W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image");
static_assert(sizeof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image) == 0x0000C8, "Wrong size on W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Module) == 0x000000, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Module' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, ReturnValue) == 0x000008, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_byte_Variable) == 0x000010, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable) == 0x000018, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_1) == 0x000020, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_2) == 0x000028, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_3) == 0x000030, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_4) == 0x000038, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_5) == 0x000040, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_6) == 0x000048, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_7) == 0x000050, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_8) == 0x000058, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_9) == 0x000060, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_10) == 0x000068, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_11) == 0x000070, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_12) == 0x000078, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_13) == 0x000080, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_14) == 0x000088, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_15) == 0x000090, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_16) == 0x000098, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_17) == 0x0000A0, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_18) == 0x0000A8, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_19) == 0x0000B0, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, Temp_object_Variable_20) == 0x0000B8, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image, K2Node_Select_Default) == 0x0000C0, "Member 'W_SandbikeMiniPaperdoll_C_Get_Vehicle_Module_Image::K2Node_Select_Default' has a wrong offset!");

// Function W_SandbikeMiniPaperdoll.W_SandbikeMiniPaperdoll_C.ExecuteUbergraph_W_SandbikeMiniPaperdoll
// 0x00C8 (0x00C8 - 0x0000)
struct W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType_1;                         // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_ModuleName;                           // 0x0010(0x0018)(ConstParm)
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_ModuleIcon;                           // 0x0028(0x0030)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	EVehicleModuleAttachState                     K2Node_Event_AttachState_1;                        // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Durability_1;                         // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          K2Node_Event_DurabilityState_1;                    // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DecayedMaxDurability_1;               // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_VehicleModuleIcon_C*>         K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_VehicleModuleIcon_C*                 CallFunc_Get_Vehicle_Module_Image_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType;                           // 0x0091(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleAttachState                     K2Node_Event_AttachState;                          // 0x0092(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Durability;                           // 0x0094(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDurabilityState                          K2Node_Event_DurabilityState;                      // 0x0098(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DecayedMaxDurability;                 // 0x009C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 CallFunc_Get_Vehicle_Module_Image_ReturnValue_1;   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeprecateSlateVector2D                CallFunc_Set_Size_Size_ImplicitCast;               // 0x00AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Setup_Module_Visuals_DurabilityValue_ImplicitCast; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Setup_Module_Visuals_DurabilityValue_ImplicitCast_1; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll) == 0x000008, "Wrong alignment on W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll");
static_assert(sizeof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll) == 0x0000C8, "Wrong size on W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, EntryPoint) == 0x000000, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, Temp_int_Variable) == 0x000004, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_ModuleType_1) == 0x00000D, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_ModuleType_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_ModuleName) == 0x000010, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_ModuleName' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_ModuleIcon) == 0x000028, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_ModuleIcon' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_AttachState_1) == 0x000058, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_AttachState_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_Durability_1) == 0x00005C, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_Durability_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_DurabilityState_1) == 0x000060, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_DurabilityState_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_DecayedMaxDurability_1) == 0x000064, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_DecayedMaxDurability_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_MakeArray_Array) == 0x000068, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Get_Vehicle_Module_Image_ReturnValue) == 0x000078, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Get_Vehicle_Module_Image_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Array_Get_Item) == 0x000080, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_ModuleType) == 0x000091, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_ModuleType' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_AttachState) == 0x000092, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_AttachState' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_Durability) == 0x000094, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_Durability' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_DurabilityState) == 0x000098, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_DurabilityState' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, K2Node_Event_DecayedMaxDurability) == 0x00009C, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::K2Node_Event_DecayedMaxDurability' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Get_Vehicle_Module_Image_ReturnValue_1) == 0x0000A0, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Get_Vehicle_Module_Image_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Set_Size_Size_ImplicitCast) == 0x0000AC, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Set_Size_Size_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Setup_Module_Visuals_DurabilityValue_ImplicitCast) == 0x0000B8, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Setup_Module_Visuals_DurabilityValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll, CallFunc_Setup_Module_Visuals_DurabilityValue_ImplicitCast_1) == 0x0000C0, "Member 'W_SandbikeMiniPaperdoll_C_ExecuteUbergraph_W_SandbikeMiniPaperdoll::CallFunc_Setup_Module_Visuals_DurabilityValue_ImplicitCast_1' has a wrong offset!");

}

