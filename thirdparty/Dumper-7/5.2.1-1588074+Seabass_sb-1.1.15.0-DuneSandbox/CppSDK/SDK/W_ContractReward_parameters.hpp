#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ContractReward

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_ContractReward.W_ContractReward_C.SetCustomReward
// 0x0060 (0x0060 - 0x0000)
struct W_ContractReward_C_SetCustomReward final
{
public:
	struct FContractCustomReward                  CustomReward;                                      // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ContractReward_C_SetCustomReward) == 0x000008, "Wrong alignment on W_ContractReward_C_SetCustomReward");
static_assert(sizeof(W_ContractReward_C_SetCustomReward) == 0x000060, "Wrong size on W_ContractReward_C_SetCustomReward");
static_assert(offsetof(W_ContractReward_C_SetCustomReward, CustomReward) == 0x000000, "Member 'W_ContractReward_C_SetCustomReward::CustomReward' has a wrong offset!");

// Function W_ContractReward.W_ContractReward_C.SetIntelReward
// 0x0004 (0x0004 - 0x0000)
struct W_ContractReward_C_SetIntelReward final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ContractReward_C_SetIntelReward) == 0x000004, "Wrong alignment on W_ContractReward_C_SetIntelReward");
static_assert(sizeof(W_ContractReward_C_SetIntelReward) == 0x000004, "Wrong size on W_ContractReward_C_SetIntelReward");
static_assert(offsetof(W_ContractReward_C_SetIntelReward, Quantity) == 0x000000, "Member 'W_ContractReward_C_SetIntelReward::Quantity' has a wrong offset!");

// Function W_ContractReward.W_ContractReward_C.SetItemReward
// 0x02D8 (0x02D8 - 0x0000)
struct W_ContractReward_C_SetItemReward final
{
public:
	struct FGameItemInfo                          GameItemInfo;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FEItemTemplateID                       SolarisTemplateID;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	struct FBaseItemTableRow                      CallFunc_FindBaseItemRecord_OutBaseItemRecord;     // 0x0030(0x0288)(ContainsInstancedReference)
	bool                                          CallFunc_FindBaseItemRecord_ReturnValue;           // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x02C0(0x0018)()
};
static_assert(alignof(W_ContractReward_C_SetItemReward) == 0x000008, "Wrong alignment on W_ContractReward_C_SetItemReward");
static_assert(sizeof(W_ContractReward_C_SetItemReward) == 0x0002D8, "Wrong size on W_ContractReward_C_SetItemReward");
static_assert(offsetof(W_ContractReward_C_SetItemReward, GameItemInfo) == 0x000000, "Member 'W_ContractReward_C_SetItemReward::GameItemInfo' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, SolarisTemplateID) == 0x000010, "Member 'W_ContractReward_C_SetItemReward::SolarisTemplateID' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, Temp_text_Variable) == 0x000018, "Member 'W_ContractReward_C_SetItemReward::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, CallFunc_FindBaseItemRecord_OutBaseItemRecord) == 0x000030, "Member 'W_ContractReward_C_SetItemReward::CallFunc_FindBaseItemRecord_OutBaseItemRecord' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, CallFunc_FindBaseItemRecord_ReturnValue) == 0x0002B8, "Member 'W_ContractReward_C_SetItemReward::CallFunc_FindBaseItemRecord_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, Temp_bool_Variable) == 0x0002B9, "Member 'W_ContractReward_C_SetItemReward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002BA, "Member 'W_ContractReward_C_SetItemReward::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetItemReward, K2Node_Select_Default) == 0x0002C0, "Member 'W_ContractReward_C_SetItemReward::K2Node_Select_Default' has a wrong offset!");

// Function W_ContractReward.W_ContractReward_C.SetRandomItemReward
// 0x00B0 (0x00B0 - 0x0000)
struct W_ContractReward_C_SetRandomItemReward final
{
public:
	struct FContractCustomItemReward              CustomItemReward;                                  // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ContractReward_C_SetRandomItemReward) == 0x000008, "Wrong alignment on W_ContractReward_C_SetRandomItemReward");
static_assert(sizeof(W_ContractReward_C_SetRandomItemReward) == 0x0000B0, "Wrong size on W_ContractReward_C_SetRandomItemReward");
static_assert(offsetof(W_ContractReward_C_SetRandomItemReward, CustomItemReward) == 0x000000, "Member 'W_ContractReward_C_SetRandomItemReward::CustomItemReward' has a wrong offset!");

// Function W_ContractReward.W_ContractReward_C.SetReward
// 0x0080 (0x0080 - 0x0000)
struct W_ContractReward_C_SetReward final
{
public:
	bool                                          bIsCountableReward;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Quantity;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FEItemTemplateID                       SolarisTemplateID;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ContractReward_C_SetReward) == 0x000008, "Wrong alignment on W_ContractReward_C_SetReward");
static_assert(sizeof(W_ContractReward_C_SetReward) == 0x000080, "Wrong size on W_ContractReward_C_SetReward");
static_assert(offsetof(W_ContractReward_C_SetReward, bIsCountableReward) == 0x000000, "Member 'W_ContractReward_C_SetReward::bIsCountableReward' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, Quantity) == 0x000004, "Member 'W_ContractReward_C_SetReward::Quantity' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, Name_0) == 0x000008, "Member 'W_ContractReward_C_SetReward::Name_0' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, Icon) == 0x000020, "Member 'W_ContractReward_C_SetReward::Icon' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, SolarisTemplateID) == 0x000050, "Member 'W_ContractReward_C_SetReward::SolarisTemplateID' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'W_ContractReward_C_SetReward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, CallFunc_TextIsEmpty_ReturnValue) == 0x000059, "Member 'W_ContractReward_C_SetReward::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'W_ContractReward_C_SetReward::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, Temp_byte_Variable) == 0x000078, "Member 'W_ContractReward_C_SetReward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, Temp_byte_Variable_1) == 0x000079, "Member 'W_ContractReward_C_SetReward::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, Temp_bool_Variable) == 0x00007A, "Member 'W_ContractReward_C_SetReward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ContractReward_C_SetReward, K2Node_Select_Default) == 0x00007B, "Member 'W_ContractReward_C_SetReward::K2Node_Select_Default' has a wrong offset!");

// Function W_ContractReward.W_ContractReward_C.SetXpReward
// 0x0004 (0x0004 - 0x0000)
struct W_ContractReward_C_SetXpReward final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ContractReward_C_SetXpReward) == 0x000004, "Wrong alignment on W_ContractReward_C_SetXpReward");
static_assert(sizeof(W_ContractReward_C_SetXpReward) == 0x000004, "Wrong size on W_ContractReward_C_SetXpReward");
static_assert(offsetof(W_ContractReward_C_SetXpReward, Quantity) == 0x000000, "Member 'W_ContractReward_C_SetXpReward::Quantity' has a wrong offset!");

}

