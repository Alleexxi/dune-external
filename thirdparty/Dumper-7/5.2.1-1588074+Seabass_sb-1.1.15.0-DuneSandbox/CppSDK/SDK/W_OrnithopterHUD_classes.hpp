#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_OrnithopterHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_OrnithopterHUD.W_OrnithopterHUD_C
// 0x0070 (0x0670 - 0x0600)
class UW_OrnithopterHUD_C final : public UVehicleHUDWidget
{
public:
	uint8                                         Pad_5F8[0x8];                                      // 0x05F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 barBorderL_2_side;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             DuneImage;                                         // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             DuneImage_239;                                     // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 m_FlightModeIcon;                                  // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       m_SpeedUnit;                                       // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OrniDashLines;                                     // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OrniLines;                                         // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_OrnithopterCrosshair_C*              W_OrnithopterCrosshair;                            // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleStatus_C*                     W_VehicleStatus;                                   // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WarningNotification_C*               W_WarningNotification;                             // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         m_BorderCriticalStateCounter;                      // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         m_BorderDisabledStateCounter;                      // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_Overheat;                             // 0x0660(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_Malfunction;                          // 0x0661(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_FuelEmpty;                            // 0x0662(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_FuelCritical;                         // 0x0663(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_FuelLow;                              // 0x0664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_HealthCritical;                       // 0x0665(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_Wrecked;                              // 0x0666(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VehicleState_FuelConsumptionIncreased;             // 0x0667(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LowFuelVisible;                                    // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedFuelComsuption;                              // 0x0669(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_OrnithopterHUD(int32 EntryPoint);
	void Delay_RemoveWarning();
	void CheckAltitudeAndTriggerFuelWarning(double Current_Altitude, double Altitude_Threshold);
	void WidgetAnimationEvt_WarningBlink_Temp_K2Node_WidgetAnimationEvent_0();
	void Update_Warning_Message();
	void TriggerWarningMessageModuleBroken(EVehicleModuleType ModuleType);
	void TriggerWarningMessageModuleAboutToBreak(EVehicleModuleType ModuleType);
	void SetTemperatureState();
	void SetHealthState();
	void SetFuelState();
	void OnVehicleModuleBroken(const EVehicleModuleType ModuleType);
	void OnVehicleModuleAboutToBreak(const EVehicleModuleType ModuleType);
	void OnTemperatureChanged(const float CurrentTemperature);
	void OnIsPSUDisabledChanged(const bool bIsPSUDisabled);
	void OnFuelChanged(const float Fuel);
	void OnAltitudeChanged(const float Altitude);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_OrnithopterHUD_C">();
	}
	static class UW_OrnithopterHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_OrnithopterHUD_C>();
	}
};
static_assert(alignof(UW_OrnithopterHUD_C) == 0x000010, "Wrong alignment on UW_OrnithopterHUD_C");
static_assert(sizeof(UW_OrnithopterHUD_C) == 0x000670, "Wrong size on UW_OrnithopterHUD_C");
static_assert(offsetof(UW_OrnithopterHUD_C, UberGraphFrame) == 0x000600, "Member 'UW_OrnithopterHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, barBorderL_2_side) == 0x000608, "Member 'UW_OrnithopterHUD_C::barBorderL_2_side' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, DuneImage) == 0x000610, "Member 'UW_OrnithopterHUD_C::DuneImage' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, DuneImage_239) == 0x000618, "Member 'UW_OrnithopterHUD_C::DuneImage_239' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, m_FlightModeIcon) == 0x000620, "Member 'UW_OrnithopterHUD_C::m_FlightModeIcon' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, m_SpeedUnit) == 0x000628, "Member 'UW_OrnithopterHUD_C::m_SpeedUnit' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, OrniDashLines) == 0x000630, "Member 'UW_OrnithopterHUD_C::OrniDashLines' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, OrniLines) == 0x000638, "Member 'UW_OrnithopterHUD_C::OrniLines' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, W_OrnithopterCrosshair) == 0x000640, "Member 'UW_OrnithopterHUD_C::W_OrnithopterCrosshair' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, W_VehicleStatus) == 0x000648, "Member 'UW_OrnithopterHUD_C::W_VehicleStatus' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, W_WarningNotification) == 0x000650, "Member 'UW_OrnithopterHUD_C::W_WarningNotification' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, m_BorderCriticalStateCounter) == 0x000658, "Member 'UW_OrnithopterHUD_C::m_BorderCriticalStateCounter' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, m_BorderDisabledStateCounter) == 0x00065C, "Member 'UW_OrnithopterHUD_C::m_BorderDisabledStateCounter' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_Overheat) == 0x000660, "Member 'UW_OrnithopterHUD_C::VehicleState_Overheat' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_Malfunction) == 0x000661, "Member 'UW_OrnithopterHUD_C::VehicleState_Malfunction' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_FuelEmpty) == 0x000662, "Member 'UW_OrnithopterHUD_C::VehicleState_FuelEmpty' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_FuelCritical) == 0x000663, "Member 'UW_OrnithopterHUD_C::VehicleState_FuelCritical' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_FuelLow) == 0x000664, "Member 'UW_OrnithopterHUD_C::VehicleState_FuelLow' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_HealthCritical) == 0x000665, "Member 'UW_OrnithopterHUD_C::VehicleState_HealthCritical' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_Wrecked) == 0x000666, "Member 'UW_OrnithopterHUD_C::VehicleState_Wrecked' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, VehicleState_FuelConsumptionIncreased) == 0x000667, "Member 'UW_OrnithopterHUD_C::VehicleState_FuelConsumptionIncreased' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, LowFuelVisible) == 0x000668, "Member 'UW_OrnithopterHUD_C::LowFuelVisible' has a wrong offset!");
static_assert(offsetof(UW_OrnithopterHUD_C, CachedFuelComsuption) == 0x000669, "Member 'UW_OrnithopterHUD_C::CachedFuelComsuption' has a wrong offset!");

}

