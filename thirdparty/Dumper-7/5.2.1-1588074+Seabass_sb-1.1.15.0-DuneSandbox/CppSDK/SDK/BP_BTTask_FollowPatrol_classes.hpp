#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTTask_FollowPatrol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BTTask_FollowPatrol.BP_BTTask_FollowPatrol_C
// 0x0058 (0x0108 - 0x00B0)
class UBP_BTTask_FollowPatrol_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 BB_PatrolToFollow;                                 // 0x00B8(0x0028)(Edit, BlueprintVisible)
	int32                                         NextPatrolPoint;                                   // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AIPatrolPath_C*                     PatrolController;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          MyController;                                      // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  MyPawn;                                            // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         FollowDirection;                                   // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void OnSuccess_F95226704C2E5A050A8908A467D0B019();
	void OnPatrolPointReached();
	void OnFailure_F95226704C2E5A050A8908A467D0B019();
	void MoveToNextPatrolPoint();
	void HandlePatrolPointReached();
	void ExecuteUbergraph_BP_BTTask_FollowPatrol(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BTTask_FollowPatrol_C">();
	}
	static class UBP_BTTask_FollowPatrol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BTTask_FollowPatrol_C>();
	}
};
static_assert(alignof(UBP_BTTask_FollowPatrol_C) == 0x000008, "Wrong alignment on UBP_BTTask_FollowPatrol_C");
static_assert(sizeof(UBP_BTTask_FollowPatrol_C) == 0x000108, "Wrong size on UBP_BTTask_FollowPatrol_C");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_BTTask_FollowPatrol_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, BB_PatrolToFollow) == 0x0000B8, "Member 'UBP_BTTask_FollowPatrol_C::BB_PatrolToFollow' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, NextPatrolPoint) == 0x0000E0, "Member 'UBP_BTTask_FollowPatrol_C::NextPatrolPoint' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, PatrolController) == 0x0000E8, "Member 'UBP_BTTask_FollowPatrol_C::PatrolController' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, MyController) == 0x0000F0, "Member 'UBP_BTTask_FollowPatrol_C::MyController' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, MyPawn) == 0x0000F8, "Member 'UBP_BTTask_FollowPatrol_C::MyPawn' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_FollowPatrol_C, FollowDirection) == 0x000100, "Member 'UBP_BTTask_FollowPatrol_C::FollowDirection' has a wrong offset!");

}

