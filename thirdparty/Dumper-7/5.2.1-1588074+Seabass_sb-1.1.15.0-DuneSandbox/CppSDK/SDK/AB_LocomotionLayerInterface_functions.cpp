#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_LocomotionLayerInterface

#include "Basic.hpp"

#include "AB_LocomotionLayerInterface_classes.hpp"
#include "AB_LocomotionLayerInterface_parameters.hpp"


namespace SDK
{

// Function AB_LocomotionLayerInterface.AB_LocomotionLayerInterface_C.SuspensorLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       SuspensorLayer_0                                       (Parm, OutParm, NoDestructor)

void IAB_LocomotionLayerInterface_C::SuspensorLayer(struct FPoseLink* SuspensorLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AB_LocomotionLayerInterface_C", "SuspensorLayer");

	Params::AB_LocomotionLayerInterface_C_SuspensorLayer Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (SuspensorLayer_0 != nullptr)
		*SuspensorLayer_0 = std::move(Parms.SuspensorLayer_0);
}


// Function AB_LocomotionLayerInterface.AB_LocomotionLayerInterface_C.ScramblingLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       ScramblingLayer_0                                      (Parm, OutParm, NoDestructor)

void IAB_LocomotionLayerInterface_C::ScramblingLayer(struct FPoseLink* ScramblingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AB_LocomotionLayerInterface_C", "ScramblingLayer");

	Params::AB_LocomotionLayerInterface_C_ScramblingLayer Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (ScramblingLayer_0 != nullptr)
		*ScramblingLayer_0 = std::move(Parms.ScramblingLayer_0);
}


// Function AB_LocomotionLayerInterface.AB_LocomotionLayerInterface_C.QuicksandLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InPose_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    HasWeaponInHand                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink*                       QuicksandLayer_0                                       (Parm, OutParm, NoDestructor)

void IAB_LocomotionLayerInterface_C::QuicksandLayer(const struct FPoseLink& InPose_0, bool HasWeaponInHand, struct FPoseLink* QuicksandLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AB_LocomotionLayerInterface_C", "QuicksandLayer");

	Params::AB_LocomotionLayerInterface_C_QuicksandLayer Parms{};

	Parms.InPose_0 = std::move(InPose_0);
	Parms.HasWeaponInHand = HasWeaponInHand;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (QuicksandLayer_0 != nullptr)
		*QuicksandLayer_0 = std::move(Parms.QuicksandLayer_0);
}


// Function AB_LocomotionLayerInterface.AB_LocomotionLayerInterface_C.DisabledLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InPose_4                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       DisabledLayer_0                                        (Parm, OutParm, NoDestructor)

void IAB_LocomotionLayerInterface_C::DisabledLayer(const struct FPoseLink& InPose_4, struct FPoseLink* DisabledLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AB_LocomotionLayerInterface_C", "DisabledLayer");

	Params::AB_LocomotionLayerInterface_C_DisabledLayer Parms{};

	Parms.InPose_4 = std::move(InPose_4);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (DisabledLayer_0 != nullptr)
		*DisabledLayer_0 = std::move(Parms.DisabledLayer_0);
}


// Function AB_LocomotionLayerInterface.AB_LocomotionLayerInterface_C.ClimbingLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InPose_1                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       ClimbingLayer_0                                        (Parm, OutParm, NoDestructor)

void IAB_LocomotionLayerInterface_C::ClimbingLayer(const struct FPoseLink& InPose_1, struct FPoseLink* ClimbingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AB_LocomotionLayerInterface_C", "ClimbingLayer");

	Params::AB_LocomotionLayerInterface_C_ClimbingLayer Parms{};

	Parms.InPose_1 = std::move(InPose_1);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (ClimbingLayer_0 != nullptr)
		*ClimbingLayer_0 = std::move(Parms.ClimbingLayer_0);
}

}

