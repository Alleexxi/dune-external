#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ContractReward

#include "Basic.hpp"

#include "W_ContractReward_classes.hpp"
#include "W_ContractReward_parameters.hpp"


namespace SDK
{

// Function W_ContractReward.W_ContractReward_C.SetCustomReward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContractCustomReward&           CustomReward                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ContractReward_C::SetCustomReward(struct FContractCustomReward& CustomReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ContractReward_C", "SetCustomReward");

	Params::W_ContractReward_C_SetCustomReward Parms{};

	Parms.CustomReward = std::move(CustomReward);

	UObject::ProcessEvent(Func, &Parms);

	CustomReward = std::move(Parms.CustomReward);
}


// Function W_ContractReward.W_ContractReward_C.SetIntelReward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ContractReward_C::SetIntelReward(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ContractReward_C", "SetIntelReward");

	Params::W_ContractReward_C_SetIntelReward Parms{};

	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ContractReward.W_ContractReward_C.SetItemReward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameItemInfo&                   GameItemInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UW_ContractReward_C::SetItemReward(struct FGameItemInfo& GameItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ContractReward_C", "SetItemReward");

	Params::W_ContractReward_C_SetItemReward Parms{};

	Parms.GameItemInfo = std::move(GameItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	GameItemInfo = std::move(Parms.GameItemInfo);
}


// Function W_ContractReward.W_ContractReward_C.SetRandomItemReward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContractCustomItemReward&       CustomItemReward                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ContractReward_C::SetRandomItemReward(struct FContractCustomItemReward& CustomItemReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ContractReward_C", "SetRandomItemReward");

	Params::W_ContractReward_C_SetRandomItemReward Parms{};

	Parms.CustomItemReward = std::move(CustomItemReward);

	UObject::ProcessEvent(Func, &Parms);

	CustomItemReward = std::move(Parms.CustomItemReward);
}


// Function W_ContractReward.W_ContractReward_C.SetReward
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsCountableReward                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// TSoftObjectPtr<class UTexture2D>        Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_ContractReward_C::SetReward(bool bIsCountableReward, int32 Quantity, const class FText& Name_0, TSoftObjectPtr<class UTexture2D> Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ContractReward_C", "SetReward");

	Params::W_ContractReward_C_SetReward Parms{};

	Parms.bIsCountableReward = bIsCountableReward;
	Parms.Quantity = Quantity;
	Parms.Name_0 = std::move(Name_0);
	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ContractReward.W_ContractReward_C.SetXpReward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ContractReward_C::SetXpReward(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ContractReward_C", "SetXpReward");

	Params::W_ContractReward_C_SetXpReward Parms{};

	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}

}

