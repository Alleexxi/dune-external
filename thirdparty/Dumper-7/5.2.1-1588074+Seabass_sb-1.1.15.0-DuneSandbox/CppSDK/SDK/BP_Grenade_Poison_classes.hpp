#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Grenade_Poison

#include "Basic.hpp"

#include "BP_ProjectileThrowableBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Grenade_Poison.BP_Grenade_Poison_C
// 0x0068 (0x1100 - 0x1098)
class ABP_Grenade_Poison_C : public ABP_ProjectileThrowableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Grenade_Poison_C;                // 0x1098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_VFX_Gad_FragRibbon;                             // 0x10A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_VFX_Gad_FragFlare_01;                           // 0x10A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x10B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        BubbleDelay;                                       // 0x10B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InnerDamageRadius;                                 // 0x10C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OuterDamageRadius;                                 // 0x10C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x10D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinimumDamage;                                     // 0x10D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageFalloff;                                     // 0x10E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasExploded;                                       // 0x10E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BounceSoundLimit;                                  // 0x10E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10EA[0x6];                                     // 0x10EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFcAudioEvent*                          Audio_PoisonVial_Smash;                            // 0x10F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                OriginASC;                                         // 0x10F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void TryGetOriginASC();
	void SpawnImpactFX(const struct FHitResult& InHitResult, const bool bInShielded);
	void OnProjectileBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void OnImpact(const struct FHitResult& HitResult);
	void Launch(const struct FVector& Velocity, const struct FTransform& Transform);
	void HitActorsCallbackForTelem(const TSet<class AActor*>& HitActors);
	void ExecuteUbergraph_BP_Grenade_Poison(int32 EntryPoint);
	void BndEvt__BP_Gren_Projectile_Base_m_SphereCollisionComp_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Grenade_Poison_C">();
	}
	static class ABP_Grenade_Poison_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Grenade_Poison_C>();
	}
};
static_assert(alignof(ABP_Grenade_Poison_C) == 0x000008, "Wrong alignment on ABP_Grenade_Poison_C");
static_assert(sizeof(ABP_Grenade_Poison_C) == 0x001100, "Wrong size on ABP_Grenade_Poison_C");
static_assert(offsetof(ABP_Grenade_Poison_C, UberGraphFrame_BP_Grenade_Poison_C) == 0x001098, "Member 'ABP_Grenade_Poison_C::UberGraphFrame_BP_Grenade_Poison_C' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, NS_VFX_Gad_FragRibbon) == 0x0010A0, "Member 'ABP_Grenade_Poison_C::NS_VFX_Gad_FragRibbon' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, NS_VFX_Gad_FragFlare_01) == 0x0010A8, "Member 'ABP_Grenade_Poison_C::NS_VFX_Gad_FragFlare_01' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, SkeletalMesh) == 0x0010B0, "Member 'ABP_Grenade_Poison_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, BubbleDelay) == 0x0010B8, "Member 'ABP_Grenade_Poison_C::BubbleDelay' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, InnerDamageRadius) == 0x0010C0, "Member 'ABP_Grenade_Poison_C::InnerDamageRadius' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, OuterDamageRadius) == 0x0010C8, "Member 'ABP_Grenade_Poison_C::OuterDamageRadius' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, MaxDamage) == 0x0010D0, "Member 'ABP_Grenade_Poison_C::MaxDamage' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, MinimumDamage) == 0x0010D8, "Member 'ABP_Grenade_Poison_C::MinimumDamage' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, DamageFalloff) == 0x0010E0, "Member 'ABP_Grenade_Poison_C::DamageFalloff' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, HasExploded) == 0x0010E8, "Member 'ABP_Grenade_Poison_C::HasExploded' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, BounceSoundLimit) == 0x0010E9, "Member 'ABP_Grenade_Poison_C::BounceSoundLimit' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, Audio_PoisonVial_Smash) == 0x0010F0, "Member 'ABP_Grenade_Poison_C::Audio_PoisonVial_Smash' has a wrong offset!");
static_assert(offsetof(ABP_Grenade_Poison_C, OriginASC) == 0x0010F8, "Member 'ABP_Grenade_Poison_C::OriginASC' has a wrong offset!");

}

