#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TutorialPopUp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_TutorialPopUp.W_TutorialPopUp_C.VerticalMovement
// 0x0100 (0x0100 - 0x0000)
struct W_TutorialPopUp_C_VerticalMovement final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0090(0x0038)(NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x00C8(0x0038)(NoDestructor)
};
static_assert(alignof(W_TutorialPopUp_C_VerticalMovement) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_VerticalMovement");
static_assert(sizeof(W_TutorialPopUp_C_VerticalMovement) == 0x000100, "Wrong size on W_TutorialPopUp_C_VerticalMovement");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, Progress) == 0x000000, "Member 'W_TutorialPopUp_C_VerticalMovement::Progress' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_BreakVector2D_X) == 0x000008, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_BreakVector2D_X_1) == 0x000018, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_BreakVector2D_Y_1) == 0x000020, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_GetDesiredSize_ReturnValue) == 0x000028, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_BreakVector2D_X_2) == 0x000040, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_BreakVector2D_Y_2) == 0x000048, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, CallFunc_MakeVector2D_ReturnValue_1) == 0x000080, "Member 'W_TutorialPopUp_C_VerticalMovement::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, K2Node_MakeStruct_WidgetTransform) == 0x000090, "Member 'W_TutorialPopUp_C_VerticalMovement::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_VerticalMovement, K2Node_MakeStruct_WidgetTransform_1) == 0x0000C8, "Member 'W_TutorialPopUp_C_VerticalMovement::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.OnHideTranslateContainer
// 0x0004 (0x0004 - 0x0000)
struct W_TutorialPopUp_C_OnHideTranslateContainer final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_OnHideTranslateContainer) == 0x000004, "Wrong alignment on W_TutorialPopUp_C_OnHideTranslateContainer");
static_assert(sizeof(W_TutorialPopUp_C_OnHideTranslateContainer) == 0x000004, "Wrong size on W_TutorialPopUp_C_OnHideTranslateContainer");
static_assert(offsetof(W_TutorialPopUp_C_OnHideTranslateContainer, Progress) == 0x000000, "Member 'W_TutorialPopUp_C_OnHideTranslateContainer::Progress' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.MultiplyHideAnimTime
// 0x0028 (0x0028 - 0x0000)
struct W_TutorialPopUp_C_MultiplyHideAnimTime final
{
public:
	double                                        InTime;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewTime;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_MultiplyHideAnimTime) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_MultiplyHideAnimTime");
static_assert(sizeof(W_TutorialPopUp_C_MultiplyHideAnimTime) == 0x000028, "Wrong size on W_TutorialPopUp_C_MultiplyHideAnimTime");
static_assert(offsetof(W_TutorialPopUp_C_MultiplyHideAnimTime, InTime) == 0x000000, "Member 'W_TutorialPopUp_C_MultiplyHideAnimTime::InTime' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_MultiplyHideAnimTime, NewTime) == 0x000008, "Member 'W_TutorialPopUp_C_MultiplyHideAnimTime::NewTime' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_MultiplyHideAnimTime, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_TutorialPopUp_C_MultiplyHideAnimTime::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_MultiplyHideAnimTime, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'W_TutorialPopUp_C_MultiplyHideAnimTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_MultiplyHideAnimTime, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'W_TutorialPopUp_C_MultiplyHideAnimTime::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.ExecuteUbergraph_W_TutorialPopUp
// 0x01E8 (0x01E8 - 0x0000)
struct W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTween*                                 CallFunc_TweenUserWidgetOpacity_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_CreateTween_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_CreateTween_ReturnValue_1;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTweenValidAndHaveOwner_ReturnValue;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyHideAnimTime_NewTime;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DivideHideAnimTime_NewTime;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_TweenWidgetRenderTranslation_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DivideHideAnimTime_NewTime_1;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Progress;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress)>               K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPaused;                            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTween*                                 CallFunc_TweenWidgetRenderOpacity_ReturnValue;     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00F8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTweenValidAndHaveOwner_ReturnValue_1;   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DivideHideAnimTime_NewTime_2;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DivideHideAnimTime_NewTime_3;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_CreateTween_ReturnValue_2;                // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DivideHideAnimTime_NewTime_4;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DivideHideAnimTime_NewTime_5;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTween*                                 CallFunc_TweenUserWidgetOpacity_ReturnValue_1;     // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TweenWidgetRenderTranslation_Duration_ImplicitCast; // 0x01C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDuration_Duration_ImplicitCast;        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateTween_Delay_ImplicitCast;           // 0x01D8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateTween_Duration_ImplicitCast;        // 0x01DC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDuration_Duration_ImplicitCast_1;      // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDelay_Delay_ImplicitCast;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp");
static_assert(sizeof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp) == 0x0001E8, "Wrong size on W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, EntryPoint) == 0x000000, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_TweenUserWidgetOpacity_ReturnValue) == 0x000008, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_TweenUserWidgetOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_CreateTween_ReturnValue) == 0x000030, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_CreateTween_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_GetDesiredSize_ReturnValue) == 0x000040, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_X) == 0x000050, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_Y_1) == 0x000068, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_CreateTween_ReturnValue_1) == 0x000088, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_CreateTween_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, K2Node_CreateDelegate_OutputDelegate_2) == 0x000090, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_IsTweenValidAndHaveOwner_ReturnValue) == 0x0000A0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_IsTweenValidAndHaveOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_MultiplyHideAnimTime_NewTime) == 0x0000A8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_MultiplyHideAnimTime_NewTime' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_DivideHideAnimTime_NewTime) == 0x0000B0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_DivideHideAnimTime_NewTime' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_TweenWidgetRenderTranslation_ReturnValue) == 0x0000B8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_TweenWidgetRenderTranslation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_DivideHideAnimTime_NewTime_1) == 0x0000C0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_DivideHideAnimTime_NewTime_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, K2Node_CustomEvent_Progress) == 0x0000C8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, K2Node_Event_bIsPaused) == 0x0000E8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::K2Node_Event_bIsPaused' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_TweenWidgetRenderOpacity_ReturnValue) == 0x0000F0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_TweenWidgetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000F8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_GetLocalSize_ReturnValue) == 0x000130, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_X_2) == 0x000140, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_Y_2) == 0x000148, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000150, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000160, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_X_3) == 0x000168, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_BreakVector2D_Y_3) == 0x000170, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_IsTweenValidAndHaveOwner_ReturnValue_1) == 0x000190, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_IsTweenValidAndHaveOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_DivideHideAnimTime_NewTime_2) == 0x000198, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_DivideHideAnimTime_NewTime_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_DivideHideAnimTime_NewTime_3) == 0x0001A0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_DivideHideAnimTime_NewTime_3' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_CreateTween_ReturnValue_2) == 0x0001A8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_CreateTween_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_DivideHideAnimTime_NewTime_4) == 0x0001B0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_DivideHideAnimTime_NewTime_4' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_DivideHideAnimTime_NewTime_5) == 0x0001B8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_DivideHideAnimTime_NewTime_5' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_TweenUserWidgetOpacity_ReturnValue_1) == 0x0001C0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_TweenUserWidgetOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_TweenWidgetRenderTranslation_Duration_ImplicitCast) == 0x0001C8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_TweenWidgetRenderTranslation_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_SetDuration_Duration_ImplicitCast) == 0x0001CC, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_SetDuration_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001D0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_CreateTween_Delay_ImplicitCast) == 0x0001D8, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_CreateTween_Delay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_CreateTween_Duration_ImplicitCast) == 0x0001DC, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_CreateTween_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_SetDuration_Duration_ImplicitCast_1) == 0x0001E0, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_SetDuration_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp, CallFunc_SetDelay_Delay_ImplicitCast) == 0x0001E4, "Member 'W_TutorialPopUp_C_ExecuteUbergraph_W_TutorialPopUp::CallFunc_SetDelay_Delay_ImplicitCast' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.DivideHideAnimTime
// 0x0028 (0x0028 - 0x0000)
struct W_TutorialPopUp_C_DivideHideAnimTime final
{
public:
	double                                        InTime;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewTime;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_DivideHideAnimTime) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_DivideHideAnimTime");
static_assert(sizeof(W_TutorialPopUp_C_DivideHideAnimTime) == 0x000028, "Wrong size on W_TutorialPopUp_C_DivideHideAnimTime");
static_assert(offsetof(W_TutorialPopUp_C_DivideHideAnimTime, InTime) == 0x000000, "Member 'W_TutorialPopUp_C_DivideHideAnimTime::InTime' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DivideHideAnimTime, NewTime) == 0x000008, "Member 'W_TutorialPopUp_C_DivideHideAnimTime::NewTime' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DivideHideAnimTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_TutorialPopUp_C_DivideHideAnimTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DivideHideAnimTime, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'W_TutorialPopUp_C_DivideHideAnimTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DivideHideAnimTime, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'W_TutorialPopUp_C_DivideHideAnimTime::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.DiamondHorizontalMovement
// 0x0030 (0x0030 - 0x0000)
struct W_TutorialPopUp_C_DiamondHorizontalMovement final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_DiamondHorizontalMovement) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_DiamondHorizontalMovement");
static_assert(sizeof(W_TutorialPopUp_C_DiamondHorizontalMovement) == 0x000030, "Wrong size on W_TutorialPopUp_C_DiamondHorizontalMovement");
static_assert(offsetof(W_TutorialPopUp_C_DiamondHorizontalMovement, Progress) == 0x000000, "Member 'W_TutorialPopUp_C_DiamondHorizontalMovement::Progress' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DiamondHorizontalMovement, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'W_TutorialPopUp_C_DiamondHorizontalMovement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DiamondHorizontalMovement, CallFunc_BreakVector2D_X) == 0x000010, "Member 'W_TutorialPopUp_C_DiamondHorizontalMovement::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DiamondHorizontalMovement, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'W_TutorialPopUp_C_DiamondHorizontalMovement::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_DiamondHorizontalMovement, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'W_TutorialPopUp_C_DiamondHorizontalMovement::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.CREATEDELEGATE_PROXYFUNCTION_1
// 0x0010 (0x0010 - 0x0000)
struct W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1 final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DiamondHorizontalMovement_Progress_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(sizeof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000010, "Wrong size on W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(offsetof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1, Progress) == 0x000000, "Member 'W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1::Progress' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1, CallFunc_DiamondHorizontalMovement_Progress_ImplicitCast) == 0x000008, "Member 'W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_1::CallFunc_DiamondHorizontalMovement_Progress_ImplicitCast' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0010 (0x0010 - 0x0000)
struct W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VerticalMovement_Progress_ImplicitCast;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000010, "Wrong size on W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0, Progress) == 0x000000, "Member 'W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0::Progress' has a wrong offset!");
static_assert(offsetof(W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0, CallFunc_VerticalMovement_Progress_ImplicitCast) == 0x000008, "Member 'W_TutorialPopUp_C_CREATEDELEGATE_PROXYFUNCTION_0::CallFunc_VerticalMovement_Progress_ImplicitCast' has a wrong offset!");

// Function W_TutorialPopUp.W_TutorialPopUp_C.BP_OnPauseStateChanged
// 0x0001 (0x0001 - 0x0000)
struct W_TutorialPopUp_C_BP_OnPauseStateChanged final
{
public:
	bool                                          bIsPaused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TutorialPopUp_C_BP_OnPauseStateChanged) == 0x000001, "Wrong alignment on W_TutorialPopUp_C_BP_OnPauseStateChanged");
static_assert(sizeof(W_TutorialPopUp_C_BP_OnPauseStateChanged) == 0x000001, "Wrong size on W_TutorialPopUp_C_BP_OnPauseStateChanged");
static_assert(offsetof(W_TutorialPopUp_C_BP_OnPauseStateChanged, bIsPaused) == 0x000000, "Member 'W_TutorialPopUp_C_BP_OnPauseStateChanged::bIsPaused' has a wrong offset!");

}

