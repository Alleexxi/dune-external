#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Mouse

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "AB_Mouse_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_Mouse.AB_Mouse_C
// 0x0C30 (0x0F80 - 0x0350)
class UAB_Mouse_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AB_Mouse::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                     // 0x0358(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0368(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0370(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0378(0x0020)()
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x03A0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0400(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0460(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x04C0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0520(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0580(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05E0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0640(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x06A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x06C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0708(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0728(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0770(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x07B8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0800(0x0078)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x0878(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0948(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0968(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x09B0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x09D0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0A18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0A60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0AA8(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0AC8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0B10(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B58(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0BA0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0BC0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0C88(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0CD0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D30(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D90(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0DD8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0DF8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0E40(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E60(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E80(0x00C8)()
	double                                        Speed;                                             // 0x0F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawDelta;                                          // 0x0F50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawLastFrame;                                      // 0x0F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0F60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRunning;                                         // 0x0F61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BurrowIn;                                          // 0x0F62(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitOnLeft;                                         // 0x0F63(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomSpawn;                                       // 0x0F64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopFromRunning;                                   // 0x0F65(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F66[0x2];                                      // 0x0F66(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StopPosition;                                      // 0x0F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccelerating;                                    // 0x0F70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomIdle;                                        // 0x0F71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_AssignRandomBool();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CalcStopStart();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_02DB2023404A95EFF16ED2BC7EADFFB7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_1FE74A5C499BDF5B922E61AFDFD5914C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_52D986C84DFDAB8D3D348B9EA240C8A9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_75CC739E4BA8E43236712DBEF5610ECC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_7FD4CDBC45A81C3A884DBD9C81012E08();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_8D92CD104D227A51D323ADA907703299();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Mouse_AnimGraphNode_TransitionResult_B51BB93C4F33D5F976A12F968589E90B();
	void ExecuteUbergraph_AB_Mouse(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Mouse_C">();
	}
	static class UAB_Mouse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Mouse_C>();
	}
};
static_assert(alignof(UAB_Mouse_C) == 0x000010, "Wrong alignment on UAB_Mouse_C");
static_assert(sizeof(UAB_Mouse_C) == 0x000F80, "Wrong size on UAB_Mouse_C");
static_assert(offsetof(UAB_Mouse_C, UberGraphFrame) == 0x000350, "Member 'UAB_Mouse_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, __AnimBlueprintMutables) == 0x000358, "Member 'UAB_Mouse_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimBlueprintExtension_PropertyAccess) == 0x000368, "Member 'UAB_Mouse_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimBlueprintExtension_Base) == 0x000370, "Member 'UAB_Mouse_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_Root) == 0x000378, "Member 'UAB_Mouse_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_9) == 0x0003A0, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_8) == 0x000400, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_7) == 0x000460, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_6) == 0x0004C0, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_5) == 0x000520, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_4) == 0x000580, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_3) == 0x0005E0, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_2) == 0x000640, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_8) == 0x0006A0, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_9) == 0x0006C0, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_7) == 0x000708, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_8) == 0x000728, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_BlendListByBool_3) == 0x000770, "Member 'UAB_Mouse_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_7) == 0x0007B8, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_BlendSpacePlayer) == 0x000800, "Member 'UAB_Mouse_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x000878, "Member 'UAB_Mouse_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_6) == 0x000948, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_6) == 0x000968, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_5) == 0x0009B0, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_BlendListByBool_2) == 0x0009D0, "Member 'UAB_Mouse_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_5) == 0x000A18, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_4) == 0x000A60, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_4) == 0x000AA8, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_BlendListByBool_1) == 0x000AC8, "Member 'UAB_Mouse_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_3) == 0x000B10, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_2) == 0x000B58, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_3) == 0x000BA0, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateMachine_1) == 0x000BC0, "Member 'UAB_Mouse_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_BlendListByBool) == 0x000C88, "Member 'UAB_Mouse_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult_1) == 0x000CD0, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_TransitionResult) == 0x000D30, "Member 'UAB_Mouse_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer_1) == 0x000D90, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_2) == 0x000DD8, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_SequencePlayer) == 0x000DF8, "Member 'UAB_Mouse_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult_1) == 0x000E40, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateResult) == 0x000E60, "Member 'UAB_Mouse_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, AnimGraphNode_StateMachine) == 0x000E80, "Member 'UAB_Mouse_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, Speed) == 0x000F48, "Member 'UAB_Mouse_C::Speed' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, YawDelta) == 0x000F50, "Member 'UAB_Mouse_C::YawDelta' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, YawLastFrame) == 0x000F58, "Member 'UAB_Mouse_C::YawLastFrame' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, IsDead) == 0x000F60, "Member 'UAB_Mouse_C::IsDead' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, IsRunning) == 0x000F61, "Member 'UAB_Mouse_C::IsRunning' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, BurrowIn) == 0x000F62, "Member 'UAB_Mouse_C::BurrowIn' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, HitOnLeft) == 0x000F63, "Member 'UAB_Mouse_C::HitOnLeft' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, RandomSpawn) == 0x000F64, "Member 'UAB_Mouse_C::RandomSpawn' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, StopFromRunning) == 0x000F65, "Member 'UAB_Mouse_C::StopFromRunning' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, StopPosition) == 0x000F68, "Member 'UAB_Mouse_C::StopPosition' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, IsAccelerating) == 0x000F70, "Member 'UAB_Mouse_C::IsAccelerating' has a wrong offset!");
static_assert(offsetof(UAB_Mouse_C, RandomIdle) == 0x000F71, "Member 'UAB_Mouse_C::RandomIdle' has a wrong offset!");

}

