#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CheckBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_CheckBox.W_CheckBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_CheckBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CheckBox_C_PreConstruct) == 0x000001, "Wrong alignment on W_CheckBox_C_PreConstruct");
static_assert(sizeof(W_CheckBox_C_PreConstruct) == 0x000001, "Wrong size on W_CheckBox_C_PreConstruct");
static_assert(offsetof(W_CheckBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_CheckBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_CheckBox.W_CheckBox_C.ExecuteUbergraph_W_CheckBox
// 0x20A0 (0x20A0 - 0x0000)
struct W_CheckBox_C_ExecuteUbergraph_W_CheckBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCheckBoxStyle                         K2Node_MakeStruct_CheckBoxStyle;                   // 0x0010(0x0AD0)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE1[0xF];                                      // 0x0AE1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCheckBoxStyle                         K2Node_MakeStruct_CheckBoxStyle_1;                 // 0x0AF0(0x0AD0)()
	bool                                          Temp_bool_Variable;                                // 0x15C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C1[0xF];                                     // 0x15C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCheckBoxStyle                         K2Node_Select_Default;                             // 0x15D0(0x0AD0)()
};
static_assert(alignof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox) == 0x000010, "Wrong alignment on W_CheckBox_C_ExecuteUbergraph_W_CheckBox");
static_assert(sizeof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox) == 0x0020A0, "Wrong size on W_CheckBox_C_ExecuteUbergraph_W_CheckBox");
static_assert(offsetof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox, EntryPoint) == 0x000000, "Member 'W_CheckBox_C_ExecuteUbergraph_W_CheckBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox, K2Node_MakeStruct_CheckBoxStyle) == 0x000010, "Member 'W_CheckBox_C_ExecuteUbergraph_W_CheckBox::K2Node_MakeStruct_CheckBoxStyle' has a wrong offset!");
static_assert(offsetof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox, K2Node_Event_IsDesignTime) == 0x000AE0, "Member 'W_CheckBox_C_ExecuteUbergraph_W_CheckBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox, K2Node_MakeStruct_CheckBoxStyle_1) == 0x000AF0, "Member 'W_CheckBox_C_ExecuteUbergraph_W_CheckBox::K2Node_MakeStruct_CheckBoxStyle_1' has a wrong offset!");
static_assert(offsetof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox, Temp_bool_Variable) == 0x0015C0, "Member 'W_CheckBox_C_ExecuteUbergraph_W_CheckBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_CheckBox_C_ExecuteUbergraph_W_CheckBox, K2Node_Select_Default) == 0x0015D0, "Member 'W_CheckBox_C_ExecuteUbergraph_W_CheckBox::K2Node_Select_Default' has a wrong offset!");

}

