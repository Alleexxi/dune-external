#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CMO_Wings

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function AB_CMO_Wings.AB_CMO_Wings_C.OnVehicleModuleBroken
// 0x0001 (0x0001 - 0x0000)
struct AB_CMO_Wings_C_OnVehicleModuleBroken final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CMO_Wings_C_OnVehicleModuleBroken) == 0x000001, "Wrong alignment on AB_CMO_Wings_C_OnVehicleModuleBroken");
static_assert(sizeof(AB_CMO_Wings_C_OnVehicleModuleBroken) == 0x000001, "Wrong size on AB_CMO_Wings_C_OnVehicleModuleBroken");
static_assert(offsetof(AB_CMO_Wings_C_OnVehicleModuleBroken, ModuleType) == 0x000000, "Member 'AB_CMO_Wings_C_OnVehicleModuleBroken::ModuleType' has a wrong offset!");

// Function AB_CMO_Wings.AB_CMO_Wings_C.OnFlightModeChanged
// 0x0001 (0x0001 - 0x0000)
struct AB_CMO_Wings_C_OnFlightModeChanged final
{
public:
	EOrnithopterFlightMode                        NewFlightMode;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CMO_Wings_C_OnFlightModeChanged) == 0x000001, "Wrong alignment on AB_CMO_Wings_C_OnFlightModeChanged");
static_assert(sizeof(AB_CMO_Wings_C_OnFlightModeChanged) == 0x000001, "Wrong size on AB_CMO_Wings_C_OnFlightModeChanged");
static_assert(offsetof(AB_CMO_Wings_C_OnFlightModeChanged, NewFlightMode) == 0x000000, "Member 'AB_CMO_Wings_C_OnFlightModeChanged::NewFlightMode' has a wrong offset!");

// Function AB_CMO_Wings.AB_CMO_Wings_C.ExecuteUbergraph_AB_CMO_Wings
// 0x0198 (0x0198 - 0x0000)
struct AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrnithopterFlightMode                        K2Node_Event_NewFlightMode;                        // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPosseseablePawnInterface> CallFunc_GetDriverCharacter_self_CastInput;    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         CallFunc_GetDriverCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrnithopterFlightMode                        CallFunc_UpdateFlightMode_FlightMode;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateFlightMode_bIsOSC;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateWingVariables_ForwardValue;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWingVariables_StrafeValue;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWingVariables_UpValue;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateWingVariables_PitchValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateWingVariables_YawValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWingVariables_BoostValue;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateWingVariables_Out_Of_Power;      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateWingVariables_OscillationAmountValue; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_WingBlurVFX_VFXWingBlurSystems1;          // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              CallFunc_WingTipVFX_VFXWingTipsSystems1;           // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateWingOSC_OscillationAngle;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateWingOSC_WingOSCVariance;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateWingOSC_OSCFlipFlop;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      K2Node_Select_Default;                             // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType;                           // 0x0138(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_2;                         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_1;  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWingVariables_ForwardAxis_ImplicitCast; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWingVariables_StrafeAxis_ImplicitCast; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateWingVariables_UpAxis_ImplicitCast; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_StrafeAxis_ImplicitCast;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_UpAxis_ImplicitCast;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BoostAmount_ImplicitCast;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OscillationAmount_ImplicitCast; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings) == 0x000008, "Wrong alignment on AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings");
static_assert(sizeof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings) == 0x000198, "Wrong size on AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, EntryPoint) == 0x000000, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Variable) == 0x000008, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_2) == 0x00000C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_3) == 0x00000D, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_bool_Has_Been_Initd_Variable) == 0x00000E, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_bool_IsClosed_Variable) == 0x00000F, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_4) == 0x00001C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001D, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000020, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000024, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000025, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x000028, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00002D, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00002E, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00002F, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000030, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000031, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000038, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000039, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00003B, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00003C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00003D, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00003E, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x00003F, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x000040, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000041, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000042, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000043, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_Event_DeltaTimeX) == 0x000044, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_Event_NewFlightMode) == 0x000048, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_Event_NewFlightMode' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Array_Get_Item) == 0x000060, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_5) == 0x000070, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_GetDriverCharacter_self_CastInput) == 0x000078, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_GetDriverCharacter_self_CastInput' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_GetDriverCharacter_ReturnValue) == 0x000088, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_GetDriverCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_6) == 0x000090, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Loop_Counter_Variable_2) == 0x000094, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_UpdateFlightMode_FlightMode) == 0x0000A0, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_UpdateFlightMode_FlightMode' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_UpdateFlightMode_bIsOSC) == 0x0000A1, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_UpdateFlightMode_bIsOSC' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_ForwardValue) == 0x0000A8, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_ForwardValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_StrafeValue) == 0x0000B0, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_StrafeValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_UpValue) == 0x0000B4, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_UpValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_PitchValue) == 0x0000B8, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_PitchValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_YawValue) == 0x0000C0, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_YawValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_BoostValue) == 0x0000C8, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_BoostValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_Out_Of_Power) == 0x0000CC, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_Out_Of_Power' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_OscillationAmountValue) == 0x0000D0, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_OscillationAmountValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_WingBlurVFX_VFXWingBlurSystems1) == 0x0000D8, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_WingBlurVFX_VFXWingBlurSystems1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_WingTipVFX_VFXWingTipsSystems1) == 0x0000E8, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_WingTipVFX_VFXWingTipsSystems1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F8, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, Temp_int_Array_Index_Variable_2) == 0x000100, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingOSC_OscillationAngle) == 0x000108, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingOSC_OscillationAngle' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingOSC_WingOSCVariance) == 0x000110, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingOSC_WingOSCVariance' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingOSC_OSCFlipFlop) == 0x000118, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingOSC_OSCFlipFlop' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_7) == 0x000128, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_8) == 0x000129, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_9) == 0x00012A, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_BooleanAND_ReturnValue) == 0x00012B, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_Select_Default) == 0x000130, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_Event_ModuleType) == 0x000138, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_Event_ModuleType' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_SwitchEnum_CmpSuccess) == 0x000139, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Array_Length_ReturnValue_2) == 0x000148, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_IsValid_ReturnValue_10) == 0x00014C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_IntInt_ReturnValue_2) == 0x00014D, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000158, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000160, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_SetVariableFloat_InValue_ImplicitCast_1) == 0x000164, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_SetVariableFloat_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_ForwardAxis_ImplicitCast) == 0x000168, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_ForwardAxis_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_StrafeAxis_ImplicitCast) == 0x00016C, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_StrafeAxis_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, CallFunc_CalculateWingVariables_UpAxis_ImplicitCast) == 0x000170, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::CallFunc_CalculateWingVariables_UpAxis_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_VariableSet_StrafeAxis_ImplicitCast) == 0x000178, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_VariableSet_StrafeAxis_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_VariableSet_UpAxis_ImplicitCast) == 0x000180, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_VariableSet_UpAxis_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_VariableSet_BoostAmount_ImplicitCast) == 0x000188, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_VariableSet_BoostAmount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings, K2Node_VariableSet_OscillationAmount_ImplicitCast) == 0x000190, "Member 'AB_CMO_Wings_C_ExecuteUbergraph_AB_CMO_Wings::K2Node_VariableSet_OscillationAmount_ImplicitCast' has a wrong offset!");

// Function AB_CMO_Wings.AB_CMO_Wings_C.CheckPhysMatBelow
// 0x0798 (0x0798 - 0x0000)
struct AB_CMO_Wings_C_CheckPhysMatBelow final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_8;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_9;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_10;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_11;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_12;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_13;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_14;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_15;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_16;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_17;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_18;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_19;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_20;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_21;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_22;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_23;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_24;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_25;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_26;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_27;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_28;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_29;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_30;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_31;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_32;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_33;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_34;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_35;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_36;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_37;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_38;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_39;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_40;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_41;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_42;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_43;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_44;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_45;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_46;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_47;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_48;                           // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_49;                           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_50;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_51;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_52;                           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_53;                           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_54;                           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_55;                           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_56;                           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_57;                           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_58;                           // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_59;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_60;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_61;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_62;                           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_63;                           // 0x0228(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVehicleSmokeTrailsEnabled_ReturnValue; // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263[0x1];                                      // 0x0263(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356[0x2];                                      // 0x0356(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVehicleSmokeTrailsEnabled_ReturnValue_1; // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_2;          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_3;          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AB[0x5];                                      // 0x04AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      K2Node_Select_Default_3;                           // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_Select_Default_4;                           // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0568(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_653[0x1];                                      // 0x0653(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x06D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default_6;                           // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_1;  // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_2;  // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_3;  // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CMO_Wings_C_CheckPhysMatBelow) == 0x000008, "Wrong alignment on AB_CMO_Wings_C_CheckPhysMatBelow");
static_assert(sizeof(AB_CMO_Wings_C_CheckPhysMatBelow) == 0x000798, "Wrong size on AB_CMO_Wings_C_CheckPhysMatBelow");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_bool_Variable) == 0x000000, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_bool_Variable_1) == 0x000003, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000008, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_real_Variable) == 0x000010, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_bool_Variable_2) == 0x000018, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_int_Variable) == 0x00001C, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_int_Variable_1) == 0x000024, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_byte_Variable) == 0x000028, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable) == 0x000030, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_1) == 0x000038, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_2) == 0x000040, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_3) == 0x000048, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_4) == 0x000050, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_5) == 0x000058, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_6) == 0x000060, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_7) == 0x000068, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_8) == 0x000070, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_9) == 0x000078, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_10) == 0x000080, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_11) == 0x000088, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_12) == 0x000090, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_13) == 0x000098, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_14) == 0x0000A0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_15) == 0x0000A8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_16) == 0x0000B0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_17) == 0x0000B8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_18) == 0x0000C0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_19) == 0x0000C8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_20) == 0x0000D0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_21) == 0x0000D8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_22) == 0x0000E0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_23) == 0x0000E8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_24) == 0x0000F0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_25) == 0x0000F8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_26) == 0x000100, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_27) == 0x000108, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_28) == 0x000110, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_29) == 0x000118, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_30) == 0x000120, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_31) == 0x000128, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_32) == 0x000130, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_33) == 0x000138, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_34) == 0x000140, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_35) == 0x000148, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_36) == 0x000150, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_37) == 0x000158, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_38) == 0x000160, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_39) == 0x000168, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_40) == 0x000170, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_41) == 0x000178, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_42) == 0x000180, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_43) == 0x000188, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_44) == 0x000190, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_45) == 0x000198, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_46) == 0x0001A0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_47) == 0x0001A8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_48) == 0x0001B0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_49) == 0x0001B8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_50) == 0x0001C0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_51) == 0x0001C8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_52) == 0x0001D0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_53) == 0x0001D8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_54) == 0x0001E0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_55) == 0x0001E8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_56) == 0x0001F0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_57) == 0x0001F8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_58) == 0x000200, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_59) == 0x000208, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_60) == 0x000210, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_61) == 0x000218, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_62) == 0x000220, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_object_Variable_63) == 0x000228, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000238, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_3) == 0x000240, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_4) == 0x000241, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_GetVehicleSmokeTrailsEnabled_ReturnValue) == 0x000242, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_GetVehicleSmokeTrailsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000248, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000250, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000258, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_5) == 0x000260, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_bBlockingHit) == 0x000261, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_bInitialOverlap) == 0x000262, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Time) == 0x000264, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Distance) == 0x000268, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Location) == 0x000270, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ImpactPoint) == 0x000288, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Normal) == 0x0002A0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_PhysMat) == 0x0002D0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitActor) == 0x0002D8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitComponent) == 0x0002E0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitBoneName) == 0x0002E8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_BoneName) == 0x0002F0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitItem) == 0x0002F8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ElementIndex) == 0x0002FC, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_FaceIndex) == 0x000300, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_TraceStart) == 0x000308, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_TraceEnd) == 0x000320, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000338, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000340, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000348, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000350, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000351, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BooleanOR_ReturnValue) == 0x000352, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BooleanAND_ReturnValue) == 0x000353, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_6) == 0x000354, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BooleanAND_ReturnValue_1) == 0x000355, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default) == 0x000358, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_real_Variable_1) == 0x000360, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_GetVehicleSmokeTrailsEnabled_ReturnValue_1) == 0x000368, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_GetVehicleSmokeTrailsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_MakeLiteralDouble_ReturnValue_2) == 0x000370, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_MakeLiteralDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000378, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_MakeLiteralDouble_ReturnValue_3) == 0x000380, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_MakeLiteralDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000388, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000390, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000391, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Time_1) == 0x000394, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Distance_1) == 0x000398, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Location_1) == 0x0003A0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003B8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Normal_1) == 0x0003D0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003E8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_PhysMat_1) == 0x000400, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitActor_1) == 0x000408, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitComponent_1) == 0x000410, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitBoneName_1) == 0x000418, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_BoneName_1) == 0x000420, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitItem_1) == 0x000428, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ElementIndex_1) == 0x00042C, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_FaceIndex_1) == 0x000430, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_TraceStart_1) == 0x000438, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_TraceEnd_1) == 0x000450, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_MakeVector_ReturnValue) == 0x000468, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000480, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000488, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000490, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000498, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default_1) == 0x0004A0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0004A8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BooleanOR_ReturnValue_1) == 0x0004A9, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BooleanAND_ReturnValue_2) == 0x0004AA, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default_2) == 0x0004B0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default_3) == 0x0004B8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_SwitchInteger_CmpSuccess) == 0x0004C0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default_4) == 0x0004C8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, Temp_bool_Variable_3) == 0x0004D0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0004D8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default_5) == 0x0004E0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0004E8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsValid_ReturnValue_7) == 0x0004E9, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x0004F0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_IsDedicatedServer_ReturnValue) == 0x0004F8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_GetOwningActor_ReturnValue) == 0x000500, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000508, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_GetActorUpVector_ReturnValue) == 0x000520, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000538, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Add_VectorVector_ReturnValue) == 0x000550, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_LineTraceSingle_OutHit) == 0x000568, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_LineTraceSingle_ReturnValue) == 0x000650, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000651, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000652, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Time_2) == 0x000654, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Distance_2) == 0x000658, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Location_2) == 0x000660, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000678, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_Normal_2) == 0x000690, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0006A8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_PhysMat_2) == 0x0006C0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitActor_2) == 0x0006C8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitComponent_2) == 0x0006D0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitBoneName_2) == 0x0006D8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_BoneName_2) == 0x0006E0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_HitItem_2) == 0x0006E8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_ElementIndex_2) == 0x0006EC, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_FaceIndex_2) == 0x0006F0, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_TraceStart_2) == 0x0006F8, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_BreakHitResult_TraceEnd_2) == 0x000710, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000728, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, K2Node_Select_Default_6) == 0x000730, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000738, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000740, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000748, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000750, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000758, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000760, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000768, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000770, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000778, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000780, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_SetVariableFloat_InValue_ImplicitCast_1) == 0x000788, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_SetVariableFloat_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_SetVariableFloat_InValue_ImplicitCast_2) == 0x00078C, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_SetVariableFloat_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AB_CMO_Wings_C_CheckPhysMatBelow, CallFunc_SetVariableFloat_InValue_ImplicitCast_3) == 0x000790, "Member 'AB_CMO_Wings_C_CheckPhysMatBelow::CallFunc_SetVariableFloat_InValue_ImplicitCast_3' has a wrong offset!");

// Function AB_CMO_Wings.AB_CMO_Wings_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_CMO_Wings_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CMO_Wings_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_CMO_Wings_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_CMO_Wings_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_CMO_Wings_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_CMO_Wings_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_CMO_Wings_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_CMO_Wings.AB_CMO_Wings_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_CMO_Wings_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CMO_Wings_C_AnimGraph) == 0x000008, "Wrong alignment on AB_CMO_Wings_C_AnimGraph");
static_assert(sizeof(AB_CMO_Wings_C_AnimGraph) == 0x000010, "Wrong size on AB_CMO_Wings_C_AnimGraph");
static_assert(offsetof(AB_CMO_Wings_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_CMO_Wings_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

