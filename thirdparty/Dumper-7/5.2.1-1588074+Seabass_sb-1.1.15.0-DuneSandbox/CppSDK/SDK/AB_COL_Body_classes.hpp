#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_COL_Body

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_COL_Body.AB_COL_Body_C
// 0x0770 (0x0D80 - 0x0610)
class UAB_COL_Body_C final : public UDuneOrnithopterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0610(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0618(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0620(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0628(0x0020)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0648(0x0470)()
	uint8                                         Pad_AB8[0x8];                                      // 0x0AB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0AC0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0B20(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0B80(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0BC8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0BE8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0C30(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0C50(0x00C8)()
	double                                        __CustomProperty_IKWeight_Ramp_E4D7FCD3477385115F061CB6B77F449B; // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_LoadingRampTarget_E4D7FCD3477385115F061CB6B77F449B; // 0x0D20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenRamp;                                         // 0x0D38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D39[0x7];                                      // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IKTraceDistance;                                   // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_LoadingRamp;                                // 0x0D48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageSmokeThreshold;                              // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_X;                                      // 0x0D68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6C[0x4];                                      // 0x0D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IKWeight_Ramp;                                     // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_COL_Body(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_COL_Body_C">();
	}
	static class UAB_COL_Body_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_COL_Body_C>();
	}
};
static_assert(alignof(UAB_COL_Body_C) == 0x000010, "Wrong alignment on UAB_COL_Body_C");
static_assert(sizeof(UAB_COL_Body_C) == 0x000D80, "Wrong size on UAB_COL_Body_C");
static_assert(offsetof(UAB_COL_Body_C, UberGraphFrame) == 0x000610, "Member 'UAB_COL_Body_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimBlueprintExtension_PropertyAccess) == 0x000618, "Member 'UAB_COL_Body_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimBlueprintExtension_Base) == 0x000620, "Member 'UAB_COL_Body_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_Root) == 0x000628, "Member 'UAB_COL_Body_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_ControlRig) == 0x000648, "Member 'UAB_COL_Body_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_TransitionResult_1) == 0x000AC0, "Member 'UAB_COL_Body_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_TransitionResult) == 0x000B20, "Member 'UAB_COL_Body_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_SequencePlayer_1) == 0x000B80, "Member 'UAB_COL_Body_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_StateResult_1) == 0x000BC8, "Member 'UAB_COL_Body_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_SequencePlayer) == 0x000BE8, "Member 'UAB_COL_Body_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_StateResult) == 0x000C30, "Member 'UAB_COL_Body_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, AnimGraphNode_StateMachine) == 0x000C50, "Member 'UAB_COL_Body_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, __CustomProperty_IKWeight_Ramp_E4D7FCD3477385115F061CB6B77F449B) == 0x000D18, "Member 'UAB_COL_Body_C::__CustomProperty_IKWeight_Ramp_E4D7FCD3477385115F061CB6B77F449B' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, __CustomProperty_LoadingRampTarget_E4D7FCD3477385115F061CB6B77F449B) == 0x000D20, "Member 'UAB_COL_Body_C::__CustomProperty_LoadingRampTarget_E4D7FCD3477385115F061CB6B77F449B' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, bOpenRamp) == 0x000D38, "Member 'UAB_COL_Body_C::bOpenRamp' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, IKTraceDistance) == 0x000D40, "Member 'UAB_COL_Body_C::IKTraceDistance' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, Target_LoadingRamp) == 0x000D48, "Member 'UAB_COL_Body_C::Target_LoadingRamp' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, DamageSmokeThreshold) == 0x000D60, "Member 'UAB_COL_Body_C::DamageSmokeThreshold' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, Delta_Time_X) == 0x000D68, "Member 'UAB_COL_Body_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UAB_COL_Body_C, IKWeight_Ramp) == 0x000D70, "Member 'UAB_COL_Body_C::IKWeight_Ramp' has a wrong offset!");

}

