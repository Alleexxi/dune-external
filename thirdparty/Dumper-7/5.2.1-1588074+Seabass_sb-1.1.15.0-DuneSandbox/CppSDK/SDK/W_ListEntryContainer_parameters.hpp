#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ListEntryContainer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_ListEntryContainer.W_ListEntryContainer_C.BP_SetHovered
// 0x0002 (0x0002 - 0x0000)
struct W_ListEntryContainer_C_BP_SetHovered final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInstant;                                        // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_BP_SetHovered) == 0x000001, "Wrong alignment on W_ListEntryContainer_C_BP_SetHovered");
static_assert(sizeof(W_ListEntryContainer_C_BP_SetHovered) == 0x000002, "Wrong size on W_ListEntryContainer_C_BP_SetHovered");
static_assert(offsetof(W_ListEntryContainer_C_BP_SetHovered, bIsHovered) == 0x000000, "Member 'W_ListEntryContainer_C_BP_SetHovered::bIsHovered' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_BP_SetHovered, bIsInstant) == 0x000001, "Member 'W_ListEntryContainer_C_BP_SetHovered::bIsInstant' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.BP_SetSelected
// 0x0002 (0x0002 - 0x0000)
struct W_ListEntryContainer_C_BP_SetSelected final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInstant;                                        // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_BP_SetSelected) == 0x000001, "Wrong alignment on W_ListEntryContainer_C_BP_SetSelected");
static_assert(sizeof(W_ListEntryContainer_C_BP_SetSelected) == 0x000002, "Wrong size on W_ListEntryContainer_C_BP_SetSelected");
static_assert(offsetof(W_ListEntryContainer_C_BP_SetSelected, bIsSelected) == 0x000000, "Member 'W_ListEntryContainer_C_BP_SetSelected::bIsSelected' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_BP_SetSelected, bIsInstant) == 0x000001, "Member 'W_ListEntryContainer_C_BP_SetSelected::bIsInstant' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.ExecuteUbergraph_W_ListEntryContainer
// 0x0070 (0x0070 - 0x0000)
struct W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_2;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_3;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsHovered;                           // 0x0068(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInstant_1;                         // 0x0069(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x006A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInstant;                           // 0x006B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRowFill_Coefficient_ImplicitCast;      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer) == 0x000008, "Wrong alignment on W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer");
static_assert(sizeof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer) == 0x000070, "Wrong size on W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, EntryPoint) == 0x000000, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_bool_Variable) == 0x000004, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_byte_Variable) == 0x000005, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_byte_Variable_1) == 0x000006, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_bool_Variable_1) == 0x000007, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_byte_Variable_2) == 0x000008, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_byte_Variable_3) == 0x000009, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_bool_Variable_2) == 0x00000A, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_int_Variable) == 0x00000C, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_int_Variable_1) == 0x000010, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_bool_Variable_3) == 0x000014, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_byte_Variable_4) == 0x000015, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_byte_Variable_5) == 0x000016, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_bool_Variable_4) == 0x000017, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_int_Variable_2) == 0x000018, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, Temp_int_Variable_3) == 0x00001C, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Event_IsDesignTime) == 0x000020, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Select_Default) == 0x000021, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Select_Default_1) == 0x000022, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000028, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000030, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000040, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Select_Default_2) == 0x000048, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_SlotAsGridSlot_ReturnValue_2) == 0x000050, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_SlotAsGridSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000058, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Select_Default_3) == 0x000059, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Select_Default_4) == 0x00005C, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_SlotAsGridSlot_ReturnValue_3) == 0x000060, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_SlotAsGridSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Event_bIsHovered) == 0x000068, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Event_bIsHovered' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Event_bIsInstant_1) == 0x000069, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Event_bIsInstant_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Event_bIsSelected) == 0x00006A, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, K2Node_Event_bIsInstant) == 0x00006B, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::K2Node_Event_bIsInstant' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer, CallFunc_SetRowFill_Coefficient_ImplicitCast) == 0x00006C, "Member 'W_ListEntryContainer_C_ExecuteUbergraph_W_ListEntryContainer::CallFunc_SetRowFill_Coefficient_ImplicitCast' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ListEntryContainer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_PreConstruct) == 0x000001, "Wrong alignment on W_ListEntryContainer_C_PreConstruct");
static_assert(sizeof(W_ListEntryContainer_C_PreConstruct) == 0x000001, "Wrong size on W_ListEntryContainer_C_PreConstruct");
static_assert(offsetof(W_ListEntryContainer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ListEntryContainer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.Set Hovered
// 0x0028 (0x0028 - 0x0000)
struct W_ListEntryContainer_C_Set_Hovered final
{
public:
	bool                                          IsHovered_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInstant;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_Set_Hovered) == 0x000008, "Wrong alignment on W_ListEntryContainer_C_Set_Hovered");
static_assert(sizeof(W_ListEntryContainer_C_Set_Hovered) == 0x000028, "Wrong size on W_ListEntryContainer_C_Set_Hovered");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, IsHovered_) == 0x000000, "Member 'W_ListEntryContainer_C_Set_Hovered::IsHovered_' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, IsInstant) == 0x000001, "Member 'W_ListEntryContainer_C_Set_Hovered::IsInstant' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, Temp_bool_Variable) == 0x000002, "Member 'W_ListEntryContainer_C_Set_Hovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, Temp_real_Variable) == 0x000004, "Member 'W_ListEntryContainer_C_Set_Hovered::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, Temp_real_Variable_1) == 0x000008, "Member 'W_ListEntryContainer_C_Set_Hovered::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, Temp_bool_Variable_1) == 0x00000C, "Member 'W_ListEntryContainer_C_Set_Hovered::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, Temp_byte_Variable) == 0x00000D, "Member 'W_ListEntryContainer_C_Set_Hovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, Temp_byte_Variable_1) == 0x00000E, "Member 'W_ListEntryContainer_C_Set_Hovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, K2Node_Select_Default) == 0x00000F, "Member 'W_ListEntryContainer_C_Set_Hovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'W_ListEntryContainer_C_Set_Hovered::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, K2Node_Select_Default_1) == 0x000018, "Member 'W_ListEntryContainer_C_Set_Hovered::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Hovered, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'W_ListEntryContainer_C_Set_Hovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.Set Selected
// 0x0040 (0x0040 - 0x0000)
struct W_ListEntryContainer_C_Set_Selected final
{
public:
	bool                                          IsSelected_;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInstant;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_Set_Selected) == 0x000008, "Wrong alignment on W_ListEntryContainer_C_Set_Selected");
static_assert(sizeof(W_ListEntryContainer_C_Set_Selected) == 0x000040, "Wrong size on W_ListEntryContainer_C_Set_Selected");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, IsSelected_) == 0x000000, "Member 'W_ListEntryContainer_C_Set_Selected::IsSelected_' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, IsInstant) == 0x000001, "Member 'W_ListEntryContainer_C_Set_Selected::IsInstant' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_bool_Variable) == 0x000002, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_real_Variable) == 0x000004, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_bool_Variable_1) == 0x000008, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_real_Variable_1) == 0x00000C, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_real_Variable_2) == 0x000010, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_bool_Variable_2) == 0x000014, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, K2Node_Select_Default) == 0x000018, "Member 'W_ListEntryContainer_C_Set_Selected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_byte_Variable) == 0x00001C, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, Temp_byte_Variable_1) == 0x00001D, "Member 'W_ListEntryContainer_C_Set_Selected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, K2Node_Select_Default_1) == 0x00001E, "Member 'W_ListEntryContainer_C_Set_Selected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'W_ListEntryContainer_C_Set_Selected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'W_ListEntryContainer_C_Set_Selected::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, CallFunc_GetEndTime_ReturnValue) == 0x000030, "Member 'W_ListEntryContainer_C_Set_Selected::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, K2Node_Select_Default_2) == 0x000034, "Member 'W_ListEntryContainer_C_Set_Selected::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_Set_Selected, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'W_ListEntryContainer_C_Set_Selected::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.SetupGhostSlot
// 0x0018 (0x0018 - 0x0000)
struct W_ListEntryContainer_C_SetupGhostSlot final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_SetupGhostSlot) == 0x000008, "Wrong alignment on W_ListEntryContainer_C_SetupGhostSlot");
static_assert(sizeof(W_ListEntryContainer_C_SetupGhostSlot) == 0x000018, "Wrong size on W_ListEntryContainer_C_SetupGhostSlot");
static_assert(offsetof(W_ListEntryContainer_C_SetupGhostSlot, CallFunc_BreakVector2D_X) == 0x000000, "Member 'W_ListEntryContainer_C_SetupGhostSlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_SetupGhostSlot, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'W_ListEntryContainer_C_SetupGhostSlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_SetupGhostSlot, CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast) == 0x000010, "Member 'W_ListEntryContainer_C_SetupGhostSlot::CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_SetupGhostSlot, CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast) == 0x000014, "Member 'W_ListEntryContainer_C_SetupGhostSlot::CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast' has a wrong offset!");

// Function W_ListEntryContainer.W_ListEntryContainer_C.SetupSlot
// 0x0020 (0x0020 - 0x0000)
struct W_ListEntryContainer_C_SetupSlot final
{
public:
	class UGridSlot*                              Grid_Slot;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Padding_0;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Horizontal_Alignment;                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Vertical_Alignment;                                // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ListEntryContainer_C_SetupSlot) == 0x000008, "Wrong alignment on W_ListEntryContainer_C_SetupSlot");
static_assert(sizeof(W_ListEntryContainer_C_SetupSlot) == 0x000020, "Wrong size on W_ListEntryContainer_C_SetupSlot");
static_assert(offsetof(W_ListEntryContainer_C_SetupSlot, Grid_Slot) == 0x000000, "Member 'W_ListEntryContainer_C_SetupSlot::Grid_Slot' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_SetupSlot, Padding_0) == 0x000008, "Member 'W_ListEntryContainer_C_SetupSlot::Padding_0' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_SetupSlot, Horizontal_Alignment) == 0x000018, "Member 'W_ListEntryContainer_C_SetupSlot::Horizontal_Alignment' has a wrong offset!");
static_assert(offsetof(W_ListEntryContainer_C_SetupSlot, Vertical_Alignment) == 0x000019, "Member 'W_ListEntryContainer_C_SetupSlot::Vertical_Alignment' has a wrong offset!");

}

