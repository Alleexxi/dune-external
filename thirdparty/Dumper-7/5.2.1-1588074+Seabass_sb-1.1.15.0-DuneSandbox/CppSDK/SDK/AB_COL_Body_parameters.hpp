#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_COL_Body

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AB_COL_Body.AB_COL_Body_C.ExecuteUbergraph_AB_COL_Body
// 0x0038 (0x0038 - 0x0000)
struct AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateLoadingRamp_bOpenRampValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateLoadingRamp_TargetLoadingRampValue; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateLoadingRamp_IKWeightRampValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateLoadingRamp_DeltaTime_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body) == 0x000008, "Wrong alignment on AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body");
static_assert(sizeof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body) == 0x000038, "Wrong size on AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body");
static_assert(offsetof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body, EntryPoint) == 0x000000, "Member 'AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body, CallFunc_CalculateLoadingRamp_bOpenRampValue) == 0x000008, "Member 'AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body::CallFunc_CalculateLoadingRamp_bOpenRampValue' has a wrong offset!");
static_assert(offsetof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body, CallFunc_CalculateLoadingRamp_TargetLoadingRampValue) == 0x000010, "Member 'AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body::CallFunc_CalculateLoadingRamp_TargetLoadingRampValue' has a wrong offset!");
static_assert(offsetof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body, CallFunc_CalculateLoadingRamp_IKWeightRampValue) == 0x000028, "Member 'AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body::CallFunc_CalculateLoadingRamp_IKWeightRampValue' has a wrong offset!");
static_assert(offsetof(AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body, CallFunc_CalculateLoadingRamp_DeltaTime_ImplicitCast) == 0x000030, "Member 'AB_COL_Body_C_ExecuteUbergraph_AB_COL_Body::CallFunc_CalculateLoadingRamp_DeltaTime_ImplicitCast' has a wrong offset!");

// Function AB_COL_Body.AB_COL_Body_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_COL_Body_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_COL_Body_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_COL_Body_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_COL_Body_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_COL_Body_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_COL_Body_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_COL_Body_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_COL_Body.AB_COL_Body_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_COL_Body_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_COL_Body_C_AnimGraph) == 0x000008, "Wrong alignment on AB_COL_Body_C_AnimGraph");
static_assert(sizeof(AB_COL_Body_C_AnimGraph) == 0x000010, "Wrong size on AB_COL_Body_C_AnimGraph");
static_assert(offsetof(AB_COL_Body_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_COL_Body_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

