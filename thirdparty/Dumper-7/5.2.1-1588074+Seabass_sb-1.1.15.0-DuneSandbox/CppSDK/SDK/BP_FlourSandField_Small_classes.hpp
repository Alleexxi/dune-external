#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlourSandField_Small

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FlourSandField_Small.BP_FlourSandField_Small_C
// 0x0020 (0x06A8 - 0x0688)
class ABP_FlourSandField_Small_C final : public AFlourSandField
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      SandVFX;                                           // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_ExclusionZone;                                  // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          FIeldIsActive;                                     // 0x06A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void OnRep_FIeldIsActive();
	void ExecuteUbergraph_BP_FlourSandField_Small(int32 EntryPoint);
	void BP_OnFieldDeactivated();
	void BP_OnFieldActivated();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FlourSandField_Small_C">();
	}
	static class ABP_FlourSandField_Small_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FlourSandField_Small_C>();
	}
};
static_assert(alignof(ABP_FlourSandField_Small_C) == 0x000008, "Wrong alignment on ABP_FlourSandField_Small_C");
static_assert(sizeof(ABP_FlourSandField_Small_C) == 0x0006A8, "Wrong size on ABP_FlourSandField_Small_C");
static_assert(offsetof(ABP_FlourSandField_Small_C, UberGraphFrame) == 0x000688, "Member 'ABP_FlourSandField_Small_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FlourSandField_Small_C, SandVFX) == 0x000690, "Member 'ABP_FlourSandField_Small_C::SandVFX' has a wrong offset!");
static_assert(offsetof(ABP_FlourSandField_Small_C, BP_ExclusionZone) == 0x000698, "Member 'ABP_FlourSandField_Small_C::BP_ExclusionZone' has a wrong offset!");
static_assert(offsetof(ABP_FlourSandField_Small_C, FIeldIsActive) == 0x0006A0, "Member 'ABP_FlourSandField_Small_C::FIeldIsActive' has a wrong offset!");

}

