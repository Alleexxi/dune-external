#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BuildingBlueprintHud

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_BuildingBlueprintHud.W_BuildingBlueprintHud_C.ShowCanPlaceIndicator
// 0x0001 (0x0001 - 0x0000)
struct W_BuildingBlueprintHud_C_ShowCanPlaceIndicator final
{
public:
	bool                                          CanBePlaced;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildingBlueprintHud_C_ShowCanPlaceIndicator) == 0x000001, "Wrong alignment on W_BuildingBlueprintHud_C_ShowCanPlaceIndicator");
static_assert(sizeof(W_BuildingBlueprintHud_C_ShowCanPlaceIndicator) == 0x000001, "Wrong size on W_BuildingBlueprintHud_C_ShowCanPlaceIndicator");
static_assert(offsetof(W_BuildingBlueprintHud_C_ShowCanPlaceIndicator, CanBePlaced) == 0x000000, "Member 'W_BuildingBlueprintHud_C_ShowCanPlaceIndicator::CanBePlaced' has a wrong offset!");

// Function W_BuildingBlueprintHud.W_BuildingBlueprintHud_C.SetBlockedReason
// 0x0018 (0x0018 - 0x0000)
struct W_BuildingBlueprintHud_C_SetBlockedReason final
{
public:
	class FText                                   BlockedReason;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_BuildingBlueprintHud_C_SetBlockedReason) == 0x000008, "Wrong alignment on W_BuildingBlueprintHud_C_SetBlockedReason");
static_assert(sizeof(W_BuildingBlueprintHud_C_SetBlockedReason) == 0x000018, "Wrong size on W_BuildingBlueprintHud_C_SetBlockedReason");
static_assert(offsetof(W_BuildingBlueprintHud_C_SetBlockedReason, BlockedReason) == 0x000000, "Member 'W_BuildingBlueprintHud_C_SetBlockedReason::BlockedReason' has a wrong offset!");

// Function W_BuildingBlueprintHud.W_BuildingBlueprintHud_C.ExecuteUbergraph_W_BuildingBlueprintHud
// 0x0030 (0x0030 - 0x0000)
struct W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_BlockedReason;                        // 0x0010(0x0018)(ConstParm)
	bool                                          K2Node_Event_CanBePlaced;                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               Temp_byte_Variable_5;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGUIControlMode                               K2Node_Event_InputMode;                            // 0x002A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud) == 0x000008, "Wrong alignment on W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud");
static_assert(sizeof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud) == 0x000030, "Wrong size on W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, EntryPoint) == 0x000000, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, Temp_byte_Variable) == 0x000004, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, Temp_byte_Variable_1) == 0x000005, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, Temp_byte_Variable_2) == 0x000006, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, Temp_byte_Variable_3) == 0x000007, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, Temp_byte_Variable_4) == 0x000008, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, K2Node_Event_BlockedReason) == 0x000010, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::K2Node_Event_BlockedReason' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, K2Node_Event_CanBePlaced) == 0x000028, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::K2Node_Event_CanBePlaced' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, Temp_byte_Variable_5) == 0x000029, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, K2Node_Event_InputMode) == 0x00002A, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::K2Node_Event_InputMode' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, K2Node_Select_Default) == 0x00002B, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud, K2Node_Select_Default_1) == 0x00002C, "Member 'W_BuildingBlueprintHud_C_ExecuteUbergraph_W_BuildingBlueprintHud::K2Node_Select_Default_1' has a wrong offset!");

// Function W_BuildingBlueprintHud.W_BuildingBlueprintHud_C.BP_OnGUIControlModeChanged
// 0x0001 (0x0001 - 0x0000)
struct W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged final
{
public:
	EGUIControlMode                               InputMode;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged) == 0x000001, "Wrong alignment on W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged");
static_assert(sizeof(W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged) == 0x000001, "Wrong size on W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged");
static_assert(offsetof(W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged, InputMode) == 0x000000, "Member 'W_BuildingBlueprintHud_C_BP_OnGUIControlModeChanged::InputMode' has a wrong offset!");

}

