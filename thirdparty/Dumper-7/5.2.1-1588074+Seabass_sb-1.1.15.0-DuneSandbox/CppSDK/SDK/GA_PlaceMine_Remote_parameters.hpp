#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PlaceMine_Remote

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.ClientSetMine
// 0x0008 (0x0008 - 0x0000)
struct GA_PlaceMine_Remote_C_ClientSetMine final
{
public:
	class ABP_Mine_Remote_Base_C*                 AuthMine;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_ClientSetMine) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_ClientSetMine");
static_assert(sizeof(GA_PlaceMine_Remote_C_ClientSetMine) == 0x000008, "Wrong size on GA_PlaceMine_Remote_C_ClientSetMine");
static_assert(offsetof(GA_PlaceMine_Remote_C_ClientSetMine, AuthMine) == 0x000000, "Member 'GA_PlaceMine_Remote_C_ClientSetMine::AuthMine' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.ExecuteUbergraph_GA_PlaceMine_Remote
// 0x08B0 (0x08B0 - 0x0000)
struct GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FHitResult& ImpactResult)> K2Node_CreateDelegate_OutputDelegate;     // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue_1;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Mine_Remote_Base_C*                 K2Node_CustomEvent_AuthMine;                       // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCommitOnRelease_bCommit;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mine_Remote_Base_C*                 K2Node_DynamicCast_AsBP_Mine_Remote_Base;          // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMineForClient_FoundMine;              // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCooldown_ReturnValue;     // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCasterSuspending_bIsSuspending;         // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mine_Remote_Base_C*                 K2Node_CustomEvent_Remote_Mine;                    // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Optional_Attach_Actor;          // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x019C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCooldownWithDuration_ReturnValue; // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x01B0(0x00B0)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCommitOnRelease_bCommit_1;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mine_Remote_Base_C*                 K2Node_DynamicCast_AsBP_Mine_Remote_Base_1;        // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_ImpactResult;                   // 0x0288(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0450(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue_1;           // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2[0x2];                                      // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x04B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileThrowableBase_C*          CallFunc_SpawnThrowable_Throwable;                 // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x04D8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x04E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue_2;                  // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0530(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A[0x2];                                      // 0x061A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0698(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TestSpawnAttachPoint_SpawnTransform;      // 0x06F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_TestSpawnAttachPoint_AttachActor;         // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0760(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x084A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84B[0x1];                                      // 0x084B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x084C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x087C(0x0010)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x088C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88D[0x3];                                      // 0x088D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0890(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x08A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A3[0x1];                                      // 0x08A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_CommitAbilityCooldownWithDuration_Duration_ImplicitCast; // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote) == 0x000010, "Wrong alignment on GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote");
static_assert(sizeof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote) == 0x0008B0, "Wrong size on GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, EntryPoint) == 0x000000, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_WaitDelay_ReturnValue) == 0x000008, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValidClass_ReturnValue) == 0x000024, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000028, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetPlayLength_ReturnValue) == 0x000034, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_WaitDelay_ReturnValue_1) == 0x000038, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_WaitDelay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_3) == 0x000050, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_HasAuthority_ReturnValue) == 0x000051, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_Event_bWasCancelled) == 0x00006C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000070, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetActorForwardVector_ReturnValue) == 0x000080, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CustomEvent_DestroyedActor) == 0x0000E0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000100, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000118, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_3) == 0x000130, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CustomEvent_AuthMine) == 0x000140, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CustomEvent_AuthMine' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_TryCommitOnRelease_bCommit) == 0x000148, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_TryCommitOnRelease_bCommit' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_DynamicCast_AsBP_Mine_Remote_Base) == 0x000150, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_DynamicCast_AsBP_Mine_Remote_Base' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_4) == 0x00015C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_4) == 0x00016C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x00016D, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_FindMineForClient_FoundMine) == 0x00016E, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_FindMineForClient_FoundMine' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_CommitAbilityCooldown_ReturnValue) == 0x00016F, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_CommitAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Not_PreBool_ReturnValue_1) == 0x000170, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_5) == 0x000171, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsCasterSuspending_bIsSuspending) == 0x000172, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsCasterSuspending_bIsSuspending' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BooleanAND_ReturnValue) == 0x000173, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BooleanAND_ReturnValue_1) == 0x000174, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_6) == 0x000175, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CustomEvent_Remote_Mine) == 0x000178, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CustomEvent_Remote_Mine' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CustomEvent_Optional_Attach_Actor) == 0x000180, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CustomEvent_Optional_Attach_Actor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_AttachToActor_ReturnValue) == 0x000188, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_7) == 0x000189, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_5) == 0x00018C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_6) == 0x00019C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_CommitAbilityCooldownWithDuration_ReturnValue) == 0x0001AC, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_CommitAbilityCooldownWithDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_MakeStruct_GameplayEventData) == 0x0001B0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_7) == 0x000260, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_TryCommitOnRelease_bCommit_1) == 0x000270, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_TryCommitOnRelease_bCommit_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_DynamicCast_AsBP_Mine_Remote_Base_1) == 0x000278, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_DynamicCast_AsBP_Mine_Remote_Base_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_DynamicCast_bSuccess_1) == 0x000280, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CustomEvent_ImpactResult) == 0x000288, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CustomEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_bBlockingHit) == 0x000370, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_bInitialOverlap) == 0x000371, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Time) == 0x000374, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Distance) == 0x000378, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Location) == 0x000380, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_ImpactPoint) == 0x000398, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Normal) == 0x0003B0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_ImpactNormal) == 0x0003C8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_PhysMat) == 0x0003E0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitActor) == 0x0003E8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitComponent) == 0x0003F0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitBoneName) == 0x0003F8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_BoneName) == 0x000400, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitItem) == 0x000408, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_ElementIndex) == 0x00040C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_FaceIndex) == 0x000410, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_TraceStart) == 0x000418, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_TraceEnd) == 0x000430, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_8) == 0x000448, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetTransform_ReturnValue) == 0x000450, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_AttachToActor_ReturnValue_1) == 0x0004B0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_AttachToActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_9) == 0x0004B1, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_8) == 0x0004B4, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0004C8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_SpawnThrowable_Throwable) == 0x0004D0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_SpawnThrowable_Throwable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_MakeArray_Array) == 0x0004D8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_SphereTraceMulti_OutHits) == 0x0004E8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_SphereTraceMulti_ReturnValue) == 0x0004F8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_DynamicCast_AsDune_Character) == 0x000500, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_DynamicCast_bSuccess_2) == 0x000508, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Array_Length_ReturnValue) == 0x00050C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Less_IntInt_ReturnValue) == 0x000510, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000518, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_WaitDelay_ReturnValue_2) == 0x000520, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_WaitDelay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, Temp_int_Array_Index_Variable) == 0x000528, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Array_Get_Item) == 0x000530, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000618, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000619, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Time_1) == 0x00061C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Distance_1) == 0x000620, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Location_1) == 0x000628, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000640, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_Normal_1) == 0x000658, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000670, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_PhysMat_1) == 0x000688, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitActor_1) == 0x000690, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitComponent_1) == 0x000698, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitBoneName_1) == 0x0006A0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_BoneName_1) == 0x0006A8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_HitItem_1) == 0x0006B0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_ElementIndex_1) == 0x0006B4, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_FaceIndex_1) == 0x0006B8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_TraceStart_1) == 0x0006C0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BreakHitResult_TraceEnd_1) == 0x0006D8, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_TestSpawnAttachPoint_SpawnTransform) == 0x0006F0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_TestSpawnAttachPoint_SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_TestSpawnAttachPoint_AttachActor) == 0x000750, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_TestSpawnAttachPoint_AttachActor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000758, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000760, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000848, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Array_Contains_ReturnValue) == 0x000849, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_IsValid_ReturnValue_10) == 0x00084A, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_9) == 0x00084C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_RandomRotator_ReturnValue) == 0x000860, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_GetAbilityLevel_ReturnValue) == 0x000878, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x00087C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BooleanAND_ReturnValue_2) == 0x00088C, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, K2Node_CreateDelegate_OutputDelegate_10) == 0x000890, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, Temp_bool_True_if_break_was_hit_Variable) == 0x0008A0, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_Not_PreBool_ReturnValue_2) == 0x0008A1, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_BooleanAND_ReturnValue_3) == 0x0008A2, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote, CallFunc_K2_CommitAbilityCooldownWithDuration_Duration_ImplicitCast) == 0x0008A4, "Member 'GA_PlaceMine_Remote_C_ExecuteUbergraph_GA_PlaceMine_Remote::CallFunc_K2_CommitAbilityCooldownWithDuration_Duration_ImplicitCast' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.FindMineForClient
// 0x0060 (0x0060 - 0x0000)
struct GA_PlaceMine_Remote_C_FindMineForClient final
{
public:
	bool                                          FoundMine;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ProjectileThrowableBase_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileThrowableBase_C*          CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_FindMineForClient) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_FindMineForClient");
static_assert(sizeof(GA_PlaceMine_Remote_C_FindMineForClient) == 0x000060, "Wrong size on GA_PlaceMine_Remote_C_FindMineForClient");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, FoundMine) == 0x000000, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::FoundMine' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, K2Node_DynamicCast_AsDune_Character) == 0x000018, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_Array_Get_Item) == 0x000040, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000051, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_FindMineForClient, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'GA_PlaceMine_Remote_C_FindMineForClient::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.IsCasterSuspending
// 0x0038 (0x0038 - 0x0000)
struct GA_PlaceMine_Remote_C_IsCasterSuspending final
{
public:
	bool                                          bIsSuspending;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDuneCharacterMovementComponent*        K2Node_DynamicCast_AsDune_Character_Movement_Component; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSuspending_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_IsCasterSuspending) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_IsCasterSuspending");
static_assert(sizeof(GA_PlaceMine_Remote_C_IsCasterSuspending) == 0x000038, "Wrong size on GA_PlaceMine_Remote_C_IsCasterSuspending");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, bIsSuspending) == 0x000000, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::bIsSuspending' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, K2Node_DynamicCast_AsDune_Character) == 0x000010, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, K2Node_DynamicCast_AsDune_Character_Movement_Component) == 0x000028, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::K2Node_DynamicCast_AsDune_Character_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_IsCasterSuspending, CallFunc_IsSuspending_ReturnValue) == 0x000031, "Member 'GA_PlaceMine_Remote_C_IsCasterSuspending::CallFunc_IsSuspending_ReturnValue' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_PlaceMine_Remote_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_PlaceMine_Remote_C_K2_OnEndAbility");
static_assert(sizeof(GA_PlaceMine_Remote_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_PlaceMine_Remote_C_K2_OnEndAbility");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_PlaceMine_Remote_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.OnStop
// 0x00E8 (0x00E8 - 0x0000)
struct GA_PlaceMine_Remote_C_OnStop final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_PlaceMine_Remote_C_OnStop) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_OnStop");
static_assert(sizeof(GA_PlaceMine_Remote_C_OnStop) == 0x0000E8, "Wrong size on GA_PlaceMine_Remote_C_OnStop");
static_assert(offsetof(GA_PlaceMine_Remote_C_OnStop, ImpactResult) == 0x000000, "Member 'GA_PlaceMine_Remote_C_OnStop::ImpactResult' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.OnThrowableDestroyed
// 0x0008 (0x0008 - 0x0000)
struct GA_PlaceMine_Remote_C_OnThrowableDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_OnThrowableDestroyed) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_OnThrowableDestroyed");
static_assert(sizeof(GA_PlaceMine_Remote_C_OnThrowableDestroyed) == 0x000008, "Wrong size on GA_PlaceMine_Remote_C_OnThrowableDestroyed");
static_assert(offsetof(GA_PlaceMine_Remote_C_OnThrowableDestroyed, DestroyedActor) == 0x000000, "Member 'GA_PlaceMine_Remote_C_OnThrowableDestroyed::DestroyedActor' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.SetupMinePostLocationDetermined
// 0x0010 (0x0010 - 0x0000)
struct GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined final
{
public:
	class ABP_Mine_Remote_Base_C*                 Remote_Mine;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Optional_Attach_Actor;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined");
static_assert(sizeof(GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined) == 0x000010, "Wrong size on GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined");
static_assert(offsetof(GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined, Remote_Mine) == 0x000000, "Member 'GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined::Remote_Mine' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined, Optional_Attach_Actor) == 0x000008, "Member 'GA_PlaceMine_Remote_C_SetupMinePostLocationDetermined::Optional_Attach_Actor' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.TestSpawnAttachPoint
// 0x05E0 (0x05E0 - 0x0000)
struct GA_PlaceMine_Remote_C_TestSpawnAttachPoint final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x00F0(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AttachActor;                                       // 0x0150(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnActor;                                        // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0348(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0378(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463[0x1];                                      // 0x0463(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_1;               // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0580(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint) == 0x000010, "Wrong alignment on GA_PlaceMine_Remote_C_TestSpawnAttachPoint");
static_assert(sizeof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint) == 0x0005E0, "Wrong size on GA_PlaceMine_Remote_C_TestSpawnAttachPoint");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, HitResult) == 0x000000, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::HitResult' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, SpawnTransform) == 0x0000F0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, AttachActor) == 0x000150, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::AttachActor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, SpawnActor) == 0x000158, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::SpawnActor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000160, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000168, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x000169, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_BoneName) == 0x0001F8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitItem) == 0x000200, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_ElementIndex) == 0x000204, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000208, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_TraceStart) == 0x000210, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000240, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Roll) == 0x000258, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Pitch) == 0x00025C, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Yaw) == 0x000260, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_MakeRotFromZ_ReturnValue) == 0x000268, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Roll_1) == 0x000280, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Pitch_1) == 0x000284, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Yaw_1) == 0x000288, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000290, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_MakeRotator_ReturnValue) == 0x000298, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0002B0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_MakeTransform_ReturnValue) == 0x0002D0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Roll_2) == 0x000330, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Pitch_2) == 0x000334, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Yaw_2) == 0x000338, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000340, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, K2Node_MakeArray_Array) == 0x000348, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3) == 0x000358, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000360, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_LineTraceSingle_OutHit) == 0x000378, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_LineTraceSingle_ReturnValue) == 0x000460, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000461, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000462, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Time_1) == 0x000464, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Distance_1) == 0x000468, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Location_1) == 0x000470, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000488, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_Normal_1) == 0x0004A0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0004B8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_PhysMat_1) == 0x0004D0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitActor_1) == 0x0004D8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitComponent_1) == 0x0004E0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004E8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_BoneName_1) == 0x0004F0, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_HitItem_1) == 0x0004F8, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004FC, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_FaceIndex_1) == 0x000500, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_TraceStart_1) == 0x000508, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakHitResult_TraceEnd_1) == 0x000520, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_MakeRotFromZ_ReturnValue_1) == 0x000538, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_MakeRotFromZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000550, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Roll_3) == 0x000554, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Pitch_3) == 0x000558, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BreakRotator_Yaw_3) == 0x00055C, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_BooleanAND_ReturnValue) == 0x000560, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_MakeRotator_ReturnValue_1) == 0x000568, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TestSpawnAttachPoint, CallFunc_MakeTransform_ReturnValue_1) == 0x000580, "Member 'GA_PlaceMine_Remote_C_TestSpawnAttachPoint::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.TryCommitOnRelease
// 0x0002 (0x0002 - 0x0000)
struct GA_PlaceMine_Remote_C_TryCommitOnRelease final
{
public:
	bool                                          bCommit;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCost_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_TryCommitOnRelease) == 0x000001, "Wrong alignment on GA_PlaceMine_Remote_C_TryCommitOnRelease");
static_assert(sizeof(GA_PlaceMine_Remote_C_TryCommitOnRelease) == 0x000002, "Wrong size on GA_PlaceMine_Remote_C_TryCommitOnRelease");
static_assert(offsetof(GA_PlaceMine_Remote_C_TryCommitOnRelease, bCommit) == 0x000000, "Member 'GA_PlaceMine_Remote_C_TryCommitOnRelease::bCommit' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_TryCommitOnRelease, CallFunc_K2_CommitAbilityCost_ReturnValue) == 0x000001, "Member 'GA_PlaceMine_Remote_C_TryCommitOnRelease::CallFunc_K2_CommitAbilityCost_ReturnValue' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.AllowAbilitySwapUnequip
// 0x0010 (0x0010 - 0x0000)
struct GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip final
{
public:
	const class UAbilitySystemComponent*          QueryASC;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyForReactivationASC_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip");
static_assert(sizeof(GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip) == 0x000010, "Wrong size on GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip");
static_assert(offsetof(GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip, QueryASC) == 0x000000, "Member 'GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip::QueryASC' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip, ReturnValue) == 0x000008, "Member 'GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip, CallFunc_IsReadyForReactivationASC_ReturnValue) == 0x000009, "Member 'GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip::CallFunc_IsReadyForReactivationASC_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'GA_PlaceMine_Remote_C_AllowAbilitySwapUnequip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.GetDisplayData
// 0x01F0 (0x01F0 - 0x0000)
struct GA_PlaceMine_Remote_C_GetDisplayData final
{
public:
	const class UAbilitySystemComponent*          InstigatorASC;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAbilityDisplayData                    ReturnValue;                                       // 0x0008(0x00A0)(Parm, OutParm, ReturnParm)
	struct FAbilityDisplayData                    K2Node_MakeStruct_AbilityDisplayData;              // 0x00A8(0x00A0)()
	struct FAbilityDisplayData                    CallFunc_GetDisplayData_ReturnValue;               // 0x0148(0x00A0)()
	bool                                          CallFunc_IsReadyForReactivation_ReturnValue;       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_GetDisplayData) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_GetDisplayData");
static_assert(sizeof(GA_PlaceMine_Remote_C_GetDisplayData) == 0x0001F0, "Wrong size on GA_PlaceMine_Remote_C_GetDisplayData");
static_assert(offsetof(GA_PlaceMine_Remote_C_GetDisplayData, InstigatorASC) == 0x000000, "Member 'GA_PlaceMine_Remote_C_GetDisplayData::InstigatorASC' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_GetDisplayData, ReturnValue) == 0x000008, "Member 'GA_PlaceMine_Remote_C_GetDisplayData::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_GetDisplayData, K2Node_MakeStruct_AbilityDisplayData) == 0x0000A8, "Member 'GA_PlaceMine_Remote_C_GetDisplayData::K2Node_MakeStruct_AbilityDisplayData' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_GetDisplayData, CallFunc_GetDisplayData_ReturnValue) == 0x000148, "Member 'GA_PlaceMine_Remote_C_GetDisplayData::CallFunc_GetDisplayData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_GetDisplayData, CallFunc_IsReadyForReactivation_ReturnValue) == 0x0001E8, "Member 'GA_PlaceMine_Remote_C_GetDisplayData::CallFunc_IsReadyForReactivation_ReturnValue' has a wrong offset!");

// Function GA_PlaceMine_Remote.GA_PlaceMine_Remote_C.K2_CanActivateAbility
// 0x00B8 (0x00B8 - 0x0000)
struct GA_PlaceMine_Remote_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyForReactivation_ReturnValue;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_K2_CanActivateAbility_RelevantTags;       // 0x0078(0x0020)()
	bool                                          CallFunc_K2_CanActivateAbility_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x00AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInStateOrSubstateByTag_ReturnValue;     // 0x00B4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlaceMine_Remote_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_PlaceMine_Remote_C_K2_CanActivateAbility");
static_assert(sizeof(GA_PlaceMine_Remote_C_K2_CanActivateAbility) == 0x0000B8, "Wrong size on GA_PlaceMine_Remote_C_K2_CanActivateAbility");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, CallFunc_IsReadyForReactivation_ReturnValue) == 0x000071, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::CallFunc_IsReadyForReactivation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, CallFunc_K2_CanActivateAbility_RelevantTags) == 0x000078, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::CallFunc_K2_CanActivateAbility_RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, CallFunc_K2_CanActivateAbility_ReturnValue) == 0x000098, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::CallFunc_K2_CanActivateAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, K2Node_DynamicCast_AsDune_Character) == 0x0000A0, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0000AC, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlaceMine_Remote_C_K2_CanActivateAbility, CallFunc_IsInStateOrSubstateByTag_ReturnValue) == 0x0000B4, "Member 'GA_PlaceMine_Remote_C_K2_CanActivateAbility::CallFunc_IsInStateOrSubstateByTag_ReturnValue' has a wrong offset!");

}

