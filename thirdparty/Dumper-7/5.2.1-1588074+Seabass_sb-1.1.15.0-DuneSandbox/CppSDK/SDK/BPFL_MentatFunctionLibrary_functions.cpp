#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_MentatFunctionLibrary

#include "Basic.hpp"

#include "BPFL_MentatFunctionLibrary_classes.hpp"
#include "BPFL_MentatFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BPFL_MentatFunctionLibrary.BPFL_MentatFunctionLibrary_C.UpdateMentatWidget
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FMentatVisionTarget&       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_MentatFunctionLibrary_C::UpdateMentatWidget(class APlayerController* PlayerController, const struct FMentatVisionTarget& Target, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MentatFunctionLibrary_C", "UpdateMentatWidget");

	Params::BPFL_MentatFunctionLibrary_C_UpdateMentatWidget Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Target = std::move(Target);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_MentatFunctionLibrary.BPFL_MentatFunctionLibrary_C.SetMentatVisionStateActive
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool&                                   IsMentatVisionStateActive                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldBeActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_MentatFunctionLibrary_C::SetMentatVisionStateActive(class AActor* Actor, bool& IsMentatVisionStateActive, bool ShouldBeActive, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MentatFunctionLibrary_C", "SetMentatVisionStateActive");

	Params::BPFL_MentatFunctionLibrary_C_SetMentatVisionStateActive Parms{};

	Parms.Actor = Actor;
	Parms.IsMentatVisionStateActive = IsMentatVisionStateActive;
	Parms.ShouldBeActive = ShouldBeActive;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	IsMentatVisionStateActive = Parms.IsMentatVisionStateActive;
}


// Function BPFL_MentatFunctionLibrary.BPFL_MentatFunctionLibrary_C.SetEquipableAbilityBlockActive
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool&                                   IsEquipableAbilityBlocked                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldBeBlocked                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_MentatFunctionLibrary_C::SetEquipableAbilityBlockActive(class AActor* Actor, bool& IsEquipableAbilityBlocked, bool ShouldBeBlocked, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MentatFunctionLibrary_C", "SetEquipableAbilityBlockActive");

	Params::BPFL_MentatFunctionLibrary_C_SetEquipableAbilityBlockActive Parms{};

	Parms.Actor = Actor;
	Parms.IsEquipableAbilityBlocked = IsEquipableAbilityBlocked;
	Parms.ShouldBeBlocked = ShouldBeBlocked;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	IsEquipableAbilityBlocked = Parms.IsEquipableAbilityBlocked;
}


// Function BPFL_MentatFunctionLibrary.BPFL_MentatFunctionLibrary_C.RemoveMentatWidgetForActor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                LocalPlayerController                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bFadeOut                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_MentatFunctionLibrary_C::RemoveMentatWidgetForActor(class APlayerController* LocalPlayerController, class AActor* TargetActor, bool bFadeOut, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MentatFunctionLibrary_C", "RemoveMentatWidgetForActor");

	Params::BPFL_MentatFunctionLibrary_C_RemoveMentatWidgetForActor Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.TargetActor = TargetActor;
	Parms.bFadeOut = bFadeOut;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_MentatFunctionLibrary.BPFL_MentatFunctionLibrary_C.Add Mentat Widget for Actor
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                LocalPlayerController                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           WidgetClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CalculateAppearanceDelay                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ConsiderPingForDelay                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_MentatFunctionLibrary_C::Add_Mentat_Widget_for_Actor(class APlayerController* LocalPlayerController, class UClass* WidgetClass, bool CalculateAppearanceDelay, bool ConsiderPingForDelay, class AActor* TargetActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_MentatFunctionLibrary_C", "Add Mentat Widget for Actor");

	Params::BPFL_MentatFunctionLibrary_C_Add_Mentat_Widget_for_Actor Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.WidgetClass = WidgetClass;
	Parms.CalculateAppearanceDelay = CalculateAppearanceDelay;
	Parms.ConsiderPingForDelay = ConsiderPingForDelay;
	Parms.TargetActor = TargetActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

