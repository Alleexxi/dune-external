#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LensFlareBillboardOptimized_Component

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C
// 0x0060 (0x0790 - 0x0730)
class UBP_LensFlareBillboardOptimized_Component_C final : public UStaticMeshComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0730(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInstanceDynamic*               LensFlare_DynMatInst;                              // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Edges_visualizer;                                  // 0x0740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Intensity_Override;                                // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Flare_Boost___Screen_Center_Extent;                // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Flare_Boost___Screen_Edges_Extent;                 // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Flare_Boost___Screen_Extent_Multiplier_at_Distance; // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Object_Position;                                   // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Flare_Boost___Distance_for_Full_Effect;            // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Flare_Boost___Screen_Center_Multiplier;            // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Flare_Boost___Screen_Edges_Multiplier;             // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LensFlareBillboardOptimized_Component(int32 EntryPoint);
	void Disable_FlareBoost_Visualizator();
	void Edges_visualizer_0();
	void SetOldParamsforCompatibility(const struct FLinearColor& Flare_Tint, double Occlusion);
	void Set_Lens_Flare_Material_Standard_Parameters(class UTexture2D* Flare_Texture, double Flare_Intensity, double Flare_Size, double Flare_Desaturation, double Flare_Rotation_Multiplier, const struct FLinearColor& Flare_Tint, double FlareDiffuse_Intensity, double FlareDiffuse_Radius, const struct FLinearColor& FlareDiffuse_Color, double Contribution_to_Flare_Opacity, double LightShafts_Intensity, double LightShafts_DrawDistance, const struct FLinearColor& LightShafts_Tint);
	void Set_Lens_Flare_Material_Parameters(double Positioning, double Occlusion, double Flare_Strength_Day, double Flare_Strength_Night, double Fadeout_Offset, double Fadeout_Length, double MeshProximityFadeDistance, double Flare_Boost___Screen_Center_Extent_0, double Flare_Boost___Screen_Edge_Extent, double Flare_Boost___Screen_Extent_Multiplier_at_Distance_0, double Flare_Boost___Screen_Center_Multiplier_0, double Flare_Boost___Screen_Edges_Multiplier_0, double Flare_Boost___Distance_for_Full_Effect_0);
	void Set_Lens_Flare_Material_Advanced_Parameters(double LensReflection_Intensity, double LensReflection_Radius, double LensReflection_UVDistortionIntensity, double LensReflection_ChromaOffset, class UTexture2D* Ghost_Kernel_Texture, double Ghost_Intensity, double Ghost_Size, double Ghost_Offset, double Ghost_OffsetStart, const struct FLinearColor& Ghost_Tint, double Ghost_Colorize_Intensity, class UTexture2D* Ghost_Colorize_Gradient_Texture);
	void Set_Lens_Flare(const struct FDataTableRowHandle& DataTable, double LensFlare_Billboard_Size_X, double LensFlare_Billboard_Size_Y);
	void Flicker(double Intensity_Override_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LensFlareBillboardOptimized_Component_C">();
	}
	static class UBP_LensFlareBillboardOptimized_Component_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LensFlareBillboardOptimized_Component_C>();
	}
};
static_assert(alignof(UBP_LensFlareBillboardOptimized_Component_C) == 0x000010, "Wrong alignment on UBP_LensFlareBillboardOptimized_Component_C");
static_assert(sizeof(UBP_LensFlareBillboardOptimized_Component_C) == 0x000790, "Wrong size on UBP_LensFlareBillboardOptimized_Component_C");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, UberGraphFrame) == 0x000730, "Member 'UBP_LensFlareBillboardOptimized_Component_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, LensFlare_DynMatInst) == 0x000738, "Member 'UBP_LensFlareBillboardOptimized_Component_C::LensFlare_DynMatInst' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Edges_visualizer) == 0x000740, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Edges_visualizer' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Intensity_Override) == 0x000748, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Intensity_Override' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Flare_Boost___Screen_Center_Extent) == 0x000750, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Flare_Boost___Screen_Center_Extent' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Flare_Boost___Screen_Edges_Extent) == 0x000758, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Flare_Boost___Screen_Edges_Extent' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Flare_Boost___Screen_Extent_Multiplier_at_Distance) == 0x000760, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Flare_Boost___Screen_Extent_Multiplier_at_Distance' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Object_Position) == 0x000768, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Object_Position' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Flare_Boost___Distance_for_Full_Effect) == 0x000770, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Flare_Boost___Distance_for_Full_Effect' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Flare_Boost___Screen_Center_Multiplier) == 0x000778, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Flare_Boost___Screen_Center_Multiplier' has a wrong offset!");
static_assert(offsetof(UBP_LensFlareBillboardOptimized_Component_C, Flare_Boost___Screen_Edges_Multiplier) == 0x000780, "Member 'UBP_LensFlareBillboardOptimized_Component_C::Flare_Boost___Screen_Edges_Multiplier' has a wrong offset!");

}

