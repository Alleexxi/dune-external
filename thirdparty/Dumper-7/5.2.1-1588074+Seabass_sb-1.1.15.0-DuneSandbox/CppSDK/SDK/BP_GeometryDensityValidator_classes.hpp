#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GeometryDensityValidator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UE4Dreamworld_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GeometryDensityValidator.BP_GeometryDensityValidator_C
// 0x0068 (0x00D8 - 0x0070)
class UBP_GeometryDensityValidator_C final : public USceneValidator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<int64, class UBP_GeometryDensityValidator_PerSectionData_C*> PerSectionDataMap;             // 0x0078(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UPrimitiveComponent*>            PrimitiveComponents;                               // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void BP_Gather_World_Data(class UWorld* World);
	void BP_Gather_World_Section_Data(class UWorld* World, class UBP_GeometryDensityValidator_PerSectionData_C* PerSectionData, const struct FBox& WorldSection);
	void ExecuteUbergraph_BP_GeometryDensityValidator(int32 EntryPoint);
	void GatherWorldData(class UWorld* World);
	void GatherWorldSectionData(class UWorld* World, const struct FValidationWorldSection& WorldSection);
	bool ValidateWorld(bool bSectionsPassedValidation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GeometryDensityValidator_C">();
	}
	static class UBP_GeometryDensityValidator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GeometryDensityValidator_C>();
	}
};
static_assert(alignof(UBP_GeometryDensityValidator_C) == 0x000008, "Wrong alignment on UBP_GeometryDensityValidator_C");
static_assert(sizeof(UBP_GeometryDensityValidator_C) == 0x0000D8, "Wrong size on UBP_GeometryDensityValidator_C");
static_assert(offsetof(UBP_GeometryDensityValidator_C, UberGraphFrame) == 0x000070, "Member 'UBP_GeometryDensityValidator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GeometryDensityValidator_C, PerSectionDataMap) == 0x000078, "Member 'UBP_GeometryDensityValidator_C::PerSectionDataMap' has a wrong offset!");
static_assert(offsetof(UBP_GeometryDensityValidator_C, PrimitiveComponents) == 0x0000C8, "Member 'UBP_GeometryDensityValidator_C::PrimitiveComponents' has a wrong offset!");

}

