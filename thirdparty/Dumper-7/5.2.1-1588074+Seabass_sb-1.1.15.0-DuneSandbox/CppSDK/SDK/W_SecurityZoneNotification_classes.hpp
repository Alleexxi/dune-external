#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SecurityZoneNotification

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SecurityZoneNotification.W_SecurityZoneNotification_C
// 0x00A0 (0x0560 - 0x04C0)
class UW_SecurityZoneNotification_C final : public USecurityZoneNotificationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowChangingZone;                                  // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowNewZone;                                       // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDuneImage*                             Background;                                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FAKECOMPASS;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             IconL;                                             // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             IconR;                                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ProgressBarContainer;                              // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LinearProgressBar_C*                 ProgressBarLeft;                                   // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LinearProgressBar_C*                 ProgressBarRight;                                  // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             ZoneGlow;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             ZoneTopLine;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ProgressBarRunning;                                // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              ProgressStartTime;                                 // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Data_Table_Row_Handle;                             // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void()>              NewEventDispatcher;                                // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        CurrentChangingZoneTimerDuration;                  // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnShowNewZone(const TSoftObjectPtr<class UTexture2D>& Icon);
	void OnShowChangingZone(float ChangingZoneTimer);
	void OnHideNewZone();
	void OnHideChangingZone();
	void ExecuteUbergraph_W_SecurityZoneNotification(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SecurityZoneNotification_C">();
	}
	static class UW_SecurityZoneNotification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SecurityZoneNotification_C>();
	}
};
static_assert(alignof(UW_SecurityZoneNotification_C) == 0x000010, "Wrong alignment on UW_SecurityZoneNotification_C");
static_assert(sizeof(UW_SecurityZoneNotification_C) == 0x000560, "Wrong size on UW_SecurityZoneNotification_C");
static_assert(offsetof(UW_SecurityZoneNotification_C, UberGraphFrame) == 0x0004C0, "Member 'UW_SecurityZoneNotification_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ShowChangingZone) == 0x0004C8, "Member 'UW_SecurityZoneNotification_C::ShowChangingZone' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ShowNewZone) == 0x0004D0, "Member 'UW_SecurityZoneNotification_C::ShowNewZone' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, Background) == 0x0004D8, "Member 'UW_SecurityZoneNotification_C::Background' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, FAKECOMPASS) == 0x0004E0, "Member 'UW_SecurityZoneNotification_C::FAKECOMPASS' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, IconL) == 0x0004E8, "Member 'UW_SecurityZoneNotification_C::IconL' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, IconR) == 0x0004F0, "Member 'UW_SecurityZoneNotification_C::IconR' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ProgressBarContainer) == 0x0004F8, "Member 'UW_SecurityZoneNotification_C::ProgressBarContainer' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ProgressBarLeft) == 0x000500, "Member 'UW_SecurityZoneNotification_C::ProgressBarLeft' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ProgressBarRight) == 0x000508, "Member 'UW_SecurityZoneNotification_C::ProgressBarRight' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ZoneGlow) == 0x000510, "Member 'UW_SecurityZoneNotification_C::ZoneGlow' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ZoneTopLine) == 0x000518, "Member 'UW_SecurityZoneNotification_C::ZoneTopLine' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ProgressBarRunning) == 0x000520, "Member 'UW_SecurityZoneNotification_C::ProgressBarRunning' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, ProgressStartTime) == 0x000528, "Member 'UW_SecurityZoneNotification_C::ProgressStartTime' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, Data_Table_Row_Handle) == 0x000530, "Member 'UW_SecurityZoneNotification_C::Data_Table_Row_Handle' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, NewEventDispatcher) == 0x000540, "Member 'UW_SecurityZoneNotification_C::NewEventDispatcher' has a wrong offset!");
static_assert(offsetof(UW_SecurityZoneNotification_C, CurrentChangingZoneTimerDuration) == 0x000550, "Member 'UW_SecurityZoneNotification_C::CurrentChangingZoneTimerDuration' has a wrong offset!");

}

