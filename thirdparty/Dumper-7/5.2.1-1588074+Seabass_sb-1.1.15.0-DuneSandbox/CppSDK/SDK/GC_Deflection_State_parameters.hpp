#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Deflection_State

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Deflection_State.GC_Deflection_State_C.ExecuteUbergraph_GC_Deflection_State
// 0x0400 (0x0400 - 0x0000)
struct GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue_1;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue_2;    // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x01F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0204(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x020C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x021C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue_3;    // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x025C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x0264(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x0274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_CustomEvent_DuneCharacter;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x02A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_SelectDeflectionMontage_Montage;          // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectDeflectionMontage_Length;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x02C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x02F0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x03E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDifferentAirborneState_IsInDifferentState; // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDifferentAirborneState_CurrentState;  // 0x03FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State) == 0x000008, "Wrong alignment on GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State");
static_assert(sizeof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State) == 0x000400, "Wrong size on GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, EntryPoint) == 0x000000, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_9) == 0x000014, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_8) == 0x00001C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_7) == 0x000034, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_6) == 0x00004C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_5) == 0x000064, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, Temp_name_Variable) == 0x00007C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_5) == 0x000084, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_4) == 0x000094, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_3) == 0x00009C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_2) == 0x0000B4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000BC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_1) == 0x0000CC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000D4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName) == 0x0000E4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000EC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, Temp_name_Variable_1) == 0x0000FC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_17) == 0x000104, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000110, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetAnimInstance_ReturnValue) == 0x000118, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_1) == 0x000121, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000128, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_2) == 0x000130, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_10) == 0x000134, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, Temp_name_Variable_2) == 0x000144, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_10) == 0x00014C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_11) == 0x000154, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000168, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_3) == 0x000170, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000178, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_4) == 0x000180, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetCurrentActiveMontage_ReturnValue_1) == 0x000188, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetCurrentActiveMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_5) == 0x000190, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_12) == 0x000194, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_11) == 0x0001A4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_13) == 0x0001AC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_12) == 0x0001BC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_18) == 0x0001C4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0001D0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0001D8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_6) == 0x0001E0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetCurrentActiveMontage_ReturnValue_2) == 0x0001E8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetCurrentActiveMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_7) == 0x0001F0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_8) == 0x0001F1, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001F4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_13) == 0x000204, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_15) == 0x00020C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_16) == 0x00021C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x000230, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_9) == 0x000238, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000240, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_10) == 0x000248, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetCurrentActiveMontage_ReturnValue_3) == 0x000250, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetCurrentActiveMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_11) == 0x000258, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_14) == 0x00025C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_17) == 0x000264, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_19) == 0x000274, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, Temp_name_Variable_3) == 0x00027C, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_Event_DeltaSeconds) == 0x000284, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsValid_ReturnValue_12) == 0x000288, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_DuneCharacter) == 0x000290, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_DuneCharacter' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_15) == 0x000298, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_18) == 0x0002A0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_SelectDeflectionMontage_Montage) == 0x0002B0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_SelectDeflectionMontage_Montage' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_SelectDeflectionMontage_Length) == 0x0002B8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_SelectDeflectionMontage_Length' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_PlayAnimMontage_ReturnValue) == 0x0002C4, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_19) == 0x0002C8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002D8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_NotifyName_16) == 0x0002E0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_Not_PreBool_ReturnValue) == 0x0002E8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_HitResult) == 0x0002F0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_GetOwner_ReturnValue) == 0x0003D8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CreateDelegate_OutputDelegate_20) == 0x0003E0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_Character) == 0x0003F0, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_PrevMovementMode) == 0x0003F8, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, K2Node_CustomEvent_PreviousCustomMode) == 0x0003F9, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsInDifferentAirborneState_IsInDifferentState) == 0x0003FA, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsInDifferentAirborneState_IsInDifferentState' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_IsInDifferentAirborneState_CurrentState) == 0x0003FB, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_IsInDifferentAirborneState_CurrentState' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0003FC, "Member 'GC_Deflection_State_C_ExecuteUbergraph_GC_Deflection_State::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.HandleQueuedBlockedHit
// 0x00F0 (0x00F0 - 0x0000)
struct GC_Deflection_State_C_HandleQueuedBlockedHit final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_HandleQueuedBlockedHit) == 0x000008, "Wrong alignment on GC_Deflection_State_C_HandleQueuedBlockedHit");
static_assert(sizeof(GC_Deflection_State_C_HandleQueuedBlockedHit) == 0x0000F0, "Wrong size on GC_Deflection_State_C_HandleQueuedBlockedHit");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000008, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000009, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_Time) == 0x00000C, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_Distance) == 0x000010, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_Location) == 0x000018, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000030, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_Normal) == 0x000048, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000060, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_PhysMat) == 0x000078, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_HitActor) == 0x000080, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_HitComponent) == 0x000088, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_HitBoneName) == 0x000090, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_BoneName) == 0x000098, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_HitItem) == 0x0000A0, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_ElementIndex) == 0x0000A4, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000A8, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_TraceStart) == 0x0000B0, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_BreakHitResult_TraceEnd) == 0x0000C8, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, K2Node_DynamicCast_AsDune_Character) == 0x0000E0, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_HandleQueuedBlockedHit, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0000E9, "Member 'GC_Deflection_State_C_HandleQueuedBlockedHit::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.IsInDifferentAirborneState
// 0x0010 (0x0010 - 0x0000)
struct GC_Deflection_State_C_IsInDifferentAirborneState final
{
public:
	class ACharacter*                             TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInDifferentState;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentState;                                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_IsInDifferentAirborneState) == 0x000008, "Wrong alignment on GC_Deflection_State_C_IsInDifferentAirborneState");
static_assert(sizeof(GC_Deflection_State_C_IsInDifferentAirborneState) == 0x000010, "Wrong size on GC_Deflection_State_C_IsInDifferentAirborneState");
static_assert(offsetof(GC_Deflection_State_C_IsInDifferentAirborneState, TargetCharacter) == 0x000000, "Member 'GC_Deflection_State_C_IsInDifferentAirborneState::TargetCharacter' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_IsInDifferentAirborneState, IsInDifferentState) == 0x000008, "Member 'GC_Deflection_State_C_IsInDifferentAirborneState::IsInDifferentState' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_IsInDifferentAirborneState, CurrentState) == 0x000009, "Member 'GC_Deflection_State_C_IsInDifferentAirborneState::CurrentState' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_IsInDifferentAirborneState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'GC_Deflection_State_C_IsInDifferentAirborneState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_IsInDifferentAirborneState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000B, "Member 'GC_Deflection_State_C_IsInDifferentAirborneState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnActive
// 0x01C0 (0x01C0 - 0x0000)
struct GC_Deflection_State_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDifferentSkeletalMesh;                          // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDifferentAirborneState_IsInDifferentState; // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInDifferentAirborneState_CurrentState;  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageableActorComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPosseseablePawnInterface> CallFunc_GetWeaponMesh_self_CastInput;         // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetWeaponMesh_ReturnValue;                // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_1;       // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_2;       // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_3;       // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAB_VFX_DeflectionStances_C*            K2Node_DynamicCast_AsAB_VFX_Deflection_Stances;    // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDamageImmunityHitPredictionType InPredictionType, const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate; // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate_1; // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_2; // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnActive) == 0x000008, "Wrong alignment on GC_Deflection_State_C_OnActive");
static_assert(sizeof(GC_Deflection_State_C_OnActive) == 0x0001C0, "Wrong size on GC_Deflection_State_C_OnActive");
static_assert(offsetof(GC_Deflection_State_C_OnActive, MyTarget) == 0x000000, "Member 'GC_Deflection_State_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, Parameters) == 0x000008, "Member 'GC_Deflection_State_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GC_Deflection_State_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, HasDifferentSkeletalMesh) == 0x0000E1, "Member 'GC_Deflection_State_C_OnActive::HasDifferentSkeletalMesh' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000E8, "Member 'GC_Deflection_State_C_OnActive::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_DynamicCast_AsDune_Character) == 0x0000F0, "Member 'GC_Deflection_State_C_OnActive::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GC_Deflection_State_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_IsInDifferentAirborneState_IsInDifferentState) == 0x0000F9, "Member 'GC_Deflection_State_C_OnActive::CallFunc_IsInDifferentAirborneState_IsInDifferentState' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_IsInDifferentAirborneState_CurrentState) == 0x0000FA, "Member 'GC_Deflection_State_C_OnActive::CallFunc_IsInDifferentAirborneState_CurrentState' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetComponentByClass_ReturnValue) == 0x000100, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_IsLocallyControlled_ReturnValue) == 0x000108, "Member 'GC_Deflection_State_C_OnActive::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000110, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetWeaponMesh_self_CastInput) == 0x000118, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetWeaponMesh_self_CastInput' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetWeaponMesh_ReturnValue) == 0x000128, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetWeaponMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000130, "Member 'GC_Deflection_State_C_OnActive::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetSkeletalMeshAsset_ReturnValue_1) == 0x000138, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetSkeletalMeshAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'GC_Deflection_State_C_OnActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetSkeletalMeshAsset_ReturnValue_2) == 0x000148, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetSkeletalMeshAsset_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000150, "Member 'GC_Deflection_State_C_OnActive::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetSkeletalMeshAsset_ReturnValue_3) == 0x000158, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetSkeletalMeshAsset_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000160, "Member 'GC_Deflection_State_C_OnActive::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000168, "Member 'GC_Deflection_State_C_OnActive::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_GetAnimInstance_ReturnValue) == 0x000170, "Member 'GC_Deflection_State_C_OnActive::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_DynamicCast_AsAB_VFX_Deflection_Stances) == 0x000178, "Member 'GC_Deflection_State_C_OnActive::K2Node_DynamicCast_AsAB_VFX_Deflection_Stances' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'GC_Deflection_State_C_OnActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_BooleanOR_ReturnValue) == 0x000181, "Member 'GC_Deflection_State_C_OnActive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000188, "Member 'GC_Deflection_State_C_OnActive::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_CreateDelegate_OutputDelegate) == 0x000190, "Member 'GC_Deflection_State_C_OnActive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A0, "Member 'GC_Deflection_State_C_OnActive::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnActive, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B0, "Member 'GC_Deflection_State_C_OnActive::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(sizeof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000008, "Wrong size on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(offsetof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A003271B56::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(sizeof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000008, "Wrong size on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(offsetof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02600006D::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(sizeof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000008, "Wrong size on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(offsetof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A02FAA35F2::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(sizeof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000008, "Wrong size on GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(offsetof(GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnBlendOut_E1EAB14C4A51FFDF9FD702A0CE7EC067::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(sizeof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000008, "Wrong size on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(offsetof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A003271B56::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(sizeof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000008, "Wrong size on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(offsetof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02600006D::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(sizeof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000008, "Wrong size on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(offsetof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A02FAA35F2::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(sizeof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000008, "Wrong size on GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(offsetof(GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnCompleted_E1EAB14C4A51FFDF9FD702A0CE7EC067::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnImmunityBlockedHit
// 0x0118 (0x0118 - 0x0000)
struct GC_Deflection_State_C_OnImmunityBlockedHit final
{
public:
	const class AActor*                           InDamagingActor;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             InHitResult;                                       // 0x0008(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnImmunityBlockedHit) == 0x000008, "Wrong alignment on GC_Deflection_State_C_OnImmunityBlockedHit");
static_assert(sizeof(GC_Deflection_State_C_OnImmunityBlockedHit) == 0x000118, "Wrong size on GC_Deflection_State_C_OnImmunityBlockedHit");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, InDamagingActor) == 0x000000, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::InDamagingActor' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, InHitResult) == 0x000008, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::InHitResult' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, K2Node_DynamicCast_AsPawn) == 0x0000F0, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000F9, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, CallFunc_GetOwner_ReturnValue) == 0x000100, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, K2Node_DynamicCast_AsDune_Character) == 0x000108, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHit, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'GC_Deflection_State_C_OnImmunityBlockedHit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnImmunityBlockedHitPredicted
// 0x00F8 (0x00F8 - 0x0000)
struct GC_Deflection_State_C_OnImmunityBlockedHitPredicted final
{
public:
	EDamageImmunityHitPredictionType              InPredictionType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           InDamagingActor;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             InHitResult;                                       // 0x0010(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GC_Deflection_State_C_OnImmunityBlockedHitPredicted) == 0x000008, "Wrong alignment on GC_Deflection_State_C_OnImmunityBlockedHitPredicted");
static_assert(sizeof(GC_Deflection_State_C_OnImmunityBlockedHitPredicted) == 0x0000F8, "Wrong size on GC_Deflection_State_C_OnImmunityBlockedHitPredicted");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHitPredicted, InPredictionType) == 0x000000, "Member 'GC_Deflection_State_C_OnImmunityBlockedHitPredicted::InPredictionType' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHitPredicted, InDamagingActor) == 0x000008, "Member 'GC_Deflection_State_C_OnImmunityBlockedHitPredicted::InDamagingActor' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnImmunityBlockedHitPredicted, InHitResult) == 0x000010, "Member 'GC_Deflection_State_C_OnImmunityBlockedHitPredicted::InHitResult' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(sizeof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000008, "Wrong size on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(offsetof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A003271B56::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(sizeof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000008, "Wrong size on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(offsetof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02600006D::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(sizeof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000008, "Wrong size on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(offsetof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A02FAA35F2::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(sizeof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000008, "Wrong size on GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(offsetof(GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnInterrupted_E1EAB14C4A51FFDF9FD702A0CE7EC067::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct GC_Deflection_State_C_OnMovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnMovementModeChanged) == 0x000008, "Wrong alignment on GC_Deflection_State_C_OnMovementModeChanged");
static_assert(sizeof(GC_Deflection_State_C_OnMovementModeChanged) == 0x000010, "Wrong size on GC_Deflection_State_C_OnMovementModeChanged");
static_assert(offsetof(GC_Deflection_State_C_OnMovementModeChanged, Character) == 0x000000, "Member 'GC_Deflection_State_C_OnMovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnMovementModeChanged, PrevMovementMode) == 0x000008, "Member 'GC_Deflection_State_C_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'GC_Deflection_State_C_OnMovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A003271B56::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02600006D::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A02FAA35F2::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyBegin_E1EAB14C4A51FFDF9FD702A0CE7EC067::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A003271B56::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02600006D::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A02FAA35F2::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000004, "Wrong alignment on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(sizeof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067) == 0x000008, "Wrong size on GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067");
static_assert(offsetof(GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067, NotifyName) == 0x000000, "Member 'GC_Deflection_State_C_OnNotifyEnd_E1EAB14C4A51FFDF9FD702A0CE7EC067::NotifyName' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.OnRemove
// 0x0160 (0x0160 - 0x0000)
struct GC_Deflection_State_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnRemove_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate; // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDamageImmunityHitPredictionType InPredictionType, const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageableActorComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_OnRemove) == 0x000008, "Wrong alignment on GC_Deflection_State_C_OnRemove");
static_assert(sizeof(GC_Deflection_State_C_OnRemove) == 0x000160, "Wrong size on GC_Deflection_State_C_OnRemove");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_Deflection_State_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, Parameters) == 0x000008, "Member 'GC_Deflection_State_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GC_Deflection_State_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'GC_Deflection_State_C_OnRemove::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_OnRemove_ReturnValue) == 0x0000E8, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_OnRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'GC_Deflection_State_C_OnRemove::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_CreateDelegate_OutputDelegate) == 0x0000F0, "Member 'GC_Deflection_State_C_OnRemove::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_CreateDelegate_OutputDelegate_1) == 0x000104, "Member 'GC_Deflection_State_C_OnRemove::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_CreateDelegate_OutputDelegate_2) == 0x000114, "Member 'GC_Deflection_State_C_OnRemove::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_Array_Get_Item) == 0x000128, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_DynamicCast_AsCharacter) == 0x000130, "Member 'GC_Deflection_State_C_OnRemove::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'GC_Deflection_State_C_OnRemove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_GetComponentByClass_ReturnValue) == 0x000140, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_DynamicCast_AsDune_Character) == 0x000148, "Member 'GC_Deflection_State_C_OnRemove::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'GC_Deflection_State_C_OnRemove::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_Array_Length_ReturnValue) == 0x000154, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_OnRemove, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'GC_Deflection_State_C_OnRemove::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.PlayDeflectionEffects
// 0x00E8 (0x00E8 - 0x0000)
struct GC_Deflection_State_C_PlayDeflectionEffects final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GC_Deflection_State_C_PlayDeflectionEffects) == 0x000008, "Wrong alignment on GC_Deflection_State_C_PlayDeflectionEffects");
static_assert(sizeof(GC_Deflection_State_C_PlayDeflectionEffects) == 0x0000E8, "Wrong size on GC_Deflection_State_C_PlayDeflectionEffects");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionEffects, HitResult) == 0x000000, "Member 'GC_Deflection_State_C_PlayDeflectionEffects::HitResult' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.PlayDeflectionMontage
// 0x0008 (0x0008 - 0x0000)
struct GC_Deflection_State_C_PlayDeflectionMontage final
{
public:
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_PlayDeflectionMontage) == 0x000008, "Wrong alignment on GC_Deflection_State_C_PlayDeflectionMontage");
static_assert(sizeof(GC_Deflection_State_C_PlayDeflectionMontage) == 0x000008, "Wrong size on GC_Deflection_State_C_PlayDeflectionMontage");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontage, DuneCharacter) == 0x000000, "Member 'GC_Deflection_State_C_PlayDeflectionMontage::DuneCharacter' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.PlayDeflectionMontageEffectsLocal
// 0x0040 (0x0040 - 0x0000)
struct GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal) == 0x000008, "Wrong alignment on GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal");
static_assert(sizeof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal) == 0x000040, "Wrong size on GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, K2Node_DynamicCast_AsDune_Character) == 0x000008, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_IsLocallyControlled_ReturnValue) == 0x000011, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000020, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_GetOwner_ReturnValue_2) == 0x000028, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_StartCameraShake_ReturnValue) == 0x000030, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'GC_Deflection_State_C_PlayDeflectionMontageEffectsLocal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.QueueDeflectionTrigger
// 0x00E8 (0x00E8 - 0x0000)
struct GC_Deflection_State_C_QueueDeflectionTrigger final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GC_Deflection_State_C_QueueDeflectionTrigger) == 0x000008, "Wrong alignment on GC_Deflection_State_C_QueueDeflectionTrigger");
static_assert(sizeof(GC_Deflection_State_C_QueueDeflectionTrigger) == 0x0000E8, "Wrong size on GC_Deflection_State_C_QueueDeflectionTrigger");
static_assert(offsetof(GC_Deflection_State_C_QueueDeflectionTrigger, HitResult) == 0x000000, "Member 'GC_Deflection_State_C_QueueDeflectionTrigger::HitResult' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GC_Deflection_State_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_ReceiveTick) == 0x000004, "Wrong alignment on GC_Deflection_State_C_ReceiveTick");
static_assert(sizeof(GC_Deflection_State_C_ReceiveTick) == 0x000004, "Wrong size on GC_Deflection_State_C_ReceiveTick");
static_assert(offsetof(GC_Deflection_State_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GC_Deflection_State_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SetDummyActive
// 0x0002 (0x0002 - 0x0000)
struct GC_Deflection_State_C_SetDummyActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SetDummyActive) == 0x000001, "Wrong alignment on GC_Deflection_State_C_SetDummyActive");
static_assert(sizeof(GC_Deflection_State_C_SetDummyActive) == 0x000002, "Wrong size on GC_Deflection_State_C_SetDummyActive");
static_assert(offsetof(GC_Deflection_State_C_SetDummyActive, IsActive) == 0x000000, "Member 'GC_Deflection_State_C_SetDummyActive::IsActive' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SetDummyActive, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'GC_Deflection_State_C_SetDummyActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SetStanceImagesActive
// 0x0001 (0x0001 - 0x0000)
struct GC_Deflection_State_C_SetStanceImagesActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SetStanceImagesActive) == 0x000001, "Wrong alignment on GC_Deflection_State_C_SetStanceImagesActive");
static_assert(sizeof(GC_Deflection_State_C_SetStanceImagesActive) == 0x000001, "Wrong size on GC_Deflection_State_C_SetStanceImagesActive");
static_assert(offsetof(GC_Deflection_State_C_SetStanceImagesActive, IsActive) == 0x000000, "Member 'GC_Deflection_State_C_SetStanceImagesActive::IsActive' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SetupImageVisuals
// 0x0020 (0x0020 - 0x0000)
struct GC_Deflection_State_C_SetupImageVisuals final
{
public:
	class USkinnedMeshComponent*                  ImageMesh;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkinnedMeshComponent*                  WeaponMesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         PersistentOffset;                                  // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SetupImageVisuals) == 0x000008, "Wrong alignment on GC_Deflection_State_C_SetupImageVisuals");
static_assert(sizeof(GC_Deflection_State_C_SetupImageVisuals) == 0x000020, "Wrong size on GC_Deflection_State_C_SetupImageVisuals");
static_assert(offsetof(GC_Deflection_State_C_SetupImageVisuals, ImageMesh) == 0x000000, "Member 'GC_Deflection_State_C_SetupImageVisuals::ImageMesh' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SetupImageVisuals, WeaponMesh) == 0x000008, "Member 'GC_Deflection_State_C_SetupImageVisuals::WeaponMesh' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SetupImageVisuals, Mid) == 0x000010, "Member 'GC_Deflection_State_C_SetupImageVisuals::Mid' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SetupImageVisuals, PersistentOffset) == 0x000018, "Member 'GC_Deflection_State_C_SetupImageVisuals::PersistentOffset' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SetupImageVisuals, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00001C, "Member 'GC_Deflection_State_C_SetupImageVisuals::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SetupImageWeapon
// 0x0010 (0x0010 - 0x0000)
struct GC_Deflection_State_C_SetupImageWeapon final
{
public:
	class USkinnedMeshComponent*                  WeaponMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SetupImageWeapon) == 0x000008, "Wrong alignment on GC_Deflection_State_C_SetupImageWeapon");
static_assert(sizeof(GC_Deflection_State_C_SetupImageWeapon) == 0x000010, "Wrong size on GC_Deflection_State_C_SetupImageWeapon");
static_assert(offsetof(GC_Deflection_State_C_SetupImageWeapon, WeaponMesh) == 0x000000, "Member 'GC_Deflection_State_C_SetupImageWeapon::WeaponMesh' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SetupImageWeapon, Mid) == 0x000008, "Member 'GC_Deflection_State_C_SetupImageWeapon::Mid' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SpawnImage
// 0x00B0 (0x00B0 - 0x0000)
struct GC_Deflection_State_C_SpawnImage final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VFX_Abl_Deflection_ImpactImage_C*   CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SpawnImage) == 0x000010, "Wrong alignment on GC_Deflection_State_C_SpawnImage");
static_assert(sizeof(GC_Deflection_State_C_SpawnImage) == 0x0000B0, "Wrong size on GC_Deflection_State_C_SpawnImage");
static_assert(offsetof(GC_Deflection_State_C_SpawnImage, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GC_Deflection_State_C_SpawnImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnImage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'GC_Deflection_State_C_SpawnImage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnImage, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000020, "Member 'GC_Deflection_State_C_SpawnImage::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnImage, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'GC_Deflection_State_C_SpawnImage::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnImage, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'GC_Deflection_State_C_SpawnImage::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnImage, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'GC_Deflection_State_C_SpawnImage::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SpawnVFX
// 0x0208 (0x0208 - 0x0000)
struct GC_Deflection_State_C_SpawnVFX final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SpawnVFX) == 0x000008, "Wrong alignment on GC_Deflection_State_C_SpawnVFX");
static_assert(sizeof(GC_Deflection_State_C_SpawnVFX) == 0x000208, "Wrong size on GC_Deflection_State_C_SpawnVFX");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, HitResult) == 0x000000, "Member 'GC_Deflection_State_C_SpawnVFX::HitResult' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E8, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E9, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_Location) == 0x0000F8, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_Normal) == 0x000128, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_BoneName) == 0x000178, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_ElementIndex) == 0x000184, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_FaceIndex) == 0x000188, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_TraceStart) == 0x000190, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_GetOwner_ReturnValue) == 0x0001C0, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001C8, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, K2Node_DynamicCast_AsDune_Character) == 0x0001E0, "Member 'GC_Deflection_State_C_SpawnVFX::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'GC_Deflection_State_C_SpawnVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_GetOwner_ReturnValue_1) == 0x0001F0, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0001F8, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SpawnVFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000200, "Member 'GC_Deflection_State_C_SpawnVFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.UpdateDynamicMaterials
// 0x00C0 (0x00C0 - 0x0000)
struct GC_Deflection_State_C_UpdateDynamicMaterials final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_UpdateDynamicMaterials) == 0x000008, "Wrong alignment on GC_Deflection_State_C_UpdateDynamicMaterials");
static_assert(sizeof(GC_Deflection_State_C_UpdateDynamicMaterials) == 0x0000C0, "Wrong size on GC_Deflection_State_C_UpdateDynamicMaterials");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_GetVelocity_ReturnValue) == 0x000020, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000038, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000048, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000058, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x0000A0, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_UpdateDynamicMaterials, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x0000B0, "Member 'GC_Deflection_State_C_UpdateDynamicMaterials::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");

// Function GC_Deflection_State.GC_Deflection_State_C.SelectDeflectionMontage
// 0x0030 (0x0030 - 0x0000)
struct GC_Deflection_State_C_SelectDeflectionMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Length_ImplicitCast;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Deflection_State_C_SelectDeflectionMontage) == 0x000008, "Wrong alignment on GC_Deflection_State_C_SelectDeflectionMontage");
static_assert(sizeof(GC_Deflection_State_C_SelectDeflectionMontage) == 0x000030, "Wrong size on GC_Deflection_State_C_SelectDeflectionMontage");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, Montage) == 0x000000, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::Montage' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, Length) == 0x000008, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::Length' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000014, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, CallFunc_Array_Get_Item) == 0x000018, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, CallFunc_GetPlayLength_ReturnValue) == 0x000020, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Deflection_State_C_SelectDeflectionMontage, K2Node_FunctionResult_Length_ImplicitCast) == 0x000028, "Member 'GC_Deflection_State_C_SelectDeflectionMontage::K2Node_FunctionResult_Length_ImplicitCast' has a wrong offset!");

}

