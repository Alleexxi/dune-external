#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PatrolShip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PatrolShip.BP_PatrolShip_C
// 0x01A0 (0x08B0 - 0x0710)
class ABP_PatrolShip_C final : public APatrolShip
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0710(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      CollisionCapsule;                                  // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageableActorComponent*              DamageableActor;                                   // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_VFX_Cmn_HoltzmanShield_Component_C* BP_VFX_Cmn_HoltzmanShield_Component;               // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpotLightGlow;                                     // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VFX_Cmn_LowPolySphere5;                         // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VFX_Cmn_LowPolySphere4;                         // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VFX_Cmn_LowPolySphere3;                         // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_VFX_Sardaukar_SoundWave;                        // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LensFlare1;                                        // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LensFlareMain;                                     // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Veh_Flying_Sard_LightConeMesh1;                 // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Veh_Flying_Sard_LightConeMesh;                  // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VFX_Cmn_LowPolySphere1;                         // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VFX_Cmn_LowPolySphere2;                         // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VFX_Cmn_LowPolySphere;                          // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Veh_Flying_Sard_LightConeMesh2;                 // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Sardauka_NoseWind;                              // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      GroundDustVFX;                                     // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GroundDustVFXDecal;                                // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        GroundVFXAnchor;                                   // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight6;                                       // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight5;                                       // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight4;                                       // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight3;                                       // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InteriorLights;                                    // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SDS_Roof;                                       // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SDS_Locomotion;                                 // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SDS_Hull;                                       // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SDS_Drive;                                      // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SDS_Cockpit;                                    // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_SDS_Body;                                       // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Ship;                                              // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenHull;                                         // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenDrives;                                       // 0x0829(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenExit_L;                                       // 0x082A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenExit_R;                                       // 0x082B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExtendGears;                                      // 0x082C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82D[0x3];                                      // 0x082D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   LevelSequencePlayer;                               // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TrackPoint;                                        // 0x0840(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              ShipArrivalAnimationFinishedDelegate;              // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ShipLightsEnableDelegate;                          // 0x0868(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        TrackPointResetRange;                              // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldResetTrackPoint;                             // 0x0880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CosmeticSearchlightMaterial;                       // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SpotLIghtGlowMaterial;                             // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LensFlare;                                         // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SplineMeshActor;                                   // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void UpdateCosmeticLightColors();
	void Update_VFX();
	void Trigger_Suspensor_Field_at_Location(const struct FTransform& Transform, double Radius, double LifeSpan);
	void TogglePatrolshipSpline();
	struct FRotator SpotlightTrackingFunction(const struct FVector& TargetLocation, const float DeltaTime);
	void SequenceFinishedEvent();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void Play_Sequence_on_Ship(bool IsArrival, double TimeStartOffset);
	void OnShipDepartureAnimationFinished();
	void OnShipArrivalAnimationFinished();
	void OnPatrolShipTargetTrackedChanged(class AActor* CurrentTargetToTrack);
	void OnDamaged(const struct FHitResult& Hit);
	void OnAllNPCsSpawned();
	void LightsEnabledEvent();
	void ExecuteUbergraph_BP_PatrolShip(int32 EntryPoint);
	void Close_Ship_Exits();
	void BP_TriggerSuspensorFieldAtLocation(const struct FTransform& Transform, const float LifeTime, const float SphereRadius);
	void BP_TogglePatrolShipSpline();
	void BP_StartDeparture();
	void BP_OnLightSettingsApplied();
	void BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature(const TArray<struct FMulticastDamageInfo>& FrameDamageInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PatrolShip_C">();
	}
	static class ABP_PatrolShip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PatrolShip_C>();
	}
};
static_assert(alignof(ABP_PatrolShip_C) == 0x000010, "Wrong alignment on ABP_PatrolShip_C");
static_assert(sizeof(ABP_PatrolShip_C) == 0x0008B0, "Wrong size on ABP_PatrolShip_C");
static_assert(offsetof(ABP_PatrolShip_C, UberGraphFrame) == 0x000710, "Member 'ABP_PatrolShip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, CollisionCapsule) == 0x000718, "Member 'ABP_PatrolShip_C::CollisionCapsule' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, DamageableActor) == 0x000720, "Member 'ABP_PatrolShip_C::DamageableActor' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, BP_VFX_Cmn_HoltzmanShield_Component) == 0x000728, "Member 'ABP_PatrolShip_C::BP_VFX_Cmn_HoltzmanShield_Component' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SpotLightGlow) == 0x000730, "Member 'ABP_PatrolShip_C::SpotLightGlow' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_VFX_Cmn_LowPolySphere5) == 0x000738, "Member 'ABP_PatrolShip_C::SM_VFX_Cmn_LowPolySphere5' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_VFX_Cmn_LowPolySphere4) == 0x000740, "Member 'ABP_PatrolShip_C::SM_VFX_Cmn_LowPolySphere4' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_VFX_Cmn_LowPolySphere3) == 0x000748, "Member 'ABP_PatrolShip_C::SM_VFX_Cmn_LowPolySphere3' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, NS_VFX_Sardaukar_SoundWave) == 0x000750, "Member 'ABP_PatrolShip_C::NS_VFX_Sardaukar_SoundWave' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, LensFlare1) == 0x000758, "Member 'ABP_PatrolShip_C::LensFlare1' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, LensFlareMain) == 0x000760, "Member 'ABP_PatrolShip_C::LensFlareMain' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_Veh_Flying_Sard_LightConeMesh1) == 0x000768, "Member 'ABP_PatrolShip_C::SM_Veh_Flying_Sard_LightConeMesh1' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_Veh_Flying_Sard_LightConeMesh) == 0x000770, "Member 'ABP_PatrolShip_C::SM_Veh_Flying_Sard_LightConeMesh' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_VFX_Cmn_LowPolySphere1) == 0x000778, "Member 'ABP_PatrolShip_C::SM_VFX_Cmn_LowPolySphere1' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_VFX_Cmn_LowPolySphere2) == 0x000780, "Member 'ABP_PatrolShip_C::SM_VFX_Cmn_LowPolySphere2' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_VFX_Cmn_LowPolySphere) == 0x000788, "Member 'ABP_PatrolShip_C::SM_VFX_Cmn_LowPolySphere' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SM_Veh_Flying_Sard_LightConeMesh2) == 0x000790, "Member 'ABP_PatrolShip_C::SM_Veh_Flying_Sard_LightConeMesh2' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, NS_Sardauka_NoseWind) == 0x000798, "Member 'ABP_PatrolShip_C::NS_Sardauka_NoseWind' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, GroundDustVFX) == 0x0007A0, "Member 'ABP_PatrolShip_C::GroundDustVFX' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, GroundDustVFXDecal) == 0x0007A8, "Member 'ABP_PatrolShip_C::GroundDustVFXDecal' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, GroundVFXAnchor) == 0x0007B0, "Member 'ABP_PatrolShip_C::GroundVFXAnchor' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, PointLight) == 0x0007B8, "Member 'ABP_PatrolShip_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, PointLight6) == 0x0007C0, "Member 'ABP_PatrolShip_C::PointLight6' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, PointLight5) == 0x0007C8, "Member 'ABP_PatrolShip_C::PointLight5' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, PointLight4) == 0x0007D0, "Member 'ABP_PatrolShip_C::PointLight4' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, PointLight3) == 0x0007D8, "Member 'ABP_PatrolShip_C::PointLight3' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, PointLight1) == 0x0007E0, "Member 'ABP_PatrolShip_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, InteriorLights) == 0x0007E8, "Member 'ABP_PatrolShip_C::InteriorLights' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SK_SDS_Roof) == 0x0007F0, "Member 'ABP_PatrolShip_C::SK_SDS_Roof' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SK_SDS_Locomotion) == 0x0007F8, "Member 'ABP_PatrolShip_C::SK_SDS_Locomotion' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SK_SDS_Hull) == 0x000800, "Member 'ABP_PatrolShip_C::SK_SDS_Hull' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SK_SDS_Drive) == 0x000808, "Member 'ABP_PatrolShip_C::SK_SDS_Drive' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SK_SDS_Cockpit) == 0x000810, "Member 'ABP_PatrolShip_C::SK_SDS_Cockpit' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SK_SDS_Body) == 0x000818, "Member 'ABP_PatrolShip_C::SK_SDS_Body' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, Ship) == 0x000820, "Member 'ABP_PatrolShip_C::Ship' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, bOpenHull) == 0x000828, "Member 'ABP_PatrolShip_C::bOpenHull' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, bOpenDrives) == 0x000829, "Member 'ABP_PatrolShip_C::bOpenDrives' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, bOpenExit_L) == 0x00082A, "Member 'ABP_PatrolShip_C::bOpenExit_L' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, bOpenExit_R) == 0x00082B, "Member 'ABP_PatrolShip_C::bOpenExit_R' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, bExtendGears) == 0x00082C, "Member 'ABP_PatrolShip_C::bExtendGears' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, LevelSequenceActor) == 0x000830, "Member 'ABP_PatrolShip_C::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, LevelSequencePlayer) == 0x000838, "Member 'ABP_PatrolShip_C::LevelSequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, TrackPoint) == 0x000840, "Member 'ABP_PatrolShip_C::TrackPoint' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, ShipArrivalAnimationFinishedDelegate) == 0x000858, "Member 'ABP_PatrolShip_C::ShipArrivalAnimationFinishedDelegate' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, ShipLightsEnableDelegate) == 0x000868, "Member 'ABP_PatrolShip_C::ShipLightsEnableDelegate' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, TrackPointResetRange) == 0x000878, "Member 'ABP_PatrolShip_C::TrackPointResetRange' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, ShouldResetTrackPoint) == 0x000880, "Member 'ABP_PatrolShip_C::ShouldResetTrackPoint' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, CosmeticSearchlightMaterial) == 0x000888, "Member 'ABP_PatrolShip_C::CosmeticSearchlightMaterial' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SpotLIghtGlowMaterial) == 0x000890, "Member 'ABP_PatrolShip_C::SpotLIghtGlowMaterial' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, LensFlare) == 0x000898, "Member 'ABP_PatrolShip_C::LensFlare' has a wrong offset!");
static_assert(offsetof(ABP_PatrolShip_C, SplineMeshActor) == 0x0008A0, "Member 'ABP_PatrolShip_C::SplineMeshActor' has a wrong offset!");

}

