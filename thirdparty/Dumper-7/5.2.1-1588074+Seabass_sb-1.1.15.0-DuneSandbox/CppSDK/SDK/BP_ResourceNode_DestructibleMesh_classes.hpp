#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourceNode_DestructibleMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ResourceNode_MinigameBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ResourceNode_DestructibleMesh.BP_ResourceNode_DestructibleMesh_C
// 0x00B0 (0x0748 - 0x0698)
class ABP_ResourceNode_DestructibleMesh_C : public ABP_ResourceNode_MinigameBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ResourceNode_DestructibleMesh_C; // 0x0698(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        FractureRadius;                                    // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FractureDamage;                                    // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FractureImpulseStrength;                           // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowDebugDamageradius;                            // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ImpactDrawSize;                                    // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ImpactDrawStrength;                                // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 DestructibleMeshMaterialIndex;                     // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        HealthLostEventThreshold;                          // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LinePercentageCompletionEventThreshold;            // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasTriggeredHealthLostEvent;                      // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UResourceNodeSplineComponent*>   FractureLinesAboveCompletionEventThreshold;        // 0x06F8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)
	class UStaticMeshComponent*                   MeltMeshComponent;                                 // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                DestructibleMeshComponent;                         // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_SkeletalMeshDrawComponent_C*        RenderTargetDrawMeshComponent;                     // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ResourceNodeFractureData_C*         FractureData;                                      // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           GeometryCollectionComponent;                       // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFieldSystemComponent*                  FieldSystemComponent;                              // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereCollision;                                   // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URadialFalloff*                         RadialFalloff;                                     // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void InitMeltMeshComponent();
	void InitHitSystem();
	void InitDestructibleComponent();
	void GetComponentsToReactToScan(TArray<class USceneComponent*>* SceneComponents);
	void ExecuteUbergraph_BP_ResourceNode_DestructibleMesh(int32 EntryPoint);
	void BPTryInitVisualAssets();
	void BPFractureAll();
	void BPFactureAtImpactPoint(const struct FVector& ImpactPoint, const bool bHitFractureLine);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ResourceNode_DestructibleMesh_C">();
	}
	static class ABP_ResourceNode_DestructibleMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ResourceNode_DestructibleMesh_C>();
	}
};
static_assert(alignof(ABP_ResourceNode_DestructibleMesh_C) == 0x000008, "Wrong alignment on ABP_ResourceNode_DestructibleMesh_C");
static_assert(sizeof(ABP_ResourceNode_DestructibleMesh_C) == 0x000748, "Wrong size on ABP_ResourceNode_DestructibleMesh_C");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, UberGraphFrame_BP_ResourceNode_DestructibleMesh_C) == 0x000698, "Member 'ABP_ResourceNode_DestructibleMesh_C::UberGraphFrame_BP_ResourceNode_DestructibleMesh_C' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, FractureRadius) == 0x0006A0, "Member 'ABP_ResourceNode_DestructibleMesh_C::FractureRadius' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, FractureDamage) == 0x0006A8, "Member 'ABP_ResourceNode_DestructibleMesh_C::FractureDamage' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, FractureImpulseStrength) == 0x0006B0, "Member 'ABP_ResourceNode_DestructibleMesh_C::FractureImpulseStrength' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, bShowDebugDamageradius) == 0x0006B8, "Member 'ABP_ResourceNode_DestructibleMesh_C::bShowDebugDamageradius' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, ImpactDrawSize) == 0x0006C0, "Member 'ABP_ResourceNode_DestructibleMesh_C::ImpactDrawSize' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, ImpactDrawStrength) == 0x0006C8, "Member 'ABP_ResourceNode_DestructibleMesh_C::ImpactDrawStrength' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, DestructibleMeshMaterialIndex) == 0x0006D0, "Member 'ABP_ResourceNode_DestructibleMesh_C::DestructibleMeshMaterialIndex' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, HealthLostEventThreshold) == 0x0006E0, "Member 'ABP_ResourceNode_DestructibleMesh_C::HealthLostEventThreshold' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, LinePercentageCompletionEventThreshold) == 0x0006E8, "Member 'ABP_ResourceNode_DestructibleMesh_C::LinePercentageCompletionEventThreshold' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, bHasTriggeredHealthLostEvent) == 0x0006F0, "Member 'ABP_ResourceNode_DestructibleMesh_C::bHasTriggeredHealthLostEvent' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, FractureLinesAboveCompletionEventThreshold) == 0x0006F8, "Member 'ABP_ResourceNode_DestructibleMesh_C::FractureLinesAboveCompletionEventThreshold' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, MeltMeshComponent) == 0x000708, "Member 'ABP_ResourceNode_DestructibleMesh_C::MeltMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, DestructibleMeshComponent) == 0x000710, "Member 'ABP_ResourceNode_DestructibleMesh_C::DestructibleMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, RenderTargetDrawMeshComponent) == 0x000718, "Member 'ABP_ResourceNode_DestructibleMesh_C::RenderTargetDrawMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, FractureData) == 0x000720, "Member 'ABP_ResourceNode_DestructibleMesh_C::FractureData' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, GeometryCollectionComponent) == 0x000728, "Member 'ABP_ResourceNode_DestructibleMesh_C::GeometryCollectionComponent' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, FieldSystemComponent) == 0x000730, "Member 'ABP_ResourceNode_DestructibleMesh_C::FieldSystemComponent' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, SphereCollision) == 0x000738, "Member 'ABP_ResourceNode_DestructibleMesh_C::SphereCollision' has a wrong offset!");
static_assert(offsetof(ABP_ResourceNode_DestructibleMesh_C, RadialFalloff) == 0x000740, "Member 'ABP_ResourceNode_DestructibleMesh_C::RadialFalloff' has a wrong offset!");

}

