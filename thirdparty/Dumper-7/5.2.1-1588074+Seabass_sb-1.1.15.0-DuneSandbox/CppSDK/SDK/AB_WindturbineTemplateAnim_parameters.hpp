#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_WindturbineTemplateAnim

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AB_WindturbineTemplateAnim.AB_WindturbineTemplateAnim_C.ExecuteUbergraph_AB_WindturbineTemplateAnim
// 0x0030 (0x0030 - 0x0000)
struct AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADunePlaceableBase*                     K2Node_DynamicCast_AsDune_Placeable_Base;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SlowDownAndStopWorkingAnimation_LastTick_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SlowDownAndStopWorkingAnimation_TimerToStopInSec_ImplicitCast; // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SlowDownAndStopWorkingAnimation_CurrentSlowDownSec_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim) == 0x000008, "Wrong alignment on AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim");
static_assert(sizeof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim) == 0x000030, "Wrong size on AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, EntryPoint) == 0x000000, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, K2Node_DynamicCast_AsDune_Placeable_Base) == 0x000018, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::K2Node_DynamicCast_AsDune_Placeable_Base' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, CallFunc_SlowDownAndStopWorkingAnimation_LastTick_ImplicitCast) == 0x000024, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::CallFunc_SlowDownAndStopWorkingAnimation_LastTick_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, CallFunc_SlowDownAndStopWorkingAnimation_TimerToStopInSec_ImplicitCast) == 0x000028, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::CallFunc_SlowDownAndStopWorkingAnimation_TimerToStopInSec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim, CallFunc_SlowDownAndStopWorkingAnimation_CurrentSlowDownSec_ImplicitCast) == 0x00002C, "Member 'AB_WindturbineTemplateAnim_C_ExecuteUbergraph_AB_WindturbineTemplateAnim::CallFunc_SlowDownAndStopWorkingAnimation_CurrentSlowDownSec_ImplicitCast' has a wrong offset!");

// Function AB_WindturbineTemplateAnim.AB_WindturbineTemplateAnim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_WindturbineTemplateAnim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_WindturbineTemplateAnim.AB_WindturbineTemplateAnim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_WindturbineTemplateAnim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_WindturbineTemplateAnim_C_AnimGraph) == 0x000008, "Wrong alignment on AB_WindturbineTemplateAnim_C_AnimGraph");
static_assert(sizeof(AB_WindturbineTemplateAnim_C_AnimGraph) == 0x000010, "Wrong size on AB_WindturbineTemplateAnim_C_AnimGraph");
static_assert(offsetof(AB_WindturbineTemplateAnim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_WindturbineTemplateAnim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

