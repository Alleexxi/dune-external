#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTTask_InitiateDialogueWithTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "F_NPCConverstation_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BTTask_InitiateDialogueWithTarget.BP_BTTask_InitiateDialogueWithTarget_C
// 0x0078 (0x0128 - 0x00B0)
class UBP_BTTask_InitiateDialogueWithTarget_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 Target;                                            // 0x00B8(0x0028)(Edit, BlueprintVisible)
	class ABP_CivilianBase_C*                     Initiator;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_CivilianBase_C*                     TargetNPC;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FF_NPCConverstation>            Conversation_Data;                                 // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FBlackboardKeySelector                 InConversation;                                    // 0x0100(0x0028)(Edit, BlueprintVisible)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void PlayNextConversationRow(const TArray<struct FF_NPCConverstation>& ConversationData, int32 RowToPlay);
	void ExecuteUbergraph_BP_BTTask_InitiateDialogueWithTarget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BTTask_InitiateDialogueWithTarget_C">();
	}
	static class UBP_BTTask_InitiateDialogueWithTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BTTask_InitiateDialogueWithTarget_C>();
	}
};
static_assert(alignof(UBP_BTTask_InitiateDialogueWithTarget_C) == 0x000008, "Wrong alignment on UBP_BTTask_InitiateDialogueWithTarget_C");
static_assert(sizeof(UBP_BTTask_InitiateDialogueWithTarget_C) == 0x000128, "Wrong size on UBP_BTTask_InitiateDialogueWithTarget_C");
static_assert(offsetof(UBP_BTTask_InitiateDialogueWithTarget_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_BTTask_InitiateDialogueWithTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_InitiateDialogueWithTarget_C, Target) == 0x0000B8, "Member 'UBP_BTTask_InitiateDialogueWithTarget_C::Target' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_InitiateDialogueWithTarget_C, Initiator) == 0x0000E0, "Member 'UBP_BTTask_InitiateDialogueWithTarget_C::Initiator' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_InitiateDialogueWithTarget_C, TargetNPC) == 0x0000E8, "Member 'UBP_BTTask_InitiateDialogueWithTarget_C::TargetNPC' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_InitiateDialogueWithTarget_C, Conversation_Data) == 0x0000F0, "Member 'UBP_BTTask_InitiateDialogueWithTarget_C::Conversation_Data' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_InitiateDialogueWithTarget_C, InConversation) == 0x000100, "Member 'UBP_BTTask_InitiateDialogueWithTarget_C::InConversation' has a wrong offset!");

}

