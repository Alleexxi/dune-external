#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DreamworldPreInit

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "DreamworldPreInit_structs.hpp"


namespace SDK
{

// Class DreamworldPreInit.LogChannel
// 0x0010 (0x0040 - 0x0030)
class ULogChannel : public UObject
{
public:
	class FName                                   m_SystemId;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LogChannel">();
	}
	static class ULogChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULogChannel>();
	}
};
static_assert(alignof(ULogChannel) == 0x000008, "Wrong alignment on ULogChannel");
static_assert(sizeof(ULogChannel) == 0x000040, "Wrong size on ULogChannel");
static_assert(offsetof(ULogChannel, m_SystemId) == 0x000030, "Member 'ULogChannel::m_SystemId' has a wrong offset!");

// Class DreamworldPreInit.LoggerLibrary
// 0x0000 (0x0030 - 0x0030)
class ULoggerLibrary final : public UObject
{
public:
	static void DWLogString(class UObject* WorldContextObject, const class FString& InString, ELogChannel Channel, EDebugLevel DebugLevel, bool bPrintToScreen, const struct FLinearColor& TextColor, float Duration, class UObject* Key);
	static bool IsSuppressed(EDebugLevel DebugLevel, ELogChannel Channel);
	static void PrintStringToChannel(class UObject* WorldContextObject, const class FString& InString, const TSubclassOf<class ULogChannel> Channel, EDebugLevel DebugLevel, bool bPrintToScreen, const struct FLinearColor& TextColor, float Duration, class UObject* Key);
	static void PrintStringToChannel_K2Wrapper(const class UObject* WorldContextObject, const class FString& InString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration, const class FName Key);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoggerLibrary">();
	}
	static class ULoggerLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoggerLibrary>();
	}
};
static_assert(alignof(ULoggerLibrary) == 0x000008, "Wrong alignment on ULoggerLibrary");
static_assert(sizeof(ULoggerLibrary) == 0x000030, "Wrong size on ULoggerLibrary");

}

