#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CH_1MGC_Locomotion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AB_CH_1MGC_Locomotion.AB_CH_1MGC_Locomotion_C.OnModuleMeshDestroyed_Event
// 0x0001 (0x0001 - 0x0000)
struct AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event) == 0x000001, "Wrong alignment on AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event");
static_assert(sizeof(AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event) == 0x000001, "Wrong size on AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event, ModuleType) == 0x000000, "Member 'AB_CH_1MGC_Locomotion_C_OnModuleMeshDestroyed_Event::ModuleType' has a wrong offset!");

// Function AB_CH_1MGC_Locomotion.AB_CH_1MGC_Locomotion_C.OnAllWheelsGroundedChanged
// 0x0001 (0x0001 - 0x0000)
struct AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged final
{
public:
	bool                                          bAllWheelsGrounded;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged) == 0x000001, "Wrong alignment on AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged");
static_assert(sizeof(AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged) == 0x000001, "Wrong size on AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged, bAllWheelsGrounded) == 0x000000, "Member 'AB_CH_1MGC_Locomotion_C_OnAllWheelsGroundedChanged::bAllWheelsGrounded' has a wrong offset!");

// Function AB_CH_1MGC_Locomotion.AB_CH_1MGC_Locomotion_C.ExecuteUbergraph_AB_CH_1MGC_Locomotion
// 0x0178 (0x0178 - 0x0000)
struct AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWheelRotation_WheelRotationFL;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWheelRotation_WheelRotationFR;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWheelRotation_WheelRotationRL;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWheelRotation_WheelRotationRR;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPosseseablePawnInterface> CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGroundVehicleVariables_Forward;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGroundVehicleVariables_Steering;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGroundVehicleVariables_HorizontalSpeed; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGroundVehicleVariables_HorizontalDirection; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsPossessed;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsInAir;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundVehicleVariables_bIsBoosting;    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetQuicksandSinkDepth_CurrentSinkDepth;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadAimTarget;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadRotationTarget;   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadAimTarget_1;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadRotationTarget_1; // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadAimTarget_2;      // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadRotationTarget_2; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadAimTarget_3;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ControlRigIKSolver_TreadRotationTarget_3; // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_CustomEvent_ModuleType;                     // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAllWheelsGrounded;                   // 0x0138(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneWheeledVehicle*                    K2Node_DynamicCast_AsDune_Wheeled_Vehicle;         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EVehicleModuleType ModuleType)> K2Node_CreateDelegate_OutputDelegate;             // 0x014C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_HorizontalSpeed_ImplicitCast;   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HorizontalDirection_ImplicitCast; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GroundSystemSpawnVFX_Delta_Time_X_ImplicitCast; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion) == 0x000008, "Wrong alignment on AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion");
static_assert(sizeof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion) == 0x000178, "Wrong size on AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, EntryPoint) == 0x000000, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetWheelRotation_WheelRotationFL) == 0x000008, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetWheelRotation_WheelRotationFL' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetWheelRotation_WheelRotationFR) == 0x00000C, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetWheelRotation_WheelRotationFR' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetWheelRotation_WheelRotationRL) == 0x000010, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetWheelRotation_WheelRotationRL' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetWheelRotation_WheelRotationRR) == 0x000018, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetWheelRotation_WheelRotationRR' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput) == 0x000020, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_OwnerVehicle_CastInput' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_Forward) == 0x000030, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_Forward' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_Steering) == 0x000038, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_Steering' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_HorizontalSpeed) == 0x000040, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_HorizontalSpeed' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_HorizontalDirection) == 0x000044, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_HorizontalDirection' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_bIsPossessed) == 0x000048, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_bIsPossessed' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_bIsInAir) == 0x000049, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_bIsInAir' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetGroundVehicleVariables_bIsBoosting) == 0x00004A, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetGroundVehicleVariables_bIsBoosting' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, Temp_bool_Has_Been_Initd_Variable) == 0x00004B, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GetQuicksandSinkDepth_CurrentSinkDepth) == 0x000050, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GetQuicksandSinkDepth_CurrentSinkDepth' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadAimTarget) == 0x000068, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadAimTarget' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadRotationTarget) == 0x000080, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadRotationTarget' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadAimTarget_1) == 0x000098, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadAimTarget_1' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadRotationTarget_1) == 0x0000B0, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadRotationTarget_1' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadAimTarget_2) == 0x0000C8, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadAimTarget_2' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadRotationTarget_2) == 0x0000E0, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadRotationTarget_2' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadAimTarget_3) == 0x0000F8, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadAimTarget_3' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_ControlRigIKSolver_TreadRotationTarget_3) == 0x000110, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_ControlRigIKSolver_TreadRotationTarget_3' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_IsValid_ReturnValue_1) == 0x000129, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_IsDedicatedServer_ReturnValue) == 0x00012A, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, Temp_bool_IsClosed_Variable) == 0x00012B, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_IsValid_ReturnValue_2) == 0x00012C, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_IsValid_ReturnValue_3) == 0x00012D, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_CustomEvent_ModuleType) == 0x00012E, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_CustomEvent_ModuleType' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_IsValid_ReturnValue_4) == 0x00012F, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000130, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_Event_bAllWheelsGrounded) == 0x000138, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_Event_bAllWheelsGrounded' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_DynamicCast_AsDune_Wheeled_Vehicle) == 0x000140, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_DynamicCast_AsDune_Wheeled_Vehicle' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_CreateDelegate_OutputDelegate) == 0x00014C, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_VariableSet_HorizontalSpeed_ImplicitCast) == 0x000160, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_VariableSet_HorizontalSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, K2Node_VariableSet_HorizontalDirection_ImplicitCast) == 0x000168, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::K2Node_VariableSet_HorizontalDirection_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion, CallFunc_GroundSystemSpawnVFX_Delta_Time_X_ImplicitCast) == 0x000170, "Member 'AB_CH_1MGC_Locomotion_C_ExecuteUbergraph_AB_CH_1MGC_Locomotion::CallFunc_GroundSystemSpawnVFX_Delta_Time_X_ImplicitCast' has a wrong offset!");

// Function AB_CH_1MGC_Locomotion.AB_CH_1MGC_Locomotion_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_CH_1MGC_Locomotion_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_CH_1MGC_Locomotion.AB_CH_1MGC_Locomotion_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_CH_1MGC_Locomotion_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CH_1MGC_Locomotion_C_AnimGraph) == 0x000008, "Wrong alignment on AB_CH_1MGC_Locomotion_C_AnimGraph");
static_assert(sizeof(AB_CH_1MGC_Locomotion_C_AnimGraph) == 0x000010, "Wrong size on AB_CH_1MGC_Locomotion_C_AnimGraph");
static_assert(offsetof(AB_CH_1MGC_Locomotion_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_CH_1MGC_Locomotion_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

