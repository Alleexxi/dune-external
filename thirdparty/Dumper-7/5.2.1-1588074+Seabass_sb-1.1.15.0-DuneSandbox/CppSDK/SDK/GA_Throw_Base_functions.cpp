#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Throw_Base

#include "Basic.hpp"

#include "GA_Throw_Base_classes.hpp"
#include "GA_Throw_Base_parameters.hpp"


namespace SDK
{

// Function GA_Throw_Base.GA_Throw_Base_C.CacheTuningValues
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::CacheTuningValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "CacheTuningValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.ClearFlags
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::ClearFlags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "ClearFlags");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.CommittedToRelease
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::CommittedToRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "CommittedToRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.DetermineThrowAnimationSection
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::DetermineThrowAnimationSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "DetermineThrowAnimationSection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.DrawPredictionArc
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::DrawPredictionArc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "DrawPredictionArc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.EnterThrowingSubstate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bEnteredThrowing                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::EnterThrowingSubstate(bool* bEnteredThrowing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "EnterThrowingSubstate");

	Params::GA_Throw_Base_C_EnterThrowingSubstate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnteredThrowing != nullptr)
		*bEnteredThrowing = Parms.bEnteredThrowing;
}


// Function GA_Throw_Base.GA_Throw_Base_C.ExecuteUbergraph_GA_Throw_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::ExecuteUbergraph_GA_Throw_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "ExecuteUbergraph_GA_Throw_Base");

	Params::GA_Throw_Base_C_ExecuteUbergraph_GA_Throw_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_Base.GA_Throw_Base_C.FallbackTimerUp
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::FallbackTimerUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "FallbackTimerUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.GetProjectileRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 ProjectileRadius                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::GetProjectileRadius(double* ProjectileRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "GetProjectileRadius");

	Params::GA_Throw_Base_C_GetProjectileRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProjectileRadius != nullptr)
		*ProjectileRadius = Parms.ProjectileRadius;
}


// Function GA_Throw_Base.GA_Throw_Base_C.HandleDelayedVisuals
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::HandleDelayedVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "HandleDelayedVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.InitHandPoseAndGameplayCues
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::InitHandPoseAndGameplayCues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "InitHandPoseAndGameplayCues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.InitializeStaticProperties
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilitySpec&      Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UGA_Throw_Base_C::InitializeStaticProperties(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "InitializeStaticProperties");

	Params::GA_Throw_Base_C_InitializeStaticProperties Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Spec = std::move(Spec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_Base.GA_Throw_Base_C.InputReleased
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeHeld                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::InputReleased(double TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "InputReleased");

	Params::GA_Throw_Base_C_InputReleased Parms{};

	Parms.TimeHeld = TimeHeld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_Base.GA_Throw_Base_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Throw_Base_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "K2_OnEndAbility");

	Params::GA_Throw_Base_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_Base.GA_Throw_Base_C.LockInAim
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::LockInAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "LockInAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.LongHold_PostThrowDelay
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::LongHold_PostThrowDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "LongHold_PostThrowDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.LoopStateChecks
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::LoopStateChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "LoopStateChecks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnBlendOut_6FEC42754D7980BE1D57FEA9EFB6789D
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnBlendOut_6FEC42754D7980BE1D57FEA9EFB6789D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnBlendOut_6FEC42754D7980BE1D57FEA9EFB6789D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnCancel_13F040594F793C72E611C1BAC17F1189
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnCancel_13F040594F793C72E611C1BAC17F1189()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnCancel_13F040594F793C72E611C1BAC17F1189");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnCancelled_6FEC42754D7980BE1D57FEA9EFB6789D
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnCancelled_6FEC42754D7980BE1D57FEA9EFB6789D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnCancelled_6FEC42754D7980BE1D57FEA9EFB6789D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnCompleted_6FEC42754D7980BE1D57FEA9EFB6789D
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnCompleted_6FEC42754D7980BE1D57FEA9EFB6789D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnCompleted_6FEC42754D7980BE1D57FEA9EFB6789D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_761C9F1641A8AD4DA2953C81CA1D8CE6
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_761C9F1641A8AD4DA2953C81CA1D8CE6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_761C9F1641A8AD4DA2953C81CA1D8CE6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_8FFAA52D4C287E495C8124B47E6E3B14
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_8FFAA52D4C287E495C8124B47E6E3B14()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_8FFAA52D4C287E495C8124B47E6E3B14");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_9D202A6C4D3F1D446706678A910C5ED6
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_9D202A6C4D3F1D446706678A910C5ED6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_9D202A6C4D3F1D446706678A910C5ED6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_A1A007BC4AC304BD5ECFF3991A3FC007
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_A1A007BC4AC304BD5ECFF3991A3FC007()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_A1A007BC4AC304BD5ECFF3991A3FC007");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_B7432D6A45858E6BFD99C897E79F794C
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_B7432D6A45858E6BFD99C897E79F794C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_B7432D6A45858E6BFD99C897E79F794C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_BEDCC84940677BDEF4BF298C4BD54336
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_BEDCC84940677BDEF4BF298C4BD54336()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_BEDCC84940677BDEF4BF298C4BD54336");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_F1F9F499448D6229FFCAE9B4317061A7
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_F1F9F499448D6229FFCAE9B4317061A7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_F1F9F499448D6229FFCAE9B4317061A7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnFinish_FAC9CC454E6B4A46F72245A6F9C166AF
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnFinish_FAC9CC454E6B4A46F72245A6F9C166AF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnFinish_FAC9CC454E6B4A46F72245A6F9C166AF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnInterrupted_6FEC42754D7980BE1D57FEA9EFB6789D
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::OnInterrupted_6FEC42754D7980BE1D57FEA9EFB6789D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnInterrupted_6FEC42754D7980BE1D57FEA9EFB6789D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnRelease_E606C44544E2C62C7C6A3A9C67F8279D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeHeld                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::OnRelease_E606C44544E2C62C7C6A3A9C67F8279D(float TimeHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnRelease_E606C44544E2C62C7C6A3A9C67F8279D");

	Params::GA_Throw_Base_C_OnRelease_E606C44544E2C62C7C6A3A9C67F8279D Parms{};

	Parms.TimeHeld = TimeHeld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_Base.GA_Throw_Base_C.OnThrowableThrown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ProjectileThrowableBase_C*    SpawnedThrowable                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::OnThrowableThrown(class ABP_ProjectileThrowableBase_C* SpawnedThrowable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "OnThrowableThrown");

	Params::GA_Throw_Base_C_OnThrowableThrown Parms{};

	Parms.SpawnedThrowable = SpawnedThrowable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_Base.GA_Throw_Base_C.PostThrowCleanup
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::PostThrowCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "PostThrowCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.RemoveCameraContext
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::RemoveCameraContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "RemoveCameraContext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.Removed_CDE9D9B9439ED58263B275983C261BC7
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::Removed_CDE9D9B9439ED58263B275983C261BC7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "Removed_CDE9D9B9439ED58263B275983C261BC7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.SetCameraContext
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::SetCameraContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "SetCameraContext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.SetupCastingExitCancelation
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_Base_C::SetupCastingExitCancelation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "SetupCastingExitCancelation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_Base.GA_Throw_Base_C.SpawnThrowable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ProjectileThrowableBase_C**   Throwable_0                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::SpawnThrowable(class ABP_ProjectileThrowableBase_C** Throwable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "SpawnThrowable");

	Params::GA_Throw_Base_C_SpawnThrowable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Throwable_0 != nullptr)
		*Throwable_0 = Parms.Throwable_0;
}


// Function GA_Throw_Base.GA_Throw_Base_C.TryCommitOnRelease
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bCommit                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::TryCommitOnRelease(bool* bCommit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "TryCommitOnRelease");

	Params::GA_Throw_Base_C_TryCommitOnRelease Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCommit != nullptr)
		*bCommit = Parms.bCommit;
}


// Function GA_Throw_Base.GA_Throw_Base_C.GetCasterVelocityScalar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   InVelocity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutVelocityScalar                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::GetCasterVelocityScalar(const struct FVector& InVelocity, double* OutVelocityScalar) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "GetCasterVelocityScalar");

	Params::GA_Throw_Base_C_GetCasterVelocityScalar Parms{};

	Parms.InVelocity = std::move(InVelocity);

	UObject::ProcessEvent(Func, &Parms);

	if (OutVelocityScalar != nullptr)
		*OutVelocityScalar = Parms.OutVelocityScalar;
}


// Function GA_Throw_Base.GA_Throw_Base_C.GetDisplayData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class UAbilitySystemComponent*    InstigatorASC                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FAbilityDisplayData              ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FAbilityDisplayData UGA_Throw_Base_C::GetDisplayData(const class UAbilitySystemComponent* InstigatorASC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "GetDisplayData");

	Params::GA_Throw_Base_C_GetDisplayData Parms{};

	Parms.InstigatorASC = InstigatorASC;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Throw_Base.GA_Throw_Base_C.GetThrowParams
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector*                         StartPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>*                  IgnoreActors                                           (Parm, OutParm)
// double*                                 Gravity                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::GetThrowParams(struct FVector* StartPosition, struct FVector* Velocity, TArray<class AActor*>* IgnoreActors, double* Gravity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "GetThrowParams");

	Params::GA_Throw_Base_C_GetThrowParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartPosition != nullptr)
		*StartPosition = std::move(Parms.StartPosition);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);

	if (IgnoreActors != nullptr)
		*IgnoreActors = std::move(Parms.IgnoreActors);

	if (Gravity != nullptr)
		*Gravity = Parms.Gravity;
}


// Function GA_Throw_Base.GA_Throw_Base_C.GetThrowRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          Avatar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        ThrowRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Throw_Base_C::GetThrowRotation(class UObject* Avatar, struct FRotator* ThrowRotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "GetThrowRotation");

	Params::GA_Throw_Base_C_GetThrowRotation Parms{};

	Parms.Avatar = Avatar;

	UObject::ProcessEvent(Func, &Parms);

	if (ThrowRotation != nullptr)
		*ThrowRotation = std::move(Parms.ThrowRotation);
}


// Function GA_Throw_Base.GA_Throw_Base_C.GetThrowSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double*                                 ThrowSpeed                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::GetThrowSpeed(double* ThrowSpeed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "GetThrowSpeed");

	Params::GA_Throw_Base_C_GetThrowSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThrowSpeed != nullptr)
		*ThrowSpeed = Parms.ThrowSpeed;
}


// Function GA_Throw_Base.GA_Throw_Base_C.IsHiddenCooldownApplied
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bHiddenCooldownPresent                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_Base_C::IsHiddenCooldownApplied(bool* bHiddenCooldownPresent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "IsHiddenCooldownApplied");

	Params::GA_Throw_Base_C_IsHiddenCooldownApplied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHiddenCooldownPresent != nullptr)
		*bHiddenCooldownPresent = Parms.bHiddenCooldownPresent;
}


// Function GA_Throw_Base.GA_Throw_Base_C.K2_CanActivateAbility
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// const struct FGameplayAbilitySpecHandle&Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer*           RelevantTags                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGA_Throw_Base_C::K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_Base_C", "K2_CanActivateAbility");

	Params::GA_Throw_Base_C_K2_CanActivateAbility Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (RelevantTags != nullptr)
		*RelevantTags = std::move(Parms.RelevantTags);

	return Parms.ReturnValue;
}

}

