#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmallShipwreck_01

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FSmallShipWreckMineableSocketData_structs.hpp"
#include "FSmallShipwreckReplicatedProps_structs.hpp"


namespace SDK::Params
{

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.UpdateCrashProgressTick
// 0x0070 (0x0070 - 0x0000)
struct BP_SmallShipwreck_01_C_UpdateCrashProgressTick final
{
public:
	double                                        ReplicationFrequency;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFinished;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDone;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_RangeMax_ImplicitCast;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_UpdateCrashProgressTick");
static_assert(sizeof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick) == 0x000070, "Wrong size on BP_SmallShipwreck_01_C_UpdateCrashProgressTick");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, ReplicationFrequency) == 0x000000, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::ReplicationFrequency' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, bIsFinished) == 0x000008, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::bIsFinished' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, bIsDone) == 0x000009, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::bIsDone' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000018, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GetTimelineLength_ReturnValue) == 0x000030, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_NormalizeToRange_ReturnValue) == 0x000038, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GetTimeRange_MinTime) == 0x000050, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GetTimeRange_MaxTime) == 0x000054, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000059, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_NormalizeToRange_RangeMax_ImplicitCast) == 0x000060, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_NormalizeToRange_RangeMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_UpdateCrashProgressTick, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'BP_SmallShipwreck_01_C_UpdateCrashProgressTick::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.UnhideIfHidden
// 0x0001 (0x0001 - 0x0000)
struct BP_SmallShipwreck_01_C_UnhideIfHidden final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_UnhideIfHidden) == 0x000001, "Wrong alignment on BP_SmallShipwreck_01_C_UnhideIfHidden");
static_assert(sizeof(BP_SmallShipwreck_01_C_UnhideIfHidden) == 0x000001, "Wrong size on BP_SmallShipwreck_01_C_UnhideIfHidden");
static_assert(offsetof(BP_SmallShipwreck_01_C_UnhideIfHidden, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_SmallShipwreck_01_C_UnhideIfHidden::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Try Spawn Sandmounds
// 0x0380 (0x0380 - 0x0000)
struct BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds final
{
public:
	TArray<class UStaticMeshComponent*>           SandMounds;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindAverageLocationAndNormal_AverageLocation; // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindAverageLocationAndNormal_AverageNormal; // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAverageLocationAndNormal_Valid;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0210(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0288(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds");
static_assert(sizeof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds) == 0x000380, "Wrong size on BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, SandMounds) == 0x000000, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::SandMounds' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Array_IsEmpty_ReturnValue) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00001D, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Greater_IntInt_ReturnValue) == 0x00001F, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue_1) == 0x000022, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue_2) == 0x000023, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue_3) == 0x000038, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue_4) == 0x000039, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue_5) == 0x000058, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_GetAllSocketNames_ReturnValue) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_GetSocketLocation_ReturnValue) == 0x0000E0, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BreakVector_X) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BreakVector_Z) == 0x000108, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_FindAverageLocationAndNormal_AverageLocation) == 0x000110, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_FindAverageLocationAndNormal_AverageLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_FindAverageLocationAndNormal_AverageNormal) == 0x000128, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_FindAverageLocationAndNormal_AverageNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_FindAverageLocationAndNormal_Valid) == 0x000140, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_FindAverageLocationAndNormal_Valid' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Conv_NameToString_ReturnValue) == 0x000148, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_MakeRotFromZ_ReturnValue) == 0x000158, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Contains_ReturnValue) == 0x000170, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BreakVector_X_1) == 0x0001F0, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BreakVector_Y_1) == 0x0001F8, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BreakVector_Z_1) == 0x000200, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000210, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000270, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_AddComponent_ReturnValue) == 0x000278, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Abs_ReturnValue) == 0x000280, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000288, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000370, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_Array_Add_ReturnValue) == 0x000374, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds, CallFunc_BooleanAND_ReturnValue_6) == 0x000378, "Member 'BP_SmallShipwreck_01_C_Try_Spawn_Sandmounds::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.SpawnFireZones
// 0x0048 (0x0048 - 0x0000)
struct BP_SmallShipwreck_01_C_SpawnFireZones final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_SpawnFireZones) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_SpawnFireZones");
static_assert(sizeof(BP_SmallShipwreck_01_C_SpawnFireZones) == 0x000048, "Wrong size on BP_SmallShipwreck_01_C_SpawnFireZones");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_GetAllSocketNames_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SpawnFireZones, CallFunc_Contains_ReturnValue) == 0x000040, "Member 'BP_SmallShipwreck_01_C_SpawnFireZones::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ShipVariationTester
// 0x01B0 (0x01B0 - 0x0000)
struct BP_SmallShipwreck_01_C_ShipVariationTester final
{
public:
	class UStaticMeshComponent*                   LocalStaticMeshComp_0;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DA_SmallWreckData_C*                LocalDataAsset;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomShipVariation_ShipVar;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Map_Find_Value;                           // 0x0088(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_DA_SmallWreckData_C> CallFunc_Array_Get_Item_2;                         // 0x0160(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DA_SmallWreckData_C*                K2Node_DynamicCast_AsBP_DA_Small_Wreck_Data;       // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_ShipVariationTester) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_ShipVariationTester");
static_assert(sizeof(BP_SmallShipwreck_01_C_ShipVariationTester) == 0x0001B0, "Wrong size on BP_SmallShipwreck_01_C_ShipVariationTester");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, LocalStaticMeshComp_0) == 0x000000, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::LocalStaticMeshComp_0' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, LocalDataAsset) == 0x000008, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::LocalDataAsset' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_GetChildrenComponents_Children) == 0x000020, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000040, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_GetRandomShipVariation_ShipVar) == 0x00004C, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_GetRandomShipVariation_ShipVar' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000068, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000070, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_AsStatic_Mesh) == 0x000078, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Map_Find_Value) == 0x000088, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B9, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Less_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, Temp_struct_Variable) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_AddComponent_ReturnValue) == 0x000150, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000158, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Array_Get_Item_2) == 0x000160, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000190, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000198, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_AsBP_DA_Small_Wreck_Data) == 0x0001A0, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_AsBP_DA_Small_Wreck_Data' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ShipVariationTester, K2Node_DynamicCast_bSuccess_3) == 0x0001A8, "Member 'BP_SmallShipwreck_01_C_ShipVariationTester::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.SetFinalPositionAndRotation
// 0x0330 (0x0330 - 0x0000)
struct BP_SmallShipwreck_01_C_SetFinalPositionAndRotation final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAlongCurve_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAlongCurve_ReturnValue_1;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0220(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAlongCurve_InTime_ImplicitCast; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_SetFinalPositionAndRotation");
static_assert(sizeof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation) == 0x000330, "Wrong size on BP_SmallShipwreck_01_C_SetFinalPositionAndRotation");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_GetTimeRange_MinTime) == 0x000004, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_GetTimeRange_MaxTime) == 0x000008, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_GetLocationAlongCurve_ReturnValue) == 0x000030, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_GetLocationAlongCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Normal_ReturnValue) == 0x000048, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_GetLocationAlongCurve_ReturnValue_1) == 0x000060, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_GetLocationAlongCurve_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_MakeRotFromX_ReturnValue) == 0x000078, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BreakRotator_Roll) == 0x0000A8, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BreakRotator_Pitch) == 0x0000AC, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BreakRotator_Yaw) == 0x0000B0, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Normal_ReturnValue_1) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BooleanAND_ReturnValue) == 0x0000E8, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BreakRotator_Roll_1) == 0x0000EC, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BreakRotator_Pitch_1) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_BreakRotator_Yaw_1) == 0x0000F4, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_SelectFloat_ReturnValue) == 0x000100, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_SelectVector_ReturnValue) == 0x000108, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_MakeRotator_ReturnValue) == 0x000120, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000138, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000220, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000308, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_GetLocationAlongCurve_InTime_ImplicitCast) == 0x000310, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_GetLocationAlongCurve_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_SelectFloat_A_ImplicitCast) == 0x000318, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000320, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_SetFinalPositionAndRotation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000328, "Member 'BP_SmallShipwreck_01_C_SetFinalPositionAndRotation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.PlaceShipComponents
// 0x01B0 (0x01B0 - 0x0000)
struct BP_SmallShipwreck_01_C_PlaceShipComponents final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ShipwreckBreakablePartComponent_C*  CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindLandingLocation_LocalLandingOffset;   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SmallShipwreck_01_C_PlaceShipComponents) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_PlaceShipComponents");
static_assert(sizeof(BP_SmallShipwreck_01_C_PlaceShipComponents) == 0x0001B0, "Wrong size on BP_SmallShipwreck_01_C_PlaceShipComponents");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, Temp_int_Variable) == 0x000000, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_Array_LastIndex_ReturnValue) == 0x000080, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_TransformLocation_ReturnValue) == 0x000088, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_FindLandingLocation_LocalLandingOffset) == 0x0000A8, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_FindLandingLocation_LocalLandingOffset' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_PlaceShipComponents, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_PlaceShipComponents::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnRep_ReplicatedState
// 0x0011 (0x0011 - 0x0000)
struct BP_SmallShipwreck_01_C_OnRep_ReplicatedState final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState) == 0x000001, "Wrong alignment on BP_SmallShipwreck_01_C_OnRep_ReplicatedState");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState) == 0x000011, "Wrong size on BP_SmallShipwreck_01_C_OnRep_ReplicatedState");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Not_PreBool_ReturnValue_2) == 0x000002, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Not_PreBool_ReturnValue_3) == 0x000005, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Greater_IntInt_ReturnValue) == 0x000007, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue_3) == 0x000009, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Not_PreBool_ReturnValue_4) == 0x00000A, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue_4) == 0x00000B, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue_5) == 0x00000C, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Not_PreBool_ReturnValue_5) == 0x00000D, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_BooleanAND_ReturnValue_6) == 0x00000E, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000F, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_ReplicatedState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_OnRep_ReplicatedState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnRep_CrashProgress
// 0x0038 (0x0038 - 0x0000)
struct BP_SmallShipwreck_01_C_OnRep_CrashProgress final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlaybackPosition_NewPosition_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnRep_CrashProgress) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_OnRep_CrashProgress");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnRep_CrashProgress) == 0x000038, "Wrong size on BP_SmallShipwreck_01_C_OnRep_CrashProgress");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_GetTimelineLength_ReturnValue) == 0x000014, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_BooleanAND_ReturnValue_1) == 0x000021, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000024, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x000028, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnRep_CrashProgress, CallFunc_SetPlaybackPosition_NewPosition_ImplicitCast) == 0x000030, "Member 'BP_SmallShipwreck_01_C_OnRep_CrashProgress::CallFunc_SetPlaybackPosition_NewPosition_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_DCD94DAE4432766CB0A73EA88F67F023
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023) == 0x000008, "Wrong size on BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023, Loaded) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnLoaded_DCD94DAE4432766CB0A73EA88F67F023::Loaded' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB) == 0x000008, "Wrong size on BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB, Loaded) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnLoaded_7E31BD5A4329F7CFCDA5E59902555ABB::Loaded' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_6F1E45E44811A1BE323B6688BB831692
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692) == 0x000008, "Wrong size on BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692, Loaded) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnLoaded_6F1E45E44811A1BE323B6688BB831692::Loaded' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_5FA132584DA282E10B914F97A1DD3210
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210) == 0x000008, "Wrong size on BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210, Loaded) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnLoaded_5FA132584DA282E10B914F97A1DD3210::Loaded' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.OnLoaded_0735E7E94A578E40F242EEB4174F34D4
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4");
static_assert(sizeof(BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4) == 0x000008, "Wrong size on BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4");
static_assert(offsetof(BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4, Loaded) == 0x000000, "Member 'BP_SmallShipwreck_01_C_OnLoaded_0735E7E94A578E40F242EEB4174F34D4::Loaded' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.On Slide Ended
// 0x000C (0x000C - 0x0000)
struct BP_SmallShipwreck_01_C_On_Slide_Ended final
{
public:
	struct FFSmallShipwreckReplicatedProps        K2Node_MakeStruct_FSmallShipwreckReplicatedProps;  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_On_Slide_Ended) == 0x000004, "Wrong alignment on BP_SmallShipwreck_01_C_On_Slide_Ended");
static_assert(sizeof(BP_SmallShipwreck_01_C_On_Slide_Ended) == 0x00000C, "Wrong size on BP_SmallShipwreck_01_C_On_Slide_Ended");
static_assert(offsetof(BP_SmallShipwreck_01_C_On_Slide_Ended, K2Node_MakeStruct_FSmallShipwreckReplicatedProps) == 0x000000, "Member 'BP_SmallShipwreck_01_C_On_Slide_Ended::K2Node_MakeStruct_FSmallShipwreckReplicatedProps' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.LoadMineable
// 0x0004 (0x0004 - 0x0000)
struct BP_SmallShipwreck_01_C_LoadMineable final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_LoadMineable) == 0x000004, "Wrong alignment on BP_SmallShipwreck_01_C_LoadMineable");
static_assert(sizeof(BP_SmallShipwreck_01_C_LoadMineable) == 0x000004, "Wrong size on BP_SmallShipwreck_01_C_LoadMineable");
static_assert(offsetof(BP_SmallShipwreck_01_C_LoadMineable, Index_0) == 0x000000, "Member 'BP_SmallShipwreck_01_C_LoadMineable::Index_0' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.LoadExtraMesh
// 0x0004 (0x0004 - 0x0000)
struct BP_SmallShipwreck_01_C_LoadExtraMesh final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_LoadExtraMesh) == 0x000004, "Wrong alignment on BP_SmallShipwreck_01_C_LoadExtraMesh");
static_assert(sizeof(BP_SmallShipwreck_01_C_LoadExtraMesh) == 0x000004, "Wrong size on BP_SmallShipwreck_01_C_LoadExtraMesh");
static_assert(offsetof(BP_SmallShipwreck_01_C_LoadExtraMesh, Index_0) == 0x000000, "Member 'BP_SmallShipwreck_01_C_LoadExtraMesh::Index_0' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.InitializeCrashParameters
// 0x0050 (0x0050 - 0x0000)
struct BP_SmallShipwreck_01_C_InitializeCrashParameters final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_ShipwreckBreakablePartComponent_C*> CallFunc_K2_GetComponentsByClass_ReturnValue; // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_ShipwreckBreakablePartComponent_C*  CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_InitializeCrashParameters) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_InitializeCrashParameters");
static_assert(sizeof(BP_SmallShipwreck_01_C_InitializeCrashParameters) == 0x000050, "Wrong size on BP_SmallShipwreck_01_C_InitializeCrashParameters");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeCrashParameters, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_SmallShipwreck_01_C_InitializeCrashParameters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.InitializeBreakawayArrays
// 0x0078 (0x0078 - 0x0000)
struct BP_SmallShipwreck_01_C_InitializeBreakawayArrays final
{
public:
	TArray<class USceneComponent*>                Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         RandomIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRandomBreakpoint_Time;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_InitializeBreakawayArrays");
static_assert(sizeof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays) == 0x000078, "Wrong size on BP_SmallShipwreck_01_C_InitializeBreakawayArrays");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, Array) == 0x000000, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::Array' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, RandomIndex) == 0x000010, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::RandomIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, Index_0) == 0x000014, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::Index_0' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, Temp_int_Variable) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_GetRandomBreakpoint_Time) == 0x000040, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_GetRandomBreakpoint_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000058, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_FTrunc_ReturnValue) == 0x000068, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_InitializeBreakawayArrays, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'BP_SmallShipwreck_01_C_InitializeBreakawayArrays::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Hitt Call Back
// 0x0050 (0x0050 - 0x0000)
struct BP_SmallShipwreck_01_C_Hitt_Call_Back final
{
public:
	TSet<class AActor*>                           HitActors;                                         // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SmallShipwreck_01_C_Hitt_Call_Back) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_Hitt_Call_Back");
static_assert(sizeof(BP_SmallShipwreck_01_C_Hitt_Call_Back) == 0x000050, "Wrong size on BP_SmallShipwreck_01_C_Hitt_Call_Back");
static_assert(offsetof(BP_SmallShipwreck_01_C_Hitt_Call_Back, HitActors) == 0x000000, "Member 'BP_SmallShipwreck_01_C_Hitt_Call_Back::HitActors' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.GetRandomShipVariation
// 0x000C (0x000C - 0x0000)
struct BP_SmallShipwreck_01_C_GetRandomShipVariation final
{
public:
	int32                                         ShipVar;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_GetRandomShipVariation) == 0x000004, "Wrong alignment on BP_SmallShipwreck_01_C_GetRandomShipVariation");
static_assert(sizeof(BP_SmallShipwreck_01_C_GetRandomShipVariation) == 0x00000C, "Wrong size on BP_SmallShipwreck_01_C_GetRandomShipVariation");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomShipVariation, ShipVar) == 0x000000, "Member 'BP_SmallShipwreck_01_C_GetRandomShipVariation::ShipVar' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomShipVariation, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BP_SmallShipwreck_01_C_GetRandomShipVariation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomShipVariation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_GetRandomShipVariation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.GetRandomBreakpoint
// 0x0050 (0x0050 - 0x0000)
struct BP_SmallShipwreck_01_C_GetRandomBreakpoint final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Time_ImplicitCast;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_A_ImplicitCast;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_GetRandomBreakpoint) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_GetRandomBreakpoint");
static_assert(sizeof(BP_SmallShipwreck_01_C_GetRandomBreakpoint) == 0x000050, "Wrong size on BP_SmallShipwreck_01_C_GetRandomBreakpoint");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, Time) == 0x000000, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_FMin_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000018, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, K2Node_FunctionResult_Time_ImplicitCast) == 0x000020, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::K2Node_FunctionResult_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_FMin_B_ImplicitCast) == 0x000028, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_FMax_B_ImplicitCast) == 0x000030, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_FMin_A_ImplicitCast) == 0x000038, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_FMin_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_FMax_A_ImplicitCast) == 0x000040, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x000048, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetRandomBreakpoint, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x00004C, "Member 'BP_SmallShipwreck_01_C_GetRandomBreakpoint::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.GetLocationAlongCurve
// 0x00B8 (0x00B8 - 0x0000)
struct BP_SmallShipwreck_01_C_GetLocationAlongCurve final
{
public:
	class UCurveVector*                           Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         InTime;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_GetLocationAlongCurve) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_GetLocationAlongCurve");
static_assert(sizeof(BP_SmallShipwreck_01_C_GetLocationAlongCurve) == 0x0000B8, "Wrong size on BP_SmallShipwreck_01_C_GetLocationAlongCurve");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, Curve) == 0x000000, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::Curve' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, InTime) == 0x000008, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::InTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_GetVectorValue_ReturnValue) == 0x000028, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_X_1) == 0x000058, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_Y_1) == 0x000060, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_Z_1) == 0x000068, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_X_2) == 0x000070, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_Y_2) == 0x000078, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_BreakVector_Z_2) == 0x000080, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_Lerp_ReturnValue_2) == 0x000098, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_GetLocationAlongCurve, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_GetLocationAlongCurve::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Get Random Point In Radius
// 0x0098 (0x0098 - 0x0000)
struct BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius final
{
public:
	double                                        Radius;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius");
static_assert(sizeof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius) == 0x000098, "Wrong size on BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, Radius) == 0x000000, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::Radius' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, Point) == 0x000008, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::Point' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000020, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000024, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_RotateAngleAxis_ReturnValue) == 0x000040, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000070, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x000088, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000090, "Member 'BP_SmallShipwreck_01_C_Get_Random_Point_In_Radius::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FX - DuringSlide
// 0x0008 (0x0008 - 0x0000)
struct BP_SmallShipwreck_01_C_FX___DuringSlide final
{
public:
	double                                        Velocity;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_FX___DuringSlide) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_FX___DuringSlide");
static_assert(sizeof(BP_SmallShipwreck_01_C_FX___DuringSlide) == 0x000008, "Wrong size on BP_SmallShipwreck_01_C_FX___DuringSlide");
static_assert(offsetof(BP_SmallShipwreck_01_C_FX___DuringSlide, Velocity) == 0x000000, "Member 'BP_SmallShipwreck_01_C_FX___DuringSlide::Velocity' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindSlideEndLocation
// 0x0EA0 (0x0EA0 - 0x0000)
struct BP_SmallShipwreck_01_C_FindSlideEndLocation final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempMeshSidewaysRotator;                           // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        TempStepZOffset;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempStepCurrentLowered;                            // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempStepCurrentRotator;                            // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                TempStepCurrentInvLocation;                        // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempStepLength;                                    // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        TempMineableSocketLocations;                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	double                                        TempBestHitValue;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempTraceHeight;                                   // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempBestHitDistance;                               // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempTraceHitDistance;                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempLastMineablePosition;                          // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempAllMineable;                                   // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           TempMineableSocketNames;                           // 0x00F0(0x0010)(Edit, BlueprintVisible)
	double                                        TempSlideDistance;                                 // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StepNum;                                           // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StepCurrent;                                       // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StepPrev;                                          // 0x0128(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempSlideLocation;                                 // 0x0140(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StepHeightMax;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVector;                                     // 0x0160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideDistanceLocal;                                // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0180(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0190(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Square_ReturnValue;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue_1;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue_2;                     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Square_ReturnValue_3;                     // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Square_ReturnValue_4;                     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_2;                              // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_3;                              // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB[0x5];                                      // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_4;                              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue_5;                     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue_6;                     // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_5;                              // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default_1;                           // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default_2;                           // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B[0x5];                                      // 0x042B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeSquared_ReturnValue_1;               // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0450(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0588(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x06F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0750(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0770(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x07D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0808(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0820(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSmallShipWreckMineableSocketData     CallFunc_Map_Find_Value;                           // 0x0838(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A9[0x3];                                      // 0x08A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_921[0x7];                                      // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931[0x7];                                      // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0938(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_952[0x6];                                      // 0x0952(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0970(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0988(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x09A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x09B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x09D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0ABA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABB[0x1];                                      // 0x0ABB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC4[0x4];                                      // 0x0AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0AC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0B38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0B78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalcSlideDistance_SlideDistance;          // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue_1; // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0B99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9A[0x6];                                      // 0x0B9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE8[0x8];                                      // 0x0BE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0BF0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0C50(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D39[0x7];                                      // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0D40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0D58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0D71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D72[0x2];                                      // 0x0D72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7C[0x4];                                      // 0x0D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0D80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0D98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0DB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0DC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0DE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0DE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0DF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E14[0x4];                                      // 0x0E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0E18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0E48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0E60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0E80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E84[0x4];                                      // 0x0E84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TempTraceHitDistance_ImplicitCast; // 0x0E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_FindSlideEndLocation) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_FindSlideEndLocation");
static_assert(sizeof(BP_SmallShipwreck_01_C_FindSlideEndLocation) == 0x000EA0, "Wrong size on BP_SmallShipwreck_01_C_FindSlideEndLocation");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, StartLocation) == 0x000000, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, EndLocation) == 0x000018, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::EndLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempMeshSidewaysRotator) == 0x000030, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempMeshSidewaysRotator' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempStepZOffset) == 0x000048, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempStepZOffset' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempStepCurrentLowered) == 0x000050, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempStepCurrentLowered' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempStepCurrentRotator) == 0x000068, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempStepCurrentRotator' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempStepCurrentInvLocation) == 0x000080, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempStepCurrentInvLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempStepLength) == 0x000098, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempStepLength' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempMineableSocketLocations) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempMineableSocketLocations' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempBestHitValue) == 0x0000B0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempBestHitValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempTraceHeight) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempTraceHeight' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempBestHitDistance) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempBestHitDistance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempTraceHitDistance) == 0x0000C8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempTraceHitDistance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempLastMineablePosition) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempLastMineablePosition' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempAllMineable) == 0x0000E8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempAllMineable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempMineableSocketNames) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempMineableSocketNames' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempSlideDistance) == 0x000100, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempSlideDistance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, StepNum) == 0x000108, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::StepNum' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, StepCurrent) == 0x000110, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::StepCurrent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, StepPrev) == 0x000128, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::StepPrev' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, TempSlideLocation) == 0x000140, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::TempSlideLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, StepHeightMax) == 0x000158, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::StepHeightMax' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, ForwardVector) == 0x000160, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, SlideDistanceLocal) == 0x000178, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::SlideDistanceLocal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_object_Variable) == 0x000180, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_object_Variable_1) == 0x000190, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_object_Variable_2) == 0x0001A0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_int_Loop_Counter_Variable) == 0x0001B0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue) == 0x0001B8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_int_Variable) == 0x0001C4, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_VSize_ReturnValue) == 0x0001C8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_bool_Variable) == 0x0001DC, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_int_Array_Index_Variable) == 0x0001E0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Not_PreBool_ReturnValue) == 0x0001E4, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0001E8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000200, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_ComposeRotators_ReturnValue) == 0x000218, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeVector_ReturnValue) == 0x000230, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000248, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000260, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue_1) == 0x000268, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue_2) == 0x000270, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MapRangeClamped_ReturnValue) == 0x000278, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000280, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeRotFromX_ReturnValue) == 0x000298, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue_3) == 0x0002B0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakRotator_Roll) == 0x0002B8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakRotator_Pitch) == 0x0002BC, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakRotator_Yaw) == 0x0002C0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue_4) == 0x0002C8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_int_Loop_Counter_Variable_1) == 0x0002D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Array_Length_ReturnValue) == 0x0002D4, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002D8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Less_IntInt_ReturnValue) == 0x0002DC, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_byte_Variable) == 0x0002DD, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_byte_Variable_1) == 0x0002DE, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_bool_Variable_1) == 0x0002DF, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0002E0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_byte_Variable_2) == 0x0002F8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_byte_Variable_3) == 0x0002F9, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_bool_Variable_2) == 0x0002FA, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000300, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_byte_Variable_4) == 0x000308, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000310, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_VSizeSquared_ReturnValue) == 0x000318, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue_5) == 0x000320, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Square_ReturnValue_6) == 0x000328, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Square_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000330, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000348, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000350, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeVector_ReturnValue_2) == 0x000358, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeVector_ReturnValue_3) == 0x000370, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000388, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_byte_Variable_5) == 0x0003A0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeVector_ReturnValue_4) == 0x0003A8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_bool_Variable_3) == 0x0003C0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0003C8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Lerp_ReturnValue) == 0x0003D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0003D8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeRotator_ReturnValue) == 0x0003E8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000400, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_ComposeRotators_ReturnValue_1) == 0x000408, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000420, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, K2Node_Select_Default) == 0x000428, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, K2Node_Select_Default_1) == 0x000429, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, K2Node_Select_Default_2) == 0x00042A, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000430, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000438, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_VSizeSquared_ReturnValue_1) == 0x000440, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GetTransform_ReturnValue) == 0x000450, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0004B0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x0004B8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0004D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeVector_ReturnValue_5) == 0x0004D8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, Temp_int_Array_Index_Variable_1) == 0x0004F0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0004F8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Array_Get_Item) == 0x000510, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000528, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000540, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000558, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000570, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_SphereTraceSingle_OutHit) == 0x000588, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_SphereTraceSingle_ReturnValue) == 0x000670, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_IsValid_ReturnValue) == 0x000671, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000672, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000673, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Time) == 0x000674, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Distance) == 0x000678, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Location) == 0x000680, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000698, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Normal) == 0x0006B0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0006C8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_PhysMat) == 0x0006E0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitActor) == 0x0006E8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitComponent) == 0x0006F0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0006F8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_BoneName) == 0x000700, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitItem) == 0x000708, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ElementIndex) == 0x00070C, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000710, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_TraceStart) == 0x000718, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000730, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000748, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GetAllSocketNames_ReturnValue) == 0x000750, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Array_Get_Item_1) == 0x000760, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Array_Length_ReturnValue_1) == 0x000768, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GetSocketTransform_ReturnValue) == 0x000770, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakTransform_Location) == 0x0007D8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakTransform_Rotation) == 0x0007F0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakTransform_Scale) == 0x000808, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000820, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Map_Find_Value) == 0x000838, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Map_Find_ReturnValue) == 0x0008A8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Array_Add_ReturnValue) == 0x0008AC, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0008B0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakVector_X) == 0x0008C8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakVector_Y) == 0x0008D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakVector_Z) == 0x0008D8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakVector_X_1) == 0x0008E0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakVector_Y_1) == 0x0008E8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakVector_Z_1) == 0x0008F0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0008F8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Abs_ReturnValue) == 0x000900, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000908, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000910, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000918, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000920, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000928, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BooleanAND_ReturnValue) == 0x000930, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000938, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x000950, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x000951, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000958, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000970, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000988, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0009A0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0009B8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_LineTraceSingle_OutHit) == 0x0009D0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x000AB8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000AB9, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000ABA, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Time_1) == 0x000ABC, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Distance_1) == 0x000AC0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Location_1) == 0x000AC8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000AE0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Normal_1) == 0x000AF8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000B10, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x000B28, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitActor_1) == 0x000B30, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x000B38, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x000B40, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_BoneName_1) == 0x000B48, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitItem_1) == 0x000B50, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ElementIndex_1) == 0x000B54, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x000B58, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x000B60, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x000B78, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_CalcSlideDistance_SlideDistance) == 0x000B90, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_CalcSlideDistance_SlideDistance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_NotEqualExactly_VectorVector_ReturnValue_1) == 0x000B98, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_NotEqualExactly_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BooleanAND_ReturnValue_2) == 0x000B99, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000BA0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000BB8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000BD0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GetTransform_ReturnValue_1) == 0x000BF0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_LineTraceSingle_OutHit_1) == 0x000C50, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000D38, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000D40, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_ComposeRotators_ReturnValue_2) == 0x000D58, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000D70, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000D71, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Time_2) == 0x000D74, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Distance_2) == 0x000D78, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Location_2) == 0x000D80, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000D98, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_Normal_2) == 0x000DB0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000DC8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_PhysMat_2) == 0x000DE0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitActor_2) == 0x000DE8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitComponent_2) == 0x000DF0, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitBoneName_2) == 0x000DF8, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_BoneName_2) == 0x000E00, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_HitItem_2) == 0x000E08, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_ElementIndex_2) == 0x000E0C, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_FaceIndex_2) == 0x000E10, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_TraceStart_2) == 0x000E18, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_BreakHitResult_TraceEnd_2) == 0x000E30, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000E48, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000E60, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Lerp_B_ImplicitCast) == 0x000E78, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000E80, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, K2Node_VariableSet_TempTraceHitDistance_ImplicitCast) == 0x000E88, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::K2Node_VariableSet_TempTraceHitDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindSlideEndLocation, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000E90, "Member 'BP_SmallShipwreck_01_C_FindSlideEndLocation::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindRandLocationInRadius
// 0x0340 (0x0340 - 0x0000)
struct BP_SmallShipwreck_01_C_FindRandLocationInRadius final
{
public:
	struct FVector                                CenterLoc;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stream_InitialSeed;                                // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min;                                               // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x0028(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        RaycastDistace;                                    // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0118(0x0010)(ConstParm, ReferenceParm)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, NoDestructor)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0248(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_FindRandLocationInRadius) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_FindRandLocationInRadius");
static_assert(sizeof(BP_SmallShipwreck_01_C_FindRandLocationInRadius) == 0x000340, "Wrong size on BP_SmallShipwreck_01_C_FindRandLocationInRadius");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CenterLoc) == 0x000000, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CenterLoc' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, Stream_InitialSeed) == 0x000018, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::Stream_InitialSeed' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, Min) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::Min' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, Max) == 0x000020, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::Max' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, OutHit) == 0x000028, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, RaycastDistace) == 0x000110, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::RaycastDistace' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, Temp_object_Variable) == 0x000118, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_MakeRandomStream_ReturnValue) == 0x000128, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_MakeRandomStream_ReturnValue_1) == 0x000130, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000138, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x000140, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000158, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_BreakVector_X) == 0x000170, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_BreakVector_Y) == 0x000178, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_BreakVector_Z) == 0x000180, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Normal_ReturnValue) == 0x0001A0, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_MakeVector_ReturnValue_1) == 0x0001B8, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_MakeVector_ReturnValue_2) == 0x000200, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000218, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000230, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_LineTraceSingle_OutHit) == 0x000248, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_LineTraceSingle_ReturnValue) == 0x000330, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindRandLocationInRadius, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000338, "Member 'BP_SmallShipwreck_01_C_FindRandLocationInRadius::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindLandingLocation
// 0x02B0 (0x02B0 - 0x0000)
struct BP_SmallShipwreck_01_C_FindLandingLocation final
{
public:
	struct FVector                                CheckLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalLandingOffset;                                // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x1];                                      // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_FindLandingLocation) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_FindLandingLocation");
static_assert(sizeof(BP_SmallShipwreck_01_C_FindLandingLocation) == 0x0002B0, "Wrong size on BP_SmallShipwreck_01_C_FindLandingLocation");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CheckLocation) == 0x000000, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CheckLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, LocalLandingOffset) == 0x000018, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::LocalLandingOffset' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, Temp_object_Variable) == 0x000030, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000058, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_LineTraceSingle_OutHit) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x0001B8, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B9, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001BA, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_Time) == 0x0001BC, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_Distance) == 0x0001C0, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_Location) == 0x0001C8, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E0, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_Normal) == 0x0001F8, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000210, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_PhysMat) == 0x000228, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_HitActor) == 0x000230, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_HitComponent) == 0x000238, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000240, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_BoneName) == 0x000248, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_HitItem) == 0x000250, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_ElementIndex) == 0x000254, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000258, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_TraceStart) == 0x000260, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000278, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindLandingLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000290, "Member 'BP_SmallShipwreck_01_C_FindLandingLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindCollisionPointVFX
// 0x05E0 (0x05E0 - 0x0000)
struct BP_SmallShipwreck_01_C_FindCollisionPointVFX final
{
public:
	bool                                          Blocking_Hit;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impact;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0208(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x02F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3[0x1];                                      // 0x03E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x2];                                      // 0x04BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0538(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SmallShipwreck_01_C_FindCollisionPointVFX) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_FindCollisionPointVFX");
static_assert(sizeof(BP_SmallShipwreck_01_C_FindCollisionPointVFX) == 0x0005E0, "Wrong size on BP_SmallShipwreck_01_C_FindCollisionPointVFX");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, Blocking_Hit) == 0x000000, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::Blocking_Hit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, Impact) == 0x000008, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::Impact' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, Rotation) == 0x000020, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::Rotation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, Temp_object_Variable) == 0x000050, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000060, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, Temp_object_Variable_1) == 0x000078, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000088, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_GetRightVector_ReturnValue) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000100, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000130, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000148, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000160, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000178, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000190, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0001A8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0001C0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0001D8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0001F0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_LineTraceSingle_OutHit) == 0x000208, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_LineTraceSingle_ReturnValue) == 0x0002F0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_LineTraceSingle_OutHit_1) == 0x0002F8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0003E0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_bBlockingHit) == 0x0003E1, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003E2, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Time) == 0x0003E4, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Distance) == 0x0003E8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Location) == 0x0003F0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000408, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Normal) == 0x000420, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_ImpactNormal) == 0x000438, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_PhysMat) == 0x000450, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitActor) == 0x000458, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitComponent) == 0x000460, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitBoneName) == 0x000468, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_BoneName) == 0x000470, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitItem) == 0x000478, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_ElementIndex) == 0x00047C, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_FaceIndex) == 0x000480, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_TraceStart) == 0x000488, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_TraceEnd) == 0x0004A0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0004B8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0004B9, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Time_1) == 0x0004BC, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Distance_1) == 0x0004C0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Location_1) == 0x0004C8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0004E0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_Normal_1) == 0x0004F8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000510, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_PhysMat_1) == 0x000528, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitActor_1) == 0x000530, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitComponent_1) == 0x000538, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitBoneName_1) == 0x000540, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_BoneName_1) == 0x000548, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_HitItem_1) == 0x000550, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_ElementIndex_1) == 0x000554, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_FaceIndex_1) == 0x000558, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_TraceStart_1) == 0x000560, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BreakHitResult_TraceEnd_1) == 0x000578, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_BooleanAND_ReturnValue) == 0x000590, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000598, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_Normal_ReturnValue) == 0x0005B0, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindCollisionPointVFX, CallFunc_MakeRotFromX_ReturnValue) == 0x0005C8, "Member 'BP_SmallShipwreck_01_C_FindCollisionPointVFX::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.FindAverageLocationAndNormal
// 0x04B0 (0x04B0 - 0x0000)
struct BP_SmallShipwreck_01_C_FindAverageLocationAndNormal final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TraceAmount;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ConeDirection;                                     // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxAvgHeightDif;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AverageLocation;                                   // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AverageNormal;                                     // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                NormalZArray;                                      // 0x0078(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                HeightArray;                                       // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        LocationArray;                                     // 0x0098(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        NormalArray;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue_1;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue_1;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue_1;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorArrayAverage_ReturnValue;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorArrayAverage_ReturnValue_1;      // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x0448(0x0010)(ConstParm, ReferenceParm)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0458(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast_1; // 0x0478(0x0010)(ConstParm, ReferenceParm)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast_1; // 0x0488(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_FindAverageLocationAndNormal");
static_assert(sizeof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal) == 0x0004B0, "Wrong size on BP_SmallShipwreck_01_C_FindAverageLocationAndNormal");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, StartLocation) == 0x000000, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, TraceAmount) == 0x000018, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::TraceAmount' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, ConeDirection) == 0x000020, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::ConeDirection' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, MaxAvgHeightDif) == 0x000038, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::MaxAvgHeightDif' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, AverageLocation) == 0x000040, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::AverageLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, AverageNormal) == 0x000058, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::AverageNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, Valid) == 0x000070, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::Valid' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, NormalZArray) == 0x000078, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::NormalZArray' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, HeightArray) == 0x000088, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::HeightArray' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, LocationArray) == 0x000098, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::LocationArray' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, NormalArray) == 0x0000A8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::NormalArray' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MinOfFloatArray_MinValue) == 0x0000D4, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x0000D8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MaxOfFloatArray_MaxValue) == 0x0000DC, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, Temp_object_Variable) == 0x0000E0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Abs_ReturnValue) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000108, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MaxOfFloatArray_IndexOfMaxValue_1) == 0x000120, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MaxOfFloatArray_IndexOfMaxValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MaxOfFloatArray_MaxValue_1) == 0x000124, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MaxOfFloatArray_MaxValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MinOfFloatArray_IndexOfMinValue_1) == 0x000128, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MinOfFloatArray_IndexOfMinValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MinOfFloatArray_MinValue_1) == 0x00012C, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MinOfFloatArray_MinValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, Temp_int_Variable) == 0x000138, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Abs_ReturnValue_1) == 0x000140, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000148, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MakeRotator_ReturnValue) == 0x000160, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000180, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000198, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_GetVectorArrayAverage_ReturnValue) == 0x0001B8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_GetVectorArrayAverage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_GetVectorArrayAverage_ReturnValue_1) == 0x0001D0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_GetVectorArrayAverage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_X) == 0x000200, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_Y) == 0x000208, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_Z) == 0x000210, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000218, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Abs_ReturnValue_2) == 0x000230, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_LineTraceSingle_OutHit) == 0x000238, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_LineTraceSingle_ReturnValue) == 0x000320, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000321, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_bBlockingHit) == 0x000322, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_bInitialOverlap) == 0x000323, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_Time) == 0x000324, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_Distance) == 0x000328, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_Location) == 0x000330, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_ImpactPoint) == 0x000348, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_Normal) == 0x000360, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_ImpactNormal) == 0x000378, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_PhysMat) == 0x000390, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_HitActor) == 0x000398, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_HitComponent) == 0x0003A0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_HitBoneName) == 0x0003A8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_BoneName) == 0x0003B0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_HitItem) == 0x0003B8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_ElementIndex) == 0x0003BC, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_FaceIndex) == 0x0003C0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_TraceStart) == 0x0003C8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakHitResult_TraceEnd) == 0x0003E0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BooleanAND_ReturnValue) == 0x0003F8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_X_1) == 0x000400, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_Y_1) == 0x000408, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_Z_1) == 0x000410, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BooleanAND_ReturnValue_1) == 0x000418, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000419, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Array_Add_ReturnValue) == 0x00041C, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_X_2) == 0x000420, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_Y_2) == 0x000428, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_BreakVector_Z_2) == 0x000430, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000438, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Array_Add_ReturnValue_1) == 0x00043C, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Array_Add_ReturnValue_2) == 0x000440, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Array_Add_ReturnValue_3) == 0x000444, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x000448, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000458, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000468, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000470, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast_1) == 0x000478, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast_1) == 0x000488, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000498, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x0004A0, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_FindAverageLocationAndNormal, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0004A8, "Member 'BP_SmallShipwreck_01_C_FindAverageLocationAndNormal::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ExecuteUbergraph_BP_SmallShipwreck_01
// 0x1250 (0x1250 - 0x0000)
struct BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Velocity;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionPointVFX_Blocking_Hit;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindCollisionPointVFX_Impact;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindCollisionPointVFX_Rotation;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0080(0x0010)(ReferenceParm)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindLandingLocation_LocalLandingOffset;   // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimelineLength_ReturnValue_1;          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimelineLength_ReturnValue_2;          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0224(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomShipVariation_ShipVar;           // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x02A0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FInstigatorInfo                        K2Node_Event_InInstigator;                         // 0x0388(0x0010)(ConstParm, NoDestructor)
	TSubclassOf<class UDuneDamageType>            K2Node_Event_DamageType;                           // 0x0398(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x03C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x03D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AResourceNodePlaceableSpawner*          CallFunc_Array_Get_Item_1;                         // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATemporaryLootSpawner*                  CallFunc_Array_Get_Item_2;                         // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFSmallShipwreckReplicatedProps        K2Node_MakeStruct_FSmallShipwreckReplicatedProps;  // 0x0500(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSmallShipwreckReplicatedProps        K2Node_MakeStruct_FSmallShipwreckReplicatedProps_1; // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0520(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNetAddressableStaticMeshComponent*     CallFunc_AddComponent_ReturnValue;                 // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x05A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69A[0x2];                                      // 0x069A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSmallShipwreckReplicatedProps        K2Node_MakeStruct_FSmallShipwreckReplicatedProps_2; // 0x069C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AD[0x3];                                      // 0x06AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_7;            // 0x06DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC[0x4];                                      // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue_1;          // 0x06F0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x070C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70D[0x3];                                      // 0x070D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCrashProgressTick_bIsFinished;      // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_723[0x1];                                      // 0x0723(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue_2;          // 0x0730(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0750(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_808[0x8];                                      // 0x0808(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0810(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x0870(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSmallShipWreckMineableSocketData     CallFunc_Map_Find_Value;                           // 0x0880(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0910(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0920(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VariationIndex;                 // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D[0x3];                                      // 0x092D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0xE];                                      // 0x0942(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_2;                            // 0x0950(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNetAddressableStaticMeshComponent*     CallFunc_AddComponent_ReturnValue_2;               // 0x09B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UBP_DA_SmallWreckData_C> CallFunc_Array_Get_Item_5;                         // 0x09B8(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DA_SmallWreckData_C*                K2Node_DynamicCast_AsBP_DA_Small_Wreck_Data;       // 0x09F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_2;                // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0A19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1A[0x6];                                      // 0x0A1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_3;                            // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_3;                // 0x0A30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0A40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A49[0x3];                                      // 0x0A49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index_1;                        // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0x4];                                      // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0A58(0x0010)(ReferenceParm)
	class UObject*                                Temp_object_Variable_4;                            // 0x0A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_6;                         // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7A[0x6];                                      // 0x0A7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Map_Find_Value_1;                         // 0x0A90(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC1[0x3];                                      // 0x0AC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0AD0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_7;                         // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE9[0x7];                                      // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSmallShipWreckMineableSocketData     CallFunc_Map_Find_Value_2;                         // 0x0AF0(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0B62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0B63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0B64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0B65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0B66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0B67(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B69[0x3];                                      // 0x0B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_5;                            // 0x0B78(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0B88(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0C72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C73[0x1];                                      // 0x0C73(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0C74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0C80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0C98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0CB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0CC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0CE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0CF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D14[0x4];                                      // 0x0D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0D18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0D30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0D50(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x0E39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0E3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0E3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3C[0x4];                                      // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0E40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0E68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0E88(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0F78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0F90(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x1078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindSlideEndLocation_EndLocation;         // 0x1090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A9[0x7];                                     // 0x10A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x10B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAlongCurve_ReturnValue;        // 0x11A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAlongCurve_ReturnValue_1;      // 0x11B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x11D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D4[0x4];                                     // 0x11D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x11D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x11E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x11E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x11F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateThreatBlob_Radius_ImplicitCast;     // 0x11F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x11FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x1200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1204[0x4];                                     // 0x1204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x1208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x1214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x1218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121C[0x4];                                     // 0x121C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x1228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x1230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1234[0x4];                                     // 0x1234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x1238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAlongCurve_InTime_ImplicitCast; // 0x1240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01");
static_assert(sizeof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01) == 0x001250, "Wrong size on BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, EntryPoint) == 0x000000, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_IsDedicatedServer_ReturnValue) == 0x000029, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue) == 0x00003C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Velocity) == 0x000040, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_FindCollisionPointVFX_Blocking_Hit) == 0x000048, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_FindCollisionPointVFX_Blocking_Hit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_FindCollisionPointVFX_Impact) == 0x000050, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_FindCollisionPointVFX_Impact' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_FindCollisionPointVFX_Rotation) == 0x000068, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_FindCollisionPointVFX_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetAllSocketNames_ReturnValue) == 0x000080, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000090, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_IsEmpty_ReturnValue) == 0x00009C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Greater_IntInt_ReturnValue) == 0x00009D, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue) == 0x00009E, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue) == 0x00009F, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A4, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue_1) == 0x0000B4, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000B5, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B6, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetTimelineLength_ReturnValue) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000BC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Array_Index_Variable_2) == 0x0000D0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue_2) == 0x0000D4, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000E0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Conv_NameToString_ReturnValue) == 0x0000E8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Contains_ReturnValue) == 0x0000FC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000100, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Normal_ReturnValue) == 0x000118, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_RandomInteger_ReturnValue) == 0x000130, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_MakeRotFromX_ReturnValue) == 0x000138, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000150, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_FindLandingLocation_LocalLandingOffset) == 0x000178, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_FindLandingLocation_LocalLandingOffset' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000190, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Array_Index_Variable_3) == 0x0001A8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Array_Index_Variable_4) == 0x0001AC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001B0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Normal_ReturnValue_1) == 0x0001C8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0001E0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetTimelineLength_ReturnValue_1) == 0x0001F8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetTimelineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakRotator_Roll_1) == 0x0001FC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakRotator_Pitch_1) == 0x000200, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakRotator_Yaw_1) == 0x000204, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_MakeRotator_ReturnValue) == 0x000208, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetTimelineLength_ReturnValue_2) == 0x000220, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetTimelineLength_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_4) == 0x000224, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000238, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_RandomFloatInRange_ReturnValue) == 0x000248, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000250, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_MakeVector_ReturnValue) == 0x000268, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000280, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000288, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Loop_Counter_Variable_2) == 0x000290, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetRandomShipVariation_ShipVar) == 0x000294, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetRandomShipVariation_ShipVar' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000298, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00029C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_Event_HitResult) == 0x0002A0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_Event_InInstigator) == 0x000388, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_Event_InInstigator' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_Event_DamageType) == 0x000398, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue_3) == 0x0003A0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0003A8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_5) == 0x0003C0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003D0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_6) == 0x0003D8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0003E8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000400, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_1) == 0x000408, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Length_ReturnValue_1) == 0x000410, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000414, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_IsValid_ReturnValue) == 0x000418, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Max_ReturnValue) == 0x00041C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue_4) == 0x000420, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_2) == 0x000428, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_IsValid_ReturnValue_1) == 0x000430, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Length_ReturnValue_2) == 0x000434, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000438, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Max_ReturnValue_1) == 0x00043C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Loop_Counter_Variable_3) == 0x000440, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000448, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_VectorVector_ReturnValue) == 0x000460, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000478, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_IntInt_ReturnValue_1) == 0x000490, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000498, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetDisplayName_ReturnValue) == 0x0004B0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Conv_VectorToString_ReturnValue) == 0x0004C0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Concat_StrStr_ReturnValue) == 0x0004D0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0004E0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0004F0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_MakeStruct_FSmallShipwreckReplicatedProps) == 0x000500, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_MakeStruct_FSmallShipwreckReplicatedProps' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue_1) == 0x00050C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_MakeStruct_FSmallShipwreckReplicatedProps_1) == 0x000510, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_MakeStruct_FSmallShipwreckReplicatedProps_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_struct_Variable) == 0x000520, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000580, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_MakeRotator_ReturnValue_1) == 0x000588, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_AddComponent_ReturnValue) == 0x0005A0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0005A8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Square_ReturnValue) == 0x000690, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue_2) == 0x000698, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000699, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_MakeStruct_FSmallShipwreckReplicatedProps_2) == 0x00069C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_MakeStruct_FSmallShipwreckReplicatedProps_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_int_Loop_Counter_Variable_4) == 0x0006A8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Less_IntInt_ReturnValue) == 0x0006AC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_IntInt_ReturnValue_2) == 0x0006B0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_object_Variable) == 0x0006B8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_AsStatic_Mesh) == 0x0006C0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_bSuccess) == 0x0006C8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Loaded) == 0x0006D0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SetStaticMesh_ReturnValue) == 0x0006D8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CreateDelegate_OutputDelegate_7) == 0x0006DC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetAllSocketNames_ReturnValue_1) == 0x0006F0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetAllSocketNames_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_3) == 0x000700, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Length_ReturnValue_3) == 0x000708, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Less_IntInt_ReturnValue_1) == 0x00070C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_object_Variable_1) == 0x000710, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000718, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_bSuccess_1) == 0x000720, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue_3) == 0x000721, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_UpdateCrashProgressTick_bIsFinished) == 0x000722, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_UpdateCrashProgressTick_bIsFinished' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetFloatValue_ReturnValue) == 0x000724, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000728, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetAllSocketNames_ReturnValue_2) == 0x000730, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetAllSocketNames_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_4) == 0x000740, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Length_ReturnValue_4) == 0x000748, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetSocketTransform_ReturnValue) == 0x000750, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Less_IntInt_ReturnValue_2) == 0x0007B0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakTransform_Location) == 0x0007B8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakTransform_Rotation) == 0x0007D0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakTransform_Scale) == 0x0007E8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Loaded_1) == 0x000800, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_struct_Variable_1) == 0x000810, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_AddComponent_ReturnValue_1) == 0x000870, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000878, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_IsValid_ReturnValue_2) == 0x000879, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Find_Value) == 0x000880, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Find_ReturnValue) == 0x0008F0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SelectFloat_ReturnValue) == 0x0008F8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000900, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SelectFloat_ReturnValue_1) == 0x000908, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000910, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000918, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000920, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_VariationIndex) == 0x000928, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_VariationIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00092C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BuildString_Int_ReturnValue) == 0x000930, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000940, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue_5) == 0x000941, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_struct_Variable_2) == 0x000950, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_AddComponent_ReturnValue_2) == 0x0009B0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_5) == 0x0009B8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0009E8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_AsBP_DA_Small_Wreck_Data) == 0x0009F0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_AsBP_DA_Small_Wreck_Data' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_bSuccess_2) == 0x0009F8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_object_Variable_2) == 0x000A00, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Loaded_2) == 0x000A08, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_AsStatic_Mesh_2) == 0x000A10, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_AsStatic_Mesh_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_bSuccess_3) == 0x000A18, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000A19, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_object_Variable_3) == 0x000A20, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_AddUnique_ReturnValue) == 0x000A28, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_AsStatic_Mesh_3) == 0x000A30, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_AsStatic_Mesh_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_DynamicCast_bSuccess_4) == 0x000A38, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Loaded_3) == 0x000A40, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SetStaticMesh_ReturnValue_3) == 0x000A48, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Index_1) == 0x000A4C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Index_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_IntInt_ReturnValue_3) == 0x000A50, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Keys_Keys) == 0x000A58, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_object_Variable_4) == 0x000A68, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_6) == 0x000A70, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000A78, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000A79, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Loaded_4) == 0x000A80, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_HasAuthority_ReturnValue_6) == 0x000A88, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Find_Value_1) == 0x000A90, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Find_ReturnValue_1) == 0x000AC0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, K2Node_CustomEvent_Index) == 0x000AC4, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_IntInt_ReturnValue_4) == 0x000AC8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Keys_Keys_1) == 0x000AD0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_Get_Item_7) == 0x000AE0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000AE8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Find_Value_2) == 0x000AF0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Map_Find_ReturnValue_2) == 0x000B60, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_DoesSocketExist_ReturnValue) == 0x000B61, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000B62, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000B63, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue_4) == 0x000B64, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue_5) == 0x000B65, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Not_PreBool_ReturnValue_6) == 0x000B66, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue_3) == 0x000B67, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue_4) == 0x000B68, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000B6C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue_5) == 0x000B70, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, Temp_object_Variable_5) == 0x000B78, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_LineTraceSingle_OutHit) == 0x000B88, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_LineTraceSingle_ReturnValue) == 0x000C70, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_bBlockingHit) == 0x000C71, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_bInitialOverlap) == 0x000C72, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_Time) == 0x000C74, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_Distance) == 0x000C78, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_Location) == 0x000C80, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_ImpactPoint) == 0x000C98, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_Normal) == 0x000CB0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_ImpactNormal) == 0x000CC8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_PhysMat) == 0x000CE0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_HitActor) == 0x000CE8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_HitComponent) == 0x000CF0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_HitBoneName) == 0x000CF8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_BoneName) == 0x000D00, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_HitItem) == 0x000D08, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_ElementIndex) == 0x000D0C, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_FaceIndex) == 0x000D10, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_TraceStart) == 0x000D18, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BreakHitResult_TraceEnd) == 0x000D30, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000D48, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000D50, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000E38, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x000E39, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_BooleanAND_ReturnValue_6) == 0x000E3A, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000E3B, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000E40, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000E58, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_VSize_ReturnValue) == 0x000E60, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_VLerp_ReturnValue) == 0x000E68, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000E80, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000E88, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_FMin_ReturnValue) == 0x000F70, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_RLerp_ReturnValue) == 0x000F78, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000F90, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_VectorVector_ReturnValue_2) == 0x001078, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_FindSlideEndLocation_EndLocation) == 0x001090, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_FindSlideEndLocation_EndLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x0010A8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0010B0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x001198, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetLocationAlongCurve_ReturnValue) == 0x0011A0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetLocationAlongCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetLocationAlongCurve_ReturnValue_1) == 0x0011B8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetLocationAlongCurve_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0011D0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0011D8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0011E0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0011E8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0011F0, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_CreateThreatBlob_Radius_ImplicitCast) == 0x0011F8, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_CreateThreatBlob_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0011FC, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x001200, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x001208, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Delay_Duration_ImplicitCast) == 0x001210, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x001214, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x001218, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x001220, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x001228, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_RLerp_Alpha_ImplicitCast) == 0x001230, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x001238, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01, CallFunc_GetLocationAlongCurve_InTime_ImplicitCast) == 0x001240, "Member 'BP_SmallShipwreck_01_C_ExecuteUbergraph_BP_SmallShipwreck_01::CallFunc_GetLocationAlongCurve_InTime_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.EnableCollisions
// 0x0020 (0x0020 - 0x0000)
struct BP_SmallShipwreck_01_C_EnableCollisions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_EnableCollisions) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_EnableCollisions");
static_assert(sizeof(BP_SmallShipwreck_01_C_EnableCollisions) == 0x000020, "Wrong size on BP_SmallShipwreck_01_C_EnableCollisions");
static_assert(offsetof(BP_SmallShipwreck_01_C_EnableCollisions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SmallShipwreck_01_C_EnableCollisions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_EnableCollisions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SmallShipwreck_01_C_EnableCollisions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_EnableCollisions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_EnableCollisions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_EnableCollisions, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SmallShipwreck_01_C_EnableCollisions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_EnableCollisions, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SmallShipwreck_01_C_EnableCollisions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_EnableCollisions, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_EnableCollisions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.DestroyTempMeshes
// 0x0030 (0x0030 - 0x0000)
struct BP_SmallShipwreck_01_C_DestroyTempMeshes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_DestroyTempMeshes) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_DestroyTempMeshes");
static_assert(sizeof(BP_SmallShipwreck_01_C_DestroyTempMeshes) == 0x000030, "Wrong size on BP_SmallShipwreck_01_C_DestroyTempMeshes");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_DestroyTempMeshes, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SmallShipwreck_01_C_DestroyTempMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.CleanupFires
// 0x0058 (0x0058 - 0x0000)
struct BP_SmallShipwreck_01_C_CleanupFires final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_CleanupFires) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_CleanupFires");
static_assert(sizeof(BP_SmallShipwreck_01_C_CleanupFires) == 0x000058, "Wrong size on BP_SmallShipwreck_01_C_CleanupFires");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SmallShipwreck_01_C_CleanupFires::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SmallShipwreck_01_C_CleanupFires::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_SmallShipwreck_01_C_CleanupFires::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_SmallShipwreck_01_C_CleanupFires::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Max_ReturnValue) == 0x00004C, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CleanupFires, CallFunc_Max_ReturnValue_1) == 0x000050, "Member 'BP_SmallShipwreck_01_C_CleanupFires::CallFunc_Max_ReturnValue_1' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.CalcSlideDistance
// 0x0530 (0x0530 - 0x0000)
struct BP_SmallShipwreck_01_C_CalcSlideDistance final
{
public:
	double                                        MinDistane;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDistance;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlideDistance_0;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlopeDirectionDotAverage;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlopeAngleAverage;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlopeDirectionDotTotal;                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlopeAngleTotal;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                SlopeDirectionDotArray;                            // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                SlopeAngleArray;                                   // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB[0x1];                                      // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromY_ReturnValue;                 // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_CalcSlideDistance) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_CalcSlideDistance");
static_assert(sizeof(BP_SmallShipwreck_01_C_CalcSlideDistance) == 0x000530, "Wrong size on BP_SmallShipwreck_01_C_CalcSlideDistance");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, MinDistane) == 0x000000, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::MinDistane' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, MaxDistance) == 0x000008, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlideDistance_0) == 0x000010, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlideDistance_0' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlopeDirectionDotAverage) == 0x000018, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlopeDirectionDotAverage' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlopeAngleAverage) == 0x000020, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlopeAngleAverage' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlopeDirectionDotTotal) == 0x000028, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlopeDirectionDotTotal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlopeAngleTotal) == 0x000030, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlopeAngleTotal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlopeDirectionDotArray) == 0x000038, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlopeDirectionDotArray' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, SlopeAngleArray) == 0x000048, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::SlopeAngleArray' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_object_Variable) == 0x000058, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000088, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000098, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_int_Variable) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000A8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_SafeDivide_ReturnValue) == 0x0000E0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_SafeDivide_ReturnValue_1) == 0x0000E8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Abs_ReturnValue) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_MapRangeClamped_ReturnValue) == 0x000118, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000128, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_FClamp_ReturnValue_1) == 0x000130, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_SelectFloat_ReturnValue) == 0x000138, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_SelectFloat_ReturnValue_1) == 0x000140, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_FClamp_ReturnValue_2) == 0x000148, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, K2Node_MathExpression_ReturnValue) == 0x000150, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_FClamp_ReturnValue_3) == 0x000158, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000160, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_byte_Variable) == 0x000170, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000188, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_int_Loop_Counter_Variable_1) == 0x000190, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Less_IntInt_ReturnValue) == 0x000194, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_IntInt_ReturnValue_2) == 0x000198, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Array_Length_ReturnValue_1) == 0x0001A8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_byte_Variable_1) == 0x0001B9, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001C0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_GetForwardVector_ReturnValue) == 0x0001D8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0001F0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000208, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_GetForwardVector_ReturnValue_1) == 0x000220, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_MakeVector_ReturnValue) == 0x000238, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, Temp_bool_Variable) == 0x000250, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000258, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_VectorVector_ReturnValue) == 0x000270, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, K2Node_Select_Default) == 0x000288, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000290, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002A8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_LineTraceSingle_OutHit) == 0x0002C0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_LineTraceSingle_ReturnValue) == 0x0003A8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_bBlockingHit) == 0x0003A9, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003AA, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_Time) == 0x0003AC, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_Distance) == 0x0003B0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_Location) == 0x0003B8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_ImpactPoint) == 0x0003D0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_Normal) == 0x0003E8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_ImpactNormal) == 0x000400, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_PhysMat) == 0x000418, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_HitActor) == 0x000420, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_HitComponent) == 0x000428, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_HitBoneName) == 0x000430, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_BoneName) == 0x000438, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_HitItem) == 0x000440, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_ElementIndex) == 0x000444, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_FaceIndex) == 0x000448, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_TraceStart) == 0x000450, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakHitResult_TraceEnd) == 0x000468, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_MakeRotFromY_ReturnValue) == 0x000480, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_MakeRotFromY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Normal_ReturnValue) == 0x000498, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakRotator_Roll) == 0x0004B0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakRotator_Pitch) == 0x0004B4, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_BreakRotator_Yaw) == 0x0004B8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Dot_VectorVector_ReturnValue) == 0x0004C0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_MakeRotator_ReturnValue) == 0x0004C8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_DegAcos_ReturnValue) == 0x0004E0, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_NegateRotator_ReturnValue) == 0x0004E8, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Array_Add_ReturnValue) == 0x000500, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_GetForwardVector_ReturnValue_2) == 0x000508, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000520, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_CalcSlideDistance, CallFunc_Array_Add_ReturnValue_1) == 0x000528, "Member 'BP_SmallShipwreck_01_C_CalcSlideDistance::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.BP_OnSandwormCleanup
// 0x0100 (0x0100 - 0x0000)
struct BP_SmallShipwreck_01_C_BP_OnSandwormCleanup final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FInstigatorInfo                        InInstigator;                                      // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TSubclassOf<class UDuneDamageType>            DamageType;                                        // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_BP_OnSandwormCleanup) == 0x000008, "Wrong alignment on BP_SmallShipwreck_01_C_BP_OnSandwormCleanup");
static_assert(sizeof(BP_SmallShipwreck_01_C_BP_OnSandwormCleanup) == 0x000100, "Wrong size on BP_SmallShipwreck_01_C_BP_OnSandwormCleanup");
static_assert(offsetof(BP_SmallShipwreck_01_C_BP_OnSandwormCleanup, HitResult) == 0x000000, "Member 'BP_SmallShipwreck_01_C_BP_OnSandwormCleanup::HitResult' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_BP_OnSandwormCleanup, InInstigator) == 0x0000E8, "Member 'BP_SmallShipwreck_01_C_BP_OnSandwormCleanup::InInstigator' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_BP_OnSandwormCleanup, DamageType) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_BP_OnSandwormCleanup::DamageType' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ApplyShipVariation
// 0x0004 (0x0004 - 0x0000)
struct BP_SmallShipwreck_01_C_ApplyShipVariation final
{
public:
	int32                                         VariationIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_ApplyShipVariation) == 0x000004, "Wrong alignment on BP_SmallShipwreck_01_C_ApplyShipVariation");
static_assert(sizeof(BP_SmallShipwreck_01_C_ApplyShipVariation) == 0x000004, "Wrong size on BP_SmallShipwreck_01_C_ApplyShipVariation");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyShipVariation, VariationIndex) == 0x000000, "Member 'BP_SmallShipwreck_01_C_ApplyShipVariation::VariationIndex' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.ApplyDamageOnServer
// 0x02D0 (0x02D0 - 0x0000)
struct BP_SmallShipwreck_01_C_ApplyDamageOnServer final
{
public:
	struct FVector                                DamageCenterLocation;                              // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAlongCurve_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0100(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const TSet<class AActor*>& HitActors)> K2Node_CreateDelegate_OutputDelegate;      // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FServerDealRadialDamageInfo            K2Node_MakeStruct_ServerDealRadialDamageInfo;      // 0x0188(0x00E0)()
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyRadialDamageWithFalloff_ReturnValue; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAlongCurve_ReturnValue_1;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAlongCurve_InTime_ImplicitCast; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_ApplyDamageOnServer) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_ApplyDamageOnServer");
static_assert(sizeof(BP_SmallShipwreck_01_C_ApplyDamageOnServer) == 0x0002D0, "Wrong size on BP_SmallShipwreck_01_C_ApplyDamageOnServer");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, DamageCenterLocation) == 0x000000, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::DamageCenterLocation' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetTimeRange_MinTime) == 0x000018, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetTimeRange_MaxTime) == 0x00001C, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetLocationAlongCurve_ReturnValue) == 0x000020, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetLocationAlongCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_TransformLocation_ReturnValue) == 0x0000A0, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetFloatValue_ReturnValue) == 0x0000B8, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_TransformLocation_ReturnValue_1) == 0x0000C0, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_VLerp_ReturnValue) == 0x0000D8, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetTimeRange_MinTime_1) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetTimeRange_MaxTime_1) == 0x0000F4, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetTransform_ReturnValue_1) == 0x000100, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, K2Node_CreateDelegate_OutputDelegate) == 0x000160, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetFloatValue_ReturnValue_1) == 0x000180, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, K2Node_MakeStruct_ServerDealRadialDamageInfo) == 0x000188, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::K2Node_MakeStruct_ServerDealRadialDamageInfo' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_FClamp_ReturnValue) == 0x000268, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_ApplyRadialDamageWithFalloff_ReturnValue) == 0x000270, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_ApplyRadialDamageWithFalloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetLocationAlongCurve_ReturnValue_1) == 0x000278, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetLocationAlongCurve_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_TransformLocation_ReturnValue_2) == 0x000290, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0002A8, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x0002AC, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_FClamp_Max_ImplicitCast) == 0x0002B0, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_FClamp_Value_ImplicitCast) == 0x0002B8, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_ApplyDamageOnServer, CallFunc_GetLocationAlongCurve_InTime_ImplicitCast) == 0x0002C0, "Member 'BP_SmallShipwreck_01_C_ApplyDamageOnServer::CallFunc_GetLocationAlongCurve_InTime_ImplicitCast' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.AddFireZoneToSocket
// 0x0090 (0x0090 - 0x0000)
struct BP_SmallShipwreck_01_C_AddFireZoneToSocket final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FireZone_SmallShipwreck_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_AddFireZoneToSocket) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_AddFireZoneToSocket");
static_assert(sizeof(BP_SmallShipwreck_01_C_AddFireZoneToSocket) == 0x000090, "Wrong size on BP_SmallShipwreck_01_C_AddFireZoneToSocket");
static_assert(offsetof(BP_SmallShipwreck_01_C_AddFireZoneToSocket, SocketName) == 0x000000, "Member 'BP_SmallShipwreck_01_C_AddFireZoneToSocket::SocketName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_AddFireZoneToSocket, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_AddFireZoneToSocket::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_AddFireZoneToSocket, CallFunc_GetSocketTransform_ReturnValue) == 0x000010, "Member 'BP_SmallShipwreck_01_C_AddFireZoneToSocket::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_AddFireZoneToSocket, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_SmallShipwreck_01_C_AddFireZoneToSocket::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_AddFireZoneToSocket, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_SmallShipwreck_01_C_AddFireZoneToSocket::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_AddFireZoneToSocket, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_SmallShipwreck_01_C_AddFireZoneToSocket::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Add Lootcontainer to Socket
// 0x0110 (0x0110 - 0x0000)
struct BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket final
{
public:
	class FName                                   InSocketName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSmallShipWreckMineableSocketData     CallFunc_Map_Find_Value;                           // 0x0010(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATemporaryLootSpawner*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket");
static_assert(sizeof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket) == 0x000110, "Wrong size on BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, InSocketName) == 0x000000, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::InSocketName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_GetSocketTransform_ReturnValue) == 0x000090, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket, CallFunc_Array_AddUnique_ReturnValue) == 0x000100, "Member 'BP_SmallShipwreck_01_C_Add_Lootcontainer_to_Socket::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SmallShipwreck_01.BP_SmallShipwreck_01_C.Add Cuttable to Socket
// 0x0110 (0x0110 - 0x0000)
struct BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket final
{
public:
	class FName                                   InSocketName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSmallShipWreckMineableSocketData     CallFunc_Map_Find_Value;                           // 0x0010(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SmallWreck_Cuttable_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket) == 0x000010, "Wrong alignment on BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket");
static_assert(sizeof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket) == 0x000110, "Wrong size on BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, InSocketName) == 0x000000, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::InSocketName' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_GetSocketTransform_ReturnValue) == 0x000090, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket, CallFunc_Array_AddUnique_ReturnValue) == 0x000100, "Member 'BP_SmallShipwreck_01_C_Add_Cuttable_to_Socket::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

