#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SubtitleList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SubtitleList.W_SubtitleList_C
// 0x0080 (0x04C0 - 0x0440)
class UW_SubtitleList_C final : public USubtitleListWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CloseSubtitle_Both;                                // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CloseSubtitle_Single;                              // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       m_FirstLine;                                       // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       m_NewLine;                                         // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_SubtitleEntry_C*                     CurrentSubtitle;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubtitleEntry_C*                     PreviousSubtitle;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           HidePreviousSubtitleTimerHandle;                   // 0x0478(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RemovingSubtitle;                                  // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentSpeakerName;                                // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          HideSpeakerName;                                   // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   In_Text;                                           // 0x04A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AnimationCompletedNormally;                        // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddSubtitle(const class FText& Text);
	void AddSubtitleDoubleEntry(const class FText& InText);
	void AddSubtitleSingleEntry(const class FText& InText);
	void Destruct();
	void ExecuteUbergraph_W_SubtitleList(int32 EntryPoint);
	void Finished_0BAB0FE4490A0269A3E4BCA5107F6DAD();
	void Finished_C66740EC49040CB122356E94E1263AA9();
	void Hide_Previous_Subtitle();
	void RemoveSubtitle();
	void SetUpText(class UW_SubtitleEntry_C* SubtitleWidget, const class FText& TextString);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SubtitleList_C">();
	}
	static class UW_SubtitleList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SubtitleList_C>();
	}
};
static_assert(alignof(UW_SubtitleList_C) == 0x000010, "Wrong alignment on UW_SubtitleList_C");
static_assert(sizeof(UW_SubtitleList_C) == 0x0004C0, "Wrong size on UW_SubtitleList_C");
static_assert(offsetof(UW_SubtitleList_C, UberGraphFrame) == 0x000440, "Member 'UW_SubtitleList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, CloseSubtitle_Both) == 0x000448, "Member 'UW_SubtitleList_C::CloseSubtitle_Both' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, CloseSubtitle_Single) == 0x000450, "Member 'UW_SubtitleList_C::CloseSubtitle_Single' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, m_FirstLine) == 0x000458, "Member 'UW_SubtitleList_C::m_FirstLine' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, m_NewLine) == 0x000460, "Member 'UW_SubtitleList_C::m_NewLine' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, CurrentSubtitle) == 0x000468, "Member 'UW_SubtitleList_C::CurrentSubtitle' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, PreviousSubtitle) == 0x000470, "Member 'UW_SubtitleList_C::PreviousSubtitle' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, HidePreviousSubtitleTimerHandle) == 0x000478, "Member 'UW_SubtitleList_C::HidePreviousSubtitleTimerHandle' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, RemovingSubtitle) == 0x000480, "Member 'UW_SubtitleList_C::RemovingSubtitle' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, CurrentSpeakerName) == 0x000488, "Member 'UW_SubtitleList_C::CurrentSpeakerName' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, HideSpeakerName) == 0x000498, "Member 'UW_SubtitleList_C::HideSpeakerName' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, In_Text) == 0x0004A0, "Member 'UW_SubtitleList_C::In_Text' has a wrong offset!");
static_assert(offsetof(UW_SubtitleList_C, AnimationCompletedNormally) == 0x0004B8, "Member 'UW_SubtitleList_C::AnimationCompletedNormally' has a wrong offset!");

}

