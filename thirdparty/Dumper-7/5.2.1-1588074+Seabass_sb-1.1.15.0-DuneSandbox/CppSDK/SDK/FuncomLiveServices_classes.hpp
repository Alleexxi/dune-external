#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FuncomLiveServices

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class FuncomLiveServices.ConnectionManager
// 0x0000 (0x0000 - 0x0000)
class IConnectionManager final
{
public:
	int32 Close();
	int32 Connect(const struct FConnectionSettings& ConnectionSettings);
	int32 Init();
	int32 SendMessage(const class FString& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConnectionManager">();
	}
	static class IConnectionManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<IConnectionManager>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IConnectionManager) == 0x000001, "Wrong alignment on IConnectionManager");
static_assert(sizeof(IConnectionManager) == 0x000001, "Wrong size on IConnectionManager");

// Class FuncomLiveServices.LatencyMonitor
// 0x00B0 (0x00E0 - 0x0030)
class ULatencyMonitor final : public UObject
{
public:
	uint8                                         Pad_30[0x90];                                      // 0x0030(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxPingSeconds;                                    // 0x00C0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C4[0x1C];                                      // 0x00C4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LatencyMonitor">();
	}
	static class ULatencyMonitor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULatencyMonitor>();
	}
};
static_assert(alignof(ULatencyMonitor) == 0x000008, "Wrong alignment on ULatencyMonitor");
static_assert(sizeof(ULatencyMonitor) == 0x0000E0, "Wrong size on ULatencyMonitor");
static_assert(offsetof(ULatencyMonitor, MaxPingSeconds) == 0x0000C0, "Member 'ULatencyMonitor::MaxPingSeconds' has a wrong offset!");

// Class FuncomLiveServices.WebSocketConnectionManager
// 0x0078 (0x00A8 - 0x0030)
class UWebSocketConnectionManager final : public UObject
{
public:
	uint8                                         Pad_30[0x78];                                      // 0x0030(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 Close();
	int32 Connect(const struct FConnectionSettings& ConnectionSettings);
	int32 Init();
	void OnConnectionClosed(int32 StatusCode, const class FString& Reason, bool bWasClean);
	void OnConnectionComplete();
	void OnConnectionError(const class FString& Error);
	void OnReceiveData(const class FString& Data);
	int32 SendMessage(const class FString& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WebSocketConnectionManager">();
	}
	static class UWebSocketConnectionManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWebSocketConnectionManager>();
	}
};
static_assert(alignof(UWebSocketConnectionManager) == 0x000008, "Wrong alignment on UWebSocketConnectionManager");
static_assert(sizeof(UWebSocketConnectionManager) == 0x0000A8, "Wrong size on UWebSocketConnectionManager");

// Class FuncomLiveServices.AddFriendCallbackProxy
// 0x0008 (0x0040 - 0x0038)
class UAddFriendCallbackProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAddFriendCallbackProxy* CheckFriendRequestsFromURL(class APlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddFriendCallbackProxy">();
	}
	static class UAddFriendCallbackProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddFriendCallbackProxy>();
	}
};
static_assert(alignof(UAddFriendCallbackProxy) == 0x000008, "Wrong alignment on UAddFriendCallbackProxy");
static_assert(sizeof(UAddFriendCallbackProxy) == 0x000040, "Wrong size on UAddFriendCallbackProxy");

// Class FuncomLiveServices.LoginCallbackProxy
// 0x00C8 (0x0100 - 0x0038)
class alignas(0x10) ULoginCallbackProxy final : public UOnlineBlueprintCallProxyBase
{
public:
	TMulticastInlineDelegate<void()>              OnSuccess;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnFailure;                                         // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 m_ErrorMessage;                                    // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x50];                                      // 0x0068(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContextObject;                              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x40];                                      // 0x00C0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoginCallbackProxy* AutoLogin(class UObject* WorldContextObject, class APlayerController* PlayerController);
	static class ULoginCallbackProxy* Login(class UObject* WorldContextObject, class APlayerController* PlayerController, const class FString& Type, const class FString& ID, const class FString& Token);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginCallbackProxy">();
	}
	static class ULoginCallbackProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginCallbackProxy>();
	}
};
static_assert(alignof(ULoginCallbackProxy) == 0x000010, "Wrong alignment on ULoginCallbackProxy");
static_assert(sizeof(ULoginCallbackProxy) == 0x000100, "Wrong size on ULoginCallbackProxy");
static_assert(offsetof(ULoginCallbackProxy, OnSuccess) == 0x000038, "Member 'ULoginCallbackProxy::OnSuccess' has a wrong offset!");
static_assert(offsetof(ULoginCallbackProxy, OnFailure) == 0x000048, "Member 'ULoginCallbackProxy::OnFailure' has a wrong offset!");
static_assert(offsetof(ULoginCallbackProxy, m_ErrorMessage) == 0x000058, "Member 'ULoginCallbackProxy::m_ErrorMessage' has a wrong offset!");
static_assert(offsetof(ULoginCallbackProxy, m_WorldContextObject) == 0x0000B8, "Member 'ULoginCallbackProxy::m_WorldContextObject' has a wrong offset!");

}

