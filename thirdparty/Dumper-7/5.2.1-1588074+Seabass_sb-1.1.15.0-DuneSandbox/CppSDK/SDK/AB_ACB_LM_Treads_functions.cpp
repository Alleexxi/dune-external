#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_ACB_LM_Treads

#include "Basic.hpp"

#include "AB_ACB_LM_Treads_classes.hpp"
#include "AB_ACB_LM_Treads_parameters.hpp"


namespace SDK
{

// Function AB_ACB_LM_Treads.AB_ACB_LM_Treads_C.OnModuleMeshDestroyed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleModuleType                      ModuleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_ACB_LM_Treads_C::OnModuleMeshDestroyed_Event(EVehicleModuleType ModuleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_ACB_LM_Treads_C", "OnModuleMeshDestroyed_Event");

	Params::AB_ACB_LM_Treads_C_OnModuleMeshDestroyed_Event Parms{};

	Parms.ModuleType = ModuleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_ACB_LM_Treads.AB_ACB_LM_Treads_C.OnAllWheelsGroundedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bAllWheelsGrounded                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_ACB_LM_Treads_C::OnAllWheelsGroundedChanged(const bool bAllWheelsGrounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_ACB_LM_Treads_C", "OnAllWheelsGroundedChanged");

	Params::AB_ACB_LM_Treads_C_OnAllWheelsGroundedChanged Parms{};

	Parms.bAllWheelsGrounded = bAllWheelsGrounded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_ACB_LM_Treads.AB_ACB_LM_Treads_C.ExecuteUbergraph_AB_ACB_LM_Treads
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_ACB_LM_Treads_C::ExecuteUbergraph_AB_ACB_LM_Treads(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_ACB_LM_Treads_C", "ExecuteUbergraph_AB_ACB_LM_Treads");

	Params::AB_ACB_LM_Treads_C_ExecuteUbergraph_AB_ACB_LM_Treads Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_ACB_LM_Treads.AB_ACB_LM_Treads_C.CheckPhysMatBelow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAB_ACB_LM_Treads_C::CheckPhysMatBelow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_ACB_LM_Treads_C", "CheckPhysMatBelow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_ACB_LM_Treads.AB_ACB_LM_Treads_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_ACB_LM_Treads_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_ACB_LM_Treads_C", "BlueprintUpdateAnimation");

	Params::AB_ACB_LM_Treads_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_ACB_LM_Treads.AB_ACB_LM_Treads_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UAB_ACB_LM_Treads_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_ACB_LM_Treads_C", "AnimGraph");

	Params::AB_ACB_LM_Treads_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

