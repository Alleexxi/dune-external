#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayMediaEncoder

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GameplayMediaEncoder.GameplayMediaEncoderSettings
// 0x0010 (0x0040 - 0x0030)
class UGameplayMediaEncoderSettings final : public UObject
{
public:
	int32                                         VideoFPS;                                          // 0x0030(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VideoBitrate;                                      // 0x0034(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ForcedKeyFrameIntervalInSeconds;                   // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayMediaEncoderSettings">();
	}
	static class UGameplayMediaEncoderSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayMediaEncoderSettings>();
	}
};
static_assert(alignof(UGameplayMediaEncoderSettings) == 0x000008, "Wrong alignment on UGameplayMediaEncoderSettings");
static_assert(sizeof(UGameplayMediaEncoderSettings) == 0x000040, "Wrong size on UGameplayMediaEncoderSettings");
static_assert(offsetof(UGameplayMediaEncoderSettings, VideoFPS) == 0x000030, "Member 'UGameplayMediaEncoderSettings::VideoFPS' has a wrong offset!");
static_assert(offsetof(UGameplayMediaEncoderSettings, VideoBitrate) == 0x000034, "Member 'UGameplayMediaEncoderSettings::VideoBitrate' has a wrong offset!");
static_assert(offsetof(UGameplayMediaEncoderSettings, ForcedKeyFrameIntervalInSeconds) == 0x000038, "Member 'UGameplayMediaEncoderSettings::ForcedKeyFrameIntervalInSeconds' has a wrong offset!");

}

