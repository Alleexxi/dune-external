#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_BP_SpiceVision

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.ExecuteUbergraph_GC_BP_SpiceVision
// 0x0300 (0x0300 - 0x0000)
struct GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_5;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_4;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_2; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_3; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;         // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_2;       // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_3;       // 0x00E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_4; // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_4;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_Get_Actor_Spice_State_Spice_State;        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_6;                       // 0x0238(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Spice_Vision_Data_EntryFound;         // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpiceVisionData                       CallFunc_Get_Spice_Vision_Data_SpiceVisionData;    // 0x0248(0x0010)(NoDestructor)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_5; // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_5;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_7;                       // 0x0280(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_Get_Actor_Spice_State_Spice_State_1;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;       // 0x0294(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_5;       // 0x02A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_6;       // 0x02B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_7;            // 0x02C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_NormalizedTransitionCamera_ImplicitCast; // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_NormalizedTransitionAnim_ImplicitCast; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_NormalizedTransitionLerp_ImplicitCast; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision");
static_assert(sizeof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision) == 0x000300, "Wrong size on GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, EntryPoint) == 0x000000, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_5) == 0x000008, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable) == 0x000010, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings) == 0x000018, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_4) == 0x000028, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable_1) == 0x000030, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_1) == 0x000038, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_bSuccess_1) == 0x000040, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_3) == 0x000048, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_object_Variable) == 0x000050, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_DynamicCast_AsNiagara_System) == 0x000058, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_2) == 0x000068, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable_2) == 0x000070, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_1) == 0x000078, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable_3) == 0x000080, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_2) == 0x000088, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_bSuccess_2) == 0x000090, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded) == 0x000098, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable_4) == 0x0000A0, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_3) == 0x0000A8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_3' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_bSuccess_3) == 0x0000B0, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C4, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D4, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E4, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_Event_DeltaSeconds) == 0x0000F4, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_GetOwner_ReturnValue) == 0x0000F8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_IsValid_ReturnValue_1) == 0x000100, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000120, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable_5) == 0x000208, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_4) == 0x000210, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_4' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_bSuccess_4) == 0x000218, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_GetOwner_ReturnValue_1) == 0x000220, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Get_Actor_Spice_State_Spice_State) == 0x000228, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Get_Actor_Spice_State_Spice_State' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_GetOwner_ReturnValue_2) == 0x000230, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_6) == 0x000238, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Get_Spice_Vision_Data_EntryFound) == 0x000240, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Get_Spice_Vision_Data_EntryFound' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Get_Spice_Vision_Data_SpiceVisionData) == 0x000248, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Get_Spice_Vision_Data_SpiceVisionData' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, Temp_class_Variable_6) == 0x000258, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_5) == 0x000260, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_5' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_ClassDynamicCast_bSuccess_5) == 0x000268, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_ClassDynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_GetTimelineLength_ReturnValue) == 0x00026C, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_GetPlaybackPosition_ReturnValue) == 0x000270, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000278, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CustomEvent_Loaded_7) == 0x000280, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CustomEvent_Loaded_7' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_GetOwner_ReturnValue_3) == 0x000288, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Get_Actor_Spice_State_Spice_State_1) == 0x000290, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Get_Actor_Spice_State_Spice_State_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_4) == 0x000294, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A4, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002A8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_6) == 0x0002B8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_CreateDelegate_OutputDelegate_7) == 0x0002C8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_VariableSet_NormalizedTransitionCamera_ImplicitCast) == 0x0002D8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_VariableSet_NormalizedTransitionCamera_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_VariableSet_NormalizedTransitionAnim_ImplicitCast) == 0x0002E0, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_VariableSet_NormalizedTransitionAnim_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, K2Node_VariableSet_NormalizedTransitionLerp_ImplicitCast) == 0x0002E8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::K2Node_VariableSet_NormalizedTransitionLerp_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0002F0, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0002F8, "Member 'GC_BP_SpiceVision_C_ExecuteUbergraph_GC_BP_SpiceVision::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.GetPostProcessValues
// 0x0080 (0x0080 - 0x0000)
struct GC_BP_SpiceVision_C_GetPostProcessValues final
{
public:
	class UClass*                                 SpiceAddictionSettings;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitialDataSet;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Spice_Vision_Data_EntryFound;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpiceVisionData                       CallFunc_Get_Spice_Vision_Data_SpiceVisionData;    // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetSpiceVisionCurveRowNamesFromCurveTable_RowNamesOut; // 0x0048(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_GetPostProcessValues) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_GetPostProcessValues");
static_assert(sizeof(GC_BP_SpiceVision_C_GetPostProcessValues) == 0x000080, "Wrong size on GC_BP_SpiceVision_C_GetPostProcessValues");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, SpiceAddictionSettings) == 0x000000, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::SpiceAddictionSettings' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, IsInitialDataSet) == 0x000008, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::IsInitialDataSet' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Map_IsEmpty_ReturnValue) == 0x000028, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Get_Spice_Vision_Data_EntryFound) == 0x000029, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Get_Spice_Vision_Data_EntryFound' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Get_Spice_Vision_Data_SpiceVisionData) == 0x000030, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Get_Spice_Vision_Data_SpiceVisionData' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_GetSpiceVisionCurveRowNamesFromCurveTable_RowNamesOut) == 0x000048, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_GetSpiceVisionCurveRowNamesFromCurveTable_RowNamesOut' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Array_Get_Item) == 0x000058, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000068, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_GetPostProcessValues, CallFunc_SelectFloat_B_ImplicitCast) == 0x000078, "Member 'GC_BP_SpiceVision_C_GetPostProcessValues::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnActive
// 0x00E8 (0x00E8 - 0x0000)
struct GC_BP_SpiceVision_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnActive) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnActive");
static_assert(sizeof(GC_BP_SpiceVision_C_OnActive) == 0x0000E8, "Wrong size on GC_BP_SpiceVision_C_OnActive");
static_assert(offsetof(GC_BP_SpiceVision_C_OnActive, MyTarget) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_OnActive, Parameters) == 0x000008, "Member 'GC_BP_SpiceVision_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GC_BP_SpiceVision_C_OnActive::ReturnValue' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnExecute
// 0x00E8 (0x00E8 - 0x0000)
struct GC_BP_SpiceVision_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnExecute) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnExecute");
static_assert(sizeof(GC_BP_SpiceVision_C_OnExecute) == 0x0000E8, "Wrong size on GC_BP_SpiceVision_C_OnExecute");
static_assert(offsetof(GC_BP_SpiceVision_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_OnExecute, Parameters) == 0x000008, "Member 'GC_BP_SpiceVision_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_OnExecute, ReturnValue) == 0x0000E0, "Member 'GC_BP_SpiceVision_C_OnExecute::ReturnValue' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_256718654D1AC07A6110958BD079B6B4
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_256718654D1AC07A6110958BD079B6B4::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA625E5FD1D::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA63C3DD0AB::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA641FAAAE4::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA653803A1F::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA65A70FF0F::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_4F38C6EF48BD9665E3A49BA6FCFB0921::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnLoaded_931EAA9A429C926434258EAA2556D218
// 0x0008 (0x0008 - 0x0000)
struct GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218");
static_assert(sizeof(GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218) == 0x000008, "Wrong size on GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218");
static_assert(offsetof(GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218, Loaded) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnLoaded_931EAA9A429C926434258EAA2556D218::Loaded' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GC_BP_SpiceVision_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_OnRemove) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_OnRemove");
static_assert(sizeof(GC_BP_SpiceVision_C_OnRemove) == 0x0000E8, "Wrong size on GC_BP_SpiceVision_C_OnRemove");
static_assert(offsetof(GC_BP_SpiceVision_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_BP_SpiceVision_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_OnRemove, Parameters) == 0x000008, "Member 'GC_BP_SpiceVision_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GC_BP_SpiceVision_C_OnRemove::ReturnValue' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GC_BP_SpiceVision_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_ReceiveTick) == 0x000004, "Wrong alignment on GC_BP_SpiceVision_C_ReceiveTick");
static_assert(sizeof(GC_BP_SpiceVision_C_ReceiveTick) == 0x000004, "Wrong size on GC_BP_SpiceVision_C_ReceiveTick");
static_assert(offsetof(GC_BP_SpiceVision_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GC_BP_SpiceVision_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.UpdateCameraModifier
// 0x00C0 (0x00C0 - 0x0000)
struct GC_BP_SpiceVision_C_UpdateCameraModifier final
{
public:
	double                                        InterpolationAlpha;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Settings;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 FunctionName;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_Get_Actor_Spice_State_Spice_State;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Spice_Vision_Data_EntryFound;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpiceVisionData                       CallFunc_Get_Spice_Vision_Data_SpiceVisionData;    // 0x0048(0x0010)(NoDestructor)
	TArray<class FName>                           CallFunc_GetSpiceVisionCurveRowNamesFromCurveTable_RowNamesOut; // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_UpdateCameraModifier) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_UpdateCameraModifier");
static_assert(sizeof(GC_BP_SpiceVision_C_UpdateCameraModifier) == 0x0000C0, "Wrong size on GC_BP_SpiceVision_C_UpdateCameraModifier");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, InterpolationAlpha) == 0x000000, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::InterpolationAlpha' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, Settings) == 0x000008, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::Settings' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, FunctionName) == 0x000010, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::FunctionName' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Get_Actor_Spice_State_Spice_State) == 0x000038, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Get_Actor_Spice_State_Spice_State' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000039, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_GetFloatAttribute_ReturnValue) == 0x00003C, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Get_Spice_Vision_Data_EntryFound) == 0x000040, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Get_Spice_Vision_Data_EntryFound' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Get_Spice_Vision_Data_SpiceVisionData) == 0x000048, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Get_Spice_Vision_Data_SpiceVisionData' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_GetSpiceVisionCurveRowNamesFromCurveTable_RowNamesOut) == 0x000058, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_GetSpiceVisionCurveRowNamesFromCurveTable_RowNamesOut' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Array_Get_Item) == 0x00006C, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Map_Find_Value) == 0x000078, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000081, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000084, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_GetOwner_ReturnValue_2) == 0x0000A0, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_Lerp_B_ImplicitCast) == 0x0000B0, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateCameraModifier, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000B8, "Member 'GC_BP_SpiceVision_C_UpdateCameraModifier::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");

// Function GC_BP_SpiceVision.GC_BP_SpiceVision_C.UpdateHighStateTransitionParameter
// 0x0040 (0x0040 - 0x0000)
struct GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter) == 0x000008, "Wrong alignment on GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter");
static_assert(sizeof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter) == 0x000040, "Wrong size on GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000010, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000020, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000028, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000030, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000038, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x00003C, "Member 'GC_BP_SpiceVision_C_UpdateHighStateTransitionParameter::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");

}

