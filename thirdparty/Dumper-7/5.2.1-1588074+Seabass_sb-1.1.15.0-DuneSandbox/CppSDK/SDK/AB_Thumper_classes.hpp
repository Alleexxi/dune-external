#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Thumper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_Thumper.AB_Thumper_C
// 0x0090 (0x03E0 - 0x0350)
class UAB_Thumper_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0388(0x0048)()
	bool                                          ShouldPlayCloseAnimation;                          // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayOpenAnimation;                           // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_Thumper(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Thumper_C">();
	}
	static class UAB_Thumper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Thumper_C>();
	}
};
static_assert(alignof(UAB_Thumper_C) == 0x000010, "Wrong alignment on UAB_Thumper_C");
static_assert(sizeof(UAB_Thumper_C) == 0x0003E0, "Wrong size on UAB_Thumper_C");
static_assert(offsetof(UAB_Thumper_C, UberGraphFrame) == 0x000350, "Member 'UAB_Thumper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Thumper_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UAB_Thumper_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_Thumper_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UAB_Thumper_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_Thumper_C, AnimGraphNode_Root) == 0x000368, "Member 'UAB_Thumper_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_Thumper_C, AnimGraphNode_Slot) == 0x000388, "Member 'UAB_Thumper_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAB_Thumper_C, ShouldPlayCloseAnimation) == 0x0003D0, "Member 'UAB_Thumper_C::ShouldPlayCloseAnimation' has a wrong offset!");
static_assert(offsetof(UAB_Thumper_C, ShouldPlayOpenAnimation) == 0x0003D1, "Member 'UAB_Thumper_C::ShouldPlayOpenAnimation' has a wrong offset!");

}

