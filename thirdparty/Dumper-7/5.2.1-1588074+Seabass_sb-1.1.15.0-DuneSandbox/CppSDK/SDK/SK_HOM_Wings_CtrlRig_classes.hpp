#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_HOM_Wings_CtrlRig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass SK_HOM_Wings_CtrlRig.RigVMMemory_Work
// 0x16A0 (0x16D0 - 0x0030)
class SK_HOM_Wings_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	bool                                          RigVMModel___MathBoolOr_Result;                    // 0x0030(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_Result;     // 0x0040(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__IO; // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO; // 0x0080(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex; // 0x00E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_Result;   // 0x00F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_Result;                  // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_A;                       // 0x0114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_Rotator__IO; // 0x0118(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO; // 0x0130(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x0190(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_Result;   // 0x01A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_Result;                // 0x01C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_1_A;                     // 0x01C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_Rotator__IO; // 0x01C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_4_OffsetTransform__IO; // 0x01E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_4_CachedIndex; // 0x0240(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_Result;   // 0x0250(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_Rotator__IO; // 0x0270(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_5_OffsetTransform__IO; // 0x0290(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_5_CachedIndex; // 0x02F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_Result;   // 0x0300(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_Rotator__IO; // 0x0320(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_OffsetTransform__IO; // 0x0340(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_CachedIndex; // 0x03A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_5_Result;   // 0x03B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_Result;                // 0x03D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_A;                     // 0x03D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_5_Rotator__IO; // 0x03D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_3_OffsetTransform__IO; // 0x03F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_3_CachedIndex; // 0x0450(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_Result;   // 0x0460(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_Result;                // 0x0480(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatCos_Result;                  // 0x0484(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Timeline_Time;                        // 0x0488(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 RigVMModel___Timeline_AccumulatedValue;            // 0x0490(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___Timeline_bIsInitialized;              // 0x04A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_Rotator__IO; // 0x04B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_7_OffsetTransform__IO; // 0x04D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_7_CachedIndex; // 0x0530(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_1_1_Result; // 0x0540(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_Result;              // 0x0560(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_1_1_Rotator__IO; // 0x0568(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_1_1_OffsetTransform__IO; // 0x0580(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_1_1_CachedIndex; // 0x05E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_2_1_Result; // 0x05F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_2_1_Rotator__IO; // 0x0610(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_628[0x8];                                      // 0x0628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_4_1_OffsetTransform__IO; // 0x0630(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_4_1_CachedIndex; // 0x0690(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_3_1_Result; // 0x06A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_3_1_Rotator__IO; // 0x06C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_6D8[0x8];                                      // 0x06D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_5_1_OffsetTransform__IO; // 0x06E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_5_1_CachedIndex; // 0x0740(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_4_1_Result; // 0x0750(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_4_1_Rotator__IO; // 0x0770(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_788[0x8];                                      // 0x0788(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_4_OffsetTransform__IO; // 0x0790(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_4_CachedIndex; // 0x07F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_5_1_Result; // 0x0800(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_5_1_Rotator__IO; // 0x0820(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_838[0x8];                                      // 0x0838(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_3_1_OffsetTransform__IO; // 0x0840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_3_1_CachedIndex; // 0x08A0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Branch_2_BlockToRun;                  // 0x08B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Branch_BlockToRun;                    // 0x08B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___MathBoolOr_1_1_Result;                // 0x08C0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___MathBoolOr_1_Result;                  // 0x08C1(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C2[0xE];                                      // 0x08C2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_2_Result; // 0x08D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_Result;    // 0x08F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_1_1_1_Result;          // 0x08F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_1_Result;            // 0x08F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_Result;              // 0x08FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_A;                   // 0x0900(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_3_Result;            // 0x0904(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_1_1_Result;               // 0x0908(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_2_Result;                        // 0x090C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_1_1_Buffer;               // 0x0910(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_1_1_LastInsertIndex;      // 0x0920(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___If_1_3_2_Result;                      // 0x0930(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_Result;              // 0x0934(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_Result;                // 0x0938(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_Result;                // 0x093C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_A;                     // 0x0940(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_4_Result;              // 0x0944(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_Result;              // 0x0948(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_A;                   // 0x094C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO; // 0x0950(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_968[0x8];                                      // 0x0968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_OffsetTransform__IO; // 0x0970(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_CachedIndex; // 0x09D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_2_Result; // 0x09E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_2_Rotator__IO; // 0x0A00(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_OffsetTransform__IO; // 0x0A20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_CachedIndex; // 0x0A80(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_2_1_Result; // 0x0A90(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_2_1_Rotator__IO; // 0x0AB0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_AC8[0x8];                                      // 0x0AC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_2_OffsetTransform__IO; // 0x0AD0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_2_CachedIndex; // 0x0B30(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_3_Result; // 0x0B40(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_1_Result;  // 0x0B60(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_1_1_1_1_Result;        // 0x0B64(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_1_1_Result;          // 0x0B68(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_1_Result;            // 0x0B6C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_2_1_A;                 // 0x0B70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_2_1_Result;                    // 0x0B74(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_2_Result;            // 0x0B78(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_1_Result;              // 0x0B7C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_3_Result;              // 0x0B80(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_3_A;                   // 0x0B84(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_Result;            // 0x0B88(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_5_1_1_A;                 // 0x0B8C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_3_Rotator__IO; // 0x0B90(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_BA8[0x8];                                      // 0x0BA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_3_OffsetTransform__IO; // 0x0BB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_3_CachedIndex; // 0x0C10(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_3_Result; // 0x0C20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_3_Rotator__IO; // 0x0C40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_C58[0x8];                                      // 0x0C58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_OffsetTransform__IO; // 0x0C60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_CachedIndex; // 0x0CC0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_3_1_Result; // 0x0CD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_3_1_Rotator__IO; // 0x0CF0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_D08[0x8];                                      // 0x0D08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_OffsetTransform__IO; // 0x0D10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_CachedIndex; // 0x0D70(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_6_1_Result; // 0x0D80(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_Result;          // 0x0DA0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_1_Result; // 0x0DA4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_Result; // 0x0DA8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_Result;            // 0x0DAC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_Result;              // 0x0DB0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_Result;            // 0x0DB4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_Result;              // 0x0DB8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_A;                   // 0x0DBC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_Result;              // 0x0DC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_A;                   // 0x0DC4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_1_1_1_Result;        // 0x0DC8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_Result;                          // 0x0DCC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_1_Result;                        // 0x0DD0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD1[0x3];                                      // 0x0DD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___If_1_True;                            // 0x0DD4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_Result;                        // 0x0DD8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_Result;              // 0x0DDC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_A;                   // 0x0DE0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO; // 0x0DE8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_4_OffsetTransform__IO; // 0x0E00(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_4_CachedIndex; // 0x0E60(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_7_1_Result; // 0x0E70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_Result;        // 0x0E90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_1_Result; // 0x0E94(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_Result; // 0x0E98(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9C[0x4];                                      // 0x0E9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_7_1_Rotator__IO; // 0x0EA0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_EB8[0x8];                                      // 0x0EB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_OffsetTransform__IO; // 0x0EC0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_CachedIndex; // 0x0F20(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_8_1_Result; // 0x0F30(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_2_Result;        // 0x0F50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_1_MathFloatAdd_3_2_2_1_1_Result; // 0x0F54(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_1_MathFloatAdd_3_2_2_1_Result; // 0x0F58(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_1_Result;          // 0x0F5C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_1_Result;            // 0x0F60(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_1_Result;          // 0x0F64(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_8_1_Rotator__IO; // 0x0F68(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_2_2_OffsetTransform__IO; // 0x0F80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_2_2_CachedIndex; // 0x0FE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_9_1_Result; // 0x0FF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_3_Result;        // 0x1010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_1_Result; // 0x1014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_Result; // 0x1018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_2_Result;          // 0x101C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_2_Result;            // 0x1020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_2_Result;          // 0x1024(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_Result;            // 0x1028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_A;                 // 0x102C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_1_Result;            // 0x1030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_1_A;                 // 0x1034(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_1_1_1_1_Result;      // 0x1038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_1_Result;                        // 0x103C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_1_1_Result;                      // 0x1040(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1041[0x3];                                     // 0x1041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___If_1_1_True;                          // 0x1044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_1_Result;                      // 0x1048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_1_Result;            // 0x104C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_2_1_A;                 // 0x1050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1054[0x4];                                     // 0x1054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_9_1_Rotator__IO; // 0x1058(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_OffsetTransform__IO; // 0x1070(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_CachedIndex; // 0x10D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_Result; // 0x10E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_4_Result;        // 0x1100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_2_MathFloatAdd_3_2_2_2_1_Result; // 0x1104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_2_MathFloatAdd_3_2_2_2_Result; // 0x1108(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_110C[0x4];                                     // 0x110C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_Rotator__IO; // 0x1110(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1128[0x8];                                     // 0x1128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_OffsetTransform__IO; // 0x1130(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_CachedIndex; // 0x1190(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_11_1_Result; // 0x11A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_5_Result;        // 0x11C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_1_1_MathFloatAdd_3_2_2_1_1_1_Result; // 0x11C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_3_2_2_1_1_MathFloatAdd_3_2_2_1_1_Result; // 0x11C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_1_1_Result;        // 0x11CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatAdd_2_1_1_1_Result;          // 0x11D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_3_1_1_1_Result;        // 0x11D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_11_1_Rotator__IO; // 0x11D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_1_OffsetTransform__IO; // 0x11F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_1_CachedIndex; // 0x1250(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_Result; // 0x1260(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___KalmanFloat_Result;                   // 0x1280(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_1_Result;          // 0x1284(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_1_A;               // 0x1288(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128C[0x4];                                     // 0x128C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TArray<float>>                         RigVMModel___KalmanFloat_Buffer;                   // 0x1290(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___KalmanFloat_LastInsertIndex;          // 0x12A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_Rotator__IO; // 0x12B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_12C8[0x8];                                     // 0x12C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_1_OffsetTransform__IO; // 0x12D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_1_CachedIndex; // 0x1330(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_1_Result; // 0x1340(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_1_Rotator__IO; // 0x1360(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1378[0x8];                                     // 0x1378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_OffsetTransform__IO; // 0x1380(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_CachedIndex; // 0x13E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_1_1_Result; // 0x13F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_1_1_Rotator__IO; // 0x1410(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1428[0x8];                                     // 0x1428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_OffsetTransform__IO; // 0x1430(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_CachedIndex; // 0x1490(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_2_Result; // 0x14A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_1_1_Result;        // 0x14C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C4[0x4];                                     // 0x14C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_2_Rotator__IO; // 0x14C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_2_OffsetTransform__IO; // 0x14E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_2_CachedIndex; // 0x1540(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_3_Result; // 0x1550(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_3_Rotator__IO; // 0x1570(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1588[0x8];                                     // 0x1588(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_3_OffsetTransform__IO; // 0x1590(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_3_CachedIndex; // 0x15F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionFromRotator_10_1_1_3_1_Result; // 0x1600(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_10_1_1_3_1_Rotator__IO; // 0x1620(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1638[0x8];                                     // 0x1638(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_OffsetTransform__IO; // 0x1640(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_CachedIndex; // 0x16A0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Branch_1_1_1_BlockToRun;              // 0x16B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Branch_1_1_BlockToRun;                // 0x16B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Branch_1_BlockToRun;                  // 0x16C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_HOM_Wings_CtrlRig.RigVMMemory_Work", true>();
	}
	static class SK_HOM_Wings_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_HOM_Wings_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on SK_HOM_Wings_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work) == 0x0016D0, "Wrong size on SK_HOM_Wings_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathBoolOr_Result) == 0x000030, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathBoolOr_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Result) == 0x000040, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_Rotator__IO) == 0x000060, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO) == 0x000080, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex) == 0x0000E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Result) == 0x0000F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_Result) == 0x000110, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_A) == 0x000114, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_Rotator__IO) == 0x000118, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO) == 0x000130, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex) == 0x000190, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Result) == 0x0001A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_1_Result) == 0x0001C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_1_A) == 0x0001C4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_Rotator__IO) == 0x0001C8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_OffsetTransform__IO) == 0x0001E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_CachedIndex) == 0x000240, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Result) == 0x000250, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_Rotator__IO) == 0x000270, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_OffsetTransform__IO) == 0x000290, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_CachedIndex) == 0x0002F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Result) == 0x000300, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_Rotator__IO) == 0x000320, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_OffsetTransform__IO) == 0x000340, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_CachedIndex) == 0x0003A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_5_Result) == 0x0003B0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_Result) == 0x0003D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_A) == 0x0003D4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_5_Rotator__IO) == 0x0003D8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_5_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_3_OffsetTransform__IO) == 0x0003F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_3_CachedIndex) == 0x000450, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_Result) == 0x000460, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_Result) == 0x000480, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatCos_Result) == 0x000484, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatCos_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Timeline_Time) == 0x000488, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Timeline_Time' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Timeline_AccumulatedValue) == 0x000490, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Timeline_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Timeline_bIsInitialized) == 0x0004A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Timeline_bIsInitialized' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_Rotator__IO) == 0x0004B0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_7_OffsetTransform__IO) == 0x0004D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_7_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_7_CachedIndex) == 0x000530, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_7_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_1_Result) == 0x000540, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_Result) == 0x000560, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_1_1_Rotator__IO) == 0x000568, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_1_OffsetTransform__IO) == 0x000580, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_1_1_CachedIndex) == 0x0005E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_1_Result) == 0x0005F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_2_1_Rotator__IO) == 0x000610, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_2_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_1_OffsetTransform__IO) == 0x000630, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_4_1_CachedIndex) == 0x000690, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_1_Result) == 0x0006A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_3_1_Rotator__IO) == 0x0006C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_3_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_1_OffsetTransform__IO) == 0x0006E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_5_1_CachedIndex) == 0x000740, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_5_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_Result) == 0x000750, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_4_1_Rotator__IO) == 0x000770, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_4_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_4_OffsetTransform__IO) == 0x000790, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_4_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_4_CachedIndex) == 0x0007F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_5_1_Result) == 0x000800, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_5_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_5_1_Rotator__IO) == 0x000820, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_5_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_3_1_OffsetTransform__IO) == 0x000840, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_3_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_3_1_CachedIndex) == 0x0008A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_2_BlockToRun) == 0x0008B0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_2_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_BlockToRun) == 0x0008B8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathBoolOr_1_1_Result) == 0x0008C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathBoolOr_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathBoolOr_1_Result) == 0x0008C1, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathBoolOr_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_2_Result) == 0x0008D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_1_1_1_Result) == 0x0008F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_1_1_Result) == 0x0008F4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_1_Result) == 0x0008F8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_Result) == 0x0008FC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_A) == 0x000900, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_3_Result) == 0x000904, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_1_Result) == 0x000908, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_2_Result) == 0x00090C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_1_Buffer) == 0x000910, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_1_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_1_1_LastInsertIndex) == 0x000920, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_1_1_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_2_Result) == 0x000930, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_Result) == 0x000934, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_Result) == 0x000938, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_Result) == 0x00093C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_A) == 0x000940, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_4_Result) == 0x000944, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_Result) == 0x000948, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_A) == 0x00094C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO) == 0x000950, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_OffsetTransform__IO) == 0x000970, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_CachedIndex) == 0x0009D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_2_Result) == 0x0009E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_2_Rotator__IO) == 0x000A00, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_OffsetTransform__IO) == 0x000A20, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_CachedIndex) == 0x000A80, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_2_1_Result) == 0x000A90, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_2_1_Rotator__IO) == 0x000AB0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_2_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_OffsetTransform__IO) == 0x000AD0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_CachedIndex) == 0x000B30, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_3_Result) == 0x000B40, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_1_1_1_1_Result) == 0x000B60, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_1_1_1_Result) == 0x000B64, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_1_1_Result) == 0x000B68, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_1_Result) == 0x000B6C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_2_1_A) == 0x000B70, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_2_1_Result) == 0x000B74, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_3_2_Result) == 0x000B78, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_1_Result) == 0x000B7C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_3_Result) == 0x000B80, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_3_A) == 0x000B84, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_3_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_Result) == 0x000B88, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_5_1_1_A) == 0x000B8C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_5_1_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_3_Rotator__IO) == 0x000B90, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_OffsetTransform__IO) == 0x000BB0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_CachedIndex) == 0x000C10, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_3_Result) == 0x000C20, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_3_Rotator__IO) == 0x000C40, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_OffsetTransform__IO) == 0x000C60, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_CachedIndex) == 0x000CC0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_3_1_Result) == 0x000CD0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_3_1_Rotator__IO) == 0x000CF0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_3_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_OffsetTransform__IO) == 0x000D10, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_CachedIndex) == 0x000D70, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_Result) == 0x000D80, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_Result) == 0x000DA0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_1_Result) == 0x000DA4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_Result) == 0x000DA8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_MathFloatAdd_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_Result) == 0x000DAC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_Result) == 0x000DB0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_Result) == 0x000DB4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_Result) == 0x000DB8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_A) == 0x000DBC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_Result) == 0x000DC0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_A) == 0x000DC4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_1_1_1_Result) == 0x000DC8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_Result) == 0x000DCC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Less_1_Result) == 0x000DD0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Less_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_True) == 0x000DD4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_True' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_Result) == 0x000DD8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_Result) == 0x000DDC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_A) == 0x000DE0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO) == 0x000DE8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_6_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_4_OffsetTransform__IO) == 0x000E00, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_4_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_4_CachedIndex) == 0x000E60, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_1_Result) == 0x000E70, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_1_Result) == 0x000E90, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_1_Result) == 0x000E94, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_Result) == 0x000E98, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_MathFloatAdd_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_7_1_Rotator__IO) == 0x000EA0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_7_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_OffsetTransform__IO) == 0x000EC0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_CachedIndex) == 0x000F20, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_8_1_Result) == 0x000F30, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_8_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_2_Result) == 0x000F50, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_1_MathFloatAdd_3_2_2_1_1_Result) == 0x000F54, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_1_MathFloatAdd_3_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_1_MathFloatAdd_3_2_2_1_Result) == 0x000F58, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_1_MathFloatAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_1_Result) == 0x000F5C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_1_Result) == 0x000F60, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_1_Result) == 0x000F64, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_8_1_Rotator__IO) == 0x000F68, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_8_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_2_OffsetTransform__IO) == 0x000F80, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_2_CachedIndex) == 0x000FE0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_9_1_Result) == 0x000FF0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_9_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_3_Result) == 0x001010, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_1_Result) == 0x001014, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_Result) == 0x001018, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_1_MathFloatAdd_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_2_Result) == 0x00101C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_2_Result) == 0x001020, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_2_Result) == 0x001024, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_Result) == 0x001028, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_A) == 0x00102C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_1_Result) == 0x001030, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_4_2_1_A) == 0x001034, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_4_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_1_1_1_1_1_Result) == 0x001038, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_1_Result) == 0x00103C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Less_1_1_Result) == 0x001040, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Less_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_1_True) == 0x001044, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_1_True' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___If_1_3_1_Result) == 0x001048, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___If_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_Result) == 0x00104C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_2_1_A) == 0x001050, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_2_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_9_1_Rotator__IO) == 0x001058, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_9_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_OffsetTransform__IO) == 0x001070, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_CachedIndex) == 0x0010D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_Result) == 0x0010E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_4_Result) == 0x001100, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_4_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_2_MathFloatAdd_3_2_2_2_1_Result) == 0x001104, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_2_MathFloatAdd_3_2_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_2_MathFloatAdd_3_2_2_2_Result) == 0x001108, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_2_MathFloatAdd_3_2_2_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_Rotator__IO) == 0x001110, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_OffsetTransform__IO) == 0x001130, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_CachedIndex) == 0x001190, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_11_1_Result) == 0x0011A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_11_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_3_5_Result) == 0x0011C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_3_5_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_1_1_MathFloatAdd_3_2_2_1_1_1_Result) == 0x0011C4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_1_1_MathFloatAdd_3_2_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_3_2_2_1_1_MathFloatAdd_3_2_2_1_1_Result) == 0x0011C8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_3_2_2_1_1_MathFloatAdd_3_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatClamp_2_1_1_1_Result) == 0x0011CC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatClamp_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatAdd_2_1_1_1_Result) == 0x0011D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatAdd_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_3_3_1_1_1_Result) == 0x0011D4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_3_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_11_1_Rotator__IO) == 0x0011D8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_11_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_1_OffsetTransform__IO) == 0x0011F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_1_CachedIndex) == 0x001250, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_Result) == 0x001260, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Result) == 0x001280, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_1_Result) == 0x001284, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_1_A) == 0x001288, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_1_A' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_Buffer) == 0x001290, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_Buffer' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___KalmanFloat_LastInsertIndex) == 0x0012A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___KalmanFloat_LastInsertIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_Rotator__IO) == 0x0012B0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_OffsetTransform__IO) == 0x0012D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_CachedIndex) == 0x001330, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_1_Result) == 0x001340, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_1_Rotator__IO) == 0x001360, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_OffsetTransform__IO) == 0x001380, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_CachedIndex) == 0x0013E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_1_1_Result) == 0x0013F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_1_1_Rotator__IO) == 0x001410, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_1_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_OffsetTransform__IO) == 0x001430, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_CachedIndex) == 0x001490, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_2_Result) == 0x0014A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathFloatMul_2_1_1_1_1_Result) == 0x0014C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathFloatMul_2_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_2_Rotator__IO) == 0x0014C8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_2_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_2_OffsetTransform__IO) == 0x0014E0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_2_CachedIndex) == 0x001540, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_3_Result) == 0x001550, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_3_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_3_Rotator__IO) == 0x001570, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_3_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_3_OffsetTransform__IO) == 0x001590, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_3_CachedIndex) == 0x0015F0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_3_1_Result) == 0x001600, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___MathQuaternionFromRotator_10_1_1_3_1_Rotator__IO) == 0x001620, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___MathQuaternionFromRotator_10_1_1_3_1_Rotator__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_OffsetTransform__IO) == 0x001640, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_CachedIndex) == 0x0016A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_1_1_1_BlockToRun) == 0x0016B0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_1_1_1_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_1_1_BlockToRun) == 0x0016B8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_1_1_BlockToRun' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Work, RigVMModel___Branch_1_BlockToRun) == 0x0016C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Work::RigVMModel___Branch_1_BlockToRun' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass SK_HOM_Wings_CtrlRig.RigVMMemory_Literal
// 0x01B0 (0x01E0 - 0x0030)
class SK_HOM_Wings_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_Item__Const; // 0x0030(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___MathQuaternionFromRotator_Rotator__Const; // 0x00A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const; // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const; // 0x00BC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const; // 0x00C0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_B__Const;                // 0x00CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_4_Item__Const; // 0x00D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_5_Item__Const; // 0x00DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_Item__Const; // 0x00E8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_3_Item__Const; // 0x00F4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Timeline_Speed__Const;                // 0x0100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_B__Const;              // 0x0104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_3_1_B__Const;            // 0x0108(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_Item__Const; // 0x010C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_2_True__Const;                   // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_2_False__Const;                  // 0x011C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___KalmanFloat_1_1_BufferSize__Const;    // 0x0120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_3_1_Minimum__Const;    // 0x0124(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_2_True__Const;                 // 0x0128(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_2_False__Const;                // 0x012C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_Minimum__Const; // 0x0130(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_3_1_1_1_Maximum__Const; // 0x0134(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_1_Item__Const; // 0x0138(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_2_Item__Const; // 0x0144(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_3_Item__Const; // 0x0150(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_1_3_2_1_True__Const;               // 0x015C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_Item__Const; // 0x0160(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_Item__Const; // 0x016C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_B__Const;            // 0x0178(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_4_2_B__Const;            // 0x017C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_Minimum__Const;    // 0x0180(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatClamp_2_1_Maximum__Const;    // 0x0184(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Less_1_B__Const;                      // 0x0188(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_1_Item__Const; // 0x0190(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_2_1_1_1_B__Const;        // 0x019C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_Item__Const; // 0x01A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_Item__Const; // 0x01AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_2_Item__Const; // 0x01B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_3_Item__Const; // 0x01C4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_Item__Const; // 0x01D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass SK_HOM_Wings_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class SK_HOM_Wings_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<SK_HOM_Wings_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on SK_HOM_Wings_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal) == 0x0001E0, "Wrong size on SK_HOM_Wings_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Item__Const) == 0x000030, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const) == 0x000040, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathQuaternionFromRotator_Rotator__Const) == 0x0000A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathQuaternionFromRotator_Rotator__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const) == 0x0000B8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_Weight__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const) == 0x0000BC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const) == 0x0000C0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_B__Const) == 0x0000CC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_4_Item__Const) == 0x0000D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_4_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_5_Item__Const) == 0x0000DC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_5_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_Item__Const) == 0x0000E8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_3_Item__Const) == 0x0000F4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___Timeline_Speed__Const) == 0x000100, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___Timeline_Speed__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_3_B__Const) == 0x000104, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_3_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_3_1_B__Const) == 0x000108, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_3_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_Item__Const) == 0x00010C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_2_True__Const) == 0x000118, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_2_True__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_2_False__Const) == 0x00011C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_2_False__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___KalmanFloat_1_1_BufferSize__Const) == 0x000120, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___KalmanFloat_1_1_BufferSize__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_3_1_Minimum__Const) == 0x000124, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_3_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_3_2_True__Const) == 0x000128, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_3_2_True__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_3_2_False__Const) == 0x00012C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_3_2_False__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_3_1_1_1_Minimum__Const) == 0x000130, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_3_1_1_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_3_1_1_1_Maximum__Const) == 0x000134, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_3_1_1_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_1_Item__Const) == 0x000138, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_2_Item__Const) == 0x000144, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_3_Item__Const) == 0x000150, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___If_1_3_2_1_True__Const) == 0x00015C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___If_1_3_2_1_True__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_Item__Const) == 0x000160, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_Item__Const) == 0x00016C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_6_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_2_1_B__Const) == 0x000178, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_4_2_B__Const) == 0x00017C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_4_2_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_Minimum__Const) == 0x000180, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatClamp_2_1_Maximum__Const) == 0x000184, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatClamp_2_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___Less_1_B__Const) == 0x000188, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___Less_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_1_Item__Const) == 0x000190, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___MathFloatMul_2_1_1_1_B__Const) == 0x00019C, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___MathFloatMul_2_1_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_Item__Const) == 0x0001A0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_Item__Const) == 0x0001AC, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_2_Item__Const) == 0x0001B8, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_3_Item__Const) == 0x0001C4, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_3_Item__Const' has a wrong offset!");
static_assert(offsetof(SK_HOM_Wings_CtrlRig::URigVMMemory_Literal, RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_Item__Const) == 0x0001D0, "Member 'SK_HOM_Wings_CtrlRig::URigVMMemory_Literal::RigVMModel___RigUnit_OffsetTransformForItem_2_3_1_Item__Const' has a wrong offset!");

// RigVMBlueprintGeneratedClass SK_HOM_Wings_CtrlRig.SK_HOM_Wings_CtrlRig_C
// 0x0040 (0x0440 - 0x0400)
class USK_HOM_Wings_CtrlRig_C final : public UControlRig
{
public:
	double                                        FWD;                                               // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        STRAFE;                                            // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Up;                                                // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OscillationAngle;                                  // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invalid;                                           // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Landed;                                            // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Standby;                                           // 0x0432(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DragonFly;                                         // 0x0433(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vulture;                                           // 0x0434(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Malfunction;                                       // 0x0435(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dive;                                              // 0x0436(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dodge;                                             // 0x0437(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Boost;                                             // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dash;                                              // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SK_HOM_Wings_CtrlRig_C">();
	}
	static class USK_HOM_Wings_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USK_HOM_Wings_CtrlRig_C>();
	}
};
static_assert(alignof(USK_HOM_Wings_CtrlRig_C) == 0x000008, "Wrong alignment on USK_HOM_Wings_CtrlRig_C");
static_assert(sizeof(USK_HOM_Wings_CtrlRig_C) == 0x000440, "Wrong size on USK_HOM_Wings_CtrlRig_C");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, FWD) == 0x000400, "Member 'USK_HOM_Wings_CtrlRig_C::FWD' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, STRAFE) == 0x000408, "Member 'USK_HOM_Wings_CtrlRig_C::STRAFE' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Up) == 0x000410, "Member 'USK_HOM_Wings_CtrlRig_C::Up' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Pitch) == 0x000418, "Member 'USK_HOM_Wings_CtrlRig_C::Pitch' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Yaw) == 0x000420, "Member 'USK_HOM_Wings_CtrlRig_C::Yaw' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, OscillationAngle) == 0x000428, "Member 'USK_HOM_Wings_CtrlRig_C::OscillationAngle' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Invalid) == 0x000430, "Member 'USK_HOM_Wings_CtrlRig_C::Invalid' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Landed) == 0x000431, "Member 'USK_HOM_Wings_CtrlRig_C::Landed' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Standby) == 0x000432, "Member 'USK_HOM_Wings_CtrlRig_C::Standby' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, DragonFly) == 0x000433, "Member 'USK_HOM_Wings_CtrlRig_C::DragonFly' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Vulture) == 0x000434, "Member 'USK_HOM_Wings_CtrlRig_C::Vulture' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Malfunction) == 0x000435, "Member 'USK_HOM_Wings_CtrlRig_C::Malfunction' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Dive) == 0x000436, "Member 'USK_HOM_Wings_CtrlRig_C::Dive' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Dodge) == 0x000437, "Member 'USK_HOM_Wings_CtrlRig_C::Dodge' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Boost) == 0x000438, "Member 'USK_HOM_Wings_CtrlRig_C::Boost' has a wrong offset!");
static_assert(offsetof(USK_HOM_Wings_CtrlRig_C, Dash) == 0x000439, "Member 'USK_HOM_Wings_CtrlRig_C::Dash' has a wrong offset!");

}

