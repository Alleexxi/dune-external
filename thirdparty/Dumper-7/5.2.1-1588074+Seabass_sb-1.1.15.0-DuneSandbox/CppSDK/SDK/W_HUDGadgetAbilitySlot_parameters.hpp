#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HUDGadgetAbilitySlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.UpdateInputHint
// 0x0028 (0x0028 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_UpdateInputHint final
{
public:
	bool                                          Show_Label;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label_Text;                                        // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELabelPosition                                Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELabelPosition                                K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_UpdateInputHint) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_UpdateInputHint");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_UpdateInputHint) == 0x000028, "Wrong size on W_HUDGadgetAbilitySlot_C_UpdateInputHint");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_UpdateInputHint, Show_Label) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_UpdateInputHint::Show_Label' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_UpdateInputHint, Label_Text) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_UpdateInputHint::Label_Text' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_UpdateInputHint, Temp_bool_Variable) == 0x000020, "Member 'W_HUDGadgetAbilitySlot_C_UpdateInputHint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_UpdateInputHint, Temp_byte_Variable) == 0x000021, "Member 'W_HUDGadgetAbilitySlot_C_UpdateInputHint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_UpdateInputHint, K2Node_Select_Default) == 0x000022, "Member 'W_HUDGadgetAbilitySlot_C_UpdateInputHint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_UpdateInputHint, CallFunc_IsValid_ReturnValue) == 0x000023, "Member 'W_HUDGadgetAbilitySlot_C_UpdateInputHint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.Setup Spice Buff Visuals
// 0x0098 (0x0098 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals final
{
public:
	bool                                          Is_Buffed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetIconColor_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_3;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals) == 0x000098, "Wrong size on W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Is_Buffed) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Is_Buffed' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Temp_bool_Variable) == 0x000001, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Temp_bool_Variable_1) == 0x000002, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Temp_bool_Variable_2) == 0x000003, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Temp_bool_Variable_3) == 0x000004, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Temp_struct_Variable) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, Temp_struct_Variable_1) == 0x000018, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, CallFunc_GetIconColor_ReturnValue) == 0x000028, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::CallFunc_GetIconColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, K2Node_Select_Default) == 0x000048, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, K2Node_Select_Default_1) == 0x000058, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000068, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, K2Node_Select_Default_2) == 0x00006C, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000080, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, CallFunc_PlayAnimationForward_ReturnValue) == 0x000088, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals, K2Node_Select_Default_3) == 0x000090, "Member 'W_HUDGadgetAbilitySlot_C_Setup_Spice_Buff_Visuals::K2Node_Select_Default_3' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.SetIconInterpolator
// 0x0020 (0x0020 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_SetIconInterpolator final
{
public:
	double                                        New_Value;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_SetIconInterpolator) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_SetIconInterpolator");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_SetIconInterpolator) == 0x000020, "Wrong size on W_HUDGadgetAbilitySlot_C_SetIconInterpolator");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetIconInterpolator, New_Value) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_SetIconInterpolator::New_Value' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetIconInterpolator, CallFunc_LinearColorLerp_ReturnValue) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_SetIconInterpolator::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetIconInterpolator, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000018, "Member 'W_HUDGadgetAbilitySlot_C_SetIconInterpolator::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.SetDiamondOutlineInterpolator
// 0x0038 (0x0038 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator final
{
public:
	double                                        New_Value;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator) == 0x000038, "Wrong size on W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator, New_Value) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator::New_Value' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator, CallFunc_LinearColorLerp_ReturnValue) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000020, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000030, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000034, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondOutlineInterpolator::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.SetDiamondFillInterpolator
// 0x0038 (0x0038 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator final
{
public:
	double                                        New_Value;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator) == 0x000038, "Wrong size on W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator, New_Value) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator::New_Value' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator, CallFunc_LinearColorLerp_ReturnValue) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000018, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000030, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000034, "Member 'W_HUDGadgetAbilitySlot_C_SetDiamondFillInterpolator::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_HUDGadgetAbilitySlot_C_PreConstruct");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_PreConstruct) == 0x000001, "Wrong size on W_HUDGadgetAbilitySlot_C_PreConstruct");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.OnReactivationTextChanged
// 0x0020 (0x0020 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged final
{
public:
	bool                                          bShowText;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged) == 0x000020, "Wrong size on W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged, bShowText) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged::bShowText' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged, Text) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_OnReactivationTextChanged::Text' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.OnFillChanged
// 0x0001 (0x0001 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_OnFillChanged final
{
public:
	bool                                          bIsFilled;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_OnFillChanged) == 0x000001, "Wrong alignment on W_HUDGadgetAbilitySlot_C_OnFillChanged");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_OnFillChanged) == 0x000001, "Wrong size on W_HUDGadgetAbilitySlot_C_OnFillChanged");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_OnFillChanged, bIsFilled) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_OnFillChanged::bIsFilled' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.GetIconColor
// 0x0044 (0x0044 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_GetIconColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_GetIconColor) == 0x000004, "Wrong alignment on W_HUDGadgetAbilitySlot_C_GetIconColor");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_GetIconColor) == 0x000044, "Wrong size on W_HUDGadgetAbilitySlot_C_GetIconColor");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetIconColor, ReturnValue) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_GetIconColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetIconColor, Temp_bool_Variable) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_GetIconColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetIconColor, Temp_bool_Variable_1) == 0x000011, "Member 'W_HUDGadgetAbilitySlot_C_GetIconColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetIconColor, Temp_struct_Variable) == 0x000014, "Member 'W_HUDGadgetAbilitySlot_C_GetIconColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetIconColor, K2Node_Select_Default) == 0x000024, "Member 'W_HUDGadgetAbilitySlot_C_GetIconColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetIconColor, K2Node_Select_Default_1) == 0x000034, "Member 'W_HUDGadgetAbilitySlot_C_GetIconColor::K2Node_Select_Default_1' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.GetFillColors
// 0x0048 (0x0048 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_GetFillColors final
{
public:
	struct FLinearColor                           Fill_Color_Top;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Fill_Color_Bottom;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue_1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_GetFillColors) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_GetFillColors");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_GetFillColors) == 0x000048, "Wrong size on W_HUDGadgetAbilitySlot_C_GetFillColors");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColors, Fill_Color_Top) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColors::Fill_Color_Top' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColors, Fill_Color_Bottom) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColors::Fill_Color_Bottom' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColors, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000028, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColors::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColors, CallFunc_K2_GetVectorParameterValue_ReturnValue_1) == 0x000038, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColors::CallFunc_K2_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.GetFillColor
// 0x0054 (0x0054 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_GetFillColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue2;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_GetFillColor) == 0x000004, "Wrong alignment on W_HUDGadgetAbilitySlot_C_GetFillColor");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_GetFillColor) == 0x000054, "Wrong size on W_HUDGadgetAbilitySlot_C_GetFillColor");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, ReturnValue) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, ReturnValue2) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::ReturnValue2' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, Temp_bool_Variable) == 0x000020, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, Temp_bool_Variable_1) == 0x000021, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, Temp_bool_Variable_2) == 0x000022, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, K2Node_Select_Default) == 0x000024, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, K2Node_Select_Default_1) == 0x000034, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_GetFillColor, K2Node_Select_Default_2) == 0x000044, "Member 'W_HUDGadgetAbilitySlot_C_GetFillColor::K2Node_Select_Default_2' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.ExecuteUbergraph_W_HUDGadgetAbilitySlot
// 0x0070 (0x0070 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowText;                            // 0x0011(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x0018(0x0018)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFilled;                            // 0x0031(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetIconColor_ReturnValue;                 // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetFillColor_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetFillColor_ReturnValue2;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot) == 0x000070, "Wrong size on W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, EntryPoint) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, Temp_byte_Variable) == 0x000004, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, Temp_byte_Variable_1) == 0x000005, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000006, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, K2Node_Event_IsDesignTime) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, K2Node_Event_bShowText) == 0x000011, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::K2Node_Event_bShowText' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, K2Node_Event_Text) == 0x000018, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, K2Node_Event_bIsFilled) == 0x000031, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::K2Node_Event_bIsFilled' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, Temp_bool_Variable) == 0x000032, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_GetIconColor_ReturnValue) == 0x000034, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_GetIconColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, K2Node_Select_Default) == 0x000044, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_GetFillColor_ReturnValue) == 0x000048, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_GetFillColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_GetFillColor_ReturnValue2) == 0x000058, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_GetFillColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot, CallFunc_SetOpacity_InOpacity_ImplicitCast) == 0x000068, "Member 'W_HUDGadgetAbilitySlot_C_ExecuteUbergraph_W_HUDGadgetAbilitySlot::CallFunc_SetOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.Animate Outline Color
// 0x0050 (0x0050 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_Animate_Outline_Color final
{
public:
	struct FLinearColor                           Target_Top_Color;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Target_Bottom_Color;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue_1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_Animate_Outline_Color");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color) == 0x000050, "Wrong size on W_HUDGadgetAbilitySlot_C_Animate_Outline_Color");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color, Target_Top_Color) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Outline_Color::Target_Top_Color' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color, Target_Bottom_Color) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Outline_Color::Target_Bottom_Color' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Outline_Color::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000028, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Outline_Color::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color, CallFunc_K2_GetVectorParameterValue_ReturnValue_1) == 0x000038, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Outline_Color::CallFunc_K2_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Outline_Color, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Outline_Color::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.Animate Icon Color
// 0x0018 (0x0018 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_Animate_Icon_Color final
{
public:
	struct FLinearColor                           Target_Color;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_Animate_Icon_Color) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_Animate_Icon_Color");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_Animate_Icon_Color) == 0x000018, "Wrong size on W_HUDGadgetAbilitySlot_C_Animate_Icon_Color");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Icon_Color, Target_Color) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Icon_Color::Target_Color' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Icon_Color, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Icon_Color::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function W_HUDGadgetAbilitySlot.W_HUDGadgetAbilitySlot_C.Animate Fill Color
// 0x0048 (0x0048 - 0x0000)
struct W_HUDGadgetAbilitySlot_C_Animate_Fill_Color final
{
public:
	struct FLinearColor                           Target_Top_Color;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Target_Bottom_Color;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetFillColors_Fill_Color_Top;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetFillColors_Fill_Color_Bottom;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color) == 0x000008, "Wrong alignment on W_HUDGadgetAbilitySlot_C_Animate_Fill_Color");
static_assert(sizeof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color) == 0x000048, "Wrong size on W_HUDGadgetAbilitySlot_C_Animate_Fill_Color");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color, Target_Top_Color) == 0x000000, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Fill_Color::Target_Top_Color' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color, Target_Bottom_Color) == 0x000010, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Fill_Color::Target_Bottom_Color' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color, CallFunc_GetFillColors_Fill_Color_Top) == 0x000020, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Fill_Color::CallFunc_GetFillColors_Fill_Color_Top' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color, CallFunc_GetFillColors_Fill_Color_Bottom) == 0x000030, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Fill_Color::CallFunc_GetFillColors_Fill_Color_Bottom' has a wrong offset!");
static_assert(offsetof(W_HUDGadgetAbilitySlot_C_Animate_Fill_Color, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'W_HUDGadgetAbilitySlot_C_Animate_Fill_Color::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

