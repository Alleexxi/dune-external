#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImprintSystem

#include "Basic.hpp"


namespace SDK::Params
{

// Function ImprintSystem.DynamicSandSubSystem.CanApplyDynamicSandDeformation
// 0x0010 (0x0010 - 0x0000)
struct DynamicSandSubSystem_CanApplyDynamicSandDeformation final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DynamicSandSubSystem_CanApplyDynamicSandDeformation) == 0x000008, "Wrong alignment on DynamicSandSubSystem_CanApplyDynamicSandDeformation");
static_assert(sizeof(DynamicSandSubSystem_CanApplyDynamicSandDeformation) == 0x000010, "Wrong size on DynamicSandSubSystem_CanApplyDynamicSandDeformation");
static_assert(offsetof(DynamicSandSubSystem_CanApplyDynamicSandDeformation, WorldContextObject) == 0x000000, "Member 'DynamicSandSubSystem_CanApplyDynamicSandDeformation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DynamicSandSubSystem_CanApplyDynamicSandDeformation, ReturnValue) == 0x000008, "Member 'DynamicSandSubSystem_CanApplyDynamicSandDeformation::ReturnValue' has a wrong offset!");

// Function ImprintSystem.ImprintCaptureComponent.CaptureImprints
// 0x0004 (0x0004 - 0x0000)
struct ImprintCaptureComponent_CaptureImprints final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImprintCaptureComponent_CaptureImprints) == 0x000004, "Wrong alignment on ImprintCaptureComponent_CaptureImprints");
static_assert(sizeof(ImprintCaptureComponent_CaptureImprints) == 0x000004, "Wrong size on ImprintCaptureComponent_CaptureImprints");
static_assert(offsetof(ImprintCaptureComponent_CaptureImprints, DeltaTime) == 0x000000, "Member 'ImprintCaptureComponent_CaptureImprints::DeltaTime' has a wrong offset!");

// Function ImprintSystem.ImprintCaptureComponent.EnableImprintCapture
// 0x0001 (0x0001 - 0x0000)
struct ImprintCaptureComponent_EnableImprintCapture final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImprintCaptureComponent_EnableImprintCapture) == 0x000001, "Wrong alignment on ImprintCaptureComponent_EnableImprintCapture");
static_assert(sizeof(ImprintCaptureComponent_EnableImprintCapture) == 0x000001, "Wrong size on ImprintCaptureComponent_EnableImprintCapture");
static_assert(offsetof(ImprintCaptureComponent_EnableImprintCapture, bEnable) == 0x000000, "Member 'ImprintCaptureComponent_EnableImprintCapture::bEnable' has a wrong offset!");

// Function ImprintSystem.ImprintCaptureComponent.ShouldComputeDeformation
// 0x0001 (0x0001 - 0x0000)
struct ImprintCaptureComponent_ShouldComputeDeformation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImprintCaptureComponent_ShouldComputeDeformation) == 0x000001, "Wrong alignment on ImprintCaptureComponent_ShouldComputeDeformation");
static_assert(sizeof(ImprintCaptureComponent_ShouldComputeDeformation) == 0x000001, "Wrong size on ImprintCaptureComponent_ShouldComputeDeformation");
static_assert(offsetof(ImprintCaptureComponent_ShouldComputeDeformation, ReturnValue) == 0x000000, "Member 'ImprintCaptureComponent_ShouldComputeDeformation::ReturnValue' has a wrong offset!");

}

