#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ServiceAnnouncementEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ServiceAnnouncementEntry.W_ServiceAnnouncementEntry_C
// 0x0020 (0x0440 - 0x0420)
class UW_ServiceAnnouncementEntry_C final : public UServiceAnnouncementEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       BodyText;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CountdownText;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UServiceAnnouncementEntryData*          Data;                                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void SetCountdownVisibility();
	void SetCountdownText();
	void SetBodyText();
	void OnSetData(const class UServiceAnnouncementEntryData* Data_0);
	void ExecuteUbergraph_W_ServiceAnnouncementEntry(int32 EntryPoint);
	void BP_OnCountdownTimerStep();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ServiceAnnouncementEntry_C">();
	}
	static class UW_ServiceAnnouncementEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ServiceAnnouncementEntry_C>();
	}
};
static_assert(alignof(UW_ServiceAnnouncementEntry_C) == 0x000010, "Wrong alignment on UW_ServiceAnnouncementEntry_C");
static_assert(sizeof(UW_ServiceAnnouncementEntry_C) == 0x000440, "Wrong size on UW_ServiceAnnouncementEntry_C");
static_assert(offsetof(UW_ServiceAnnouncementEntry_C, UberGraphFrame) == 0x000420, "Member 'UW_ServiceAnnouncementEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ServiceAnnouncementEntry_C, BodyText) == 0x000428, "Member 'UW_ServiceAnnouncementEntry_C::BodyText' has a wrong offset!");
static_assert(offsetof(UW_ServiceAnnouncementEntry_C, CountdownText) == 0x000430, "Member 'UW_ServiceAnnouncementEntry_C::CountdownText' has a wrong offset!");
static_assert(offsetof(UW_ServiceAnnouncementEntry_C, Data) == 0x000438, "Member 'UW_ServiceAnnouncementEntry_C::Data' has a wrong offset!");

}

