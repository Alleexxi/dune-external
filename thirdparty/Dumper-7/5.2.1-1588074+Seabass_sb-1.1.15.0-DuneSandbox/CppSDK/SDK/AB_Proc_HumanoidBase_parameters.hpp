#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Proc_HumanoidBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function AB_Proc_HumanoidBase.AB_Proc_HumanoidBase_C.SetBoneChain
// 0x0010 (0x0010 - 0x0000)
struct AB_Proc_HumanoidBase_C_SetBoneChain final
{
public:
	struct FModifyBoneChain                       BoneChain;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AB_Proc_HumanoidBase_C_SetBoneChain) == 0x000008, "Wrong alignment on AB_Proc_HumanoidBase_C_SetBoneChain");
static_assert(sizeof(AB_Proc_HumanoidBase_C_SetBoneChain) == 0x000010, "Wrong size on AB_Proc_HumanoidBase_C_SetBoneChain");
static_assert(offsetof(AB_Proc_HumanoidBase_C_SetBoneChain, BoneChain) == 0x000000, "Member 'AB_Proc_HumanoidBase_C_SetBoneChain::BoneChain' has a wrong offset!");

// Function AB_Proc_HumanoidBase.AB_Proc_HumanoidBase_C.ExecuteUbergraph_AB_Proc_HumanoidBase
// 0x0020 (0x0020 - 0x0000)
struct AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModifyBoneChain                       K2Node_Event_BoneChain;                            // 0x0008(0x0010)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase) == 0x000008, "Wrong alignment on AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase");
static_assert(sizeof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase) == 0x000020, "Wrong size on AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, EntryPoint) == 0x000000, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, K2Node_Event_BoneChain) == 0x000008, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::K2Node_Event_BoneChain' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_BooleanAND_ReturnValue_1) == 0x00001B, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_BooleanAND_ReturnValue_2) == 0x00001C, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001D, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase, CallFunc_BooleanAND_ReturnValue_3) == 0x00001E, "Member 'AB_Proc_HumanoidBase_C_ExecuteUbergraph_AB_Proc_HumanoidBase::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function AB_Proc_HumanoidBase.AB_Proc_HumanoidBase_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct AB_Proc_HumanoidBase_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_Proc_HumanoidBase_C_AnimGraph) == 0x000008, "Wrong alignment on AB_Proc_HumanoidBase_C_AnimGraph");
static_assert(sizeof(AB_Proc_HumanoidBase_C_AnimGraph) == 0x000020, "Wrong size on AB_Proc_HumanoidBase_C_AnimGraph");
static_assert(offsetof(AB_Proc_HumanoidBase_C_AnimGraph, InPose) == 0x000000, "Member 'AB_Proc_HumanoidBase_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(AB_Proc_HumanoidBase_C_AnimGraph, AnimGraph_0) == 0x000010, "Member 'AB_Proc_HumanoidBase_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

