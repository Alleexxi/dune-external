#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageVisualizationComponent

#include "Basic.hpp"

#include "BP_DamageVisualizationComponent_classes.hpp"
#include "BP_DamageVisualizationComponent_parameters.hpp"


namespace SDK
{

// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.UpdateMask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFDVSModuleData&           FDVSModuleData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// const struct FDamageVisualizationHitMarker&HitMarker                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UMeshComponent*                   CollisionMeshComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::UpdateMask(const struct FFDVSModuleData& FDVSModuleData, const struct FDamageVisualizationHitMarker& HitMarker, class UMeshComponent* CollisionMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "UpdateMask");

	Params::BP_DamageVisualizationComponent_C_UpdateMask Parms{};

	Parms.FDVSModuleData = std::move(FDVSModuleData);
	Parms.HitMarker = std::move(HitMarker);
	Parms.CollisionMeshComponent = CollisionMeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.UpdateFromCache
// (BlueprintCallable, BlueprintEvent)

void UBP_DamageVisualizationComponent_C::UpdateFromCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "UpdateFromCache");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.TryInitModuleData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   CollisionMeshComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   bIsInitialized_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bNeedsUnwrap                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::TryInitModuleData(class UMeshComponent* CollisionMeshComponent, bool* bIsInitialized_0, bool* bNeedsUnwrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "TryInitModuleData");

	Params::BP_DamageVisualizationComponent_C_TryInitModuleData Parms{};

	Parms.CollisionMeshComponent = CollisionMeshComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsInitialized_0 != nullptr)
		*bIsInitialized_0 = Parms.bIsInitialized_0;

	if (bNeedsUnwrap != nullptr)
		*bNeedsUnwrap = Parms.bNeedsUnwrap;
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ShowAllMeshComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_DamageVisualizationComponent_C::ShowAllMeshComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "ShowAllMeshComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::Setup(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "Setup");

	Params::BP_DamageVisualizationComponent_C_Setup Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ResetMaterials
// (Event, Public, BlueprintEvent)

void UBP_DamageVisualizationComponent_C::ResetMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "ResetMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "ReceiveTick");

	Params::BP_DamageVisualizationComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_DamageVisualizationComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.OnUpdateHitMarker
// (Event, Public, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageVisualizationHitMarker&HitMarker                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_DamageVisualizationComponent_C::OnUpdateHitMarker(class UMeshComponent* MeshComponent, const struct FDamageVisualizationHitMarker& HitMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "OnUpdateHitMarker");

	Params::BP_DamageVisualizationComponent_C_OnUpdateHitMarker Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.HitMarker = std::move(HitMarker);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.OnModuleHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageVisualizationHitMarker&HitMarker                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_DamageVisualizationComponent_C::OnModuleHit(class UMeshComponent* Mesh, const struct FDamageVisualizationHitMarker& HitMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "OnModuleHit");

	Params::BP_DamageVisualizationComponent_C_OnModuleHit Parms{};

	Parms.Mesh = Mesh;
	Parms.HitMarker = std::move(HitMarker);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.OnHitMarkerAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FDamageVisualizationHitMarker&HitMarker                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_DamageVisualizationComponent_C::OnHitMarkerAdded(const struct FHitResult& HitResult, const struct FDamageVisualizationHitMarker& HitMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "OnHitMarkerAdded");

	Params::BP_DamageVisualizationComponent_C_OnHitMarkerAdded Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.HitMarker = std::move(HitMarker);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_DamageVisualizationComponent_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.HideAllMeshComponentsExcept
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::HideAllMeshComponentsExcept(class UMeshComponent* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "HideAllMeshComponentsExcept");

	Params::BP_DamageVisualizationComponent_C_HideAllMeshComponentsExcept Parms{};

	Parms.MeshComponent = MeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.ExecuteUbergraph_BP_DamageVisualizationComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::ExecuteUbergraph_BP_DamageVisualizationComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "ExecuteUbergraph_BP_DamageVisualizationComponent");

	Params::BP_DamageVisualizationComponent_C_ExecuteUbergraph_BP_DamageVisualizationComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.DrawSingle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFDVSModuleData&           FDVSModuleData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// const struct FDamageVisualizationHitMarker&HitMarker                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    bNeedsUnwrap                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   CollisionMeshComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_DamageVisualizationComponent_C::DrawSingle(const struct FFDVSModuleData& FDVSModuleData, const struct FDamageVisualizationHitMarker& HitMarker, bool bNeedsUnwrap, class UMeshComponent* CollisionMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "DrawSingle");

	Params::BP_DamageVisualizationComponent_C_DrawSingle Parms{};

	Parms.FDVSModuleData = std::move(FDVSModuleData);
	Parms.HitMarker = std::move(HitMarker);
	Parms.bNeedsUnwrap = bNeedsUnwrap;
	Parms.CollisionMeshComponent = CollisionMeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageVisualizationComponent.BP_DamageVisualizationComponent_C.DrawImmediate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFDVSModuleData&           FDVSModuleData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// const struct FDamageVisualizationHitMarker&HitMarker                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_DamageVisualizationComponent_C::DrawImmediate(const struct FFDVSModuleData& FDVSModuleData, const struct FDamageVisualizationHitMarker& HitMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageVisualizationComponent_C", "DrawImmediate");

	Params::BP_DamageVisualizationComponent_C_DrawImmediate Parms{};

	Parms.FDVSModuleData = std::move(FDVSModuleData);
	Parms.HitMarker = std::move(HitMarker);

	UObject::ProcessEvent(Func, &Parms);
}

}

