#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SandCrawler_CHOAM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C.UpdateSpiceCylinderStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus final
{
public:
	double                                        NewVolume;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus) == 0x000008, "Wrong alignment on BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus");
static_assert(sizeof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus) == 0x000030, "Wrong size on BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, NewVolume) == 0x000000, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::NewVolume' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_IsValid_ReturnValue_2) == 0x000018, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_IsValid_ReturnValue_3) == 0x000019, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_IsDedicatedServer_ReturnValue) == 0x00001A, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000020, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00002C, "Member 'BP_SandCrawler_CHOAM_C_UpdateSpiceCylinderStatus::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C.OnModuleDetached_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_SandCrawler_CHOAM_C_OnModuleDetached_Event final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SandCrawler_CHOAM_C_OnModuleDetached_Event) == 0x000001, "Wrong alignment on BP_SandCrawler_CHOAM_C_OnModuleDetached_Event");
static_assert(sizeof(BP_SandCrawler_CHOAM_C_OnModuleDetached_Event) == 0x000001, "Wrong size on BP_SandCrawler_CHOAM_C_OnModuleDetached_Event");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_OnModuleDetached_Event, ModuleType) == 0x000000, "Member 'BP_SandCrawler_CHOAM_C_OnModuleDetached_Event::ModuleType' has a wrong offset!");

// Function BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C.OnInventoryVolumeChanged_Event
// 0x0004 (0x0004 - 0x0000)
struct BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event final
{
public:
	float                                         NewVolume;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event) == 0x000004, "Wrong alignment on BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event");
static_assert(sizeof(BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event) == 0x000004, "Wrong size on BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event, NewVolume) == 0x000000, "Member 'BP_SandCrawler_CHOAM_C_OnInventoryVolumeChanged_Event::NewVolume' has a wrong offset!");

// Function BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C.ExecuteUbergraph_BP_SandCrawler_CHOAM
// 0x0038 (0x0038 - 0x0000)
struct BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewVolume;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EVehicleModuleType ModuleType)> K2Node_CreateDelegate_OutputDelegate;             // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewVolume)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_CustomEvent_ModuleType;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateSpiceCylinderStatus_NewVolume_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM) == 0x000008, "Wrong alignment on BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM");
static_assert(sizeof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM) == 0x000038, "Wrong size on BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, EntryPoint) == 0x000000, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, K2Node_CustomEvent_NewVolume) == 0x000004, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::K2Node_CustomEvent_NewVolume' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, K2Node_CustomEvent_ModuleType) == 0x000028, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::K2Node_CustomEvent_ModuleType' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM, CallFunc_UpdateSpiceCylinderStatus_NewVolume_ImplicitCast) == 0x000030, "Member 'BP_SandCrawler_CHOAM_C_ExecuteUbergraph_BP_SandCrawler_CHOAM::CallFunc_UpdateSpiceCylinderStatus_NewVolume_ImplicitCast' has a wrong offset!");

// Function BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C.CreateSpiceCylinderStatusMID
// 0x0208 (0x0208 - 0x0000)
struct BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVehicleModuleMesh                     CallFunc_GetVehicleModuleMesh_ReturnValue;         // 0x0010(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVehicleModuleMesh                     CallFunc_GetVehicleModuleMesh_ReturnValue_1;       // 0x0120(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID) == 0x000008, "Wrong alignment on BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID");
static_assert(sizeof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID) == 0x000208, "Wrong size on BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_GetVehicleModuleMesh_ReturnValue) == 0x000010, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_GetVehicleModuleMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_GetMaterial_ReturnValue) == 0x0000F8, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000108, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_GetObjectName_ReturnValue) == 0x000110, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_GetVehicleModuleMesh_ReturnValue_1) == 0x000120, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_GetVehicleModuleMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0001F0, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_IsValid_ReturnValue_2) == 0x0001F1, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_GetMaterial_ReturnValue_1) == 0x0001F8, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000200, "Member 'BP_SandCrawler_CHOAM_C_CreateSpiceCylinderStatusMID::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C.GetRelativeAttachTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform) == 0x000010, "Wrong alignment on BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform");
static_assert(sizeof(BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform) == 0x0000C0, "Wrong size on BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform, ReturnValue) == 0x000000, "Member 'BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform, CallFunc_GetRelativeTransform_ReturnValue) == 0x000060, "Member 'BP_SandCrawler_CHOAM_C_GetRelativeAttachTransform::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");

}

