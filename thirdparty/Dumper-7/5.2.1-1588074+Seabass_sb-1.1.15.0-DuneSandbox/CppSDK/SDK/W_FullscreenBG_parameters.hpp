#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FullscreenBG

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_FullscreenBG.W_FullscreenBG_C.ExecuteUbergraph_W_FullscreenBG
// 0x0004 (0x0004 - 0x0000)
struct W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG) == 0x000004, "Wrong alignment on W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG");
static_assert(sizeof(W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG) == 0x000004, "Wrong size on W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG");
static_assert(offsetof(W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG, EntryPoint) == 0x000000, "Member 'W_FullscreenBG_C_ExecuteUbergraph_W_FullscreenBG::EntryPoint' has a wrong offset!");

// Function W_FullscreenBG.W_FullscreenBG_C.OnMouseMove
// 0x0220 (0x0220 - 0x0000)
struct W_FullscreenBG_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
};
static_assert(alignof(W_FullscreenBG_C_OnMouseMove) == 0x000008, "Wrong alignment on W_FullscreenBG_C_OnMouseMove");
static_assert(sizeof(W_FullscreenBG_C_OnMouseMove) == 0x000220, "Wrong size on W_FullscreenBG_C_OnMouseMove");
static_assert(offsetof(W_FullscreenBG_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'W_FullscreenBG_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'W_FullscreenBG_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'W_FullscreenBG_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_OnMouseMove, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'W_FullscreenBG_C_OnMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_FullscreenBG.W_FullscreenBG_C.SetMouseCoords
// 0x0160 (0x0160 - 0x0000)
struct W_FullscreenBG_C_SetMouseCoords final
{
public:
	struct FVector2D                              ScreenPos;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCanvasPanel*>                   K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UCanvasPanel*                           CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FullscreenBG_C_SetMouseCoords) == 0x000008, "Wrong alignment on W_FullscreenBG_C_SetMouseCoords");
static_assert(sizeof(W_FullscreenBG_C_SetMouseCoords) == 0x000160, "Wrong size on W_FullscreenBG_C_SetMouseCoords");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, ScreenPos) == 0x000000, "Member 'W_FullscreenBG_C_SetMouseCoords::ScreenPos' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable) == 0x000010, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_BreakVector2D_X) == 0x000018, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_int_Variable) == 0x000028, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_1) == 0x000030, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_2) == 0x000038, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_3) == 0x000040, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_int_Variable_1) == 0x000048, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_4) == 0x000050, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_5) == 0x000058, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_6) == 0x000060, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_int_Array_Index_Variable) == 0x000068, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_7) == 0x000070, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, K2Node_Select_Default) == 0x000078, "Member 'W_FullscreenBG_C_SetMouseCoords::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, K2Node_Select_Default_1) == 0x000080, "Member 'W_FullscreenBG_C_SetMouseCoords::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_real_Variable_8) == 0x000088, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, K2Node_MakeArray_Array) == 0x000098, "Member 'W_FullscreenBG_C_SetMouseCoords::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000B8, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, Temp_int_Variable_2) == 0x0000C8, "Member 'W_FullscreenBG_C_SetMouseCoords::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_GetViewportSize_ReturnValue) == 0x0000D0, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_BreakVector2D_X_1) == 0x0000E0, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_BreakVector2D_Y_1) == 0x0000E8, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, K2Node_Select_Default_2) == 0x0000F0, "Member 'W_FullscreenBG_C_SetMouseCoords::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_MapRangeClamped_ReturnValue) == 0x000110, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000118, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000120, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000128, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000130, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000138, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000140, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenBG_C_SetMouseCoords, CallFunc_MakeVector2D_ReturnValue) == 0x000150, "Member 'W_FullscreenBG_C_SetMouseCoords::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

