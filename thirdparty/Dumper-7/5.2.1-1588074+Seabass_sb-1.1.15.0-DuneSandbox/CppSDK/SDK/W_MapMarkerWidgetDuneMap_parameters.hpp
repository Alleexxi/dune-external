#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapMarkerWidgetDuneMap

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_MapMarkerWidgetDuneMap.W_MapMarkerWidgetDuneMap_C.ExecuteUbergraph_W_MapMarkerWidgetDuneMap
// 0x0218 (0x0218 - 0x0000)
struct W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEMapMarker                            K2Node_Event_MarkerType;                           // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFullscreenMapMarkerRowBase            K2Node_Event_MarkerStaticData;                     // 0x0010(0x0158)(ConstParm)
	struct FMapMarkerGuiData                      K2Node_Event_MarkerDynamicData;                    // 0x0168(0x0098)(ConstParm)
	bool                                          K2Node_Event_bIsActive;                            // 0x0200(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap) == 0x000008, "Wrong alignment on W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap");
static_assert(sizeof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap) == 0x000218, "Wrong size on W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap, EntryPoint) == 0x000000, "Member 'W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap, K2Node_Event_MarkerType) == 0x000004, "Member 'W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap::K2Node_Event_MarkerType' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap, K2Node_Event_MarkerStaticData) == 0x000010, "Member 'W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap::K2Node_Event_MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap, K2Node_Event_MarkerDynamicData) == 0x000168, "Member 'W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap::K2Node_Event_MarkerDynamicData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap, K2Node_Event_bIsActive) == 0x000200, "Member 'W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap::K2Node_Event_bIsActive' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap, CallFunc_SelectColor_ReturnValue) == 0x000204, "Member 'W_MapMarkerWidgetDuneMap_C_ExecuteUbergraph_W_MapMarkerWidgetDuneMap::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function W_MapMarkerWidgetDuneMap.W_MapMarkerWidgetDuneMap_C.OnActivationChanged
// 0x0001 (0x0001 - 0x0000)
struct W_MapMarkerWidgetDuneMap_C_OnActivationChanged final
{
public:
	bool                                          bIsActive;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarkerWidgetDuneMap_C_OnActivationChanged) == 0x000001, "Wrong alignment on W_MapMarkerWidgetDuneMap_C_OnActivationChanged");
static_assert(sizeof(W_MapMarkerWidgetDuneMap_C_OnActivationChanged) == 0x000001, "Wrong size on W_MapMarkerWidgetDuneMap_C_OnActivationChanged");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_OnActivationChanged, bIsActive) == 0x000000, "Member 'W_MapMarkerWidgetDuneMap_C_OnActivationChanged::bIsActive' has a wrong offset!");

// Function W_MapMarkerWidgetDuneMap.W_MapMarkerWidgetDuneMap_C.Update
// 0x01F8 (0x01F8 - 0x0000)
struct W_MapMarkerWidgetDuneMap_C_Update final
{
public:
	struct FEMapMarker                            MarkerType;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FFullscreenMapMarkerRowBase            MarkerStaticData;                                  // 0x0008(0x0158)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FMapMarkerGuiData                      MarkerDynamicData;                                 // 0x0160(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_MapMarkerWidgetDuneMap_C_Update) == 0x000008, "Wrong alignment on W_MapMarkerWidgetDuneMap_C_Update");
static_assert(sizeof(W_MapMarkerWidgetDuneMap_C_Update) == 0x0001F8, "Wrong size on W_MapMarkerWidgetDuneMap_C_Update");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_Update, MarkerType) == 0x000000, "Member 'W_MapMarkerWidgetDuneMap_C_Update::MarkerType' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_Update, MarkerStaticData) == 0x000008, "Member 'W_MapMarkerWidgetDuneMap_C_Update::MarkerStaticData' has a wrong offset!");
static_assert(offsetof(W_MapMarkerWidgetDuneMap_C_Update, MarkerDynamicData) == 0x000160, "Member 'W_MapMarkerWidgetDuneMap_C_Update::MarkerDynamicData' has a wrong offset!");

}

