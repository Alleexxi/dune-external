#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeOfDay_UIMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TimeOfDay_UIMap.BP_TimeOfDay_UIMap_C
// 0x0030 (0x0380 - 0x0350)
class ABP_TimeOfDay_UIMap_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTimeOfDayComponent*                    TimeOfDay;                                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             Sun;                                               // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialParameterCollection*           TimeMPC;                                           // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TimeOfDay_UIMap(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TimeOfDay_UIMap_C">();
	}
	static class ABP_TimeOfDay_UIMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TimeOfDay_UIMap_C>();
	}
};
static_assert(alignof(ABP_TimeOfDay_UIMap_C) == 0x000008, "Wrong alignment on ABP_TimeOfDay_UIMap_C");
static_assert(sizeof(ABP_TimeOfDay_UIMap_C) == 0x000380, "Wrong size on ABP_TimeOfDay_UIMap_C");
static_assert(offsetof(ABP_TimeOfDay_UIMap_C, UberGraphFrame) == 0x000350, "Member 'ABP_TimeOfDay_UIMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_UIMap_C, TimeOfDay) == 0x000358, "Member 'ABP_TimeOfDay_UIMap_C::TimeOfDay' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_UIMap_C, Arrow) == 0x000360, "Member 'ABP_TimeOfDay_UIMap_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_UIMap_C, Sun) == 0x000368, "Member 'ABP_TimeOfDay_UIMap_C::Sun' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_UIMap_C, DefaultSceneRoot) == 0x000370, "Member 'ABP_TimeOfDay_UIMap_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_UIMap_C, TimeMPC) == 0x000378, "Member 'ABP_TimeOfDay_UIMap_C::TimeMPC' has a wrong offset!");

}

