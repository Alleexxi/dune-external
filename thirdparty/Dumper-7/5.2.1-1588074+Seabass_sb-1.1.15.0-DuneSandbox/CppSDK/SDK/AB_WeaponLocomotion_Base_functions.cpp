#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_WeaponLocomotion_Base

#include "Basic.hpp"

#include "AB_WeaponLocomotion_Base_classes.hpp"
#include "AB_WeaponLocomotion_Base_parameters.hpp"


namespace SDK
{

// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "AnimGraph");

	Params::AB_WeaponLocomotion_Base_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CombatLocomotionAirPoses
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CombatLocomotionAirPoses_0                             (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CombatLocomotionAirPoses(struct FPoseLink* CombatLocomotionAirPoses_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CombatLocomotionAirPoses");

	Params::AB_WeaponLocomotion_Base_C_CombatLocomotionAirPoses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CombatLocomotionAirPoses_0 != nullptr)
		*CombatLocomotionAirPoses_0 = std::move(Parms.CombatLocomotionAirPoses_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CombatLocomotionCrouchPoses
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CombatLocomotionCrouchPoses_0                          (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CombatLocomotionCrouchPoses(struct FPoseLink* CombatLocomotionCrouchPoses_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CombatLocomotionCrouchPoses");

	Params::AB_WeaponLocomotion_Base_C_CombatLocomotionCrouchPoses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CombatLocomotionCrouchPoses_0 != nullptr)
		*CombatLocomotionCrouchPoses_0 = std::move(Parms.CombatLocomotionCrouchPoses_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CombatLocomotionStandPoses
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CombatLocomotionStandPoses_0                           (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CombatLocomotionStandPoses(struct FPoseLink* CombatLocomotionStandPoses_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CombatLocomotionStandPoses");

	Params::AB_WeaponLocomotion_Base_C_CombatLocomotionStandPoses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CombatLocomotionStandPoses_0 != nullptr)
		*CombatLocomotionStandPoses_0 = std::move(Parms.CombatLocomotionStandPoses_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CombatLocomotionSuspensorPoses
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CombatLocomotionSuspensorPoses_0                       (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CombatLocomotionSuspensorPoses(struct FPoseLink* CombatLocomotionSuspensorPoses_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CombatLocomotionSuspensorPoses");

	Params::AB_WeaponLocomotion_Base_C_CombatLocomotionSuspensorPoses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CombatLocomotionSuspensorPoses_0 != nullptr)
		*CombatLocomotionSuspensorPoses_0 = std::move(Parms.CombatLocomotionSuspensorPoses_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CrouchingIdle
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CrouchingIdle_0                                        (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CrouchingIdle(struct FPoseLink* CrouchingIdle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CrouchingIdle");

	Params::AB_WeaponLocomotion_Base_C_CrouchingIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrouchingIdle_0 != nullptr)
		*CrouchingIdle_0 = std::move(Parms.CrouchingIdle_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CrouchingMove
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CrouchingMove_0                                        (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CrouchingMove(struct FPoseLink* CrouchingMove_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CrouchingMove");

	Params::AB_WeaponLocomotion_Base_C_CrouchingMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrouchingMove_0 != nullptr)
		*CrouchingMove_0 = std::move(Parms.CrouchingMove_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CrouchingStartMoveOmniDirectional
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CrouchingStartMoveOmniDirectional_0                    (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CrouchingStartMoveOmniDirectional(struct FPoseLink* CrouchingStartMoveOmniDirectional_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CrouchingStartMoveOmniDirectional");

	Params::AB_WeaponLocomotion_Base_C_CrouchingStartMoveOmniDirectional Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrouchingStartMoveOmniDirectional_0 != nullptr)
		*CrouchingStartMoveOmniDirectional_0 = std::move(Parms.CrouchingStartMoveOmniDirectional_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CrouchingStopNoWeapon
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CrouchingStopNoWeapon_0                                (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CrouchingStopNoWeapon(struct FPoseLink* CrouchingStopNoWeapon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CrouchingStopNoWeapon");

	Params::AB_WeaponLocomotion_Base_C_CrouchingStopNoWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrouchingStopNoWeapon_0 != nullptr)
		*CrouchingStopNoWeapon_0 = std::move(Parms.CrouchingStopNoWeapon_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CrouchingStopWeapon
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CrouchingStopWeapon_0                                  (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CrouchingStopWeapon(struct FPoseLink* CrouchingStopWeapon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CrouchingStopWeapon");

	Params::AB_WeaponLocomotion_Base_C_CrouchingStopWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrouchingStopWeapon_0 != nullptr)
		*CrouchingStopWeapon_0 = std::move(Parms.CrouchingStopWeapon_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.CrouchToStanding
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       CrouchToStanding_0                                     (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::CrouchToStanding(struct FPoseLink* CrouchToStanding_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "CrouchToStanding");

	Params::AB_WeaponLocomotion_Base_C_CrouchToStanding Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrouchToStanding_0 != nullptr)
		*CrouchToStanding_0 = std::move(Parms.CrouchToStanding_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.ExecuteUbergraph_AB_WeaponLocomotion_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_WeaponLocomotion_Base_C::ExecuteUbergraph_AB_WeaponLocomotion_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "ExecuteUbergraph_AB_WeaponLocomotion_Base");

	Params::AB_WeaponLocomotion_Base_C_ExecuteUbergraph_AB_WeaponLocomotion_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.LayerJumpApex
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 JumpApex_GroundLocomotion                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       LayerJumpApex_0                                        (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::LayerJumpApex(const struct FPoseLink& JumpApex_GroundLocomotion, struct FPoseLink* LayerJumpApex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "LayerJumpApex");

	Params::AB_WeaponLocomotion_Base_C_LayerJumpApex Parms{};

	Parms.JumpApex_GroundLocomotion = std::move(JumpApex_GroundLocomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (LayerJumpApex_0 != nullptr)
		*LayerJumpApex_0 = std::move(Parms.LayerJumpApex_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.LayerJumpIn
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       LayerJumpIn_0                                          (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::LayerJumpIn(struct FPoseLink* LayerJumpIn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "LayerJumpIn");

	Params::AB_WeaponLocomotion_Base_C_LayerJumpIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LayerJumpIn_0 != nullptr)
		*LayerJumpIn_0 = std::move(Parms.LayerJumpIn_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.LayerJumpOut
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 JumpOut_GroundLocomotion                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       LayerJumpOut_0                                         (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::LayerJumpOut(const struct FPoseLink& JumpOut_GroundLocomotion, struct FPoseLink* LayerJumpOut_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "LayerJumpOut");

	Params::AB_WeaponLocomotion_Base_C_LayerJumpOut Parms{};

	Parms.JumpOut_GroundLocomotion = std::move(JumpOut_GroundLocomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (LayerJumpOut_0 != nullptr)
		*LayerJumpOut_0 = std::move(Parms.LayerJumpOut_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingIdle
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingIdle_0                                         (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingIdle(struct FPoseLink* StandingIdle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingIdle");

	Params::AB_WeaponLocomotion_Base_C_StandingIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingIdle_0 != nullptr)
		*StandingIdle_0 = std::move(Parms.StandingIdle_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingMove
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingMove_0                                         (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingMove(struct FPoseLink* StandingMove_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingMove");

	Params::AB_WeaponLocomotion_Base_C_StandingMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingMove_0 != nullptr)
		*StandingMove_0 = std::move(Parms.StandingMove_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingStartMoveDirectional
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingStartMoveDirectional_0                         (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingStartMoveDirectional(struct FPoseLink* StandingStartMoveDirectional_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingStartMoveDirectional");

	Params::AB_WeaponLocomotion_Base_C_StandingStartMoveDirectional Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingStartMoveDirectional_0 != nullptr)
		*StandingStartMoveDirectional_0 = std::move(Parms.StandingStartMoveDirectional_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingStartMoveOmni
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingStartMoveOmni_0                                (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingStartMoveOmni(struct FPoseLink* StandingStartMoveOmni_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingStartMoveOmni");

	Params::AB_WeaponLocomotion_Base_C_StandingStartMoveOmni Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingStartMoveOmni_0 != nullptr)
		*StandingStartMoveOmni_0 = std::move(Parms.StandingStartMoveOmni_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingStopNoWeapon
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingStopNoWeapon_0                                 (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingStopNoWeapon(struct FPoseLink* StandingStopNoWeapon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingStopNoWeapon");

	Params::AB_WeaponLocomotion_Base_C_StandingStopNoWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingStopNoWeapon_0 != nullptr)
		*StandingStopNoWeapon_0 = std::move(Parms.StandingStopNoWeapon_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingStopWeapon
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingStopWeapon_0                                   (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingStopWeapon(struct FPoseLink* StandingStopWeapon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingStopWeapon");

	Params::AB_WeaponLocomotion_Base_C_StandingStopWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingStopWeapon_0 != nullptr)
		*StandingStopWeapon_0 = std::move(Parms.StandingStopWeapon_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StandingToCrouch
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StandingToCrouch_0                                     (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StandingToCrouch(struct FPoseLink* StandingToCrouch_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StandingToCrouch");

	Params::AB_WeaponLocomotion_Base_C_StandingToCrouch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandingToCrouch_0 != nullptr)
		*StandingToCrouch_0 = std::move(Parms.StandingToCrouch_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.Stunned
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       Stunned_0                                              (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::Stunned(struct FPoseLink* Stunned_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "Stunned");

	Params::AB_WeaponLocomotion_Base_C_Stunned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stunned_0 != nullptr)
		*Stunned_0 = std::move(Parms.Stunned_0);
}


// Function AB_WeaponLocomotion_Base.AB_WeaponLocomotion_Base_C.StunnedOut
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       StunnedOut_0                                           (Parm, OutParm, NoDestructor)

void UAB_WeaponLocomotion_Base_C::StunnedOut(struct FPoseLink* StunnedOut_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_WeaponLocomotion_Base_C", "StunnedOut");

	Params::AB_WeaponLocomotion_Base_C_StunnedOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StunnedOut_0 != nullptr)
		*StunnedOut_0 = std::move(Parms.StunnedOut_0);
}

}

