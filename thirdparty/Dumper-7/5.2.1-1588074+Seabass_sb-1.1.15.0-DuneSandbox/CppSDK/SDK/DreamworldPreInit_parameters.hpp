#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DreamworldPreInit

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DreamworldPreInit_structs.hpp"


namespace SDK::Params
{

// Function DreamworldPreInit.LoggerLibrary.DWLogString
// 0x0038 (0x0038 - 0x0000)
struct LoggerLibrary_DWLogString final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InString;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELogChannel                                   Channel;                                           // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDebugLevel                                   DebugLevel;                                        // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x001A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x001C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Key;                                               // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoggerLibrary_DWLogString) == 0x000008, "Wrong alignment on LoggerLibrary_DWLogString");
static_assert(sizeof(LoggerLibrary_DWLogString) == 0x000038, "Wrong size on LoggerLibrary_DWLogString");
static_assert(offsetof(LoggerLibrary_DWLogString, WorldContextObject) == 0x000000, "Member 'LoggerLibrary_DWLogString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, InString) == 0x000008, "Member 'LoggerLibrary_DWLogString::InString' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, Channel) == 0x000018, "Member 'LoggerLibrary_DWLogString::Channel' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, DebugLevel) == 0x000019, "Member 'LoggerLibrary_DWLogString::DebugLevel' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, bPrintToScreen) == 0x00001A, "Member 'LoggerLibrary_DWLogString::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, TextColor) == 0x00001C, "Member 'LoggerLibrary_DWLogString::TextColor' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, Duration) == 0x00002C, "Member 'LoggerLibrary_DWLogString::Duration' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_DWLogString, Key) == 0x000030, "Member 'LoggerLibrary_DWLogString::Key' has a wrong offset!");

// Function DreamworldPreInit.LoggerLibrary.IsSuppressed
// 0x0003 (0x0003 - 0x0000)
struct LoggerLibrary_IsSuppressed final
{
public:
	EDebugLevel                                   DebugLevel;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELogChannel                                   Channel;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoggerLibrary_IsSuppressed) == 0x000001, "Wrong alignment on LoggerLibrary_IsSuppressed");
static_assert(sizeof(LoggerLibrary_IsSuppressed) == 0x000003, "Wrong size on LoggerLibrary_IsSuppressed");
static_assert(offsetof(LoggerLibrary_IsSuppressed, DebugLevel) == 0x000000, "Member 'LoggerLibrary_IsSuppressed::DebugLevel' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_IsSuppressed, Channel) == 0x000001, "Member 'LoggerLibrary_IsSuppressed::Channel' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_IsSuppressed, ReturnValue) == 0x000002, "Member 'LoggerLibrary_IsSuppressed::ReturnValue' has a wrong offset!");

// Function DreamworldPreInit.LoggerLibrary.PrintStringToChannel
// 0x0040 (0x0040 - 0x0000)
struct LoggerLibrary_PrintStringToChannel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InString;                                          // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULogChannel>                Channel;                                           // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDebugLevel                                   DebugLevel;                                        // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0024(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Key;                                               // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoggerLibrary_PrintStringToChannel) == 0x000008, "Wrong alignment on LoggerLibrary_PrintStringToChannel");
static_assert(sizeof(LoggerLibrary_PrintStringToChannel) == 0x000040, "Wrong size on LoggerLibrary_PrintStringToChannel");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, WorldContextObject) == 0x000000, "Member 'LoggerLibrary_PrintStringToChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, InString) == 0x000008, "Member 'LoggerLibrary_PrintStringToChannel::InString' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, Channel) == 0x000018, "Member 'LoggerLibrary_PrintStringToChannel::Channel' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, DebugLevel) == 0x000020, "Member 'LoggerLibrary_PrintStringToChannel::DebugLevel' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, bPrintToScreen) == 0x000021, "Member 'LoggerLibrary_PrintStringToChannel::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, TextColor) == 0x000024, "Member 'LoggerLibrary_PrintStringToChannel::TextColor' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, Duration) == 0x000034, "Member 'LoggerLibrary_PrintStringToChannel::Duration' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel, Key) == 0x000038, "Member 'LoggerLibrary_PrintStringToChannel::Key' has a wrong offset!");

// Function DreamworldPreInit.LoggerLibrary.PrintStringToChannel_K2Wrapper
// 0x0038 (0x0038 - 0x0000)
struct LoggerLibrary_PrintStringToChannel_K2Wrapper final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InString;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x001C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Key;                                               // 0x0030(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoggerLibrary_PrintStringToChannel_K2Wrapper) == 0x000008, "Wrong alignment on LoggerLibrary_PrintStringToChannel_K2Wrapper");
static_assert(sizeof(LoggerLibrary_PrintStringToChannel_K2Wrapper) == 0x000038, "Wrong size on LoggerLibrary_PrintStringToChannel_K2Wrapper");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, WorldContextObject) == 0x000000, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, InString) == 0x000008, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::InString' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, bPrintToScreen) == 0x000018, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, bPrintToLog) == 0x000019, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, TextColor) == 0x00001C, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::TextColor' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, Duration) == 0x00002C, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::Duration' has a wrong offset!");
static_assert(offsetof(LoggerLibrary_PrintStringToChannel_K2Wrapper, Key) == 0x000030, "Member 'LoggerLibrary_PrintStringToChannel_K2Wrapper::Key' has a wrong offset!");

}

