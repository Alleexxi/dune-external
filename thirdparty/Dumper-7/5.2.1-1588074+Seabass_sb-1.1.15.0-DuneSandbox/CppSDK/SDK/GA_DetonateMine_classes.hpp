#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DetonateMine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_DetonateMine.GA_DetonateMine_C
// 0x0020 (0x0538 - 0x0518)
class UGA_DetonateMine_C : public UDuneGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0518(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 ThrowableClass;                                    // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReactivationGE;                                    // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemoveReactivationGEUponDetonation;               // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DetonateMine(class ABP_Mine_Remote_Base_C* FoundMine);
	void ExecuteUbergraph_GA_DetonateMine(int32 EntryPoint);
	void FindMine(double MinTimeExisted, class ABP_Mine_Remote_Base_C** OutMine);
	void K2_ActivateAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_DetonateMine_C">();
	}
	static class UGA_DetonateMine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_DetonateMine_C>();
	}
};
static_assert(alignof(UGA_DetonateMine_C) == 0x000008, "Wrong alignment on UGA_DetonateMine_C");
static_assert(sizeof(UGA_DetonateMine_C) == 0x000538, "Wrong size on UGA_DetonateMine_C");
static_assert(offsetof(UGA_DetonateMine_C, UberGraphFrame) == 0x000518, "Member 'UGA_DetonateMine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_DetonateMine_C, ThrowableClass) == 0x000520, "Member 'UGA_DetonateMine_C::ThrowableClass' has a wrong offset!");
static_assert(offsetof(UGA_DetonateMine_C, ReactivationGE) == 0x000528, "Member 'UGA_DetonateMine_C::ReactivationGE' has a wrong offset!");
static_assert(offsetof(UGA_DetonateMine_C, bRemoveReactivationGEUponDetonation) == 0x000530, "Member 'UGA_DetonateMine_C::bRemoveReactivationGEUponDetonation' has a wrong offset!");

}

