#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sandbike_CHOAM

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Sandbike_CHOAM.BP_Sandbike_CHOAM_C.ShouldApplyDynamicRollDamping
// 0x0004 (0x0004 - 0x0000)
struct BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping) == 0x000001, "Wrong alignment on BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping");
static_assert(sizeof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping) == 0x000004, "Wrong size on BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping, ReturnValue) == 0x000000, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicRollDamping::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Sandbike_CHOAM.BP_Sandbike_CHOAM_C.ShouldApplyDynamicPitchDamping
// 0x0006 (0x0006 - 0x0000)
struct BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping) == 0x000001, "Wrong alignment on BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping");
static_assert(sizeof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping) == 0x000006, "Wrong size on BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping, ReturnValue) == 0x000000, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_Sandbike_CHOAM_C_ShouldApplyDynamicPitchDamping::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Sandbike_CHOAM.BP_Sandbike_CHOAM_C.AreWheelsInTheAir
// 0x0006 (0x0006 - 0x0000)
struct BP_Sandbike_CHOAM_C_AreWheelsInTheAir final
{
public:
	bool                                          FrontLeftWheel_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FrontRightWheel_0;                                 // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BackWheel_0;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir) == 0x000001, "Wrong alignment on BP_Sandbike_CHOAM_C_AreWheelsInTheAir");
static_assert(sizeof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir) == 0x000006, "Wrong size on BP_Sandbike_CHOAM_C_AreWheelsInTheAir");
static_assert(offsetof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir, FrontLeftWheel_0) == 0x000000, "Member 'BP_Sandbike_CHOAM_C_AreWheelsInTheAir::FrontLeftWheel_0' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir, FrontRightWheel_0) == 0x000001, "Member 'BP_Sandbike_CHOAM_C_AreWheelsInTheAir::FrontRightWheel_0' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir, BackWheel_0) == 0x000002, "Member 'BP_Sandbike_CHOAM_C_AreWheelsInTheAir::BackWheel_0' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_Sandbike_CHOAM_C_AreWheelsInTheAir::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'BP_Sandbike_CHOAM_C_AreWheelsInTheAir::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sandbike_CHOAM_C_AreWheelsInTheAir, CallFunc_Not_PreBool_ReturnValue_2) == 0x000005, "Member 'BP_Sandbike_CHOAM_C_AreWheelsInTheAir::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

}

