#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CH_1MGC_Locomotion

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ControlRig_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_CH_1MGC_Locomotion.AB_CH_1MGC_Locomotion_C
// 0x0700 (0x0C20 - 0x0520)
class UAB_CH_1MGC_Locomotion_C final : public UWheeledVehicleAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0528(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0530(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0538(0x0020)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0558(0x0470)()
	double                                        __CustomProperty_WheelRotation_Rear_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_WheelRotation_FR_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_WheelRotation_FL_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_RR_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x09E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_RL_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x09F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_FR_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0A10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_FL_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0A28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_IK_Target_RR_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0A40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_IK_Target_RL_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_IK_Target_FR_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0A70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_IK_Target_FL_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_Steering_0F6CA5D4426DADCE928953AFFE4F7ABC; // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Steering;                                          // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Front_L_Offset;                              // 0x0AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Front_R_Offset;                              // 0x0AC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Rear_L_Offset;                               // 0x0AE0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Rear_R_Offset;                               // 0x0AF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Front_L_Rotation;                            // 0x0B10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Front_R_Rotation;                            // 0x0B28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Rear_L_Rotation;                             // 0x0B40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tread_Rear_R_Rotation;                             // 0x0B58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKTraceDistance;                                   // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HorizontalSpeed;                                   // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HorizontalDirection;                               // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFXVehicleTrailSystem_00;                          // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFXVehicleTrailSystem_01;                          // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneWheeledVehicle*                    Dune_Wheeled_Vehicle;                              // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         WheelRotationFL;                                   // 0x0BA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelRotationFR;                                   // 0x0BA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelRotationRear;                                 // 0x0BA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAC[0x4];                                      // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DustTimer;                                         // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasDriver;                                        // 0x0BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB9[0x3];                                      // 0x0BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_Time_X;                                      // 0x0BBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              ActiveSurfaceType;                                 // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC1[0x3];                                      // 0x0BC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EmitterSelection;                                  // 0x0BC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SurfaceVFX;                                        // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EPhysicalSurface, class UNiagaraSystem*> Surface_VFX_Map;                                   // 0x0BD0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnModuleMeshDestroyed_Event(EVehicleModuleType ModuleType);
	void OnAllWheelsGroundedChanged(const bool bAllWheelsGrounded);
	void ExecuteUbergraph_AB_CH_1MGC_Locomotion(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_CH_1MGC_Locomotion_C">();
	}
	static class UAB_CH_1MGC_Locomotion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_CH_1MGC_Locomotion_C>();
	}
};
static_assert(alignof(UAB_CH_1MGC_Locomotion_C) == 0x000010, "Wrong alignment on UAB_CH_1MGC_Locomotion_C");
static_assert(sizeof(UAB_CH_1MGC_Locomotion_C) == 0x000C20, "Wrong size on UAB_CH_1MGC_Locomotion_C");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, UberGraphFrame) == 0x000520, "Member 'UAB_CH_1MGC_Locomotion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, AnimBlueprintExtension_PropertyAccess) == 0x000528, "Member 'UAB_CH_1MGC_Locomotion_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, AnimBlueprintExtension_Base) == 0x000530, "Member 'UAB_CH_1MGC_Locomotion_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, AnimGraphNode_Root) == 0x000538, "Member 'UAB_CH_1MGC_Locomotion_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, AnimGraphNode_ControlRig) == 0x000558, "Member 'UAB_CH_1MGC_Locomotion_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_WheelRotation_Rear_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x0009C8, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_WheelRotation_Rear_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_WheelRotation_FR_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x0009D0, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_WheelRotation_FR_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_WheelRotation_FL_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x0009D8, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_WheelRotation_FL_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_RR_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x0009E0, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_RR_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_RL_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x0009F8, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_RL_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_FR_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000A10, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_FR_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_FL_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000A28, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_FL_Rotation_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_IK_Target_RR_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000A40, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_IK_Target_RR_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_IK_Target_RL_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000A58, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_IK_Target_RL_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_IK_Target_FR_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000A70, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_IK_Target_FR_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_IK_Target_FL_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000A88, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_IK_Target_FL_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, __CustomProperty_Steering_0F6CA5D4426DADCE928953AFFE4F7ABC) == 0x000AA0, "Member 'UAB_CH_1MGC_Locomotion_C::__CustomProperty_Steering_0F6CA5D4426DADCE928953AFFE4F7ABC' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Steering) == 0x000AA8, "Member 'UAB_CH_1MGC_Locomotion_C::Steering' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Front_L_Offset) == 0x000AB0, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Front_L_Offset' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Front_R_Offset) == 0x000AC8, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Front_R_Offset' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Rear_L_Offset) == 0x000AE0, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Rear_L_Offset' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Rear_R_Offset) == 0x000AF8, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Rear_R_Offset' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Front_L_Rotation) == 0x000B10, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Front_L_Rotation' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Front_R_Rotation) == 0x000B28, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Front_R_Rotation' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Rear_L_Rotation) == 0x000B40, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Rear_L_Rotation' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Tread_Rear_R_Rotation) == 0x000B58, "Member 'UAB_CH_1MGC_Locomotion_C::Tread_Rear_R_Rotation' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, IKTraceDistance) == 0x000B70, "Member 'UAB_CH_1MGC_Locomotion_C::IKTraceDistance' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, HorizontalSpeed) == 0x000B78, "Member 'UAB_CH_1MGC_Locomotion_C::HorizontalSpeed' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, HorizontalDirection) == 0x000B80, "Member 'UAB_CH_1MGC_Locomotion_C::HorizontalDirection' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, VFXVehicleTrailSystem_00) == 0x000B88, "Member 'UAB_CH_1MGC_Locomotion_C::VFXVehicleTrailSystem_00' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, VFXVehicleTrailSystem_01) == 0x000B90, "Member 'UAB_CH_1MGC_Locomotion_C::VFXVehicleTrailSystem_01' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Dune_Wheeled_Vehicle) == 0x000B98, "Member 'UAB_CH_1MGC_Locomotion_C::Dune_Wheeled_Vehicle' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, WheelRotationFL) == 0x000BA0, "Member 'UAB_CH_1MGC_Locomotion_C::WheelRotationFL' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, WheelRotationFR) == 0x000BA4, "Member 'UAB_CH_1MGC_Locomotion_C::WheelRotationFR' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, WheelRotationRear) == 0x000BA8, "Member 'UAB_CH_1MGC_Locomotion_C::WheelRotationRear' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, DustTimer) == 0x000BB0, "Member 'UAB_CH_1MGC_Locomotion_C::DustTimer' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, bHasDriver) == 0x000BB8, "Member 'UAB_CH_1MGC_Locomotion_C::bHasDriver' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Delta_Time_X) == 0x000BBC, "Member 'UAB_CH_1MGC_Locomotion_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, ActiveSurfaceType) == 0x000BC0, "Member 'UAB_CH_1MGC_Locomotion_C::ActiveSurfaceType' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, EmitterSelection) == 0x000BC4, "Member 'UAB_CH_1MGC_Locomotion_C::EmitterSelection' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, SurfaceVFX) == 0x000BC8, "Member 'UAB_CH_1MGC_Locomotion_C::SurfaceVFX' has a wrong offset!");
static_assert(offsetof(UAB_CH_1MGC_Locomotion_C, Surface_VFX_Map) == 0x000BD0, "Member 'UAB_CH_1MGC_Locomotion_C::Surface_VFX_Map' has a wrong offset!");

}

