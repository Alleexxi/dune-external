#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChainPlugin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class ChainPlugin.ChainComponent
// 0x01C0 (0x0830 - 0x0670)
class UChainComponent : public UMeshComponent
{
public:
	TMulticastInlineDelegate<void(const struct FVector& Velocity)> onSoundReached;                   // 0x0668(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const TArray<struct FHitResult>& hits)> onCollide;                 // 0x0678(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStaticMesh*                            chainMesh;                                         // 0x0688(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x0690(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Segments;                                          // 0x06A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                additiveRotation;                                  // 0x06B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChainLength;                                       // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocal;                                          // 0x06CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6CD[0x3];                                      // 0x06CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                endPoint;                                          // 0x06D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          attachStart;                                       // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    attachStartTo;                                     // 0x06F0(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   attachStartToSocket;                               // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          attachEnd;                                         // 0x0720(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    attachEndTo;                                       // 0x0728(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   attachEndToSocket;                                 // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FComponentReference                    attachComponentToStart;                            // 0x0758(0x0028)(Edit, NativeAccessSpecifierPublic)
	bool                                          rotateStartAttachment;                             // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    attachComponentToEnd;                              // 0x0788(0x0028)(Edit, NativeAccessSpecifierPublic)
	bool                                          rotateEndAttachment;                               // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B1[0x3];                                      // 0x07B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Gravity;                                           // 0x07B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stiffness;                                         // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Friction;                                          // 0x07BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         chainWidth;                                        // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          selfCollision;                                     // 0x07C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         selfCollisionWidth;                                // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         selfCollisionThreshold;                            // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Skip;                                              // 0x07D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          drawDebugger;                                      // 0x07D4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          instanceComponent;                                 // 0x07D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         soundThreshold;                                    // 0x07E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         soundSkip;                                         // 0x07E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7E8[0x48];                                     // 0x07E8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<int32> ApplyForce(const struct FVector& InPosition, float InRadius, const struct FVector& InForce);
	struct FVector getChainPoint(int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ChainComponent">();
	}
	static class UChainComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChainComponent>();
	}
};
static_assert(alignof(UChainComponent) == 0x000010, "Wrong alignment on UChainComponent");
static_assert(sizeof(UChainComponent) == 0x000830, "Wrong size on UChainComponent");
static_assert(offsetof(UChainComponent, onSoundReached) == 0x000668, "Member 'UChainComponent::onSoundReached' has a wrong offset!");
static_assert(offsetof(UChainComponent, onCollide) == 0x000678, "Member 'UChainComponent::onCollide' has a wrong offset!");
static_assert(offsetof(UChainComponent, chainMesh) == 0x000688, "Member 'UChainComponent::chainMesh' has a wrong offset!");
static_assert(offsetof(UChainComponent, Scale) == 0x000690, "Member 'UChainComponent::Scale' has a wrong offset!");
static_assert(offsetof(UChainComponent, Segments) == 0x0006A8, "Member 'UChainComponent::Segments' has a wrong offset!");
static_assert(offsetof(UChainComponent, additiveRotation) == 0x0006B0, "Member 'UChainComponent::additiveRotation' has a wrong offset!");
static_assert(offsetof(UChainComponent, ChainLength) == 0x0006C8, "Member 'UChainComponent::ChainLength' has a wrong offset!");
static_assert(offsetof(UChainComponent, bIsLocal) == 0x0006CC, "Member 'UChainComponent::bIsLocal' has a wrong offset!");
static_assert(offsetof(UChainComponent, endPoint) == 0x0006D0, "Member 'UChainComponent::endPoint' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachStart) == 0x0006E8, "Member 'UChainComponent::attachStart' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachStartTo) == 0x0006F0, "Member 'UChainComponent::attachStartTo' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachStartToSocket) == 0x000718, "Member 'UChainComponent::attachStartToSocket' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachEnd) == 0x000720, "Member 'UChainComponent::attachEnd' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachEndTo) == 0x000728, "Member 'UChainComponent::attachEndTo' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachEndToSocket) == 0x000750, "Member 'UChainComponent::attachEndToSocket' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachComponentToStart) == 0x000758, "Member 'UChainComponent::attachComponentToStart' has a wrong offset!");
static_assert(offsetof(UChainComponent, rotateStartAttachment) == 0x000780, "Member 'UChainComponent::rotateStartAttachment' has a wrong offset!");
static_assert(offsetof(UChainComponent, attachComponentToEnd) == 0x000788, "Member 'UChainComponent::attachComponentToEnd' has a wrong offset!");
static_assert(offsetof(UChainComponent, rotateEndAttachment) == 0x0007B0, "Member 'UChainComponent::rotateEndAttachment' has a wrong offset!");
static_assert(offsetof(UChainComponent, Gravity) == 0x0007B4, "Member 'UChainComponent::Gravity' has a wrong offset!");
static_assert(offsetof(UChainComponent, Stiffness) == 0x0007B8, "Member 'UChainComponent::Stiffness' has a wrong offset!");
static_assert(offsetof(UChainComponent, Friction) == 0x0007BC, "Member 'UChainComponent::Friction' has a wrong offset!");
static_assert(offsetof(UChainComponent, chainWidth) == 0x0007C0, "Member 'UChainComponent::chainWidth' has a wrong offset!");
static_assert(offsetof(UChainComponent, selfCollision) == 0x0007C4, "Member 'UChainComponent::selfCollision' has a wrong offset!");
static_assert(offsetof(UChainComponent, selfCollisionWidth) == 0x0007C8, "Member 'UChainComponent::selfCollisionWidth' has a wrong offset!");
static_assert(offsetof(UChainComponent, selfCollisionThreshold) == 0x0007CC, "Member 'UChainComponent::selfCollisionThreshold' has a wrong offset!");
static_assert(offsetof(UChainComponent, Skip) == 0x0007D0, "Member 'UChainComponent::Skip' has a wrong offset!");
static_assert(offsetof(UChainComponent, drawDebugger) == 0x0007D4, "Member 'UChainComponent::drawDebugger' has a wrong offset!");
static_assert(offsetof(UChainComponent, instanceComponent) == 0x0007D8, "Member 'UChainComponent::instanceComponent' has a wrong offset!");
static_assert(offsetof(UChainComponent, soundThreshold) == 0x0007E0, "Member 'UChainComponent::soundThreshold' has a wrong offset!");
static_assert(offsetof(UChainComponent, soundSkip) == 0x0007E4, "Member 'UChainComponent::soundSkip' has a wrong offset!");

// Class ChainPlugin.SplineChainComponent
// 0x00A0 (0x08D0 - 0x0830)
class USplineChainComponent final : public UChainComponent
{
public:
	struct FRuntimeFloatCurve                     SplineFollowWeight;                                // 0x0830(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USplineComponent*                       SplineComponent;                                   // 0x08B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C0[0x10];                                     // 0x08C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SplineChainComponent">();
	}
	static class USplineChainComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplineChainComponent>();
	}
};
static_assert(alignof(USplineChainComponent) == 0x000010, "Wrong alignment on USplineChainComponent");
static_assert(sizeof(USplineChainComponent) == 0x0008D0, "Wrong size on USplineChainComponent");
static_assert(offsetof(USplineChainComponent, SplineFollowWeight) == 0x000830, "Member 'USplineChainComponent::SplineFollowWeight' has a wrong offset!");
static_assert(offsetof(USplineChainComponent, SplineComponent) == 0x0008B8, "Member 'USplineChainComponent::SplineComponent' has a wrong offset!");

}

