#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Renderer

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class Renderer.SmartGIBlueprintLibrary
// 0x0000 (0x0030 - 0x0030)
class USmartGIBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool IsRayTracingInlineSupport();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartGIBlueprintLibrary">();
	}
	static class USmartGIBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartGIBlueprintLibrary>();
	}
};
static_assert(alignof(USmartGIBlueprintLibrary) == 0x000008, "Wrong alignment on USmartGIBlueprintLibrary");
static_assert(sizeof(USmartGIBlueprintLibrary) == 0x000030, "Wrong size on USmartGIBlueprintLibrary");

// Class Renderer.SparseVolumeTextureViewerComponent
// 0x0030 (0x0660 - 0x0630)
class USparseVolumeTextureViewerComponent final : public UPrimitiveComponent
{
public:
	class USparseVolumeTexture*                   SparseVolumeTexturePreview;                        // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAnimate : 1;                                      // 0x0638(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_639[0x3];                                      // 0x0639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationFrame;                                    // 0x063C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrameRate;                                         // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimationTime;                                     // 0x0644(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComponentToVisualize;                              // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64C[0x14];                                     // 0x064C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparseVolumeTextureViewerComponent">();
	}
	static class USparseVolumeTextureViewerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparseVolumeTextureViewerComponent>();
	}
};
static_assert(alignof(USparseVolumeTextureViewerComponent) == 0x000010, "Wrong alignment on USparseVolumeTextureViewerComponent");
static_assert(sizeof(USparseVolumeTextureViewerComponent) == 0x000660, "Wrong size on USparseVolumeTextureViewerComponent");
static_assert(offsetof(USparseVolumeTextureViewerComponent, SparseVolumeTexturePreview) == 0x000630, "Member 'USparseVolumeTextureViewerComponent::SparseVolumeTexturePreview' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, AnimationFrame) == 0x00063C, "Member 'USparseVolumeTextureViewerComponent::AnimationFrame' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, FrameRate) == 0x000640, "Member 'USparseVolumeTextureViewerComponent::FrameRate' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, AnimationTime) == 0x000644, "Member 'USparseVolumeTextureViewerComponent::AnimationTime' has a wrong offset!");
static_assert(offsetof(USparseVolumeTextureViewerComponent, ComponentToVisualize) == 0x000648, "Member 'USparseVolumeTextureViewerComponent::ComponentToVisualize' has a wrong offset!");

// Class Renderer.SparseVolumeTextureViewer
// 0x0008 (0x0358 - 0x0350)
class ASparseVolumeTextureViewer final : public AInfo
{
public:
	class USparseVolumeTextureViewerComponent*    SparseVolumeTextureViewerComponent;                // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparseVolumeTextureViewer">();
	}
	static class ASparseVolumeTextureViewer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASparseVolumeTextureViewer>();
	}
};
static_assert(alignof(ASparseVolumeTextureViewer) == 0x000008, "Wrong alignment on ASparseVolumeTextureViewer");
static_assert(sizeof(ASparseVolumeTextureViewer) == 0x000358, "Wrong size on ASparseVolumeTextureViewer");
static_assert(offsetof(ASparseVolumeTextureViewer, SparseVolumeTextureViewerComponent) == 0x000350, "Member 'ASparseVolumeTextureViewer::SparseVolumeTextureViewerComponent' has a wrong offset!");

}

