#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SMG_Unique_LargeMag_02

#include "Basic.hpp"

#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SMG_Unique_LargeMag_02.BP_SMG_Unique_LargeMag_02_C
// 0x0010 (0x0070 - 0x0060)
class UBP_SMG_Unique_LargeMag_02_C final : public UModdedWeaponBase
{
public:
	double                                        Damage_Multiplier___Bottom_half_mag;               // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ammo_amount_threshold;                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_ModifyPreMitigationDamage(float& InOutDamage, const struct FWeaponState& WeaponState, const struct FHitResult& HitResult) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SMG_Unique_LargeMag_02_C">();
	}
	static class UBP_SMG_Unique_LargeMag_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SMG_Unique_LargeMag_02_C>();
	}
};
static_assert(alignof(UBP_SMG_Unique_LargeMag_02_C) == 0x000008, "Wrong alignment on UBP_SMG_Unique_LargeMag_02_C");
static_assert(sizeof(UBP_SMG_Unique_LargeMag_02_C) == 0x000070, "Wrong size on UBP_SMG_Unique_LargeMag_02_C");
static_assert(offsetof(UBP_SMG_Unique_LargeMag_02_C, Damage_Multiplier___Bottom_half_mag) == 0x000060, "Member 'UBP_SMG_Unique_LargeMag_02_C::Damage_Multiplier___Bottom_half_mag' has a wrong offset!");
static_assert(offsetof(UBP_SMG_Unique_LargeMag_02_C, Ammo_amount_threshold) == 0x000068, "Member 'UBP_SMG_Unique_LargeMag_02_C::Ammo_amount_threshold' has a wrong offset!");

}

