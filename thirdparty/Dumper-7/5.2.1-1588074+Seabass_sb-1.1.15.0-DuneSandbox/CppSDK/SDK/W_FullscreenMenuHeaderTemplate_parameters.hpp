#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FullscreenMenuHeaderTemplate

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_FullscreenMenuHeaderTemplate.W_FullscreenMenuHeaderTemplate_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_FullscreenMenuHeaderTemplate_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FullscreenMenuHeaderTemplate_C_PreConstruct) == 0x000001, "Wrong alignment on W_FullscreenMenuHeaderTemplate_C_PreConstruct");
static_assert(sizeof(W_FullscreenMenuHeaderTemplate_C_PreConstruct) == 0x000001, "Wrong size on W_FullscreenMenuHeaderTemplate_C_PreConstruct");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_FullscreenMenuHeaderTemplate_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_FullscreenMenuHeaderTemplate.W_FullscreenMenuHeaderTemplate_C.ExecuteUbergraph_W_FullscreenMenuHeaderTemplate
// 0x0018 (0x0018 - 0x0000)
struct W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate) == 0x000004, "Wrong alignment on W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate");
static_assert(sizeof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate) == 0x000018, "Wrong size on W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate, EntryPoint) == 0x000000, "Member 'W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate, Temp_bool_Variable) == 0x000004, "Member 'W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate, Temp_real_Variable) == 0x000008, "Member 'W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate, Temp_real_Variable_1) == 0x00000C, "Member 'W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate, K2Node_Event_IsDesignTime) == 0x000010, "Member 'W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate, K2Node_Select_Default) == 0x000014, "Member 'W_FullscreenMenuHeaderTemplate_C_ExecuteUbergraph_W_FullscreenMenuHeaderTemplate::K2Node_Select_Default' has a wrong offset!");

// Function W_FullscreenMenuHeaderTemplate.W_FullscreenMenuHeaderTemplate_C.CollapseHeaderSideSlots
// 0x0010 (0x0010 - 0x0000)
struct W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots) == 0x000004, "Wrong alignment on W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots");
static_assert(sizeof(W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots) == 0x000010, "Wrong size on W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots, Temp_bool_Variable) == 0x000000, "Member 'W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots, Temp_real_Variable) == 0x000004, "Member 'W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots, Temp_real_Variable_1) == 0x000008, "Member 'W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots, K2Node_Select_Default) == 0x00000C, "Member 'W_FullscreenMenuHeaderTemplate_C_CollapseHeaderSideSlots::K2Node_Select_Default' has a wrong offset!");

}

