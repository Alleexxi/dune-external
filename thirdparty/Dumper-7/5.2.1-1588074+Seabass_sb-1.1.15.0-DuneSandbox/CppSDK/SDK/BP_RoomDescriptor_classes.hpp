#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoomDescriptor

#include "Basic.hpp"

#include "EContentGateStates_structs.hpp"
#include "BP_AISpawnManager_classes.hpp"
#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RoomDescriptor.BP_RoomDescriptor_C
// 0x0040 (0x05F0 - 0x05B0)
class ABP_RoomDescriptor_C final : public ABP_AISpawnManager_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFcAudioComponent*                      Audio;                                             // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ContentGateComponent_C*             GatedContentComponent;                             // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNpcTotemTriggerComponent*              NpcTotemTrigger;                                   // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAiReinforcementComponent*              AiReinforcement;                                   // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ContentGateOptional_;                              // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAIWaveWarningAudio                           VictoryCelebrationAudio;                           // 0x05E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E2[0x6];                                      // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpawnWarningAdvanceTime;                           // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReportAudio(int32 WaveNumber, double Delay, EAIWaveWarningAudio WaveWarning);
	void ReceiveBeginPlay();
	void PostUserConstructionScript();
	void OnWaveBeginDelay(int32 WaveIndex, const struct FAIWaveData& WaveData);
	void OnSpawnerCleared(const class AAISpawnManager* SpawnManager, EDespawnConditionFlags DespawnConditionFlags);
	void OnSpawnBegin();
	void OnEncounterIdleBegin();
	void OnCombatBeginDelay();
	void ExecuteUbergraph_BP_RoomDescriptor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RoomDescriptor_C">();
	}
	static class ABP_RoomDescriptor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoomDescriptor_C>();
	}
};
static_assert(alignof(ABP_RoomDescriptor_C) == 0x000008, "Wrong alignment on ABP_RoomDescriptor_C");
static_assert(sizeof(ABP_RoomDescriptor_C) == 0x0005F0, "Wrong size on ABP_RoomDescriptor_C");
static_assert(offsetof(ABP_RoomDescriptor_C, UberGraphFrame) == 0x0005B0, "Member 'ABP_RoomDescriptor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, Audio) == 0x0005B8, "Member 'ABP_RoomDescriptor_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, TextRender) == 0x0005C0, "Member 'ABP_RoomDescriptor_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, GatedContentComponent) == 0x0005C8, "Member 'ABP_RoomDescriptor_C::GatedContentComponent' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, NpcTotemTrigger) == 0x0005D0, "Member 'ABP_RoomDescriptor_C::NpcTotemTrigger' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, AiReinforcement) == 0x0005D8, "Member 'ABP_RoomDescriptor_C::AiReinforcement' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, ContentGateOptional_) == 0x0005E0, "Member 'ABP_RoomDescriptor_C::ContentGateOptional_' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, VictoryCelebrationAudio) == 0x0005E1, "Member 'ABP_RoomDescriptor_C::VictoryCelebrationAudio' has a wrong offset!");
static_assert(offsetof(ABP_RoomDescriptor_C, SpawnWarningAdvanceTime) == 0x0005E8, "Member 'ABP_RoomDescriptor_C::SpawnWarningAdvanceTime' has a wrong offset!");

}

