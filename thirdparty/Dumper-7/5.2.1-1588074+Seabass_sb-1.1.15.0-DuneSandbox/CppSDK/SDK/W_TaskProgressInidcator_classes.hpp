#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TaskProgressInidcator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TaskProgressInidcator.W_TaskProgressInidcator_C
// 0x0020 (0x0410 - 0x03F0)
class UW_TaskProgressInidcator_C final : public UDuneUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDuneImage*                             LockIcon;                                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DiamondCircularProgressBar_C*        W_DiamondCircularProgressBar;                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_UnInteractableCheckBox_C*            W_UnInteractableCheckBox;                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Set_Unlocked();
	void Set_Progress(const float Progress);
	void Set_Locked();
	void Set_Completed();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_TaskProgressInidcator(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TaskProgressInidcator_C">();
	}
	static class UW_TaskProgressInidcator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TaskProgressInidcator_C>();
	}
};
static_assert(alignof(UW_TaskProgressInidcator_C) == 0x000010, "Wrong alignment on UW_TaskProgressInidcator_C");
static_assert(sizeof(UW_TaskProgressInidcator_C) == 0x000410, "Wrong size on UW_TaskProgressInidcator_C");
static_assert(offsetof(UW_TaskProgressInidcator_C, UberGraphFrame) == 0x0003F0, "Member 'UW_TaskProgressInidcator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TaskProgressInidcator_C, LockIcon) == 0x0003F8, "Member 'UW_TaskProgressInidcator_C::LockIcon' has a wrong offset!");
static_assert(offsetof(UW_TaskProgressInidcator_C, W_DiamondCircularProgressBar) == 0x000400, "Member 'UW_TaskProgressInidcator_C::W_DiamondCircularProgressBar' has a wrong offset!");
static_assert(offsetof(UW_TaskProgressInidcator_C, W_UnInteractableCheckBox) == 0x000408, "Member 'UW_TaskProgressInidcator_C::W_UnInteractableCheckBox' has a wrong offset!");

}

