#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldGridView

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "IgwCore_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WorldGridView.W_WorldGridView_C
// 0x0040 (0x0330 - 0x02F0)
class UW_WorldGridView_C final : public USandwormWorldGridView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             MouseBox;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerPos;                                         // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PlayerSizeBox;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FServerID>                      LastServers;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Hover;                                             // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       PlayerSlot_0;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	void IsActive(bool* IsActive_0);
	class FText GetPlayerPositionText();
	void ExecuteUbergraph_W_WorldGridView(int32 EntryPoint);
	void Construct();
	void ConfigureServerWidget(class UCanvasPanelSlot* Slot_0, const struct FVector2D& Min, const struct FVector2D& Max);
	void ConfigurePlayer(class UCanvasPanelSlot* Slot_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WorldGridView_C">();
	}
	static class UW_WorldGridView_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WorldGridView_C>();
	}
};
static_assert(alignof(UW_WorldGridView_C) == 0x000008, "Wrong alignment on UW_WorldGridView_C");
static_assert(sizeof(UW_WorldGridView_C) == 0x000330, "Wrong size on UW_WorldGridView_C");
static_assert(offsetof(UW_WorldGridView_C, UberGraphFrame) == 0x0002F0, "Member 'UW_WorldGridView_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WorldGridView_C, MouseBox) == 0x0002F8, "Member 'UW_WorldGridView_C::MouseBox' has a wrong offset!");
static_assert(offsetof(UW_WorldGridView_C, PlayerPos) == 0x000300, "Member 'UW_WorldGridView_C::PlayerPos' has a wrong offset!");
static_assert(offsetof(UW_WorldGridView_C, PlayerSizeBox) == 0x000308, "Member 'UW_WorldGridView_C::PlayerSizeBox' has a wrong offset!");
static_assert(offsetof(UW_WorldGridView_C, LastServers) == 0x000310, "Member 'UW_WorldGridView_C::LastServers' has a wrong offset!");
static_assert(offsetof(UW_WorldGridView_C, Hover) == 0x000320, "Member 'UW_WorldGridView_C::Hover' has a wrong offset!");
static_assert(offsetof(UW_WorldGridView_C, PlayerSlot_0) == 0x000328, "Member 'UW_WorldGridView_C::PlayerSlot_0' has a wrong offset!");

}

