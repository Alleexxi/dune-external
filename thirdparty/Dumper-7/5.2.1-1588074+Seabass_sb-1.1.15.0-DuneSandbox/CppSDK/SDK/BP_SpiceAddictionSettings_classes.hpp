#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpiceAddictionSettings

#include "Basic.hpp"

#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpiceAddictionSettings.BP_SpiceAddictionSettings_C
// 0x00B0 (0x0240 - 0x0190)
class UBP_SpiceAddictionSettings_C final : public USpiceAddictionSettings
{
public:
	TArray<class UClass*>                         GameplayEffectsToTrack;                            // 0x0190(0x0010)(Edit, BlueprintVisible)
	TArray<class UClass*>                         Addiction_Spice_Field_Effects;                     // 0x01A0(0x0010)(Edit, BlueprintVisible, Config)
	TArray<class UClass*>                         Exposure_Spice_Field_Effects;                      // 0x01B0(0x0010)(Edit, BlueprintVisible, Config)
	int32                                         SpiceVisionMaximumThreshold;                       // 0x01C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, bool>                       SpiceVisionPostProcessMap;                         // 0x01C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        SpiceVisionActorDestructionCheckPeriod;            // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Permanent_Addiction_Effects;                       // 0x0220(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         Exposure_Gameplay_Effects;                         // 0x0230(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpiceAddictionSettings_C">();
	}
	static class UBP_SpiceAddictionSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SpiceAddictionSettings_C>();
	}
};
static_assert(alignof(UBP_SpiceAddictionSettings_C) == 0x000008, "Wrong alignment on UBP_SpiceAddictionSettings_C");
static_assert(sizeof(UBP_SpiceAddictionSettings_C) == 0x000240, "Wrong size on UBP_SpiceAddictionSettings_C");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, GameplayEffectsToTrack) == 0x000190, "Member 'UBP_SpiceAddictionSettings_C::GameplayEffectsToTrack' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, Addiction_Spice_Field_Effects) == 0x0001A0, "Member 'UBP_SpiceAddictionSettings_C::Addiction_Spice_Field_Effects' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, Exposure_Spice_Field_Effects) == 0x0001B0, "Member 'UBP_SpiceAddictionSettings_C::Exposure_Spice_Field_Effects' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, SpiceVisionMaximumThreshold) == 0x0001C0, "Member 'UBP_SpiceAddictionSettings_C::SpiceVisionMaximumThreshold' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, SpiceVisionPostProcessMap) == 0x0001C8, "Member 'UBP_SpiceAddictionSettings_C::SpiceVisionPostProcessMap' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, SpiceVisionActorDestructionCheckPeriod) == 0x000218, "Member 'UBP_SpiceAddictionSettings_C::SpiceVisionActorDestructionCheckPeriod' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, Permanent_Addiction_Effects) == 0x000220, "Member 'UBP_SpiceAddictionSettings_C::Permanent_Addiction_Effects' has a wrong offset!");
static_assert(offsetof(UBP_SpiceAddictionSettings_C, Exposure_Gameplay_Effects) == 0x000230, "Member 'UBP_SpiceAddictionSettings_C::Exposure_Gameplay_Effects' has a wrong offset!");

}

