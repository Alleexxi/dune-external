#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VehiclePaperDollModuleGrid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_VehiclePaperDollModuleGrid.W_VehiclePaperDollModuleGrid_C
// 0x0040 (0x04A0 - 0x0460)
class UW_VehiclePaperDollModuleGrid_C final : public UVehicleModuleStatusWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_VehicleModuleIcon_C*                 Engine;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 PSU;                                               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 UtilitySlot1;                                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 UtilitySlot2;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 UtilitySlot3;                                      // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VehicleModuleIcon_C*                 UtilitySlot4;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UpdateVehicleModule(const EVehicleModuleType ModuleType, const EVehicleModuleAttachState AttachState, const float Durability, const EItemDurabilityState DurabilityState, const float DecayedMaxDurability);
	void Setup_Module_Visuals(class UW_VehicleModuleIcon_C* Module, EVehicleModuleAttachState Module_State, EItemDurabilityState Durability, double DurabilityValue);
	void SetModuleVisible(EVehicleModuleType Module, bool IsVisible_0);
	void InitVehicleModule(const EVehicleModuleType ModuleType, const class FText& ModuleName, const TSoftObjectPtr<class UTexture2D>& ModuleIcon, const EVehicleModuleAttachState AttachState, const float Durability, const EItemDurabilityState DurabilityState, const float DecayedMaxDurability);
	class UW_VehicleModuleIcon_C* GetSlotFromModule(EVehicleModuleType Module);
	void ExecuteUbergraph_W_VehiclePaperDollModuleGrid(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_VehiclePaperDollModuleGrid_C">();
	}
	static class UW_VehiclePaperDollModuleGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_VehiclePaperDollModuleGrid_C>();
	}
};
static_assert(alignof(UW_VehiclePaperDollModuleGrid_C) == 0x000010, "Wrong alignment on UW_VehiclePaperDollModuleGrid_C");
static_assert(sizeof(UW_VehiclePaperDollModuleGrid_C) == 0x0004A0, "Wrong size on UW_VehiclePaperDollModuleGrid_C");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, UberGraphFrame) == 0x000460, "Member 'UW_VehiclePaperDollModuleGrid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, Engine) == 0x000468, "Member 'UW_VehiclePaperDollModuleGrid_C::Engine' has a wrong offset!");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, PSU) == 0x000470, "Member 'UW_VehiclePaperDollModuleGrid_C::PSU' has a wrong offset!");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, UtilitySlot1) == 0x000478, "Member 'UW_VehiclePaperDollModuleGrid_C::UtilitySlot1' has a wrong offset!");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, UtilitySlot2) == 0x000480, "Member 'UW_VehiclePaperDollModuleGrid_C::UtilitySlot2' has a wrong offset!");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, UtilitySlot3) == 0x000488, "Member 'UW_VehiclePaperDollModuleGrid_C::UtilitySlot3' has a wrong offset!");
static_assert(offsetof(UW_VehiclePaperDollModuleGrid_C, UtilitySlot4) == 0x000490, "Member 'UW_VehiclePaperDollModuleGrid_C::UtilitySlot4' has a wrong offset!");

}

