#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CharacterCreationSlider

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_CharacterCreationSlider.W_CharacterCreationSlider_C.ConfigureWidget
// 0x0020 (0x0020 - 0x0000)
struct W_CharacterCreationSlider_C_ConfigureWidget final
{
public:
	const class UCharacterCreationScreenContent*  Content_0;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UCharacterCreationCommand*        Command_0;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 StartingValue;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreationSlider_C_ConfigureWidget) == 0x000008, "Wrong alignment on W_CharacterCreationSlider_C_ConfigureWidget");
static_assert(sizeof(W_CharacterCreationSlider_C_ConfigureWidget) == 0x000020, "Wrong size on W_CharacterCreationSlider_C_ConfigureWidget");
static_assert(offsetof(W_CharacterCreationSlider_C_ConfigureWidget, Content_0) == 0x000000, "Member 'W_CharacterCreationSlider_C_ConfigureWidget::Content_0' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ConfigureWidget, Command_0) == 0x000008, "Member 'W_CharacterCreationSlider_C_ConfigureWidget::Command_0' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ConfigureWidget, StartingValue) == 0x000010, "Member 'W_CharacterCreationSlider_C_ConfigureWidget::StartingValue' has a wrong offset!");

// Function W_CharacterCreationSlider.W_CharacterCreationSlider_C.ExecuteUbergraph_W_CharacterCreationSlider
// 0x0078 (0x0078 - 0x0000)
struct W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCCScreenBodyPartModificationsSliderContent* K2Node_DynamicCast_AsCCScreen_Body_Part_Modifications_Slider_Content; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCCScreenSingleMutableParameterContent* K2Node_DynamicCast_AsCCScreen_Single_Mutable_Parameter_Content; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UCharacterCreationScreenContent*  K2Node_Event_Content;                              // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UCharacterCreationCommand*        K2Node_Event_Command;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_StartingValue;                        // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFocused;                           // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CharacterCreationInnerTraitSlot_C*   K2Node_DynamicCast_AsW_Character_Creation_Inner_Trait_Slot; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_Value_ImplicitCast;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitSliderValues_DefaultValue_ImplicitCast; // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider) == 0x000008, "Wrong alignment on W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider");
static_assert(sizeof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider) == 0x000078, "Wrong size on W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, EntryPoint) == 0x000000, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_DynamicCast_AsCCScreen_Body_Part_Modifications_Slider_Content) == 0x000008, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_DynamicCast_AsCCScreen_Body_Part_Modifications_Slider_Content' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_DynamicCast_AsCCScreen_Single_Mutable_Parameter_Content) == 0x000018, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_DynamicCast_AsCCScreen_Single_Mutable_Parameter_Content' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000021, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000028, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, CallFunc_Conv_StringToDouble_ReturnValue_1) == 0x000030, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::CallFunc_Conv_StringToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_Event_Content) == 0x000038, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_Event_Content' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_Event_Command) == 0x000040, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_Event_StartingValue) == 0x000048, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_Event_StartingValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_Event_bIsFocused) == 0x000058, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_Event_bIsFocused' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_DynamicCast_AsW_Character_Creation_Inner_Trait_Slot) == 0x000060, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_DynamicCast_AsW_Character_Creation_Inner_Trait_Slot' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, CallFunc_SetValue_Value_ImplicitCast) == 0x00006C, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::CallFunc_SetValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider, CallFunc_InitSliderValues_DefaultValue_ImplicitCast) == 0x000070, "Member 'W_CharacterCreationSlider_C_ExecuteUbergraph_W_CharacterCreationSlider::CallFunc_InitSliderValues_DefaultValue_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreationSlider.W_CharacterCreationSlider_C.OnFocusChanged
// 0x0001 (0x0001 - 0x0000)
struct W_CharacterCreationSlider_C_OnFocusChanged final
{
public:
	bool                                          bIsFocused;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreationSlider_C_OnFocusChanged) == 0x000001, "Wrong alignment on W_CharacterCreationSlider_C_OnFocusChanged");
static_assert(sizeof(W_CharacterCreationSlider_C_OnFocusChanged) == 0x000001, "Wrong size on W_CharacterCreationSlider_C_OnFocusChanged");
static_assert(offsetof(W_CharacterCreationSlider_C_OnFocusChanged, bIsFocused) == 0x000000, "Member 'W_CharacterCreationSlider_C_OnFocusChanged::bIsFocused' has a wrong offset!");

}

