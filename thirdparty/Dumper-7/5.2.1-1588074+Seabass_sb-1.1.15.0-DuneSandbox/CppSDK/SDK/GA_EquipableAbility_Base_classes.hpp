#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_EquipableAbility_Base

#include "Basic.hpp"

#include "DuneSandbox_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_EquipableAbility_Base.GA_EquipableAbility_Base_C
// 0x0048 (0x0580 - 0x0538)
class UGA_EquipableAbility_Base_C : public UDuneEquipableGameplayAbility
{
public:
	double                                        Targeting_MaxRange;                                // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_RadiusAtMaxDistance;                     // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_WeightCloseDistance;                     // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_WeightFarDistance;                       // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_WeightBigAngle;                          // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_WeightSmallAngle;                        // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_Weight_Sticky_Max;                       // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_Weight_Sticky_Duration;                  // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Targeting_Weight_Sticky_Min;                       // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CacheStandardTargetingParams();
	void GetStandardTargetingParams(double* OutRadiusatMaxRange, double* OutCloseWeight, double* OutFarWeight, double* OutSmallAngleWeight, double* OutBigAngleWeight, double* OutStickyWeightMin, double* OutStickyWeightMax, double* OutStickyWeightDuration, double* OutMaxRange);
	void UnableToFindCurveTableEntry(const class FString& CurveName, const class FString& TableName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_EquipableAbility_Base_C">();
	}
	static class UGA_EquipableAbility_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_EquipableAbility_Base_C>();
	}
};
static_assert(alignof(UGA_EquipableAbility_Base_C) == 0x000008, "Wrong alignment on UGA_EquipableAbility_Base_C");
static_assert(sizeof(UGA_EquipableAbility_Base_C) == 0x000580, "Wrong size on UGA_EquipableAbility_Base_C");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_MaxRange) == 0x000538, "Member 'UGA_EquipableAbility_Base_C::Targeting_MaxRange' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_RadiusAtMaxDistance) == 0x000540, "Member 'UGA_EquipableAbility_Base_C::Targeting_RadiusAtMaxDistance' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_WeightCloseDistance) == 0x000548, "Member 'UGA_EquipableAbility_Base_C::Targeting_WeightCloseDistance' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_WeightFarDistance) == 0x000550, "Member 'UGA_EquipableAbility_Base_C::Targeting_WeightFarDistance' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_WeightBigAngle) == 0x000558, "Member 'UGA_EquipableAbility_Base_C::Targeting_WeightBigAngle' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_WeightSmallAngle) == 0x000560, "Member 'UGA_EquipableAbility_Base_C::Targeting_WeightSmallAngle' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_Weight_Sticky_Max) == 0x000568, "Member 'UGA_EquipableAbility_Base_C::Targeting_Weight_Sticky_Max' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_Weight_Sticky_Duration) == 0x000570, "Member 'UGA_EquipableAbility_Base_C::Targeting_Weight_Sticky_Duration' has a wrong offset!");
static_assert(offsetof(UGA_EquipableAbility_Base_C, Targeting_Weight_Sticky_Min) == 0x000578, "Member 'UGA_EquipableAbility_Base_C::Targeting_Weight_Sticky_Min' has a wrong offset!");

}

