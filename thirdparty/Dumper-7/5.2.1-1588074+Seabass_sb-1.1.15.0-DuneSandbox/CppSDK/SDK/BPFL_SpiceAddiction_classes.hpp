#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_SpiceAddiction

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_SpiceAddiction.BPFL_SpiceAddiction_C
// 0x0000 (0x0030 - 0x0030)
class UBPFL_SpiceAddiction_C final : public UBlueprintFunctionLibrary
{
public:
	static void Apply_Camera_Modifiers_to_Local_Player(TArray<class UClass*>& Camera_Modifiers, class UObject* __WorldContext);
	static void Apply_Gameplay_Effects_to_Actor(class AActor* Actor, TArray<class UClass*>& Gameplay_Effects, class UObject* __WorldContext);
	static void Get_Actor_Spice_State(class AActor* Actor, class UClass* Settings, class UObject* __WorldContext, ESpiceState* Spice_State);
	static void Get_Spice_Vision_Data(ESpiceState SpiceState, class UClass* Settings, class UObject* __WorldContext, bool* EntryFound, struct FSpiceVisionData* SpiceVisionData);
	static void Handle_Spice_Addiction_Status_Change_On_Actor(class AActor* Actor, bool Is_Spice_Addiction_Enabled, bool Is_Addicted, class UClass* Spice_Addiction_Settings, class UObject* __WorldContext);
	static void Handle_Spice_Visions_Enabled_Changed(class AActor* Actor, const struct FSpiceAddictionComponent& SpiceAddictionComponent, TArray<class UClass*>& Gameplay_Effects, class UObject* __WorldContext);
	static void Remove_Camera_Modifiers_from_Local_Player(TArray<class UClass*>& Camera_Modifiers, class UObject* __WorldContext);
	static void Remove_Gameplay_Effects_from_Actor(class AActor* Actor, TArray<class UClass*>& Gameplay_Effects, class UObject* __WorldContext);
	static void Try_Log_Error(const class FString& Error_Message, bool& Has_Shown_Error, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_SpiceAddiction_C">();
	}
	static class UBPFL_SpiceAddiction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_SpiceAddiction_C>();
	}
};
static_assert(alignof(UBPFL_SpiceAddiction_C) == 0x000008, "Wrong alignment on UBPFL_SpiceAddiction_C");
static_assert(sizeof(UBPFL_SpiceAddiction_C) == 0x000030, "Wrong size on UBPFL_SpiceAddiction_C");

}

