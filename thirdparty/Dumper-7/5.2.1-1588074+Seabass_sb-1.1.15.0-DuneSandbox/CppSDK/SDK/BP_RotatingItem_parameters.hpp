#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RotatingItem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_RotatingItem.BP_RotatingItem_C.ExecuteUbergraph_BP_RotatingItem
// 0x0080 (0x0080 - 0x0000)
struct BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem) == 0x000008, "Wrong alignment on BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem");
static_assert(sizeof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem) == 0x000080, "Wrong size on BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, EntryPoint) == 0x000000, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000060, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000078, "Member 'BP_RotatingItem_C_ExecuteUbergraph_BP_RotatingItem::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_RotatingItem.BP_RotatingItem_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_RotatingItem_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RotatingItem_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_RotatingItem_C_ReceiveTick");
static_assert(sizeof(BP_RotatingItem_C_ReceiveTick) == 0x000004, "Wrong size on BP_RotatingItem_C_ReceiveTick");
static_assert(offsetof(BP_RotatingItem_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_RotatingItem_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

