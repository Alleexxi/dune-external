#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Decal_Env_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Decal_Env_Base.BP_Decal_Env_Base_C
// 0x0078 (0x03D0 - 0x0358)
class ABP_Decal_Env_Base_C : public ADecalActor
{
public:
	class UMaterialInstance*                      Decal_Material_Source;                             // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Decal_Tint;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Decal_Colorshift_Target_Color;                     // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Decal_Emissive;                                    // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Saturation;                                  // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Basecolor_Opacity;                           // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Normal_Strength;                             // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Normal_Opacity;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remove_on_Highlighted_Objects;                     // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Roughness_Max_Clamp;                               // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Roughness_Min_Clamp;                               // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Attributes_Opacity;                          // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void MaterialParametersSet();
	void CheckDecalMaterialState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Decal_Env_Base_C">();
	}
	static class ABP_Decal_Env_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Decal_Env_Base_C>();
	}
};
static_assert(alignof(ABP_Decal_Env_Base_C) == 0x000008, "Wrong alignment on ABP_Decal_Env_Base_C");
static_assert(sizeof(ABP_Decal_Env_Base_C) == 0x0003D0, "Wrong size on ABP_Decal_Env_Base_C");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Material_Source) == 0x000358, "Member 'ABP_Decal_Env_Base_C::Decal_Material_Source' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Tint) == 0x000360, "Member 'ABP_Decal_Env_Base_C::Decal_Tint' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Colorshift_Target_Color) == 0x000370, "Member 'ABP_Decal_Env_Base_C::Decal_Colorshift_Target_Color' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Emissive) == 0x000380, "Member 'ABP_Decal_Env_Base_C::Decal_Emissive' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Saturation) == 0x000390, "Member 'ABP_Decal_Env_Base_C::Decal_Saturation' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Basecolor_Opacity) == 0x000398, "Member 'ABP_Decal_Env_Base_C::Decal_Basecolor_Opacity' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Normal_Strength) == 0x0003A0, "Member 'ABP_Decal_Env_Base_C::Decal_Normal_Strength' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Normal_Opacity) == 0x0003A8, "Member 'ABP_Decal_Env_Base_C::Decal_Normal_Opacity' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Remove_on_Highlighted_Objects) == 0x0003B0, "Member 'ABP_Decal_Env_Base_C::Remove_on_Highlighted_Objects' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Roughness_Max_Clamp) == 0x0003B8, "Member 'ABP_Decal_Env_Base_C::Roughness_Max_Clamp' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Roughness_Min_Clamp) == 0x0003C0, "Member 'ABP_Decal_Env_Base_C::Roughness_Min_Clamp' has a wrong offset!");
static_assert(offsetof(ABP_Decal_Env_Base_C, Decal_Attributes_Opacity) == 0x0003C8, "Member 'ABP_Decal_Env_Base_C::Decal_Attributes_Opacity' has a wrong offset!");

}

