#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CollisionVolume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EPhysicsMaterials_structs.hpp"
#include "ECollisionProfiles_structs.hpp"
#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_CollisionVolume.BP_CollisionVolume_C.UserConstructionScript
// 0x06E0 (0x06E0 - 0x0000)
struct BP_CollisionVolume_C_UserConstructionScript final
{
public:
	bool                                          NegativeScale;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZoneShape                                    Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZoneShape                                    Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_3;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_4;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EZoneShape                                    Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0148(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0248(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_2;            // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinElement_ReturnValue;                // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x03E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0404(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0xC];                                      // 0x0414(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0420(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_1;                // 0x0450(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_2;                           // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_2;                           // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_2;                           // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_2;                           // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_5;                // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_2;                // 0x04A0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_3;                           // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_3;                           // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_3;                           // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_3;                           // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_3;                // 0x04D0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0528(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_612[0x6];                                      // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_2;                           // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A[0x6];                                      // 0x062A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast;               // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast;               // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast;               // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast;               // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast_1;             // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast_1;             // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast_1;             // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast_1;             // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast_2;             // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast_2;             // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast_2;             // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast_2;             // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast_3;             // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast_3;             // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast_3;             // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast_3;             // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Cylinder_ImplicitCast;               // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Sphere_ImplicitCast;                 // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionVolume_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CollisionVolume_C_UserConstructionScript");
static_assert(sizeof(BP_CollisionVolume_C_UserConstructionScript) == 0x0006E0, "Wrong size on BP_CollisionVolume_C_UserConstructionScript");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, NegativeScale) == 0x000000, "Member 'BP_CollisionVolume_C_UserConstructionScript::NegativeScale' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable) == 0x000008, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable_1) == 0x000010, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_byte_Variable) == 0x000018, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable_2) == 0x000020, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable_3) == 0x000028, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable_4) == 0x000030, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable_5) == 0x000038, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_real_Variable_6) == 0x000040, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_byte_Variable_1) == 0x000048, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_object_Variable) == 0x000050, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_object_Variable_1) == 0x000058, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_object_Variable_2) == 0x000060, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_object_Variable_3) == 0x000068, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_object_Variable_4) == 0x000070, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, Temp_byte_Variable_2) == 0x000078, "Member 'BP_CollisionVolume_C_UserConstructionScript::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue) == 0x000080, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000098, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_FMax_ReturnValue) == 0x0000C0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_FClamp_ReturnValue) == 0x0000C8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SelectColor_ReturnValue) == 0x0000E0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_FMax_ReturnValue_1) == 0x000100, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000108, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000128, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000148, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000230, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000248, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000330, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue_1) == 0x000348, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000360, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000368, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000370, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_FMin_ReturnValue) == 0x000378, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_FMin_ReturnValue_1) == 0x000380, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SelectColor_ReturnValue_1) == 0x000388, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000398, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0003A0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0003A8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue_2) == 0x0003C0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_GetMinElement_ReturnValue) == 0x0003D8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SelectColor_ReturnValue_2) == 0x0003E4, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x0003F4, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x0003F8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x0003FC, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x000400, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SelectColor_ReturnValue_3) == 0x000404, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_ReturnValue) == 0x000420, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_R_1) == 0x000440, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_G_1) == 0x000444, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_B_1) == 0x000448, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_A_1) == 0x00044C, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_ReturnValue_1) == 0x000450, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SelectColor_ReturnValue_4) == 0x000470, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_R_2) == 0x000480, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_R_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_G_2) == 0x000484, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_G_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_B_2) == 0x000488, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_B_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_A_2) == 0x00048C, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_A_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SelectColor_ReturnValue_5) == 0x000490, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SelectColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_ReturnValue_2) == 0x0004A0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_R_3) == 0x0004C0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_R_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_G_3) == 0x0004C4, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_G_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_B_3) == 0x0004C8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_B_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakColor_A_3) == 0x0004CC, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakColor_A_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_ReturnValue_3) == 0x0004D0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x0004F0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x0004F8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x000500, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, K2Node_Select_Default) == 0x000508, "Member 'BP_CollisionVolume_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x000510, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000528, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000610, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000611, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000618, "Member 'BP_CollisionVolume_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, K2Node_Select_Default_2) == 0x000620, "Member 'BP_CollisionVolume_C_UserConstructionScript::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000628, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000629, "Member 'BP_CollisionVolume_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000630, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000638, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000640, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_X_ImplicitCast) == 0x000648, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Y_ImplicitCast) == 0x000650, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Z_ImplicitCast) == 0x000658, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_W_ImplicitCast) == 0x000660, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_W_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_X_ImplicitCast_1) == 0x000668, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Y_ImplicitCast_1) == 0x000670, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Z_ImplicitCast_1) == 0x000678, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Z_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_W_ImplicitCast_1) == 0x000680, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_W_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_X_ImplicitCast_2) == 0x000688, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_X_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Y_ImplicitCast_2) == 0x000690, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Y_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Z_ImplicitCast_2) == 0x000698, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Z_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_W_ImplicitCast_2) == 0x0006A0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_W_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_X_ImplicitCast_3) == 0x0006A8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_X_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Y_ImplicitCast_3) == 0x0006B0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Y_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_Z_ImplicitCast_3) == 0x0006B8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_Z_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_MakeVector4_W_ImplicitCast_3) == 0x0006C0, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_MakeVector4_W_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, K2Node_Select_Cylinder_ImplicitCast) == 0x0006C8, "Member 'BP_CollisionVolume_C_UserConstructionScript::K2Node_Select_Cylinder_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, K2Node_Select_Sphere_ImplicitCast) == 0x0006D0, "Member 'BP_CollisionVolume_C_UserConstructionScript::K2Node_Select_Sphere_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_UserConstructionScript, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x0006D8, "Member 'BP_CollisionVolume_C_UserConstructionScript::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");

// Function BP_CollisionVolume.BP_CollisionVolume_C.Set Physical Material
// 0x0098 (0x0098 - 0x0000)
struct BP_CollisionVolume_C_Set_Physical_Material final
{
public:
	EPhysicsMaterials                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionVolume_C_Set_Physical_Material) == 0x000008, "Wrong alignment on BP_CollisionVolume_C_Set_Physical_Material");
static_assert(sizeof(BP_CollisionVolume_C_Set_Physical_Material) == 0x000098, "Wrong size on BP_CollisionVolume_C_Set_Physical_Material");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_byte_Variable) == 0x000000, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable) == 0x000008, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_1) == 0x000010, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_2) == 0x000018, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_3) == 0x000020, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_4) == 0x000028, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_5) == 0x000030, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_6) == 0x000038, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_7) == 0x000040, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_8) == 0x000048, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_9) == 0x000050, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_10) == 0x000058, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_11) == 0x000060, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_12) == 0x000068, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_13) == 0x000070, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_14) == 0x000078, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_15) == 0x000080, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, Temp_object_Variable_16) == 0x000088, "Member 'BP_CollisionVolume_C_Set_Physical_Material::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Physical_Material, K2Node_Select_Default) == 0x000090, "Member 'BP_CollisionVolume_C_Set_Physical_Material::K2Node_Select_Default' has a wrong offset!");

// Function BP_CollisionVolume.BP_CollisionVolume_C.Set Collision Profile 
// 0x0040 (0x0040 - 0x0000)
struct BP_CollisionVolume_C_Set_Collision_Profile_ final
{
public:
	ECollisionProfiles                            Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCollisionProfileName                  Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor)
	struct FCollisionProfileName                  Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor)
	struct FCollisionProfileName                  Temp_struct_Variable_2;                            // 0x0014(0x0008)(NoDestructor)
	struct FCollisionProfileName                  Temp_struct_Variable_3;                            // 0x001C(0x0008)(NoDestructor)
	struct FCollisionProfileName                  Temp_struct_Variable_4;                            // 0x0024(0x0008)(NoDestructor)
	struct FCollisionProfileName                  Temp_struct_Variable_5;                            // 0x002C(0x0008)(NoDestructor)
	struct FCollisionProfileName                  K2Node_Select_Default;                             // 0x0034(0x0008)(NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionVolume_C_Set_Collision_Profile_) == 0x000004, "Wrong alignment on BP_CollisionVolume_C_Set_Collision_Profile_");
static_assert(sizeof(BP_CollisionVolume_C_Set_Collision_Profile_) == 0x000040, "Wrong size on BP_CollisionVolume_C_Set_Collision_Profile_");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_byte_Variable) == 0x000000, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_struct_Variable) == 0x000004, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_struct_Variable_1) == 0x00000C, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_struct_Variable_2) == 0x000014, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_struct_Variable_3) == 0x00001C, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_struct_Variable_4) == 0x000024, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, Temp_struct_Variable_5) == 0x00002C, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, K2Node_Select_Default) == 0x000034, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_Set_Collision_Profile_, CallFunc_NotEqual_NameName_ReturnValue) == 0x00003C, "Member 'BP_CollisionVolume_C_Set_Collision_Profile_::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_CollisionVolume.BP_CollisionVolume_C.ExecuteUbergraph_BP_CollisionVolume
// 0x0138 (0x0138 - 0x0000)
struct BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	class UPrimitiveComponent*                    Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	EZoneShape                                    Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
};
static_assert(alignof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume) == 0x000008, "Wrong alignment on BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume");
static_assert(sizeof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume) == 0x000138, "Wrong size on BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, EntryPoint) == 0x000000, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, Temp_object_Variable) == 0x000008, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, Temp_object_Variable_1) == 0x000038, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, Temp_byte_Variable) == 0x000090, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, K2Node_Select_Default) == 0x000098, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, CallFunc_GetCollisionProfileName_ReturnValue) == 0x0000A0, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, CallFunc_Conv_NameToText_ReturnValue) == 0x0000A8, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, K2Node_MakeArray_Array) == 0x000110, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_CollisionVolume_C_ExecuteUbergraph_BP_CollisionVolume::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CollisionVolume.BP_CollisionVolume_C.IsClimbable
// 0x0010 (0x0010 - 0x0000)
struct BP_CollisionVolume_C_IsClimbable final
{
public:
	const class AActor*                           InActor;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionVolume_C_IsClimbable) == 0x000008, "Wrong alignment on BP_CollisionVolume_C_IsClimbable");
static_assert(sizeof(BP_CollisionVolume_C_IsClimbable) == 0x000010, "Wrong size on BP_CollisionVolume_C_IsClimbable");
static_assert(offsetof(BP_CollisionVolume_C_IsClimbable, InActor) == 0x000000, "Member 'BP_CollisionVolume_C_IsClimbable::InActor' has a wrong offset!");
static_assert(offsetof(BP_CollisionVolume_C_IsClimbable, ReturnValue) == 0x000008, "Member 'BP_CollisionVolume_C_IsClimbable::ReturnValue' has a wrong offset!");

}

