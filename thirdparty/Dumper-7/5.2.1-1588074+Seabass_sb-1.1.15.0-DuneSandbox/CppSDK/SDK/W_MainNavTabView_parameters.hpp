#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MainNavTabView

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_MainNavTabView.W_MainNavTabView_C.ExecuteUbergraph_W_MainNavTabView
// 0x0008 (0x0008 - 0x0000)
struct W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsTabEnabled;                        // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView) == 0x000004, "Wrong alignment on W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView");
static_assert(sizeof(W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView) == 0x000008, "Wrong size on W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView");
static_assert(offsetof(W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView, EntryPoint) == 0x000000, "Member 'W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView, K2Node_Event_bIsTabEnabled) == 0x000004, "Member 'W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView::K2Node_Event_bIsTabEnabled' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_MainNavTabView_C_ExecuteUbergraph_W_MainNavTabView::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_MainNavTabView.W_MainNavTabView_C.OnTabEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct W_MainNavTabView_C_OnTabEnabledChanged final
{
public:
	bool                                          bIsTabEnabled;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainNavTabView_C_OnTabEnabledChanged) == 0x000001, "Wrong alignment on W_MainNavTabView_C_OnTabEnabledChanged");
static_assert(sizeof(W_MainNavTabView_C_OnTabEnabledChanged) == 0x000001, "Wrong size on W_MainNavTabView_C_OnTabEnabledChanged");
static_assert(offsetof(W_MainNavTabView_C_OnTabEnabledChanged, bIsTabEnabled) == 0x000000, "Member 'W_MainNavTabView_C_OnTabEnabledChanged::bIsTabEnabled' has a wrong offset!");

// Function W_MainNavTabView.W_MainNavTabView_C.Set Disabled
// 0x0018 (0x0018 - 0x0000)
struct W_MainNavTabView_C_Set_Disabled final
{
public:
	bool                                          IsDisabled_;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_IndicatorNew_C*                      K2Node_DynamicCast_AsW_Indicator_New;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainNavTabView_C_Set_Disabled) == 0x000008, "Wrong alignment on W_MainNavTabView_C_Set_Disabled");
static_assert(sizeof(W_MainNavTabView_C_Set_Disabled) == 0x000018, "Wrong size on W_MainNavTabView_C_Set_Disabled");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, IsDisabled_) == 0x000000, "Member 'W_MainNavTabView_C_Set_Disabled::IsDisabled_' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, Temp_bool_Variable) == 0x000001, "Member 'W_MainNavTabView_C_Set_Disabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, Temp_byte_Variable) == 0x000002, "Member 'W_MainNavTabView_C_Set_Disabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, Temp_byte_Variable_1) == 0x000003, "Member 'W_MainNavTabView_C_Set_Disabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, K2Node_Select_Default) == 0x000004, "Member 'W_MainNavTabView_C_Set_Disabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, K2Node_DynamicCast_AsW_Indicator_New) == 0x000008, "Member 'W_MainNavTabView_C_Set_Disabled::K2Node_DynamicCast_AsW_Indicator_New' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_Set_Disabled, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_MainNavTabView_C_Set_Disabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_MainNavTabView.W_MainNavTabView_C.SetSize
// 0x0028 (0x0028 - 0x0000)
struct W_MainNavTabView_C_SetSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainNavTabView_C_SetSize) == 0x000008, "Wrong alignment on W_MainNavTabView_C_SetSize");
static_assert(sizeof(W_MainNavTabView_C_SetSize) == 0x000028, "Wrong size on W_MainNavTabView_C_SetSize");
static_assert(offsetof(W_MainNavTabView_C_SetSize, Size) == 0x000000, "Member 'W_MainNavTabView_C_SetSize::Size' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_SetSize, CallFunc_BreakVector2D_X) == 0x000010, "Member 'W_MainNavTabView_C_SetSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_SetSize, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'W_MainNavTabView_C_SetSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_SetSize, CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast) == 0x000020, "Member 'W_MainNavTabView_C_SetSize::CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MainNavTabView_C_SetSize, CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast) == 0x000024, "Member 'W_MainNavTabView_C_SetSize::CallFunc_SetMinDesiredHeight_InMinDesiredHeight_ImplicitCast' has a wrong offset!");

}

