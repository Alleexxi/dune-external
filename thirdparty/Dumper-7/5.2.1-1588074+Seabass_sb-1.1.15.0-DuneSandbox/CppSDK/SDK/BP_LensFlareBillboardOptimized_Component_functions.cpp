#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LensFlareBillboardOptimized_Component

#include "Basic.hpp"

#include "BP_LensFlareBillboardOptimized_Component_classes.hpp"
#include "BP_LensFlareBillboardOptimized_Component_parameters.hpp"


namespace SDK
{

// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.ExecuteUbergraph_BP_LensFlareBillboardOptimized_Component
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::ExecuteUbergraph_BP_LensFlareBillboardOptimized_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "ExecuteUbergraph_BP_LensFlareBillboardOptimized_Component");

	Params::BP_LensFlareBillboardOptimized_Component_C_ExecuteUbergraph_BP_LensFlareBillboardOptimized_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Disable FlareBoost Visualizator
// (BlueprintCallable, BlueprintEvent)

void UBP_LensFlareBillboardOptimized_Component_C::Disable_FlareBoost_Visualizator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Disable FlareBoost Visualizator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Edges visualizer
// (BlueprintCallable, BlueprintEvent)

void UBP_LensFlareBillboardOptimized_Component_C::Edges_visualizer_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Edges visualizer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.SetOldParamsforCompatibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Flare_Tint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Occlusion                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::SetOldParamsforCompatibility(const struct FLinearColor& Flare_Tint, double Occlusion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "SetOldParamsforCompatibility");

	Params::BP_LensFlareBillboardOptimized_Component_C_SetOldParamsforCompatibility Parms{};

	Parms.Flare_Tint = std::move(Flare_Tint);
	Parms.Occlusion = Occlusion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Set Lens Flare Material Standard Parameters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Flare_Texture                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Intensity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Size                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Desaturation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Rotation_Multiplier                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Flare_Tint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FlareDiffuse_Intensity                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FlareDiffuse_Radius                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              FlareDiffuse_Color                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Contribution_to_Flare_Opacity                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LightShafts_Intensity                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LightShafts_DrawDistance                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LightShafts_Tint                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::Set_Lens_Flare_Material_Standard_Parameters(class UTexture2D* Flare_Texture, double Flare_Intensity, double Flare_Size, double Flare_Desaturation, double Flare_Rotation_Multiplier, const struct FLinearColor& Flare_Tint, double FlareDiffuse_Intensity, double FlareDiffuse_Radius, const struct FLinearColor& FlareDiffuse_Color, double Contribution_to_Flare_Opacity, double LightShafts_Intensity, double LightShafts_DrawDistance, const struct FLinearColor& LightShafts_Tint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Set Lens Flare Material Standard Parameters");

	Params::BP_LensFlareBillboardOptimized_Component_C_Set_Lens_Flare_Material_Standard_Parameters Parms{};

	Parms.Flare_Texture = Flare_Texture;
	Parms.Flare_Intensity = Flare_Intensity;
	Parms.Flare_Size = Flare_Size;
	Parms.Flare_Desaturation = Flare_Desaturation;
	Parms.Flare_Rotation_Multiplier = Flare_Rotation_Multiplier;
	Parms.Flare_Tint = std::move(Flare_Tint);
	Parms.FlareDiffuse_Intensity = FlareDiffuse_Intensity;
	Parms.FlareDiffuse_Radius = FlareDiffuse_Radius;
	Parms.FlareDiffuse_Color = std::move(FlareDiffuse_Color);
	Parms.Contribution_to_Flare_Opacity = Contribution_to_Flare_Opacity;
	Parms.LightShafts_Intensity = LightShafts_Intensity;
	Parms.LightShafts_DrawDistance = LightShafts_DrawDistance;
	Parms.LightShafts_Tint = std::move(LightShafts_Tint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Set Lens Flare Material Parameters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Positioning                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Occlusion                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Strength_Day                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Strength_Night                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Fadeout_Offset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Fadeout_Length                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MeshProximityFadeDistance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Boost___Screen_Center_Extent_0                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Boost___Screen_Edge_Extent                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Boost___Screen_Extent_Multiplier_at_Distance_0   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Boost___Screen_Center_Multiplier_0               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Boost___Screen_Edges_Multiplier_0                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flare_Boost___Distance_for_Full_Effect_0               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::Set_Lens_Flare_Material_Parameters(double Positioning, double Occlusion, double Flare_Strength_Day, double Flare_Strength_Night, double Fadeout_Offset, double Fadeout_Length, double MeshProximityFadeDistance, double Flare_Boost___Screen_Center_Extent_0, double Flare_Boost___Screen_Edge_Extent, double Flare_Boost___Screen_Extent_Multiplier_at_Distance_0, double Flare_Boost___Screen_Center_Multiplier_0, double Flare_Boost___Screen_Edges_Multiplier_0, double Flare_Boost___Distance_for_Full_Effect_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Set Lens Flare Material Parameters");

	Params::BP_LensFlareBillboardOptimized_Component_C_Set_Lens_Flare_Material_Parameters Parms{};

	Parms.Positioning = Positioning;
	Parms.Occlusion = Occlusion;
	Parms.Flare_Strength_Day = Flare_Strength_Day;
	Parms.Flare_Strength_Night = Flare_Strength_Night;
	Parms.Fadeout_Offset = Fadeout_Offset;
	Parms.Fadeout_Length = Fadeout_Length;
	Parms.MeshProximityFadeDistance = MeshProximityFadeDistance;
	Parms.Flare_Boost___Screen_Center_Extent_0 = Flare_Boost___Screen_Center_Extent_0;
	Parms.Flare_Boost___Screen_Edge_Extent = Flare_Boost___Screen_Edge_Extent;
	Parms.Flare_Boost___Screen_Extent_Multiplier_at_Distance_0 = Flare_Boost___Screen_Extent_Multiplier_at_Distance_0;
	Parms.Flare_Boost___Screen_Center_Multiplier_0 = Flare_Boost___Screen_Center_Multiplier_0;
	Parms.Flare_Boost___Screen_Edges_Multiplier_0 = Flare_Boost___Screen_Edges_Multiplier_0;
	Parms.Flare_Boost___Distance_for_Full_Effect_0 = Flare_Boost___Distance_for_Full_Effect_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Set Lens Flare Material Advanced Parameters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  LensReflection_Intensity                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LensReflection_Radius                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LensReflection_UVDistortionIntensity                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LensReflection_ChromaOffset                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Ghost_Kernel_Texture                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Ghost_Intensity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Ghost_Size                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Ghost_Offset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Ghost_OffsetStart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Ghost_Tint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Ghost_Colorize_Intensity                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Ghost_Colorize_Gradient_Texture                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::Set_Lens_Flare_Material_Advanced_Parameters(double LensReflection_Intensity, double LensReflection_Radius, double LensReflection_UVDistortionIntensity, double LensReflection_ChromaOffset, class UTexture2D* Ghost_Kernel_Texture, double Ghost_Intensity, double Ghost_Size, double Ghost_Offset, double Ghost_OffsetStart, const struct FLinearColor& Ghost_Tint, double Ghost_Colorize_Intensity, class UTexture2D* Ghost_Colorize_Gradient_Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Set Lens Flare Material Advanced Parameters");

	Params::BP_LensFlareBillboardOptimized_Component_C_Set_Lens_Flare_Material_Advanced_Parameters Parms{};

	Parms.LensReflection_Intensity = LensReflection_Intensity;
	Parms.LensReflection_Radius = LensReflection_Radius;
	Parms.LensReflection_UVDistortionIntensity = LensReflection_UVDistortionIntensity;
	Parms.LensReflection_ChromaOffset = LensReflection_ChromaOffset;
	Parms.Ghost_Kernel_Texture = Ghost_Kernel_Texture;
	Parms.Ghost_Intensity = Ghost_Intensity;
	Parms.Ghost_Size = Ghost_Size;
	Parms.Ghost_Offset = Ghost_Offset;
	Parms.Ghost_OffsetStart = Ghost_OffsetStart;
	Parms.Ghost_Tint = std::move(Ghost_Tint);
	Parms.Ghost_Colorize_Intensity = Ghost_Colorize_Intensity;
	Parms.Ghost_Colorize_Gradient_Texture = Ghost_Colorize_Gradient_Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Set Lens Flare
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       DataTable                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  LensFlare_Billboard_Size_X                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LensFlare_Billboard_Size_Y                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::Set_Lens_Flare(const struct FDataTableRowHandle& DataTable, double LensFlare_Billboard_Size_X, double LensFlare_Billboard_Size_Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Set Lens Flare");

	Params::BP_LensFlareBillboardOptimized_Component_C_Set_Lens_Flare Parms{};

	Parms.DataTable = std::move(DataTable);
	Parms.LensFlare_Billboard_Size_X = LensFlare_Billboard_Size_X;
	Parms.LensFlare_Billboard_Size_Y = LensFlare_Billboard_Size_Y;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LensFlareBillboardOptimized_Component.BP_LensFlareBillboardOptimized_Component_C.Flicker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Intensity_Override_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LensFlareBillboardOptimized_Component_C::Flicker(double Intensity_Override_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LensFlareBillboardOptimized_Component_C", "Flicker");

	Params::BP_LensFlareBillboardOptimized_Component_C_Flicker Parms{};

	Parms.Intensity_Override_0 = Intensity_Override_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

