#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Crosshair_Cutterray

#include "Basic.hpp"

#include "W_Crosshair_Cutterray_classes.hpp"
#include "W_Crosshair_Cutterray_parameters.hpp"


namespace SDK
{

// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.UpdateTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_Cutterray_C::UpdateTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "UpdateTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.UpdateSpread
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   SpreadRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::UpdateSpread(float SpreadRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "UpdateSpread");

	Params::W_Crosshair_Cutterray_C_UpdateSpread Parms{};

	Parms.SpreadRadius = SpreadRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.UpdateCrosshair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldShowDIamond                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowTargetColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::UpdateCrosshair(bool ShouldShowDIamond, bool ShowTargetColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "UpdateCrosshair");

	Params::W_Crosshair_Cutterray_C_UpdateCrosshair Parms{};

	Parms.ShouldShowDIamond = ShouldShowDIamond;
	Parms.ShowTargetColor = ShowTargetColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.ToggleADS
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInADS                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::ToggleADS(const bool bInADS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "ToggleADS");

	Params::W_Crosshair_Cutterray_C_ToggleADS Parms{};

	Parms.bInADS = bInADS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.RefreshTimers_Event
// (BlueprintCallable, BlueprintEvent)

void UW_Crosshair_Cutterray_C::RefreshTimers_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "RefreshTimers_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.OnWeaponHolsterToggled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bInHolstered                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::OnWeaponHolsterToggled(const bool bInHolstered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "OnWeaponHolsterToggled");

	Params::W_Crosshair_Cutterray_C_OnWeaponHolsterToggled Parms{};

	Parms.bInHolstered = bInHolstered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.OnToggleADS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 InLeavingAnim                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 InStartingAnim                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::OnToggleADS(class UWidgetAnimation* InLeavingAnim, class UWidgetAnimation* InStartingAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "OnToggleADS");

	Params::W_Crosshair_Cutterray_C_OnToggleADS Parms{};

	Parms.InLeavingAnim = InLeavingAnim;
	Parms.InStartingAnim = InStartingAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.GetIsCurrentTargetValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::GetIsCurrentTargetValid(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "GetIsCurrentTargetValid");

	Params::W_Crosshair_Cutterray_C_GetIsCurrentTargetValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.ExitAds
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_Cutterray_C::ExitAds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "ExitAds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.ExecuteUbergraph_W_Crosshair_Cutterray
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::ExecuteUbergraph_W_Crosshair_Cutterray(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "ExecuteUbergraph_W_Crosshair_Cutterray");

	Params::W_Crosshair_Cutterray_C_ExecuteUbergraph_W_Crosshair_Cutterray Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.EnterAds
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Crosshair_Cutterray_C::EnterAds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "EnterAds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Crosshair_Cutterray_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Crosshair_Cutterray_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Crosshair_Cutterray.W_Crosshair_Cutterray_C.BP_OnCurrentAimTargetChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class AActor*                     CurrentAimTarget                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_Crosshair_Cutterray_C::BP_OnCurrentAimTargetChanged(const class AActor* CurrentAimTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Crosshair_Cutterray_C", "BP_OnCurrentAimTargetChanged");

	Params::W_Crosshair_Cutterray_C_BP_OnCurrentAimTargetChanged Parms{};

	Parms.CurrentAimTarget = CurrentAimTarget;

	UObject::ProcessEvent(Func, &Parms);
}

}

