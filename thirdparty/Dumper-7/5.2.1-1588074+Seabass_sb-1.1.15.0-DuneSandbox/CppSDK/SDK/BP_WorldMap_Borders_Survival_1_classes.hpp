#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldMap_Borders_Survival_1

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WorldMap_Borders_Survival_1.BP_WorldMap_Borders_Survival_1_C
// 0x0028 (0x0378 - 0x0350)
class ABP_WorldMap_Borders_Survival_1_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Areas;                                             // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Subregions;                                        // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Regions;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URuntimeVirtualTexture*                 VirtualTexture;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WorldMap_Borders_Survival_1_C">();
	}
	static class ABP_WorldMap_Borders_Survival_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WorldMap_Borders_Survival_1_C>();
	}
};
static_assert(alignof(ABP_WorldMap_Borders_Survival_1_C) == 0x000008, "Wrong alignment on ABP_WorldMap_Borders_Survival_1_C");
static_assert(sizeof(ABP_WorldMap_Borders_Survival_1_C) == 0x000378, "Wrong size on ABP_WorldMap_Borders_Survival_1_C");
static_assert(offsetof(ABP_WorldMap_Borders_Survival_1_C, Areas) == 0x000350, "Member 'ABP_WorldMap_Borders_Survival_1_C::Areas' has a wrong offset!");
static_assert(offsetof(ABP_WorldMap_Borders_Survival_1_C, Subregions) == 0x000358, "Member 'ABP_WorldMap_Borders_Survival_1_C::Subregions' has a wrong offset!");
static_assert(offsetof(ABP_WorldMap_Borders_Survival_1_C, Regions) == 0x000360, "Member 'ABP_WorldMap_Borders_Survival_1_C::Regions' has a wrong offset!");
static_assert(offsetof(ABP_WorldMap_Borders_Survival_1_C, Scene) == 0x000368, "Member 'ABP_WorldMap_Borders_Survival_1_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_WorldMap_Borders_Survival_1_C, VirtualTexture) == 0x000370, "Member 'ABP_WorldMap_Borders_Survival_1_C::VirtualTexture' has a wrong offset!");

}

