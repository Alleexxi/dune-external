#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CombatHumanoidBase

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AB_CombatHumanoidBase.AB_CombatHumanoidBase_C.ExecuteUbergraph_AB_CombatHumanoidBase
// 0x0080 (0x0080 - 0x0000)
struct AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFullbodyEquip_ReturnValue;           // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFullbodyEquip_ReturnValue_1;         // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFullbodyEquip_ReturnValue_2;         // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase) == 0x000008, "Wrong alignment on AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase");
static_assert(sizeof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase) == 0x000080, "Wrong size on AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, EntryPoint) == 0x000000, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_GetIsFullbodyEquip_ReturnValue) == 0x000004, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_GetIsFullbodyEquip_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_GetIsFullbodyEquip_ReturnValue_1) == 0x000005, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_GetIsFullbodyEquip_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00000C, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_BreakVector_X) == 0x000010, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_BreakVector_Y) == 0x000018, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_BreakVector_Z) == 0x000020, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x000028, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_GetIsFullbodyEquip_ReturnValue_2) == 0x000038, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_GetIsFullbodyEquip_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Not_PreBool_ReturnValue_2) == 0x000048, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000049, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x00004C, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_GetCurveValue_ReturnValue_1) == 0x000054, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_BooleanAND_ReturnValue_1) == 0x000059, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000070, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x000078, "Member 'AB_CombatHumanoidBase_C_ExecuteUbergraph_AB_CombatHumanoidBase::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function AB_CombatHumanoidBase.AB_CombatHumanoidBase_C.Combat
// 0x0020 (0x0020 - 0x0000)
struct AB_CombatHumanoidBase_C_Combat final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Combat_0;                                          // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CombatHumanoidBase_C_Combat) == 0x000008, "Wrong alignment on AB_CombatHumanoidBase_C_Combat");
static_assert(sizeof(AB_CombatHumanoidBase_C_Combat) == 0x000020, "Wrong size on AB_CombatHumanoidBase_C_Combat");
static_assert(offsetof(AB_CombatHumanoidBase_C_Combat, InPose) == 0x000000, "Member 'AB_CombatHumanoidBase_C_Combat::InPose' has a wrong offset!");
static_assert(offsetof(AB_CombatHumanoidBase_C_Combat, Combat_0) == 0x000010, "Member 'AB_CombatHumanoidBase_C_Combat::Combat_0' has a wrong offset!");

// Function AB_CombatHumanoidBase.AB_CombatHumanoidBase_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_CombatHumanoidBase_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CombatHumanoidBase_C_AnimGraph) == 0x000008, "Wrong alignment on AB_CombatHumanoidBase_C_AnimGraph");
static_assert(sizeof(AB_CombatHumanoidBase_C_AnimGraph) == 0x000010, "Wrong size on AB_CombatHumanoidBase_C_AnimGraph");
static_assert(offsetof(AB_CombatHumanoidBase_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_CombatHumanoidBase_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

