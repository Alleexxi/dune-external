#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UiMap_Sandstorm

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_UiMap_Sandstorm.BP_UiMap_Sandstorm_C.Activate Sandstorm Proxy
// 0x0004 (0x0004 - 0x0000)
struct BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy final
{
public:
	int32                                         StormLevel;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy) == 0x000004, "Wrong alignment on BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy");
static_assert(sizeof(BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy) == 0x000004, "Wrong size on BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy");
static_assert(offsetof(BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy, StormLevel) == 0x000000, "Member 'BP_UiMap_Sandstorm_C_Activate_Sandstorm_Proxy::StormLevel' has a wrong offset!");

// Function BP_UiMap_Sandstorm.BP_UiMap_Sandstorm_C.ExecuteUbergraph_BP_UiMap_Sandstorm
// 0x0350 (0x0350 - 0x0000)
struct BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_StormLevel;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Transform;                      // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0268(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm) == 0x000010, "Wrong alignment on BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm");
static_assert(sizeof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm) == 0x000350, "Wrong size on BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, EntryPoint) == 0x000000, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, Temp_struct_Variable) == 0x000008, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000038, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, K2Node_CustomEvent_StormLevel) == 0x000050, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::K2Node_CustomEvent_StormLevel' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, K2Node_CustomEvent_Transform) == 0x000060, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::K2Node_CustomEvent_Transform' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_BreakRotator_Roll) == 0x000108, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_BreakRotator_Pitch) == 0x00010C, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_BreakRotator_Yaw) == 0x000110, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_MakeRotator_ReturnValue) == 0x000118, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000130, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, Temp_int_Variable) == 0x000218, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, K2Node_Select_Default) == 0x000220, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000238, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_Divide_VectorVector_ReturnValue) == 0x000250, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000268, "Member 'BP_UiMap_Sandstorm_C_ExecuteUbergraph_BP_UiMap_Sandstorm::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_UiMap_Sandstorm.BP_UiMap_Sandstorm_C.UiMap_Sandstorm_Movement
// 0x0060 (0x0060 - 0x0000)
struct BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement) == 0x000010, "Wrong alignment on BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement");
static_assert(sizeof(BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement) == 0x000060, "Wrong size on BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement");
static_assert(offsetof(BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement, Transform) == 0x000000, "Member 'BP_UiMap_Sandstorm_C_UiMap_Sandstorm_Movement::Transform' has a wrong offset!");

}

