#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_StaticCivilian

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "AB_StaticCivilian_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_StaticCivilian.AB_StaticCivilian_C
// 0x09B0 (0x0D10 - 0x0360)
class UAB_StaticCivilian_C final : public UStaticCivilianAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AB_StaticCivilian::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;            // 0x0368(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03B0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0410(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0470(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x04D0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0530(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0590(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x05D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0640(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0660(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x06C8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0790(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x07D8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0820(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0868(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x08B0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x08F8(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0940(0x00C8)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x0A08(0x0038)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0A40(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0B08(0x00E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0BE8(0x00E0)()
	bool                                          playBreaker;                                       // 0x0CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC9[0x7];                                      // 0x0CC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StartPosition;                                     // 0x0CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          idleAnimation;                                     // 0x0CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          breakerAnimation;                                  // 0x0CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  breakerAnimationsArray;                            // 0x0CE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        breakerChance;                                     // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          dialogueFaceExpression;                            // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ALPHA;                                             // 0x0D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetupNextBreaker();
	void Set_Animations();
	void ResetIdleStartPosition();
	void ResetBreaker();
	void ExecuteUbergraph_AB_StaticCivilian(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_StaticCivilian_AnimGraphNode_TransitionResult_C2ECE89F4A74357560FDDFA1DCADD33F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_StaticCivilian_AnimGraphNode_TransitionResult_A96481444BCB75ED608E0B8CA675E83D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_StaticCivilian_AnimGraphNode_TransitionResult_889C4186485B028FA10048A2E78E81AF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_StaticCivilian_AnimGraphNode_TransitionResult_3DA42FE740C14651BF7FE9978ACAD3FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_StaticCivilian_AnimGraphNode_TransitionResult_28B0E5BE4A0E8F10CC5266B255EEDA10();
	void BlueprintInitializeAnimation();
	void AnimNotify_SetupNextBreaker();
	void AnimNotify_ResetIdleStartPosition();
	void AnimNotify_ResetBreaker();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_StaticCivilian_C">();
	}
	static class UAB_StaticCivilian_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_StaticCivilian_C>();
	}
};
static_assert(alignof(UAB_StaticCivilian_C) == 0x000010, "Wrong alignment on UAB_StaticCivilian_C");
static_assert(sizeof(UAB_StaticCivilian_C) == 0x000D10, "Wrong size on UAB_StaticCivilian_C");
static_assert(offsetof(UAB_StaticCivilian_C, UberGraphFrame) == 0x000360, "Member 'UAB_StaticCivilian_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, __AnimBlueprintMutables) == 0x000368, "Member 'UAB_StaticCivilian_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UAB_StaticCivilian_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UAB_StaticCivilian_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_StaticCivilian_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_TransitionResult_4) == 0x0003B0, "Member 'UAB_StaticCivilian_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_TransitionResult_3) == 0x000410, "Member 'UAB_StaticCivilian_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_TransitionResult_2) == 0x000470, "Member 'UAB_StaticCivilian_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_TransitionResult_1) == 0x0004D0, "Member 'UAB_StaticCivilian_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_TransitionResult) == 0x000530, "Member 'UAB_StaticCivilian_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_SequencePlayer_4) == 0x000590, "Member 'UAB_StaticCivilian_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_StateResult_2) == 0x0005D8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_SequencePlayer_3) == 0x0005F8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_StateResult_1) == 0x000640, "Member 'UAB_StaticCivilian_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_SequencePlayer_2) == 0x000660, "Member 'UAB_StaticCivilian_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_StateResult) == 0x0006A8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_StateMachine) == 0x0006C8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_SequencePlayer_1) == 0x000790, "Member 'UAB_StaticCivilian_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_Slot_2) == 0x0007D8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_Slot_1) == 0x000820, "Member 'UAB_StaticCivilian_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_SequencePlayer) == 0x000868, "Member 'UAB_StaticCivilian_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_Slot) == 0x0008B0, "Member 'UAB_StaticCivilian_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_BlendListByBool) == 0x0008F8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_TwoWayBlend) == 0x000940, "Member 'UAB_StaticCivilian_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_MakeDynamicAdditive) == 0x000A08, "Member 'UAB_StaticCivilian_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_ApplyAdditive) == 0x000A40, "Member 'UAB_StaticCivilian_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000B08, "Member 'UAB_StaticCivilian_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, AnimGraphNode_LayeredBoneBlend) == 0x000BE8, "Member 'UAB_StaticCivilian_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, playBreaker) == 0x000CC8, "Member 'UAB_StaticCivilian_C::playBreaker' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, StartPosition) == 0x000CD0, "Member 'UAB_StaticCivilian_C::StartPosition' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, idleAnimation) == 0x000CD8, "Member 'UAB_StaticCivilian_C::idleAnimation' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, breakerAnimation) == 0x000CE0, "Member 'UAB_StaticCivilian_C::breakerAnimation' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, breakerAnimationsArray) == 0x000CE8, "Member 'UAB_StaticCivilian_C::breakerAnimationsArray' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, breakerChance) == 0x000CF8, "Member 'UAB_StaticCivilian_C::breakerChance' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, dialogueFaceExpression) == 0x000D00, "Member 'UAB_StaticCivilian_C::dialogueFaceExpression' has a wrong offset!");
static_assert(offsetof(UAB_StaticCivilian_C, ALPHA) == 0x000D08, "Member 'UAB_StaticCivilian_C::ALPHA' has a wrong offset!");

}

