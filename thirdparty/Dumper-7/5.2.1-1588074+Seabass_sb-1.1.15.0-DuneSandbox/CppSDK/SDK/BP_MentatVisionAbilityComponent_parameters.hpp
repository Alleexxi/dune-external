#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MentatVisionAbilityComponent

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_MentatVisionAbilityComponent.BP_MentatVisionAbilityComponent_C.ExecuteUbergraph_BP_MentatVisionAbilityComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Target_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target_2;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCalculateAppearanceDelay;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bConsiderPingForAppearanceDelay;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_2;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMentatVisionTarget                    K2Node_Event_Target;                               // 0x0068(0x0028)()
};
static_assert(alignof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent) == 0x000008, "Wrong alignment on BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent");
static_assert(sizeof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent) == 0x000090, "Wrong size on BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, EntryPoint) == 0x000000, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_Event_Target_1) == 0x000010, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_DynamicCast_AsPlayer_Controller) == 0x000018, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_Event_Target_2) == 0x000028, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_Event_bCalculateAppearanceDelay) == 0x000030, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_Event_bCalculateAppearanceDelay' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_Event_bConsiderPingForAppearanceDelay) == 0x000031, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_Event_bConsiderPingForAppearanceDelay' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000038, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000040, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x000048, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_DynamicCast_AsPlayer_Controller_2) == 0x000058, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_DynamicCast_AsPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent, K2Node_Event_Target) == 0x000068, "Member 'BP_MentatVisionAbilityComponent_C_ExecuteUbergraph_BP_MentatVisionAbilityComponent::K2Node_Event_Target' has a wrong offset!");

// Function BP_MentatVisionAbilityComponent.BP_MentatVisionAbilityComponent_C.BP_UpdateWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_MentatVisionAbilityComponent_C_BP_UpdateWidget final
{
public:
	struct FMentatVisionTarget                    Target;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MentatVisionAbilityComponent_C_BP_UpdateWidget) == 0x000008, "Wrong alignment on BP_MentatVisionAbilityComponent_C_BP_UpdateWidget");
static_assert(sizeof(BP_MentatVisionAbilityComponent_C_BP_UpdateWidget) == 0x000028, "Wrong size on BP_MentatVisionAbilityComponent_C_BP_UpdateWidget");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_BP_UpdateWidget, Target) == 0x000000, "Member 'BP_MentatVisionAbilityComponent_C_BP_UpdateWidget::Target' has a wrong offset!");

// Function BP_MentatVisionAbilityComponent.BP_MentatVisionAbilityComponent_C.BP_RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_MentatVisionAbilityComponent_C_BP_RemoveWidget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MentatVisionAbilityComponent_C_BP_RemoveWidget) == 0x000008, "Wrong alignment on BP_MentatVisionAbilityComponent_C_BP_RemoveWidget");
static_assert(sizeof(BP_MentatVisionAbilityComponent_C_BP_RemoveWidget) == 0x000008, "Wrong size on BP_MentatVisionAbilityComponent_C_BP_RemoveWidget");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_BP_RemoveWidget, Target) == 0x000000, "Member 'BP_MentatVisionAbilityComponent_C_BP_RemoveWidget::Target' has a wrong offset!");

// Function BP_MentatVisionAbilityComponent.BP_MentatVisionAbilityComponent_C.BP_CreateWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_MentatVisionAbilityComponent_C_BP_CreateWidget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCalculateAppearanceDelay;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bConsiderPingForAppearanceDelay;                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MentatVisionAbilityComponent_C_BP_CreateWidget) == 0x000008, "Wrong alignment on BP_MentatVisionAbilityComponent_C_BP_CreateWidget");
static_assert(sizeof(BP_MentatVisionAbilityComponent_C_BP_CreateWidget) == 0x000010, "Wrong size on BP_MentatVisionAbilityComponent_C_BP_CreateWidget");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_BP_CreateWidget, Target) == 0x000000, "Member 'BP_MentatVisionAbilityComponent_C_BP_CreateWidget::Target' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_BP_CreateWidget, bCalculateAppearanceDelay) == 0x000008, "Member 'BP_MentatVisionAbilityComponent_C_BP_CreateWidget::bCalculateAppearanceDelay' has a wrong offset!");
static_assert(offsetof(BP_MentatVisionAbilityComponent_C_BP_CreateWidget, bConsiderPingForAppearanceDelay) == 0x000009, "Member 'BP_MentatVisionAbilityComponent_C_BP_CreateWidget::bConsiderPingForAppearanceDelay' has a wrong offset!");

}

