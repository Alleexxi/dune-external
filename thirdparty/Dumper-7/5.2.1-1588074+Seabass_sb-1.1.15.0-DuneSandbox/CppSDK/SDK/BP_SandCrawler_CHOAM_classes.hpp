#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SandCrawler_CHOAM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_HarvesterBase_classes.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SandCrawler_CHOAM.BP_SandCrawler_CHOAM_C
// 0x0050 (0x22A0 - 0x2250)
class ABP_SandCrawler_CHOAM_C final : public ABP_HarvesterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SandCrawler_CHOAM_C;             // 0x2248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ImmediatePhysicsWheelsCollision;                   // 0x2250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ImmediatePhysicsBodyCollision;                     // 0x2258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      ImmediatePhysicsTumblerCollision;                  // 0x2260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDuneVehicleSeatComponent*              PassengerSeat;                                     // 0x2268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachPoint;                                       // 0x2270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SpiceCylinderStatusMID;                            // 0x2278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FString                                 SpiceCylinderStatusComponentName;                  // 0x2280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SpiceCylinderCollectionIndicatorMID;               // 0x2290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        PendingSpiceCylinderStatusVolume;                  // 0x2298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSpiceCylinderStatus(double NewVolume);
	void RetryUpdateSpiceCylinderStatus();
	void ReceiveBeginPlay();
	void OnModuleDetached_Event(EVehicleModuleType ModuleType);
	void OnInventoryVolumeChanged_Event(float NewVolume);
	void ExecuteUbergraph_BP_SandCrawler_CHOAM(int32 EntryPoint);
	void CreateSpiceCylinderStatusMID();

	struct FTransform GetRelativeAttachTransform() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SandCrawler_CHOAM_C">();
	}
	static class ABP_SandCrawler_CHOAM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SandCrawler_CHOAM_C>();
	}
};
static_assert(alignof(ABP_SandCrawler_CHOAM_C) == 0x000010, "Wrong alignment on ABP_SandCrawler_CHOAM_C");
static_assert(sizeof(ABP_SandCrawler_CHOAM_C) == 0x0022A0, "Wrong size on ABP_SandCrawler_CHOAM_C");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, UberGraphFrame_BP_SandCrawler_CHOAM_C) == 0x002248, "Member 'ABP_SandCrawler_CHOAM_C::UberGraphFrame_BP_SandCrawler_CHOAM_C' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, ImmediatePhysicsWheelsCollision) == 0x002250, "Member 'ABP_SandCrawler_CHOAM_C::ImmediatePhysicsWheelsCollision' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, ImmediatePhysicsBodyCollision) == 0x002258, "Member 'ABP_SandCrawler_CHOAM_C::ImmediatePhysicsBodyCollision' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, ImmediatePhysicsTumblerCollision) == 0x002260, "Member 'ABP_SandCrawler_CHOAM_C::ImmediatePhysicsTumblerCollision' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, PassengerSeat) == 0x002268, "Member 'ABP_SandCrawler_CHOAM_C::PassengerSeat' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, AttachPoint) == 0x002270, "Member 'ABP_SandCrawler_CHOAM_C::AttachPoint' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, SpiceCylinderStatusMID) == 0x002278, "Member 'ABP_SandCrawler_CHOAM_C::SpiceCylinderStatusMID' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, SpiceCylinderStatusComponentName) == 0x002280, "Member 'ABP_SandCrawler_CHOAM_C::SpiceCylinderStatusComponentName' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, SpiceCylinderCollectionIndicatorMID) == 0x002290, "Member 'ABP_SandCrawler_CHOAM_C::SpiceCylinderCollectionIndicatorMID' has a wrong offset!");
static_assert(offsetof(ABP_SandCrawler_CHOAM_C, PendingSpiceCylinderStatusVolume) == 0x002298, "Member 'ABP_SandCrawler_CHOAM_C::PendingSpiceCylinderStatusVolume' has a wrong offset!");

}

