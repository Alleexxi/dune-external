#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FluidNinja

#include "Basic.hpp"


namespace SDK::Params
{

// Function FluidNinja.FluidNinjaBlueprintLibrary.FluidNinjaClearBuffers
// 0x0008 (0x0008 - 0x0000)
struct FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers) == 0x000008, "Wrong alignment on FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers");
static_assert(sizeof(FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers) == 0x000008, "Wrong size on FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers, WorldContextObject) == 0x000000, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaClearBuffers::WorldContextObject' has a wrong offset!");

// Function FluidNinja.FluidNinjaBlueprintLibrary.FluidNinjaClearSimulationAreaRadiusOverride
// 0x0008 (0x0008 - 0x0000)
struct FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride) == 0x000008, "Wrong alignment on FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride");
static_assert(sizeof(FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride) == 0x000008, "Wrong size on FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride, WorldContextObject) == 0x000000, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaClearSimulationAreaRadiusOverride::WorldContextObject' has a wrong offset!");

// Function FluidNinja.FluidNinjaBlueprintLibrary.FluidNinjaOverrideSimulationAreaRadius
// 0x0010 (0x0010 - 0x0000)
struct FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RadiusX;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RadiusY;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius) == 0x000008, "Wrong alignment on FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius");
static_assert(sizeof(FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius) == 0x000010, "Wrong size on FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius, WorldContextObject) == 0x000000, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius, RadiusX) == 0x000008, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius::RadiusX' has a wrong offset!");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius, RadiusY) == 0x00000C, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaOverrideSimulationAreaRadius::RadiusY' has a wrong offset!");

// Function FluidNinja.FluidNinjaBlueprintLibrary.FluidNinjaTrackActor
// 0x0010 (0x0010 - 0x0000)
struct FluidNinjaBlueprintLibrary_FluidNinjaTrackActor final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FluidNinjaBlueprintLibrary_FluidNinjaTrackActor) == 0x000008, "Wrong alignment on FluidNinjaBlueprintLibrary_FluidNinjaTrackActor");
static_assert(sizeof(FluidNinjaBlueprintLibrary_FluidNinjaTrackActor) == 0x000010, "Wrong size on FluidNinjaBlueprintLibrary_FluidNinjaTrackActor");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaTrackActor, WorldContextObject) == 0x000000, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaTrackActor::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FluidNinjaBlueprintLibrary_FluidNinjaTrackActor, Actor) == 0x000008, "Member 'FluidNinjaBlueprintLibrary_FluidNinjaTrackActor::Actor' has a wrong offset!");

// Function FluidNinja.FluidNinjaLandscapeComponent.GetNinjaLiveActor
// 0x0008 (0x0008 - 0x0000)
struct FluidNinjaLandscapeComponent_GetNinjaLiveActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FluidNinjaLandscapeComponent_GetNinjaLiveActor) == 0x000008, "Wrong alignment on FluidNinjaLandscapeComponent_GetNinjaLiveActor");
static_assert(sizeof(FluidNinjaLandscapeComponent_GetNinjaLiveActor) == 0x000008, "Wrong size on FluidNinjaLandscapeComponent_GetNinjaLiveActor");
static_assert(offsetof(FluidNinjaLandscapeComponent_GetNinjaLiveActor, ReturnValue) == 0x000000, "Member 'FluidNinjaLandscapeComponent_GetNinjaLiveActor::ReturnValue' has a wrong offset!");

// Function FluidNinja.FluidNinjaLandscapeComponent.TrackActor
// 0x0008 (0x0008 - 0x0000)
struct FluidNinjaLandscapeComponent_TrackActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FluidNinjaLandscapeComponent_TrackActor) == 0x000008, "Wrong alignment on FluidNinjaLandscapeComponent_TrackActor");
static_assert(sizeof(FluidNinjaLandscapeComponent_TrackActor) == 0x000008, "Wrong size on FluidNinjaLandscapeComponent_TrackActor");
static_assert(offsetof(FluidNinjaLandscapeComponent_TrackActor, Actor) == 0x000000, "Member 'FluidNinjaLandscapeComponent_TrackActor::Actor' has a wrong offset!");

}

