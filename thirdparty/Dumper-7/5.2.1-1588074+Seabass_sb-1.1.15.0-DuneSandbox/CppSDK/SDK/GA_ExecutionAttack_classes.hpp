#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ExecutionAttack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ExecutionAttack.GA_ExecutionAttack_C
// 0x0070 (0x05A0 - 0x0530)
class UGA_ExecutionAttack_C final : public UDuneGameplayAction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ADuneCharacter*                         CachedCharacter;                                   // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MeleePredictionWindowOpen;                         // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeToWaitForDamage;                               // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToWaitForShieldFX;                             // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlockMovementDurationAfterDamage;                  // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ExtraDamageToDeal;                                 // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInstigatorInfo                        InstigatorInfo;                                    // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FPoiseDamageData                       PoiseDamage;                                       // 0x0580(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         Victim;                                            // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlayShielded;                             // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void OnInterrupted_A4C18ACC450F4FEFE86D09B8B6F6D142();
	void OnFinish_7D0951674F6D6E26FE982D8EB3E7D56E();
	void OnFinish_37D1B5404742A94DA9BD2CA846EA01D1();
	void OnFinish_1538D24649ED124ADC6BA0BEA80D3F81();
	void OnCompleted_A4C18ACC450F4FEFE86D09B8B6F6D142();
	void OnCancelled_A4C18ACC450F4FEFE86D09B8B6F6D142();
	void OnBlendOut_A4C18ACC450F4FEFE86D09B8B6F6D142();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void GA_ExecutionAttack_AutoGenFunc(class AActor* HitActor);
	void ExecuteUbergraph_GA_ExecutionAttack(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ExecutionAttack_C">();
	}
	static class UGA_ExecutionAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ExecutionAttack_C>();
	}
};
static_assert(alignof(UGA_ExecutionAttack_C) == 0x000008, "Wrong alignment on UGA_ExecutionAttack_C");
static_assert(sizeof(UGA_ExecutionAttack_C) == 0x0005A0, "Wrong size on UGA_ExecutionAttack_C");
static_assert(offsetof(UGA_ExecutionAttack_C, UberGraphFrame) == 0x000530, "Member 'UGA_ExecutionAttack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, CachedCharacter) == 0x000538, "Member 'UGA_ExecutionAttack_C::CachedCharacter' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, MeleePredictionWindowOpen) == 0x000540, "Member 'UGA_ExecutionAttack_C::MeleePredictionWindowOpen' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, TimeToWaitForDamage) == 0x000548, "Member 'UGA_ExecutionAttack_C::TimeToWaitForDamage' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, TimeToWaitForShieldFX) == 0x000550, "Member 'UGA_ExecutionAttack_C::TimeToWaitForShieldFX' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, BlockMovementDurationAfterDamage) == 0x000558, "Member 'UGA_ExecutionAttack_C::BlockMovementDurationAfterDamage' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, MontageToPlay) == 0x000560, "Member 'UGA_ExecutionAttack_C::MontageToPlay' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, ExtraDamageToDeal) == 0x000568, "Member 'UGA_ExecutionAttack_C::ExtraDamageToDeal' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, InstigatorInfo) == 0x000570, "Member 'UGA_ExecutionAttack_C::InstigatorInfo' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, PoiseDamage) == 0x000580, "Member 'UGA_ExecutionAttack_C::PoiseDamage' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, Victim) == 0x000590, "Member 'UGA_ExecutionAttack_C::Victim' has a wrong offset!");
static_assert(offsetof(UGA_ExecutionAttack_C, MontageToPlayShielded) == 0x000598, "Member 'UGA_ExecutionAttack_C::MontageToPlayShielded' has a wrong offset!");

}

