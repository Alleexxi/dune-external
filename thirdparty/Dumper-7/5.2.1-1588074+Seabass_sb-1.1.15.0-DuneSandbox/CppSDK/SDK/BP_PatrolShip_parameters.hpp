#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PatrolShip

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "MovieScene_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_PatrolShip.BP_PatrolShip_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_PatrolShip_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_PatrolShip_C_UserConstructionScript");
static_assert(sizeof(BP_PatrolShip_C_UserConstructionScript) == 0x000002, "Wrong size on BP_PatrolShip_C_UserConstructionScript");
static_assert(offsetof(BP_PatrolShip_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PatrolShip_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000001, "Member 'BP_PatrolShip_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.UpdateCosmeticLightColors
// 0x0060 (0x0060 - 0x0000)
struct BP_PatrolShip_C_UpdateCosmeticLightColors final
{
public:
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetExpectedIntensityCoefficient_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetExpectedColor_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_UpdateCosmeticLightColors) == 0x000008, "Wrong alignment on BP_PatrolShip_C_UpdateCosmeticLightColors");
static_assert(sizeof(BP_PatrolShip_C_UpdateCosmeticLightColors) == 0x000060, "Wrong size on BP_PatrolShip_C_UpdateCosmeticLightColors");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000000, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_GetExpectedIntensityCoefficient_ReturnValue) == 0x000014, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_GetExpectedIntensityCoefficient_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000018, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_GetExpectedColor_ReturnValue) == 0x000028, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_GetExpectedColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000038, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000048, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_UpdateCosmeticLightColors, CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast) == 0x000058, "Member 'BP_PatrolShip_C_UpdateCosmeticLightColors::CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.Update VFX
// 0x0320 (0x0320 - 0x0000)
struct BP_PatrolShip_C_Update_VFX final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PatrolShip_C_Update_VFX) == 0x000008, "Wrong alignment on BP_PatrolShip_C_Update_VFX");
static_assert(sizeof(BP_PatrolShip_C_Update_VFX) == 0x000320, "Wrong size on BP_PatrolShip_C_Update_VFX");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, Temp_object_Variable) == 0x000008, "Member 'BP_PatrolShip_C_Update_VFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_LineTraceSingle_OutHit) == 0x000060, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_LineTraceSingle_ReturnValue) == 0x000148, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000149, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x00014A, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_Time) == 0x00014C, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_Distance) == 0x000150, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_Location) == 0x000158, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A0, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_BoneName) == 0x0001D8, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_HitItem) == 0x0001E0, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_ElementIndex) == 0x0001E4, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_FaceIndex) == 0x0001E8, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_TraceStart) == 0x0001F0, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000220, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Update_VFX, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000238, "Member 'BP_PatrolShip_C_Update_VFX::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.Trigger Suspensor Field at Location
// 0x0090 (0x0090 - 0x0000)
struct BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LifeSpan;                                          // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SuspensorFieldEmitter_PatrolShipAttack_C* CallFunc_FinishSpawningActor_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location) == 0x000010, "Wrong alignment on BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location");
static_assert(sizeof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location) == 0x000090, "Wrong size on BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location");
static_assert(offsetof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location, Transform) == 0x000000, "Member 'BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location::Transform' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location, Radius) == 0x000060, "Member 'BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location::Radius' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location, LifeSpan) == 0x000068, "Member 'BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location::LifeSpan' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x000080, "Member 'BP_PatrolShip_C_Trigger_Suspensor_Field_at_Location::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.TogglePatrolshipSpline
// 0x0230 (0x0230 - 0x0000)
struct BP_PatrolShip_C_TogglePatrolshipSpline final
{
public:
	double                                        SplineDebugMeshHeight;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SplineMeshIndex;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SplineDebugMeshSectionLength;                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASplineMeshActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_TogglePatrolshipSpline) == 0x000010, "Wrong alignment on BP_PatrolShip_C_TogglePatrolshipSpline");
static_assert(sizeof(BP_PatrolShip_C_TogglePatrolshipSpline) == 0x000230, "Wrong size on BP_PatrolShip_C_TogglePatrolshipSpline");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, SplineDebugMeshHeight) == 0x000000, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::SplineDebugMeshHeight' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, SplineMeshIndex) == 0x000008, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::SplineMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, SplineDebugMeshSectionLength) == 0x000010, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::SplineDebugMeshSectionLength' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, Temp_struct_Variable) == 0x000020, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, Temp_int_Variable) == 0x000080, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetSplineLength_ReturnValue) == 0x000094, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000A0, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_FTrunc_ReturnValue) == 0x000120, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000130, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000138, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_ClampVectorSize_ReturnValue) == 0x000150, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000168, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x000180, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000198, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_ClampVectorSize_ReturnValue_1) == 0x0001B0, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001C8, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_AddComponent_ReturnValue) == 0x0001D0, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_SetStaticMesh_ReturnValue) == 0x0001D8, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_IsValid_ReturnValue_2) == 0x0001D9, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001E0, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E8, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_IsValid_ReturnValue_3) == 0x0001F0, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_MakeVector2D_ReturnValue) == 0x0001F8, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_MakeVector2D_ReturnValue_1) == 0x000208, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000218, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000220, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000224, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000228, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_TogglePatrolshipSpline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x00022C, "Member 'BP_PatrolShip_C_TogglePatrolshipSpline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.SpotlightTrackingFunction
// 0x0288 (0x0288 - 0x0000)
struct BP_PatrolShip_C_SpotlightTrackingFunction final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	double                                        DirectionVectorScale;                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTimeScaledUpByMultiplierAndByTwenty;          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTimeScaledUpByMultiplier;                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              CallFunc_BreakVector3f_InVec_ImplicitCast;         // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_A_ImplicitCast;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_SpotlightTrackingFunction) == 0x000008, "Wrong alignment on BP_PatrolShip_C_SpotlightTrackingFunction");
static_assert(sizeof(BP_PatrolShip_C_SpotlightTrackingFunction) == 0x000288, "Wrong size on BP_PatrolShip_C_SpotlightTrackingFunction");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, TargetLocation) == 0x000000, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, DeltaTime) == 0x000018, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, ReturnValue) == 0x000020, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, DirectionVectorScale) == 0x000038, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::DirectionVectorScale' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, DeltaTimeScaledUpByMultiplierAndByTwenty) == 0x000040, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::DeltaTimeScaledUpByMultiplierAndByTwenty' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, DeltaTimeScaledUpByMultiplier) == 0x000048, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::DeltaTimeScaledUpByMultiplier' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector3f_X) == 0x000050, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector3f_Y) == 0x000054, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector3f_Z) == 0x000058, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000080, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_NegateVector_ReturnValue) == 0x0000B8, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_MakeRotFromZ_ReturnValue) == 0x0000D0, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000100, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Vector_Distance_ReturnValue) == 0x000118, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector_X) == 0x000120, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector_Y) == 0x000128, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector_Z) == 0x000130, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000138, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000140, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_FMax_ReturnValue) == 0x000148, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000150, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000158, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_MakeVector_ReturnValue) == 0x000160, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_FMax_ReturnValue_1) == 0x000178, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000180, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000188, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000190, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_FMin_ReturnValue) == 0x000198, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_MakeVector_ReturnValue_1) == 0x0001A0, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001B8, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_SelectVector_ReturnValue) == 0x0001D0, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Add_VectorVector_ReturnValue) == 0x000200, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000218, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector_X_1) == 0x000230, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector_Y_1) == 0x000238, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector_Z_1) == 0x000240, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_MakeVector_ReturnValue_2) == 0x000248, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_BreakVector3f_InVec_ImplicitCast) == 0x000260, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_BreakVector3f_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_MakeVector_Z_ImplicitCast) == 0x000270, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000278, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_SpotlightTrackingFunction, CallFunc_Percent_FloatFloat_A_ImplicitCast) == 0x000280, "Member 'BP_PatrolShip_C_SpotlightTrackingFunction::CallFunc_Percent_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct BP_PatrolShip_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PatrolShip_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_PatrolShip_C_ReceiveHit");
static_assert(sizeof(BP_PatrolShip_C_ReceiveHit) == 0x000150, "Wrong size on BP_PatrolShip_C_ReceiveHit");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_PatrolShip_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, Other) == 0x000008, "Member 'BP_PatrolShip_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_PatrolShip_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_PatrolShip_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BP_PatrolShip_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BP_PatrolShip_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BP_PatrolShip_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ReceiveHit, Hit) == 0x000068, "Member 'BP_PatrolShip_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.Play Sequence on Ship
// 0x0130 (0x0130 - 0x0000)
struct BP_PatrolShip_C_Play_Sequence_on_Ship final
{
public:
	bool                                          IsArrival;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeStartOffset;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             SequenceBinding;                                   // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x0038(0x0020)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_Select_Default;                             // 0x0078(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_1;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDefaultLevelSequenceInstanceData*      K2Node_DynamicCast_AsDefault_Level_Sequence_Instance_Data; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_Select_Default_1;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_MakeStruct_StartTime_ImplicitCast;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_Play_Sequence_on_Ship) == 0x000010, "Wrong alignment on BP_PatrolShip_C_Play_Sequence_on_Ship");
static_assert(sizeof(BP_PatrolShip_C_Play_Sequence_on_Ship) == 0x000130, "Wrong size on BP_PatrolShip_C_Play_Sequence_on_Ship");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, IsArrival) == 0x000000, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::IsArrival' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, TimeStartOffset) == 0x000008, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::TimeStartOffset' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, SequenceBinding) == 0x000010, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::SequenceBinding' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, Temp_bool_Variable) == 0x000028, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, Temp_object_Variable) == 0x000030, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x000038, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_Select_Default) == 0x000078, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, Temp_object_Variable_1) == 0x000088, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_DynamicCast_AsDefault_Level_Sequence_Instance_Data) == 0x0000F0, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_DynamicCast_AsDefault_Level_Sequence_Instance_Data' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, Temp_bool_Variable_1) == 0x0000F9, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_Select_Default_1) == 0x000100, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000108, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000110, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_Play_Sequence_on_Ship, K2Node_MakeStruct_StartTime_ImplicitCast) == 0x000128, "Member 'BP_PatrolShip_C_Play_Sequence_on_Ship::K2Node_MakeStruct_StartTime_ImplicitCast' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.OnPatrolShipTargetTrackedChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged final
{
public:
	class AActor*                                 CurrentTargetToTrack;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged) == 0x000008, "Wrong alignment on BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged");
static_assert(sizeof(BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged) == 0x000008, "Wrong size on BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged");
static_assert(offsetof(BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged, CurrentTargetToTrack) == 0x000000, "Member 'BP_PatrolShip_C_OnPatrolShipTargetTrackedChanged::CurrentTargetToTrack' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.OnDamaged
// 0x00E8 (0x00E8 - 0x0000)
struct BP_PatrolShip_C_OnDamaged final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PatrolShip_C_OnDamaged) == 0x000008, "Wrong alignment on BP_PatrolShip_C_OnDamaged");
static_assert(sizeof(BP_PatrolShip_C_OnDamaged) == 0x0000E8, "Wrong size on BP_PatrolShip_C_OnDamaged");
static_assert(offsetof(BP_PatrolShip_C_OnDamaged, Hit) == 0x000000, "Member 'BP_PatrolShip_C_OnDamaged::Hit' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.ExecuteUbergraph_BP_PatrolShip
// 0x05B0 (0x05B0 - 0x0000)
struct BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMulticastDamageInfo>           K2Node_ComponentBoundEvent_FrameDamageInfo;        // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMulticastDamageInfo                   CallFunc_Array_Get_Item;                           // 0x0020(0x0230)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_CurrentTargetToTrack;                 // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackEndSeconds_ReturnValue;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackEndSeconds_ReturnValue_1;      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0270(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0280(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0290(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x02AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_Transform;                            // 0x02E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_LifeTime;                             // 0x0340(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_SphereRadius;                         // 0x0344(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0350(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B[0x5];                                      // 0x043B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x04A8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Play_Sequence_on_Ship_TimeStartOffset_ImplicitCast; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Trigger_Suspensor_Field_at_Location_LifeSpan_ImplicitCast; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Trigger_Suspensor_Field_at_Location_Radius_ImplicitCast; // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip) == 0x000010, "Wrong alignment on BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip");
static_assert(sizeof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip) == 0x0005B0, "Wrong size on BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, EntryPoint) == 0x000000, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_ComponentBoundEvent_FrameDamageInfo) == 0x000008, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_ComponentBoundEvent_FrameDamageInfo' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_HasAuthority_ReturnValue) == 0x000250, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue) == 0x000251, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_CurrentTargetToTrack) == 0x000258, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_CurrentTargetToTrack' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsValid_ReturnValue) == 0x000260, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_GetPlaybackEndSeconds_ReturnValue) == 0x000264, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_GetPlaybackEndSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_GetPlaybackEndSeconds_ReturnValue_1) == 0x000268, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_GetPlaybackEndSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_HasAuthority_ReturnValue_1) == 0x00026C, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_CreateDelegate_OutputDelegate) == 0x000270, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_CreateDelegate_OutputDelegate_1) == 0x000280, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000290, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000298, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000299, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, Temp_int_Loop_Counter_Variable) == 0x00029C, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Less_IntInt_ReturnValue) == 0x0002A0, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A1, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002A2, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Add_IntInt_ReturnValue) == 0x0002A4, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_BooleanOR_ReturnValue) == 0x0002A8, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002AC, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0002BC, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x0002BD, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0002C0, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0002C8, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0002D0, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_Transform) == 0x0002E0, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_Transform' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_LifeTime) == 0x000340, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_SphereRadius) == 0x000344, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_HasAuthority_ReturnValue_2) == 0x000348, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_CustomEvent_Hit) == 0x000350, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000438, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000439, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_IsValid_ReturnValue_1) == 0x00043A, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_MyComp) == 0x000440, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_Other) == 0x000448, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_OtherComp) == 0x000450, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_bSelfMoved) == 0x000458, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_HitLocation) == 0x000460, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_HitNormal) == 0x000478, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_NormalImpulse) == 0x000490, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, K2Node_Event_Hit) == 0x0004A8, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Play_Sequence_on_Ship_TimeStartOffset_ImplicitCast) == 0x000590, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Play_Sequence_on_Ship_TimeStartOffset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Trigger_Suspensor_Field_at_Location_LifeSpan_ImplicitCast) == 0x000598, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Trigger_Suspensor_Field_at_Location_LifeSpan_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip, CallFunc_Trigger_Suspensor_Field_at_Location_Radius_ImplicitCast) == 0x0005A0, "Member 'BP_PatrolShip_C_ExecuteUbergraph_BP_PatrolShip::CallFunc_Trigger_Suspensor_Field_at_Location_Radius_ImplicitCast' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.BP_TriggerSuspensorFieldAtLocation
// 0x0070 (0x0070 - 0x0000)
struct BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0060(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SphereRadius;                                      // 0x0064(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation) == 0x000010, "Wrong alignment on BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation");
static_assert(sizeof(BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation) == 0x000070, "Wrong size on BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation");
static_assert(offsetof(BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation, Transform) == 0x000000, "Member 'BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation::Transform' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation, LifeTime) == 0x000060, "Member 'BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation::LifeTime' has a wrong offset!");
static_assert(offsetof(BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation, SphereRadius) == 0x000064, "Member 'BP_PatrolShip_C_BP_TriggerSuspensorFieldAtLocation::SphereRadius' has a wrong offset!");

// Function BP_PatrolShip.BP_PatrolShip_C.BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature final
{
public:
	TArray<struct FMulticastDamageInfo>           FrameDamageInfo;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature");
static_assert(sizeof(BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature) == 0x000010, "Wrong size on BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature");
static_assert(offsetof(BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature, FrameDamageInfo) == 0x000000, "Member 'BP_PatrolShip_C_BndEvt__BP_PatrolShip_DamageableActor_K2Node_ComponentBoundEvent_1_MulticastDamageDealtUnreliableSignature__DelegateSignature::FrameDamageInfo' has a wrong offset!");

}

