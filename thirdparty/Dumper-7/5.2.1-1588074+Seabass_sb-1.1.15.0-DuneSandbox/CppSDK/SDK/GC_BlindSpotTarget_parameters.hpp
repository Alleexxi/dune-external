#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_BlindSpotTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.ExecuteUbergraph_GC_BlindSpotTarget
// 0x04D8 (0x04D8 - 0x0000)
struct GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHaloPoint_HaloPoint;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHaloPoint_HaloPoint_1;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0198(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetBeamPoint_BeamPoint;                   // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBeamPoint_BeamPoint_1;                 // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x02E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetAttractorPoint_AttractorPoint;         // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x03E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget) == 0x000008, "Wrong alignment on GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget");
static_assert(sizeof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget) == 0x0004D8, "Wrong size on GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, EntryPoint) == 0x000000, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_IsValid_ReturnValue_1) == 0x00000C, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_IsValid_ReturnValue_2) == 0x00000D, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_GetHaloPoint_HaloPoint) == 0x000028, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_GetHaloPoint_HaloPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_GetHaloPoint_HaloPoint_1) == 0x000060, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_GetHaloPoint_HaloPoint_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000078, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000090, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_IsValid_ReturnValue_4) == 0x000178, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000180, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000198, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_GetBeamPoint_BeamPoint) == 0x000280, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_GetBeamPoint_BeamPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000298, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_Vector_Distance_ReturnValue) == 0x0002B0, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_GetBeamPoint_BeamPoint_1) == 0x0002B8, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_GetBeamPoint_BeamPoint_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x0002D0, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0002E8, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_GetAttractorPoint_AttractorPoint) == 0x0003D0, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_GetAttractorPoint_AttractorPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0003E8, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x0004D0, "Member 'GC_BlindSpotTarget_C_ExecuteUbergraph_GC_BlindSpotTarget::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.GetAttractorPoint
// 0x00A8 (0x00A8 - 0x0000)
struct GC_BlindSpotTarget_C_GetAttractorPoint final
{
public:
	struct FVector                                AttractorPoint;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_GetAttractorPoint) == 0x000008, "Wrong alignment on GC_BlindSpotTarget_C_GetAttractorPoint");
static_assert(sizeof(GC_BlindSpotTarget_C_GetAttractorPoint) == 0x0000A8, "Wrong size on GC_BlindSpotTarget_C_GetAttractorPoint");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, AttractorPoint) == 0x000000, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::AttractorPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_Vector_Distance_ReturnValue) == 0x000018, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000040, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_IsLocallyControlled_ReturnValue) == 0x000058, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000060, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetAttractorPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'GC_BlindSpotTarget_C_GetAttractorPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.GetBeamPoint
// 0x00C8 (0x00C8 - 0x0000)
struct GC_BlindSpotTarget_C_GetBeamPoint final
{
public:
	class UObject*                                SourceObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FallbackPosition;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeamPoint;                                         // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_GetBeamPoint) == 0x000008, "Wrong alignment on GC_BlindSpotTarget_C_GetBeamPoint");
static_assert(sizeof(GC_BlindSpotTarget_C_GetBeamPoint) == 0x0000C8, "Wrong size on GC_BlindSpotTarget_C_GetBeamPoint");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, SourceObject) == 0x000000, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::SourceObject' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, FallbackPosition) == 0x000008, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::FallbackPosition' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, BeamPoint) == 0x000020, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::BeamPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, K2Node_DynamicCast_AsCharacter) == 0x000038, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000060, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_GetSocketLocation_ReturnValue) == 0x000070, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_DoesSocketExist_ReturnValue) == 0x0000B8, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetBeamPoint, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'GC_BlindSpotTarget_C_GetBeamPoint::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.GetHaloPoint
// 0x00C0 (0x00C0 - 0x0000)
struct GC_BlindSpotTarget_C_GetHaloPoint final
{
public:
	class UObject*                                SourceObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FallbackPosition;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HaloPoint;                                         // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_GetHaloPoint) == 0x000008, "Wrong alignment on GC_BlindSpotTarget_C_GetHaloPoint");
static_assert(sizeof(GC_BlindSpotTarget_C_GetHaloPoint) == 0x0000C0, "Wrong size on GC_BlindSpotTarget_C_GetHaloPoint");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, SourceObject) == 0x000000, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::SourceObject' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, FallbackPosition) == 0x000008, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::FallbackPosition' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, HaloPoint) == 0x000020, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::HaloPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, K2Node_DynamicCast_AsCharacter) == 0x000038, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000060, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_GetSocketLocation_ReturnValue) == 0x000080, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_DoesSocketExist_ReturnValue) == 0x0000B0, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_GetHaloPoint, CallFunc_MakeVector_Z_ImplicitCast) == 0x0000B8, "Member 'GC_BlindSpotTarget_C_GetHaloPoint::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GC_BlindSpotTarget_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_OnRemove) == 0x000008, "Wrong alignment on GC_BlindSpotTarget_C_OnRemove");
static_assert(sizeof(GC_BlindSpotTarget_C_OnRemove) == 0x0000E8, "Wrong size on GC_BlindSpotTarget_C_OnRemove");
static_assert(offsetof(GC_BlindSpotTarget_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_BlindSpotTarget_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_OnRemove, Parameters) == 0x000008, "Member 'GC_BlindSpotTarget_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GC_BlindSpotTarget_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'GC_BlindSpotTarget_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_OnRemove, CallFunc_IsValid_ReturnValue_1) == 0x0000E2, "Member 'GC_BlindSpotTarget_C_OnRemove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GC_BlindSpotTarget_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_ReceiveTick) == 0x000004, "Wrong alignment on GC_BlindSpotTarget_C_ReceiveTick");
static_assert(sizeof(GC_BlindSpotTarget_C_ReceiveTick) == 0x000004, "Wrong size on GC_BlindSpotTarget_C_ReceiveTick");
static_assert(offsetof(GC_BlindSpotTarget_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GC_BlindSpotTarget_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GC_BlindSpotTarget.GC_BlindSpotTarget_C.WhileActive
// 0x0218 (0x0218 - 0x0000)
struct GC_BlindSpotTarget_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00F0(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0118(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0138(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_EffectContextGetInstigatorActor_ReturnValue; // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAttractorPoint_AttractorPoint;         // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast;  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_BlindSpotTarget_C_WhileActive) == 0x000008, "Wrong alignment on GC_BlindSpotTarget_C_WhileActive");
static_assert(sizeof(GC_BlindSpotTarget_C_WhileActive) == 0x000218, "Wrong size on GC_BlindSpotTarget_C_WhileActive");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, MyTarget) == 0x000000, "Member 'GC_BlindSpotTarget_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, Parameters) == 0x000008, "Member 'GC_BlindSpotTarget_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, ReturnValue) == 0x0000E0, "Member 'GC_BlindSpotTarget_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000E4, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000E8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000F0, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000108, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000110, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000118, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000138, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_Location) == 0x000158, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_Normal) == 0x000170, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000188, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000190, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000198, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0001A0, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0001A8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0001AC, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0001B0, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0001B8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0001C0, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001C8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0001D0, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_EvaluateCurveTableRow_OutResult) == 0x0001D8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_EvaluateCurveTableRow_OutXY) == 0x0001DC, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, K2Node_SwitchEnum_CmpSuccess) == 0x0001E0, "Member 'GC_BlindSpotTarget_C_WhileActive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_EffectContextGetInstigatorActor_ReturnValue) == 0x0001E8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_EffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_IsValid_ReturnValue) == 0x0001F0, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_GetAttractorPoint_AttractorPoint) == 0x0001F8, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_GetAttractorPoint_AttractorPoint' has a wrong offset!");
static_assert(offsetof(GC_BlindSpotTarget_C_WhileActive, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast) == 0x000210, "Member 'GC_BlindSpotTarget_C_WhileActive::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast' has a wrong offset!");

}

