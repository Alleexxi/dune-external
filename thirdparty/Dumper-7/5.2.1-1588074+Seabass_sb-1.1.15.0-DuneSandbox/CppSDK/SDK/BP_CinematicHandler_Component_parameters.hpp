#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicHandler_Component

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.TriggerCinematicOnClient
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicHandler_Component_C_TriggerCinematicOnClient final
{
public:
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallingObject;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FreezeLevelStreaming;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_TriggerCinematicOnClient) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_TriggerCinematicOnClient");
static_assert(sizeof(BP_CinematicHandler_Component_C_TriggerCinematicOnClient) == 0x000018, "Wrong size on BP_CinematicHandler_Component_C_TriggerCinematicOnClient");
static_assert(offsetof(BP_CinematicHandler_Component_C_TriggerCinematicOnClient, LevelSequenceActor) == 0x000000, "Member 'BP_CinematicHandler_Component_C_TriggerCinematicOnClient::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_TriggerCinematicOnClient, CallingObject) == 0x000008, "Member 'BP_CinematicHandler_Component_C_TriggerCinematicOnClient::CallingObject' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_TriggerCinematicOnClient, FreezeLevelStreaming) == 0x000010, "Member 'BP_CinematicHandler_Component_C_TriggerCinematicOnClient::FreezeLevelStreaming' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.ToggleCinematicMode
// 0x0068 (0x0068 - 0x0000)
struct BP_CinematicHandler_Component_C_ToggleCinematicMode final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable;                              // 0x0028(0x0010)(ConstParm, NoDestructor)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModifyContextOptions                  Temp_struct_Variable_1;                            // 0x0044(0x0010)(ConstParm, NoDestructor)
	struct FEInputContext                         K2Node_MakeStruct_EInputContext;                   // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInputContext_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCinematicModeSettings                 K2Node_MakeStruct_CinematicModeSettings;           // 0x005D(0x0005)(NoDestructor)
};
static_assert(alignof(BP_CinematicHandler_Component_C_ToggleCinematicMode) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_ToggleCinematicMode");
static_assert(sizeof(BP_CinematicHandler_Component_C_ToggleCinematicMode) == 0x000068, "Wrong size on BP_CinematicHandler_Component_C_ToggleCinematicMode");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, Value) == 0x000000, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::Value' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, K2Node_DynamicCast_AsDune_Player_Character) == 0x000010, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, Temp_struct_Variable) == 0x000028, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, K2Node_DynamicCast_AsDune_Player_Controller) == 0x000038, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::K2Node_DynamicCast_AsDune_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, Temp_struct_Variable_1) == 0x000044, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, K2Node_MakeStruct_EInputContext) == 0x000054, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::K2Node_MakeStruct_EInputContext' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, CallFunc_HasInputContext_ReturnValue) == 0x00005C, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::CallFunc_HasInputContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ToggleCinematicMode, K2Node_MakeStruct_CinematicModeSettings) == 0x00005D, "Member 'BP_CinematicHandler_Component_C_ToggleCinematicMode::K2Node_MakeStruct_CinematicModeSettings' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.Set Cinematic Mode
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicHandler_Component_C_Set_Cinematic_Mode final
{
public:
	bool                                          CinematicMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_Set_Cinematic_Mode) == 0x000001, "Wrong alignment on BP_CinematicHandler_Component_C_Set_Cinematic_Mode");
static_assert(sizeof(BP_CinematicHandler_Component_C_Set_Cinematic_Mode) == 0x000001, "Wrong size on BP_CinematicHandler_Component_C_Set_Cinematic_Mode");
static_assert(offsetof(BP_CinematicHandler_Component_C_Set_Cinematic_Mode, CinematicMode) == 0x000000, "Member 'BP_CinematicHandler_Component_C_Set_Cinematic_Mode::CinematicMode' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.Server_NotifyCallerFinishedCinematic
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic final
{
public:
	class UObject*                                CallingObject;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic");
static_assert(sizeof(BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic) == 0x000008, "Wrong size on BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic");
static_assert(offsetof(BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic, CallingObject) == 0x000000, "Member 'BP_CinematicHandler_Component_C_Server_NotifyCallerFinishedCinematic::CallingObject' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.PlayCinematicSequence
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicHandler_Component_C_PlayCinematicSequence final
{
public:
	class ALevelSequenceActor*                    Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   SequencePlayer;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_PlayCinematicSequence) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_PlayCinematicSequence");
static_assert(sizeof(BP_CinematicHandler_Component_C_PlayCinematicSequence) == 0x000018, "Wrong size on BP_CinematicHandler_Component_C_PlayCinematicSequence");
static_assert(offsetof(BP_CinematicHandler_Component_C_PlayCinematicSequence, Sequence) == 0x000000, "Member 'BP_CinematicHandler_Component_C_PlayCinematicSequence::Sequence' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_PlayCinematicSequence, SequencePlayer) == 0x000008, "Member 'BP_CinematicHandler_Component_C_PlayCinematicSequence::SequencePlayer' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_PlayCinematicSequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_CinematicHandler_Component_C_PlayCinematicSequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.FinishedCinematic
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicHandler_Component_C_FinishedCinematic final
{
public:
	class UObject*                                OwningObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_FinishedCinematic) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_FinishedCinematic");
static_assert(sizeof(BP_CinematicHandler_Component_C_FinishedCinematic) == 0x000008, "Wrong size on BP_CinematicHandler_Component_C_FinishedCinematic");
static_assert(offsetof(BP_CinematicHandler_Component_C_FinishedCinematic, OwningObject) == 0x000000, "Member 'BP_CinematicHandler_Component_C_FinishedCinematic::OwningObject' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.ExecuteUbergraph_BP_CinematicHandler_Component
// 0x0088 (0x0088 - 0x0000)
struct BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_OwningObject;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_CallingObject_1;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CinematicHandler_Interface_C> K2Node_DynamicCast_AsBPI_Cinematic_Handler_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    K2Node_Event_LevelSequenceActor;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_CallingObject;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_FreezeLevelStreaming;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    K2Node_CustomEvent_LevelSequenceActor;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_CallingObject;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FreezeLevelStreaming;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_PlayCinematicSequence_SequencePlayer;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_CinematicMode;                        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component");
static_assert(sizeof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component) == 0x000088, "Wrong size on BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, EntryPoint) == 0x000000, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_Event_OwningObject) == 0x000008, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_Event_OwningObject' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_CustomEvent_CallingObject_1) == 0x000010, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_CustomEvent_CallingObject_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_DynamicCast_AsBPI_Cinematic_Handler_Interface) == 0x000018, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_DynamicCast_AsBPI_Cinematic_Handler_Interface' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_Event_LevelSequenceActor) == 0x000030, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_Event_LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_Event_CallingObject) == 0x000038, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_Event_CallingObject' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_Event_FreezeLevelStreaming) == 0x000040, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_Event_FreezeLevelStreaming' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, CallFunc_IsServer_ReturnValue) == 0x000041, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_CustomEvent_LevelSequenceActor) == 0x000048, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_CustomEvent_LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_CustomEvent_CallingObject) == 0x000050, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_CustomEvent_CallingObject' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_CustomEvent_FreezeLevelStreaming) == 0x000058, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_CustomEvent_FreezeLevelStreaming' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, CallFunc_PlayCinematicSequence_SequencePlayer) == 0x000060, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::CallFunc_PlayCinematicSequence_SequencePlayer' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_Event_CinematicMode) == 0x000068, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_Event_CinematicMode' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'BP_CinematicHandler_Component_C_ExecuteUbergraph_BP_CinematicHandler_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_CinematicHandler_Component.BP_CinematicHandler_Component_C.BeginCinematic
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicHandler_Component_C_BeginCinematic final
{
public:
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallingObject;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FreezeLevelStreaming;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicHandler_Component_C_BeginCinematic) == 0x000008, "Wrong alignment on BP_CinematicHandler_Component_C_BeginCinematic");
static_assert(sizeof(BP_CinematicHandler_Component_C_BeginCinematic) == 0x000018, "Wrong size on BP_CinematicHandler_Component_C_BeginCinematic");
static_assert(offsetof(BP_CinematicHandler_Component_C_BeginCinematic, LevelSequenceActor) == 0x000000, "Member 'BP_CinematicHandler_Component_C_BeginCinematic::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_BeginCinematic, CallingObject) == 0x000008, "Member 'BP_CinematicHandler_Component_C_BeginCinematic::CallingObject' has a wrong offset!");
static_assert(offsetof(BP_CinematicHandler_Component_C_BeginCinematic, FreezeLevelStreaming) == 0x000010, "Member 'BP_CinematicHandler_Component_C_BeginCinematic::FreezeLevelStreaming' has a wrong offset!");

}

