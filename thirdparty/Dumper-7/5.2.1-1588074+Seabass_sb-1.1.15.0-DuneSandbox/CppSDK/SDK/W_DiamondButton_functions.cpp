#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DiamondButton

#include "Basic.hpp"

#include "W_DiamondButton_classes.hpp"
#include "W_DiamondButton_parameters.hpp"


namespace SDK
{

// Function W_DiamondButton.W_DiamondButton_C.Update State Visuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::Update_State_Visuals(double ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Update State Visuals");

	Params::W_DiamondButton_C_Update_State_Visuals Parms{};

	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Start Tween
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEase                                   Ease                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::Start_Tween(double Duration, EEase Ease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Start Tween");

	Params::W_DiamondButton_C_Start_Tween Parms{};

	Parms.Duration = Duration;
	Parms.Ease = Ease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Setup State Parameters
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DiamondButton_C::Setup_State_Parameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Setup State Parameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DiamondButton.W_DiamondButton_C.Setup Start Parameters
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DiamondButton_C::Setup_Start_Parameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Setup Start Parameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DiamondButton.W_DiamondButton_C.Setup Default Material Parameters
// (Public, BlueprintCallable, BlueprintEvent)

void UW_DiamondButton_C::Setup_Default_Material_Parameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Setup Default Material Parameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DiamondButton.W_DiamondButton_C.Set Outline Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Color_Top                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Color_Bottom                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::Set_Outline_Color(const struct FLinearColor& Color_Top, const struct FLinearColor& Color_Bottom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Set Outline Color");

	Params::W_DiamondButton_C_Set_Outline_Color Parms{};

	Parms.Color_Top = std::move(Color_Top);
	Parms.Color_Bottom = std::move(Color_Bottom);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Set Fill Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              Color_Top                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Color_Bottom                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::Set_Fill_Color(const struct FLinearColor& Color_Top, const struct FLinearColor& Color_Bottom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Set Fill Color");

	Params::W_DiamondButton_C_Set_Fill_Color Parms{};

	Parms.Color_Top = std::move(Color_Top);
	Parms.Color_Bottom = std::move(Color_Bottom);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "PreConstruct");

	Params::W_DiamondButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Pick Color
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FLinearColor&              Default                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Hovered                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UW_DiamondButton_C::Pick_Color(const struct FLinearColor& Default, const struct FLinearColor& Hovered, const struct FLinearColor& Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Pick Color");

	Params::W_DiamondButton_C_Pick_Color Parms{};

	Parms.Default = std::move(Default);
	Parms.Hovered = std::move(Hovered);
	Parms.Pressed = std::move(Pressed);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DiamondButton.W_DiamondButton_C.OnPressedStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UButtonWidget*                    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::OnPressedStateChanged(class UButtonWidget* Widget, bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "OnPressedStateChanged");

	Params::W_DiamondButton_C_OnPressedStateChanged Parms{};

	Parms.Widget = Widget;
	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.OnHoveredStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UButtonWidget*                    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::OnHoveredStateChanged(class UButtonWidget* Widget, bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "OnHoveredStateChanged");

	Params::W_DiamondButton_C_OnHoveredStateChanged Parms{};

	Parms.Widget = Widget;
	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Get State Parameters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor*                    Outline_Color                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Fill_Color_Top                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Fill_Color_Bottom                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Diamond_Scale                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Glow_Opacity                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::Get_State_Parameters(struct FLinearColor* Outline_Color, struct FLinearColor* Fill_Color_Top, struct FLinearColor* Fill_Color_Bottom, struct FVector2D* Diamond_Scale, double* Glow_Opacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Get State Parameters");

	Params::W_DiamondButton_C_Get_State_Parameters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Outline_Color != nullptr)
		*Outline_Color = std::move(Parms.Outline_Color);

	if (Fill_Color_Top != nullptr)
		*Fill_Color_Top = std::move(Parms.Fill_Color_Top);

	if (Fill_Color_Bottom != nullptr)
		*Fill_Color_Bottom = std::move(Parms.Fill_Color_Bottom);

	if (Diamond_Scale != nullptr)
		*Diamond_Scale = std::move(Parms.Diamond_Scale);

	if (Glow_Opacity != nullptr)
		*Glow_Opacity = Parms.Glow_Opacity;
}


// Function W_DiamondButton.W_DiamondButton_C.ExecuteUbergraph_W_DiamondButton
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::ExecuteUbergraph_W_DiamondButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "ExecuteUbergraph_W_DiamondButton");

	Params::W_DiamondButton_C_ExecuteUbergraph_W_DiamondButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DiamondButton_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DiamondButton.W_DiamondButton_C.CREATEDELEGATE_PROXYFUNCTION_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DiamondButton_C::CREATEDELEGATE_PROXYFUNCTION_0(float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "CREATEDELEGATE_PROXYFUNCTION_0");

	Params::W_DiamondButton_C_CREATEDELEGATE_PROXYFUNCTION_0 Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DiamondButton.W_DiamondButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DiamondButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DiamondButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

