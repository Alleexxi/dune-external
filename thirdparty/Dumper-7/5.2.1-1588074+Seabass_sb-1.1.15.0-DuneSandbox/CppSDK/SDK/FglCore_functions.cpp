#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FglCore

#include "Basic.hpp"

#include "FglCore_classes.hpp"
#include "FglCore_parameters.hpp"


namespace SDK
{

// Function FglCore.OwnerComponent_BlueprintAcessLibrary.FglAssignOwnerComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOwnerComponent&           InComponent                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UOwnerComponent_BlueprintAcessLibrary::FglAssignOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId, const struct FOwnerComponent& InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OwnerComponent_BlueprintAcessLibrary", "FglAssignOwnerComponent");

	Params::OwnerComponent_BlueprintAcessLibrary_FglAssignOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);
	Parms.InComponent = std::move(InComponent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.OwnerComponent_BlueprintAcessLibrary.FglGetOwnerComponent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOwnerComponent*                 OutOwnerComponent                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UOwnerComponent_BlueprintAcessLibrary::FglGetOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId, struct FOwnerComponent* OutOwnerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OwnerComponent_BlueprintAcessLibrary", "FglGetOwnerComponent");

	Params::OwnerComponent_BlueprintAcessLibrary_FglGetOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOwnerComponent != nullptr)
		*OutOwnerComponent = std::move(Parms.OutOwnerComponent);

	return Parms.ReturnValue;
}


// Function FglCore.OwnerComponent_BlueprintAcessLibrary.FglHasOwnerComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UOwnerComponent_BlueprintAcessLibrary::FglHasOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OwnerComponent_BlueprintAcessLibrary", "FglHasOwnerComponent");

	Params::OwnerComponent_BlueprintAcessLibrary_FglHasOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.OwnerComponent_BlueprintAcessLibrary.FglSetOwnerComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOwnerComponent&           InComponent                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UOwnerComponent_BlueprintAcessLibrary::FglSetOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId, const struct FOwnerComponent& InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OwnerComponent_BlueprintAcessLibrary", "FglSetOwnerComponent");

	Params::OwnerComponent_BlueprintAcessLibrary_FglSetOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);
	Parms.InComponent = std::move(InComponent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.ChildOwnerComponent_BlueprintAcessLibrary.FglAssignChildOwnerComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FChildOwnerComponent&      InComponent                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UChildOwnerComponent_BlueprintAcessLibrary::FglAssignChildOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId, const struct FChildOwnerComponent& InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChildOwnerComponent_BlueprintAcessLibrary", "FglAssignChildOwnerComponent");

	Params::ChildOwnerComponent_BlueprintAcessLibrary_FglAssignChildOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);
	Parms.InComponent = std::move(InComponent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.ChildOwnerComponent_BlueprintAcessLibrary.FglGetChildOwnerComponent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FChildOwnerComponent*            OutChildOwnerComponent                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UChildOwnerComponent_BlueprintAcessLibrary::FglGetChildOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId, struct FChildOwnerComponent* OutChildOwnerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChildOwnerComponent_BlueprintAcessLibrary", "FglGetChildOwnerComponent");

	Params::ChildOwnerComponent_BlueprintAcessLibrary_FglGetChildOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutChildOwnerComponent != nullptr)
		*OutChildOwnerComponent = std::move(Parms.OutChildOwnerComponent);

	return Parms.ReturnValue;
}


// Function FglCore.ChildOwnerComponent_BlueprintAcessLibrary.FglHasChildOwnerComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UChildOwnerComponent_BlueprintAcessLibrary::FglHasChildOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChildOwnerComponent_BlueprintAcessLibrary", "FglHasChildOwnerComponent");

	Params::ChildOwnerComponent_BlueprintAcessLibrary_FglHasChildOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.ChildOwnerComponent_BlueprintAcessLibrary.FglSetChildOwnerComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEntityId&                 InEntityId                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FChildOwnerComponent&      InComponent                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EFglBlueprintResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFglBlueprintResult UChildOwnerComponent_BlueprintAcessLibrary::FglSetChildOwnerComponent(const class UObject* WorldContextObject, const struct FEntityId& InEntityId, const struct FChildOwnerComponent& InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ChildOwnerComponent_BlueprintAcessLibrary", "FglSetChildOwnerComponent");

	Params::ChildOwnerComponent_BlueprintAcessLibrary_FglSetChildOwnerComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEntityId = std::move(InEntityId);
	Parms.InComponent = std::move(InComponent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.BlueprintProcessor.ProcessorFunction
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const int32                             ThreadIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRuntimeImmediateContext&  Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBlueprintProcessor::ProcessorFunction(const int32 ThreadIndex, const struct FRuntimeImmediateContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintProcessor", "ProcessorFunction");

	Params::BlueprintProcessor_ProcessorFunction Parms{};

	Parms.ThreadIndex = ThreadIndex;
	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FglCore.FglBlueprintAccessLibrary.CreateAndLockContext
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FRuntimeAccessor>&  Accessors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FRuntimeImmediateContext         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRuntimeImmediateContext UFglBlueprintAccessLibrary::CreateAndLockContext(class UObject* WorldContextObject, const TArray<struct FRuntimeAccessor>& Accessors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "CreateAndLockContext");

	Params::FglBlueprintAccessLibrary_CreateAndLockContext Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Accessors = std::move(Accessors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.CreateEntityId
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEntityId                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FEntityId UFglBlueprintAccessLibrary::CreateEntityId(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "CreateEntityId");

	Params::FglBlueprintAccessLibrary_CreateEntityId Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.CreateRuntimeView
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeImmediateContext&        Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FRuntimeViewFilter>&Filters                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FRuntimeViewIterator*            Iterator                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FRuntimeView                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRuntimeView UFglBlueprintAccessLibrary::CreateRuntimeView(struct FRuntimeImmediateContext& Context, const TArray<struct FRuntimeViewFilter>& Filters, struct FRuntimeViewIterator* Iterator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "CreateRuntimeView");

	Params::FglBlueprintAccessLibrary_CreateRuntimeView Parms{};

	Parms.Context = std::move(Context);
	Parms.Filters = std::move(Filters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);

	if (Iterator != nullptr)
		*Iterator = std::move(Parms.Iterator);

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.FreeRuntimeView
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeView&                    View                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::FreeRuntimeView(struct FRuntimeView& View)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "FreeRuntimeView");

	Params::FglBlueprintAccessLibrary_FreeRuntimeView Parms{};

	Parms.View = std::move(View);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	View = std::move(Parms.View);
}


// Function FglCore.FglBlueprintAccessLibrary.GetComponent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRuntimeImmediateContext&        Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FEntityId&                 EntityId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRuntimeAccessor&          ComponentAccessor                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::GetComponent(struct FRuntimeImmediateContext& Context, const struct FEntityId& EntityId, const struct FRuntimeAccessor& ComponentAccessor, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "GetComponent");

	Params::FglBlueprintAccessLibrary_GetComponent Parms{};

	Parms.Context = std::move(Context);
	Parms.EntityId = std::move(EntityId);
	Parms.ComponentAccessor = std::move(ComponentAccessor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function FglCore.FglBlueprintAccessLibrary.GetEntitiesWithComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ComponentName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<struct FEntityId>                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TSet<struct FEntityId> UFglBlueprintAccessLibrary::GetEntitiesWithComponent(class UObject* WorldContextObject, class FName ComponentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "GetEntitiesWithComponent");

	Params::FglBlueprintAccessLibrary_GetEntitiesWithComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ComponentName = ComponentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.GetEntityID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InFglEntity                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEntityId                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FEntityId UFglBlueprintAccessLibrary::GetEntityID(const class UObject* InFglEntity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "GetEntityID");

	Params::FglBlueprintAccessLibrary_GetEntityID Parms{};

	Parms.InFglEntity = InFglEntity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.GetFGLSingletonId_Blueprint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEntityId                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FEntityId UFglBlueprintAccessLibrary::GetFGLSingletonId_Blueprint(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "GetFGLSingletonId_Blueprint");

	Params::FglBlueprintAccessLibrary_GetFGLSingletonId_Blueprint Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.GetTickGroupSchedulerFor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETickingGroup                           TickGroup                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayTickGroupScheduler*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayTickGroupScheduler* UFglBlueprintAccessLibrary::GetTickGroupSchedulerFor(const class UObject* WorldContextObject, ETickingGroup TickGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "GetTickGroupSchedulerFor");

	Params::FglBlueprintAccessLibrary_GetTickGroupSchedulerFor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TickGroup = TickGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.HasComponents
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRuntimeImmediateContext&        Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FEntityId&                 EntityId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FRuntimeAccessor>&  Accessors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFglBlueprintAccessLibrary::HasComponents(struct FRuntimeImmediateContext& Context, const struct FEntityId& EntityId, const TArray<struct FRuntimeAccessor>& Accessors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "HasComponents");

	Params::FglBlueprintAccessLibrary_HasComponents Parms{};

	Parms.Context = std::move(Context);
	Parms.EntityId = std::move(EntityId);
	Parms.Accessors = std::move(Accessors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.IsValid
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FEntityId&                 InFglEntity                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFglBlueprintAccessLibrary::IsValid(const struct FEntityId& InFglEntity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "IsValid");

	Params::FglBlueprintAccessLibrary_IsValid Parms{};

	Parms.InFglEntity = std::move(InFglEntity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.SetComponent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRuntimeImmediateContext&        Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FEntityId&                 EntityId                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRuntimeAccessor&          ComponentAccessor                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32&                                  Value                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::SetComponent(struct FRuntimeImmediateContext& Context, const struct FEntityId& EntityId, const struct FRuntimeAccessor& ComponentAccessor, int32& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "SetComponent");

	Params::FglBlueprintAccessLibrary_SetComponent Parms{};

	Parms.Context = std::move(Context);
	Parms.EntityId = std::move(EntityId);
	Parms.ComponentAccessor = std::move(ComponentAccessor);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);
	Value = Parms.Value;
}


// Function FglCore.FglBlueprintAccessLibrary.UnlockContext
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeImmediateContext&        Context                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::UnlockContext(struct FRuntimeImmediateContext& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "UnlockContext");

	Params::FglBlueprintAccessLibrary_UnlockContext Parms{};

	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Context = std::move(Parms.Context);
}


// Function FglCore.FglBlueprintAccessLibrary.ViewIteratorAdvance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeViewIterator&            Iterator                                               (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::ViewIteratorAdvance(struct FRuntimeViewIterator& Iterator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "ViewIteratorAdvance");

	Params::FglBlueprintAccessLibrary_ViewIteratorAdvance Parms{};

	Parms.Iterator = std::move(Iterator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Iterator = std::move(Parms.Iterator);
}


// Function FglCore.FglBlueprintAccessLibrary.ViewIteratorGetComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeViewIterator&            Iterator                                               (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   GetterIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::ViewIteratorGetComponent(struct FRuntimeViewIterator& Iterator, int32 GetterIndex, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "ViewIteratorGetComponent");

	Params::FglBlueprintAccessLibrary_ViewIteratorGetComponent Parms{};

	Parms.Iterator = std::move(Iterator);
	Parms.GetterIndex = GetterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Iterator = std::move(Parms.Iterator);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function FglCore.FglBlueprintAccessLibrary.ViewIteratorGetEntityId
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRuntimeViewIterator&            Iterator                                               (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FEntityId                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FEntityId UFglBlueprintAccessLibrary::ViewIteratorGetEntityId(struct FRuntimeViewIterator& Iterator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "ViewIteratorGetEntityId");

	Params::FglBlueprintAccessLibrary_ViewIteratorGetEntityId Parms{};

	Parms.Iterator = std::move(Iterator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Iterator = std::move(Parms.Iterator);

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.ViewIteratorIsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeViewIterator&            Iterator                                               (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFglBlueprintAccessLibrary::ViewIteratorIsValid(struct FRuntimeViewIterator& Iterator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "ViewIteratorIsValid");

	Params::FglBlueprintAccessLibrary_ViewIteratorIsValid Parms{};

	Parms.Iterator = std::move(Iterator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Iterator = std::move(Parms.Iterator);

	return Parms.ReturnValue;
}


// Function FglCore.FglBlueprintAccessLibrary.ViewIteratorSetComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeViewIterator&            Iterator                                               (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   GetterIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32&                                  Value                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFglBlueprintAccessLibrary::ViewIteratorSetComponent(struct FRuntimeViewIterator& Iterator, int32 GetterIndex, int32& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FglBlueprintAccessLibrary", "ViewIteratorSetComponent");

	Params::FglBlueprintAccessLibrary_ViewIteratorSetComponent Parms{};

	Parms.Iterator = std::move(Iterator);
	Parms.GetterIndex = GetterIndex;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Iterator = std::move(Parms.Iterator);
	Value = Parms.Value;
}

}

