#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_VehicleRocket_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Projectile_StandardDart_Parent_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Projectile_VehicleRocket_Base.BP_Projectile_VehicleRocket_Base_C
// 0x0090 (0x10F0 - 0x1060)
class ABP_Projectile_VehicleRocket_Base_C : public ABP_Projectile_StandardDart_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Projectile_VehicleRocket_Base_C; // 0x1060(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class UNiagaraSystem>          ImpactFX;                                          // 0x1068(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UNiagaraSystem*                         ImpactFXLoaded;                                    // 0x1098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                InitialCameraLocation;                             // 0x10A0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialCameraDirection;                            // 0x10B8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            CamAimRange;                                       // 0x10D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRotSpeed;                                       // 0x10E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RandomStartingRotation;                            // 0x10E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SpawnImpactFX(const struct FHitResult& InHitResult, const bool bInShielded);
	void SaveCameraTransform();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnLoaded_EFB2FAB34755083C9349C187229AB2B7(class UObject* Loaded);
	void LoadImpactFX(bool SpawnOnLoad, const struct FTransform& SpawnTransform);
	void ExecuteUbergraph_BP_Projectile_VehicleRocket_Base(int32 EntryPoint);
	void AlignToSavedCamera(double DeltaTime);
	void AlignToInstigator();

	bool ShouldOverlapActor(class AActor* OtherActor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Projectile_VehicleRocket_Base_C">();
	}
	static class ABP_Projectile_VehicleRocket_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Projectile_VehicleRocket_Base_C>();
	}
};
static_assert(alignof(ABP_Projectile_VehicleRocket_Base_C) == 0x000008, "Wrong alignment on ABP_Projectile_VehicleRocket_Base_C");
static_assert(sizeof(ABP_Projectile_VehicleRocket_Base_C) == 0x0010F0, "Wrong size on ABP_Projectile_VehicleRocket_Base_C");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, UberGraphFrame_BP_Projectile_VehicleRocket_Base_C) == 0x001060, "Member 'ABP_Projectile_VehicleRocket_Base_C::UberGraphFrame_BP_Projectile_VehicleRocket_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, ImpactFX) == 0x001068, "Member 'ABP_Projectile_VehicleRocket_Base_C::ImpactFX' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, ImpactFXLoaded) == 0x001098, "Member 'ABP_Projectile_VehicleRocket_Base_C::ImpactFXLoaded' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, InitialCameraLocation) == 0x0010A0, "Member 'ABP_Projectile_VehicleRocket_Base_C::InitialCameraLocation' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, InitialCameraDirection) == 0x0010B8, "Member 'ABP_Projectile_VehicleRocket_Base_C::InitialCameraDirection' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, CamAimRange) == 0x0010D0, "Member 'ABP_Projectile_VehicleRocket_Base_C::CamAimRange' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, MaxRotSpeed) == 0x0010E0, "Member 'ABP_Projectile_VehicleRocket_Base_C::MaxRotSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_VehicleRocket_Base_C, RandomStartingRotation) == 0x0010E8, "Member 'ABP_Projectile_VehicleRocket_Base_C::RandomStartingRotation' has a wrong offset!");

}

