#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VFX_Cmn_HoltzmanShield_Component

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VFX_Cmn_HoltzmanShield_Component.BP_VFX_Cmn_HoltzmanShield_Component_C
// 0x0210 (0x05C0 - 0x03B0)
class UBP_VFX_Cmn_HoltzmanShield_Component_C final : public UNiagaraShieldVFXMeshComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInterface*                     CharacterMaterial;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class FName>                      HitIndexParameterName;                             // 0x03C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentHitID;                                      // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   ShieldHits;                                        // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInterface*                     NonCharacterMaterial;                              // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebugHitLocation;                                  // 0x0430(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHitInMaterial;                                  // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugWithLineTrace;                                // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugRandomPenetration;                            // 0x044D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E[0x2];                                      // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugHitDelay;                                     // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugNonRandomPenetration;                         // 0x0454(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         SKComponents;                                      // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           NewSMComponents;                                   // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UInstancedStaticMeshComponent*>  NewISMComponents;                                  // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UHierarchicalInstancedStaticMeshComponent*> NewHISMComponents;                      // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UInstancedBuildingComponent*, class UInstancedStaticMeshComponent*> IBCToISM;         // 0x0498(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, int32>                            IBCIndexToISMIndex;                                // 0x04E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        CurrentDamageStacks;                               // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InCombat;                                          // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CombatTimer;                                       // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NormalizedDamageStacksCubic;                       // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageDecayRate;                                   // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DamageDecayTimer;                                  // 0x0560(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DecayActive;                                       // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RelativeDamageOnHit;                               // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToggleOnAnimDuration;                              // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToggleOffAnimDuration;                             // 0x057C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlinkAmount;                                       // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              BurrowDartSystems;                                 // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UCurveFloat*                            HitSizeCharCurve;                                  // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsToggleOn;                                        // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              PenetrateParticles;                                // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void UpdateSlowbladePenetration(class ADuneCharacter* Instigator, double PenetrationDuration);
	void UpdatePenetrationMaterial(double StartTime, double Duration);
	void UpdatePenetration();
	void UpdateBurrowDartPenetration();
	void TraceFromCameraToActor(struct FHitResult* OutHit);
	void ToggleShieldVisibility(bool On);
	void ShouldSpawnBouncingDarts(class UClass* InDamageTypeClass, bool* Return);
	void ShieldImpactFX(const struct FHitResult& HitRes, bool Penetrate, class UClass* NewParam);
	void RemoveShieldISM(class UInstancedBuildingComponent* InstancedBuildingComponent, const struct FTransform& InstanceTransform);
	void RemoveDamageStacks();
	void RegisterShieldHit(bool bHitIsMelee, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void PrintDamageValues(double RelativeDamage, double ShieldDepletionFactor_);
	void PlayToggleAnim(bool On, bool PlayVfxAnimation);
	void OnVerticalBoundsUpdated(const struct FFloatRange& VerticalBounds);
	void OnStopPenetration(const class ADuneCharacter* InstigatorCharacter);
	void OnStartPenetration(const class ADuneCharacter* InstigatorCharacter, float PenetrationDuration);
	void OnShieldToggled(bool bToggledOn, const EShieldStateChangeReason& ShieldStateChangeReason, bool bPlayVfxAnimation);
	void OnShieldMeleed(const struct FHitResult& InHitResult);
	void OnShieldLaserHit(const float Intensity, const struct FHitResult& HitResult);
	void OnShieldDamaged(const float RelativeDamage, const float ShieldDepletionFactor, const struct FHitResult& HitResult, TSubclassOf<class UDuneDamageType> DamageTypeClass);
	void OnInstancesAddedToIBC(const class UInstancedBuildingComponent* InstancedBuildingComponent, const TArray<int32>& InstanceIndexes, bool IsShieldActive);
	void OnInstanceRemovedFromIBC(const class UInstancedBuildingComponent* InstancedBuildingComponent, const struct FTransform& InstanceTransform);
	void OnInstanceAddedToIBC(const class UInstancedBuildingComponent* InstancedBuildingComponent, int32 InstanceIndex, bool IsShieldActive);
	void OnBurrowDartsRemoved();
	void OnBurrowDartDamage(const struct FBurrowingDart& BurrowDart);
	struct FHitResult GetRandomHitLocationWithinActorBounds();
	void ExecuteUbergraph_BP_VFX_Cmn_HoltzmanShield_Component(int32 EntryPoint);
	void DamageStacksDecay();
	void CreateShield_StaticMesh(TArray<class UStaticMeshComponent*>& StaticMeshComponents);
	void CreateShield_SkeletalMesh(TArray<class USkeletalMeshComponent*>& SkeletalMeshComponent);
	void CreateShield_ISM(TArray<class UInstancedStaticMeshComponent*>& ISMComponents);
	void CreateShield_HISM(TArray<class UHierarchicalInstancedStaticMeshComponent*>& HISMComponents);
	void CreateOverlayMaterialInstance(bool IsCharacter, class UMaterialInstanceDynamic** OverlayMaterialInstnace);
	struct FLinearColor ConvertHitToLinearColor(const struct FHitResult& Hit, bool ShouldPenetrateShield);
	void AddDamageStacks(double RelativeDamage);
	void Add_Shield_ISM_Batched(class UInstancedBuildingComponent* InstancedBuildingComponent, TArray<int32>& InstanceIndex, bool IsShieldActive);
	void Add_Shield_ISM(class UInstancedBuildingComponent* InstancedBuildingComponent, int32 InstanceIndex, bool IsShieldActive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VFX_Cmn_HoltzmanShield_Component_C">();
	}
	static class UBP_VFX_Cmn_HoltzmanShield_Component_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_VFX_Cmn_HoltzmanShield_Component_C>();
	}
};
static_assert(alignof(UBP_VFX_Cmn_HoltzmanShield_Component_C) == 0x000010, "Wrong alignment on UBP_VFX_Cmn_HoltzmanShield_Component_C");
static_assert(sizeof(UBP_VFX_Cmn_HoltzmanShield_Component_C) == 0x0005C0, "Wrong size on UBP_VFX_Cmn_HoltzmanShield_Component_C");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, UberGraphFrame) == 0x0003B0, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, CharacterMaterial) == 0x0003B8, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::CharacterMaterial' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, HitIndexParameterName) == 0x0003C0, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::HitIndexParameterName' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, CurrentHitID) == 0x000410, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::CurrentHitID' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, ShieldHits) == 0x000418, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::ShieldHits' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, NonCharacterMaterial) == 0x000428, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::NonCharacterMaterial' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DebugHitLocation) == 0x000430, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DebugHitLocation' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, MaxHitInMaterial) == 0x000448, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::MaxHitInMaterial' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DebugWithLineTrace) == 0x00044C, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DebugWithLineTrace' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DebugRandomPenetration) == 0x00044D, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DebugRandomPenetration' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DebugHitDelay) == 0x000450, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DebugHitDelay' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DebugNonRandomPenetration) == 0x000454, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DebugNonRandomPenetration' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, SKComponents) == 0x000458, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::SKComponents' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, NewSMComponents) == 0x000468, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::NewSMComponents' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, NewISMComponents) == 0x000478, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::NewISMComponents' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, NewHISMComponents) == 0x000488, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::NewHISMComponents' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, IBCToISM) == 0x000498, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::IBCToISM' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, IBCIndexToISMIndex) == 0x0004E8, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::IBCIndexToISMIndex' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, CurrentDamageStacks) == 0x000538, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::CurrentDamageStacks' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, InCombat) == 0x000540, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::InCombat' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, CombatTimer) == 0x000548, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::CombatTimer' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, NormalizedDamageStacksCubic) == 0x000550, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::NormalizedDamageStacksCubic' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DamageDecayRate) == 0x000558, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DamageDecayRate' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DamageDecayTimer) == 0x000560, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DamageDecayTimer' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, DecayActive) == 0x000568, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::DecayActive' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, RelativeDamageOnHit) == 0x000570, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::RelativeDamageOnHit' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, ToggleOnAnimDuration) == 0x000578, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::ToggleOnAnimDuration' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, ToggleOffAnimDuration) == 0x00057C, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::ToggleOffAnimDuration' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, BlinkAmount) == 0x000580, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::BlinkAmount' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, BurrowDartSystems) == 0x000588, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::BurrowDartSystems' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, HitSizeCharCurve) == 0x000598, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::HitSizeCharCurve' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, IsToggleOn) == 0x0005A0, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::IsToggleOn' has a wrong offset!");
static_assert(offsetof(UBP_VFX_Cmn_HoltzmanShield_Component_C, PenetrateParticles) == 0x0005A8, "Member 'UBP_VFX_Cmn_HoltzmanShield_Component_C::PenetrateParticles' has a wrong offset!");

}

