#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PassengerHUD

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_PassengerHUD.W_PassengerHUD_C.UpdateWarningMessage
// 0x0001 (0x0001 - 0x0000)
struct W_PassengerHUD_C_UpdateWarningMessage final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_UpdateWarningMessage) == 0x000001, "Wrong alignment on W_PassengerHUD_C_UpdateWarningMessage");
static_assert(sizeof(W_PassengerHUD_C_UpdateWarningMessage) == 0x000001, "Wrong size on W_PassengerHUD_C_UpdateWarningMessage");
static_assert(offsetof(W_PassengerHUD_C_UpdateWarningMessage, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'W_PassengerHUD_C_UpdateWarningMessage::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.ShowTurretView
// 0x0005 (0x0005 - 0x0000)
struct W_PassengerHUD_C_ShowTurretView final
{
public:
	bool                                          bShowTurretView;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_ShowTurretView) == 0x000001, "Wrong alignment on W_PassengerHUD_C_ShowTurretView");
static_assert(sizeof(W_PassengerHUD_C_ShowTurretView) == 0x000005, "Wrong size on W_PassengerHUD_C_ShowTurretView");
static_assert(offsetof(W_PassengerHUD_C_ShowTurretView, bShowTurretView) == 0x000000, "Member 'W_PassengerHUD_C_ShowTurretView::bShowTurretView' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_ShowTurretView, Temp_bool_Variable) == 0x000001, "Member 'W_PassengerHUD_C_ShowTurretView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_ShowTurretView, Temp_byte_Variable) == 0x000002, "Member 'W_PassengerHUD_C_ShowTurretView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_ShowTurretView, Temp_byte_Variable_1) == 0x000003, "Member 'W_PassengerHUD_C_ShowTurretView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_ShowTurretView, K2Node_Select_Default) == 0x000004, "Member 'W_PassengerHUD_C_ShowTurretView::K2Node_Select_Default' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.SetTemperatureState
// 0x0018 (0x0018 - 0x0000)
struct W_PassengerHUD_C_SetTemperatureState final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_SetTemperatureState) == 0x000008, "Wrong alignment on W_PassengerHUD_C_SetTemperatureState");
static_assert(sizeof(W_PassengerHUD_C_SetTemperatureState) == 0x000018, "Wrong size on W_PassengerHUD_C_SetTemperatureState");
static_assert(offsetof(W_PassengerHUD_C_SetTemperatureState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'W_PassengerHUD_C_SetTemperatureState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_SetTemperatureState, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000008, "Member 'W_PassengerHUD_C_SetTemperatureState::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_SetTemperatureState, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'W_PassengerHUD_C_SetTemperatureState::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.SetHealthState
// 0x0001 (0x0001 - 0x0000)
struct W_PassengerHUD_C_SetHealthState final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_SetHealthState) == 0x000001, "Wrong alignment on W_PassengerHUD_C_SetHealthState");
static_assert(sizeof(W_PassengerHUD_C_SetHealthState) == 0x000001, "Wrong size on W_PassengerHUD_C_SetHealthState");
static_assert(offsetof(W_PassengerHUD_C_SetHealthState, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'W_PassengerHUD_C_SetHealthState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.OnIsPSUDisabledChanged
// 0x0001 (0x0001 - 0x0000)
struct W_PassengerHUD_C_OnIsPSUDisabledChanged final
{
public:
	bool                                          bIsPSUDisabled;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_OnIsPSUDisabledChanged) == 0x000001, "Wrong alignment on W_PassengerHUD_C_OnIsPSUDisabledChanged");
static_assert(sizeof(W_PassengerHUD_C_OnIsPSUDisabledChanged) == 0x000001, "Wrong size on W_PassengerHUD_C_OnIsPSUDisabledChanged");
static_assert(offsetof(W_PassengerHUD_C_OnIsPSUDisabledChanged, bIsPSUDisabled) == 0x000000, "Member 'W_PassengerHUD_C_OnIsPSUDisabledChanged::bIsPSUDisabled' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.ExecuteUbergraph_W_PassengerHUD
// 0x0008 (0x0008 - 0x0000)
struct W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPSUDisabled;                       // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowTurretView;                      // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD) == 0x000004, "Wrong alignment on W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD");
static_assert(sizeof(W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD) == 0x000008, "Wrong size on W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD");
static_assert(offsetof(W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD, EntryPoint) == 0x000000, "Member 'W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD, K2Node_Event_bIsPSUDisabled) == 0x000004, "Member 'W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD::K2Node_Event_bIsPSUDisabled' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD, K2Node_Event_bShowTurretView) == 0x000005, "Member 'W_PassengerHUD_C_ExecuteUbergraph_W_PassengerHUD::K2Node_Event_bShowTurretView' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.DisplayWarning
// 0x0010 (0x0010 - 0x0000)
struct W_PassengerHUD_C_DisplayWarning final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_DisplayWarning) == 0x000008, "Wrong alignment on W_PassengerHUD_C_DisplayWarning");
static_assert(sizeof(W_PassengerHUD_C_DisplayWarning) == 0x000010, "Wrong size on W_PassengerHUD_C_DisplayWarning");
static_assert(offsetof(W_PassengerHUD_C_DisplayWarning, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_PassengerHUD_C_DisplayWarning::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_DisplayWarning, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'W_PassengerHUD_C_DisplayWarning::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.DisplayPermanentWarning
// 0x0018 (0x0018 - 0x0000)
struct W_PassengerHUD_C_DisplayPermanentWarning final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_DisplayPermanentWarning) == 0x000008, "Wrong alignment on W_PassengerHUD_C_DisplayPermanentWarning");
static_assert(sizeof(W_PassengerHUD_C_DisplayPermanentWarning) == 0x000018, "Wrong size on W_PassengerHUD_C_DisplayPermanentWarning");
static_assert(offsetof(W_PassengerHUD_C_DisplayPermanentWarning, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'W_PassengerHUD_C_DisplayPermanentWarning::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_DisplayPermanentWarning, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_PassengerHUD_C_DisplayPermanentWarning::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PassengerHUD_C_DisplayPermanentWarning, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000010, "Member 'W_PassengerHUD_C_DisplayPermanentWarning::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");

// Function W_PassengerHUD.W_PassengerHUD_C.BP_OnShowTurretViewChanged
// 0x0001 (0x0001 - 0x0000)
struct W_PassengerHUD_C_BP_OnShowTurretViewChanged final
{
public:
	bool                                          bShowTurretView;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PassengerHUD_C_BP_OnShowTurretViewChanged) == 0x000001, "Wrong alignment on W_PassengerHUD_C_BP_OnShowTurretViewChanged");
static_assert(sizeof(W_PassengerHUD_C_BP_OnShowTurretViewChanged) == 0x000001, "Wrong size on W_PassengerHUD_C_BP_OnShowTurretViewChanged");
static_assert(offsetof(W_PassengerHUD_C_BP_OnShowTurretViewChanged, bShowTurretView) == 0x000000, "Member 'W_PassengerHUD_C_BP_OnShowTurretViewChanged::bShowTurretView' has a wrong offset!");

}

