#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Throwable_Seeker_Assault

#include "Basic.hpp"

#include "BP_Throwable_Seeker_Assault_classes.hpp"
#include "BP_Throwable_Seeker_Assault_parameters.hpp"


namespace SDK
{

// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.TryDetonate
// (BlueprintCallable, BlueprintEvent)

void ABP_Throwable_Seeker_Assault_C::TryDetonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "TryDetonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.Multicast_Detonate
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Throwable_Seeker_Assault_C::Multicast_Detonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "Multicast_Detonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.Launch
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                Transform                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Throwable_Seeker_Assault_C::Launch(const struct FVector& Velocity, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "Launch");

	Params::BP_Throwable_Seeker_Assault_C_Launch Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.ExecuteUbergraph_BP_Throwable_Seeker_Assault
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Throwable_Seeker_Assault_C::ExecuteUbergraph_BP_Throwable_Seeker_Assault(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "ExecuteUbergraph_BP_Throwable_Seeker_Assault");

	Params::BP_Throwable_Seeker_Assault_C_ExecuteUbergraph_BP_Throwable_Seeker_Assault Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.CacheTuningValues
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Throwable_Seeker_Assault_C::CacheTuningValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "CacheTuningValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.BndEvt__BP_Throwable_Seeker_Assault_m_SphereCollisionComp_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Throwable_Seeker_Assault_C::BndEvt__BP_Throwable_Seeker_Assault_m_SphereCollisionComp_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "BndEvt__BP_Throwable_Seeker_Assault_m_SphereCollisionComp_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_Throwable_Seeker_Assault_C_BndEvt__BP_Throwable_Seeker_Assault_m_SphereCollisionComp_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Throwable_Seeker_Assault.BP_Throwable_Seeker_Assault_C.Activate
// (BlueprintCallable, BlueprintEvent)

void ABP_Throwable_Seeker_Assault_C::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Throwable_Seeker_Assault_C", "Activate");

	UObject::ProcessEvent(Func, nullptr);
}

}

