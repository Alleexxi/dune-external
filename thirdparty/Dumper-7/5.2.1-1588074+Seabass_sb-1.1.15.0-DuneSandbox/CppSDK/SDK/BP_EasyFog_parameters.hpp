#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EasyFog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EasyFog.BP_EasyFog_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_EasyFog_C_UserConstructionScript final
{
public:
	class UMaterialInterface*                     Pathtracer_Material;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FogCard_0;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasyFog_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_EasyFog_C_UserConstructionScript");
static_assert(sizeof(BP_EasyFog_C_UserConstructionScript) == 0x000010, "Wrong size on BP_EasyFog_C_UserConstructionScript");
static_assert(offsetof(BP_EasyFog_C_UserConstructionScript, Pathtracer_Material) == 0x000000, "Member 'BP_EasyFog_C_UserConstructionScript::Pathtracer_Material' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_UserConstructionScript, FogCard_0) == 0x000008, "Member 'BP_EasyFog_C_UserConstructionScript::FogCard_0' has a wrong offset!");

// Function BP_EasyFog.BP_EasyFog_C.SetCustomPrimitiveDataColor
// 0x002C (0x002C - 0x0000)
struct BP_EasyFog_C_SetCustomPrimitiveDataColor final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DataIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasyFog_C_SetCustomPrimitiveDataColor) == 0x000004, "Wrong alignment on BP_EasyFog_C_SetCustomPrimitiveDataColor");
static_assert(sizeof(BP_EasyFog_C_SetCustomPrimitiveDataColor) == 0x00002C, "Wrong size on BP_EasyFog_C_SetCustomPrimitiveDataColor");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, InColor) == 0x000000, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::InColor' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, DataIndex) == 0x000010, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::DataIndex' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, CallFunc_BreakColor_R) == 0x00001C, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, CallFunc_BreakColor_G) == 0x000020, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, CallFunc_BreakColor_B) == 0x000024, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveDataColor, CallFunc_BreakColor_A) == 0x000028, "Member 'BP_EasyFog_C_SetCustomPrimitiveDataColor::CallFunc_BreakColor_A' has a wrong offset!");

// Function BP_EasyFog.BP_EasyFog_C.SetCustomPrimitiveData
// 0x0198 (0x0198 - 0x0000)
struct BP_EasyFog_C_SetCustomPrimitiveData final
{
public:
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3f                              CallFunc_BreakVector3f_InVec_ImplicitCast;         // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EasyFog_C_SetCustomPrimitiveData) == 0x000008, "Wrong alignment on BP_EasyFog_C_SetCustomPrimitiveData");
static_assert(sizeof(BP_EasyFog_C_SetCustomPrimitiveData) == 0x000198, "Wrong size on BP_EasyFog_C_SetCustomPrimitiveData");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_GetLocalBounds_Min) == 0x000000, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_GetLocalBounds_Max) == 0x000018, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_BreakVector3f_X) == 0x000030, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_BreakVector3f_Y) == 0x000034, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_BreakVector3f_Z) == 0x000038, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000080, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000168, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, K2Node_SwitchEnum_CmpSuccess) == 0x000170, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_BreakVector3f_InVec_ImplicitCast) == 0x000174, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_BreakVector3f_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000180, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000188, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000190, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EasyFog_C_SetCustomPrimitiveData, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x000194, "Member 'BP_EasyFog_C_SetCustomPrimitiveData::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");

}

