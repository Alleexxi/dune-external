#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ExploitWeakness

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DreamworldPreInit_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ExploitWeakness.GA_ExploitWeakness_C
// 0x0050 (0x0568 - 0x0518)
class UGA_ExploitWeakness_C : public UDuneGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0518(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSubclassOf<class UDuneExtendedHitComponent>  Hit_Component_Class;                               // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0528(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EDebugLevel                                   Debug_Level;                                       // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Weakpoint_Duration;                                // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDuneExtendedHitComponent*              Hit_Component_Reference;                           // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         Target_Character;                                  // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_Buff;                                           // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_Debuff;                                         // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ADuneCharacter*                         DuneCharacter;                                     // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_ExploitWeakness(int32 EntryPoint);
	void InitializeStaticProperties(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpec& Spec);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void On_Component_Clean_Up();
	void OnFinish_2D525CE24293F4D093F86EACBB82F3D6();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ExploitWeakness_C">();
	}
	static class UGA_ExploitWeakness_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ExploitWeakness_C>();
	}
};
static_assert(alignof(UGA_ExploitWeakness_C) == 0x000008, "Wrong alignment on UGA_ExploitWeakness_C");
static_assert(sizeof(UGA_ExploitWeakness_C) == 0x000568, "Wrong size on UGA_ExploitWeakness_C");
static_assert(offsetof(UGA_ExploitWeakness_C, UberGraphFrame) == 0x000518, "Member 'UGA_ExploitWeakness_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, Hit_Component_Class) == 0x000520, "Member 'UGA_ExploitWeakness_C::Hit_Component_Class' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, EventTag) == 0x000528, "Member 'UGA_ExploitWeakness_C::EventTag' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, Debug_Level) == 0x000530, "Member 'UGA_ExploitWeakness_C::Debug_Level' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, Weakpoint_Duration) == 0x000538, "Member 'UGA_ExploitWeakness_C::Weakpoint_Duration' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, Hit_Component_Reference) == 0x000540, "Member 'UGA_ExploitWeakness_C::Hit_Component_Reference' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, Target_Character) == 0x000548, "Member 'UGA_ExploitWeakness_C::Target_Character' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, GE_Buff) == 0x000550, "Member 'UGA_ExploitWeakness_C::GE_Buff' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, GE_Debuff) == 0x000558, "Member 'UGA_ExploitWeakness_C::GE_Debuff' has a wrong offset!");
static_assert(offsetof(UGA_ExploitWeakness_C, DuneCharacter) == 0x000560, "Member 'UGA_ExploitWeakness_C::DuneCharacter' has a wrong offset!");

}

