#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GroundVehicleHUD

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.TriggerWarningMessageModuleBroken
// 0x0190 (0x0190 - 0x0000)
struct W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00C8(0x0018)()
	EVehicleModuleType                            Temp_byte_Variable_1;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_2;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_3;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_4;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_5;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_6;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_7;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_8;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_9;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_10;                             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_11;                             // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_12;                             // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_13;                             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_14;                             // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_15;                             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_16;                             // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_17;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_18;                             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_19;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_20;                             // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_21;                             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_22;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_23;                             // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_24;                             // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_25;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_26;                             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_27;                             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           K2Node_Select_Default;                             // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0100(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0118(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
};
static_assert(alignof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken) == 0x000008, "Wrong alignment on W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken");
static_assert(sizeof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken) == 0x000190, "Wrong size on W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, ModuleType) == 0x000000, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::ModuleType' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable) == 0x000001, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable) == 0x000008, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_1) == 0x000020, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_2) == 0x000038, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_3) == 0x000050, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_4) == 0x000068, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_5) == 0x000080, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_6) == 0x000098, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_7) == 0x0000B0, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_text_Variable_8) == 0x0000C8, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_1) == 0x0000E0, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_2) == 0x0000E1, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_3) == 0x0000E2, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_4) == 0x0000E3, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_5) == 0x0000E4, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_6) == 0x0000E5, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_7) == 0x0000E6, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_8) == 0x0000E7, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_9) == 0x0000E8, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_10) == 0x0000E9, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_11) == 0x0000EA, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_12) == 0x0000EB, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_13) == 0x0000EC, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_14) == 0x0000ED, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_15) == 0x0000EE, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_16) == 0x0000EF, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_17) == 0x0000F0, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_18) == 0x0000F1, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_19) == 0x0000F2, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_20) == 0x0000F3, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_21) == 0x0000F4, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_22) == 0x0000F5, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_23) == 0x0000F6, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_24) == 0x0000F7, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_25) == 0x0000F8, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_26) == 0x0000F9, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, Temp_byte_Variable_27) == 0x0000FA, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, K2Node_Select_Default) == 0x0000FB, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, K2Node_Select_Default_1) == 0x000100, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, K2Node_MakeStruct_FormatArgumentData) == 0x000118, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, K2Node_MakeArray_Array) == 0x000168, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken, CallFunc_Format_ReturnValue) == 0x000178, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleBroken::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.TriggerWarningMessageModuleAboutToBreak
// 0x0190 (0x0190 - 0x0000)
struct W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00C8(0x0018)()
	EVehicleModuleType                            Temp_byte_Variable_1;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_2;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_3;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_4;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_5;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_6;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_7;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_8;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_9;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_10;                             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_11;                             // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_12;                             // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_13;                             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_14;                             // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_15;                             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_16;                             // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_17;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_18;                             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_19;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_20;                             // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_21;                             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_22;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_23;                             // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_24;                             // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_25;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_26;                             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           Temp_byte_Variable_27;                             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleClass                           K2Node_Select_Default;                             // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0100(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0118(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
};
static_assert(alignof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak) == 0x000008, "Wrong alignment on W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak");
static_assert(sizeof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak) == 0x000190, "Wrong size on W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, ModuleType) == 0x000000, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::ModuleType' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable) == 0x000001, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable) == 0x000008, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_1) == 0x000020, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_2) == 0x000038, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_3) == 0x000050, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_4) == 0x000068, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_5) == 0x000080, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_6) == 0x000098, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_7) == 0x0000B0, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_text_Variable_8) == 0x0000C8, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_1) == 0x0000E0, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_2) == 0x0000E1, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_3) == 0x0000E2, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_4) == 0x0000E3, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_5) == 0x0000E4, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_6) == 0x0000E5, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_7) == 0x0000E6, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_8) == 0x0000E7, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_9) == 0x0000E8, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_10) == 0x0000E9, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_11) == 0x0000EA, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_12) == 0x0000EB, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_13) == 0x0000EC, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_14) == 0x0000ED, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_15) == 0x0000EE, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_16) == 0x0000EF, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_17) == 0x0000F0, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_18) == 0x0000F1, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_19) == 0x0000F2, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_20) == 0x0000F3, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_21) == 0x0000F4, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_22) == 0x0000F5, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_23) == 0x0000F6, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_24) == 0x0000F7, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_25) == 0x0000F8, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_26) == 0x0000F9, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, Temp_byte_Variable_27) == 0x0000FA, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, K2Node_Select_Default) == 0x0000FB, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, K2Node_Select_Default_1) == 0x000100, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, K2Node_MakeStruct_FormatArgumentData) == 0x000118, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, K2Node_MakeArray_Array) == 0x000168, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak, CallFunc_Format_ReturnValue) == 0x000178, "Member 'W_GroundVehicleHUD_C_TriggerWarningMessageModuleAboutToBreak::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.SetTemperatureState
// 0x0018 (0x0018 - 0x0000)
struct W_GroundVehicleHUD_C_SetTemperatureState final
{
public:
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_SetTemperatureState) == 0x000008, "Wrong alignment on W_GroundVehicleHUD_C_SetTemperatureState");
static_assert(sizeof(W_GroundVehicleHUD_C_SetTemperatureState) == 0x000018, "Wrong size on W_GroundVehicleHUD_C_SetTemperatureState");
static_assert(offsetof(W_GroundVehicleHUD_C_SetTemperatureState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000000, "Member 'W_GroundVehicleHUD_C_SetTemperatureState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetTemperatureState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'W_GroundVehicleHUD_C_SetTemperatureState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetTemperatureState, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000008, "Member 'W_GroundVehicleHUD_C_SetTemperatureState::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetTemperatureState, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'W_GroundVehicleHUD_C_SetTemperatureState::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.SetHealthState
// 0x0001 (0x0001 - 0x0000)
struct W_GroundVehicleHUD_C_SetHealthState final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_SetHealthState) == 0x000001, "Wrong alignment on W_GroundVehicleHUD_C_SetHealthState");
static_assert(sizeof(W_GroundVehicleHUD_C_SetHealthState) == 0x000001, "Wrong size on W_GroundVehicleHUD_C_SetHealthState");
static_assert(offsetof(W_GroundVehicleHUD_C_SetHealthState, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'W_GroundVehicleHUD_C_SetHealthState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.SetFuelState
// 0x0030 (0x0030 - 0x0000)
struct W_GroundVehicleHUD_C_SetFuelState final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_SetFuelState) == 0x000008, "Wrong alignment on W_GroundVehicleHUD_C_SetFuelState");
static_assert(sizeof(W_GroundVehicleHUD_C_SetFuelState) == 0x000030, "Wrong size on W_GroundVehicleHUD_C_SetFuelState");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000011, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000012, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000013, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000015, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000016, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x000017, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_BooleanOR_ReturnValue_1) == 0x00001A, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_BooleanAND_ReturnValue_2) == 0x00001C, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_SetFuelState, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'W_GroundVehicleHUD_C_SetFuelState::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_GroundVehicleHUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_PreConstruct) == 0x000001, "Wrong alignment on W_GroundVehicleHUD_C_PreConstruct");
static_assert(sizeof(W_GroundVehicleHUD_C_PreConstruct) == 0x000001, "Wrong size on W_GroundVehicleHUD_C_PreConstruct");
static_assert(offsetof(W_GroundVehicleHUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_GroundVehicleHUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.OnVehicleModuleBroken
// 0x0001 (0x0001 - 0x0000)
struct W_GroundVehicleHUD_C_OnVehicleModuleBroken final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_OnVehicleModuleBroken) == 0x000001, "Wrong alignment on W_GroundVehicleHUD_C_OnVehicleModuleBroken");
static_assert(sizeof(W_GroundVehicleHUD_C_OnVehicleModuleBroken) == 0x000001, "Wrong size on W_GroundVehicleHUD_C_OnVehicleModuleBroken");
static_assert(offsetof(W_GroundVehicleHUD_C_OnVehicleModuleBroken, ModuleType) == 0x000000, "Member 'W_GroundVehicleHUD_C_OnVehicleModuleBroken::ModuleType' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.OnVehicleModuleAboutToBreak
// 0x0001 (0x0001 - 0x0000)
struct W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak final
{
public:
	EVehicleModuleType                            ModuleType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak) == 0x000001, "Wrong alignment on W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak");
static_assert(sizeof(W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak) == 0x000001, "Wrong size on W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak");
static_assert(offsetof(W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak, ModuleType) == 0x000000, "Member 'W_GroundVehicleHUD_C_OnVehicleModuleAboutToBreak::ModuleType' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.OnTemperatureChanged
// 0x0004 (0x0004 - 0x0000)
struct W_GroundVehicleHUD_C_OnTemperatureChanged final
{
public:
	float                                         CurrentTemperature;                                // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_OnTemperatureChanged) == 0x000004, "Wrong alignment on W_GroundVehicleHUD_C_OnTemperatureChanged");
static_assert(sizeof(W_GroundVehicleHUD_C_OnTemperatureChanged) == 0x000004, "Wrong size on W_GroundVehicleHUD_C_OnTemperatureChanged");
static_assert(offsetof(W_GroundVehicleHUD_C_OnTemperatureChanged, CurrentTemperature) == 0x000000, "Member 'W_GroundVehicleHUD_C_OnTemperatureChanged::CurrentTemperature' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.OnIsPSUDisabledChanged
// 0x0001 (0x0001 - 0x0000)
struct W_GroundVehicleHUD_C_OnIsPSUDisabledChanged final
{
public:
	bool                                          bIsPSUDisabled;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_OnIsPSUDisabledChanged) == 0x000001, "Wrong alignment on W_GroundVehicleHUD_C_OnIsPSUDisabledChanged");
static_assert(sizeof(W_GroundVehicleHUD_C_OnIsPSUDisabledChanged) == 0x000001, "Wrong size on W_GroundVehicleHUD_C_OnIsPSUDisabledChanged");
static_assert(offsetof(W_GroundVehicleHUD_C_OnIsPSUDisabledChanged, bIsPSUDisabled) == 0x000000, "Member 'W_GroundVehicleHUD_C_OnIsPSUDisabledChanged::bIsPSUDisabled' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.OnFuelChanged
// 0x0004 (0x0004 - 0x0000)
struct W_GroundVehicleHUD_C_OnFuelChanged final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_OnFuelChanged) == 0x000004, "Wrong alignment on W_GroundVehicleHUD_C_OnFuelChanged");
static_assert(sizeof(W_GroundVehicleHUD_C_OnFuelChanged) == 0x000004, "Wrong size on W_GroundVehicleHUD_C_OnFuelChanged");
static_assert(offsetof(W_GroundVehicleHUD_C_OnFuelChanged, Fuel) == 0x000000, "Member 'W_GroundVehicleHUD_C_OnFuelChanged::Fuel' has a wrong offset!");

// Function W_GroundVehicleHUD.W_GroundVehicleHUD_C.ExecuteUbergraph_W_GroundVehicleHUD
// 0x0050 (0x0050 - 0x0000)
struct W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType_1;                         // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVehicleModuleType                            K2Node_Event_ModuleType;                           // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPSUDisabled;                       // 0x0006(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentTemperature;                   // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Fuel;                                 // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGUISettings*                           CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0014)()
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD) == 0x000008, "Wrong alignment on W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD");
static_assert(sizeof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD) == 0x000050, "Wrong size on W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, EntryPoint) == 0x000000, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_Event_ModuleType_1) == 0x000004, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_Event_ModuleType_1' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_Event_ModuleType) == 0x000005, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_Event_ModuleType' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_Event_bIsPSUDisabled) == 0x000006, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_Event_bIsPSUDisabled' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_Event_CurrentTemperature) == 0x000010, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_Event_CurrentTemperature' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_Event_Fuel) == 0x000014, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_Event_Fuel' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_Event_IsDesignTime) == 0x000018, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000020, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'W_GroundVehicleHUD_C_ExecuteUbergraph_W_GroundVehicleHUD::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

