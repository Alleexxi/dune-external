#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MutableCinematicActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MutableCinematicActor.BP_MutableCinematicActor_C
// 0x00E8 (0x04B8 - 0x03D0)
class ABP_MutableCinematicActor_C final : public AMutableCinematicActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCustomizableSkeletalComponent*         CustomizableSkeletalComponent;                     // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         tSandMaterialSpawnInOut_ParameterValue_0275A26145A71258290A33AEECF12260; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            tSandMaterialSpawnInOut__Direction_0275A26145A71258290A33AEECF12260; // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     tSandMaterialSpawnInOut;                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCustomizableObjectInstance*            Mutable_Instance;                                  // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHologram;                                       // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseMorphTargets;                                  // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseChaosClothPhysics;                             // 0x03FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideMaterials;                                    // 0x03FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Materials_to_Hide;                                 // 0x0400(0x0010)(Edit, BlueprintVisible)
	bool                                          Debug;                                             // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Ghola_Tattoo_Texture;                              // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Ghola_Tattoo_Opacity;                              // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Ghola_Tattoo_Emissive_Boost;                       // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              NewEventDispatcher;                                // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        Ghola_Tattoo_Pulse_Speed;                          // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Hologram_Color;                                    // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Hologram_Material;                                 // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     SandVisionMaterial;                                // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSandVision;                                     // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Ghola_Head_Material;                               // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UMaterialInstance*                      Male_Head_Base_Material;                           // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Female_Head_Base_Material;                         // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Male_Head_Ghola_Material;                          // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Female_Head_Ghola_Material;                        // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SandVisionParticles;                               // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlreadySpawned;                                  // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizableObjectInstance*            Current_Mutable_Instance;                          // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          GholaMutableFeatureEnabled;                        // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateMutableAppearance();
	void Update_Mutable_Appearance();
	void Update_Ghola_Tattoo();
	void UnhideMaterials();
	void tSandMaterialSpawnInOut__UpdateFunc();
	void tSandMaterialSpawnInOut__FinishedFunc();
	void SpawnSandVisionParticles();
	void SandVisionSpawnOut();
	void SandVisionSpawnIn();
	void ReceiveBeginPlay();
	void PostUserConstructionScript();
	void OpenDocumentation();
	void HideMaterials(TArray<class UMaterialInterface*>& Materials_to_Hide_0);
	void GholaUpdatedMutable(const struct FUpdateContext& Result);
	void ExecuteUbergraph_BP_MutableCinematicActor(int32 EntryPoint);
	void DisableSandVisionParticles();
	void ApplySandVisionEffect();
	void ApplyRequiredEffects(class UCustomizableObjectInstance* Instance);
	void ApplyHologramEffect();
	void Apply_Material_Effects();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MutableCinematicActor_C">();
	}
	static class ABP_MutableCinematicActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MutableCinematicActor_C>();
	}
};
static_assert(alignof(ABP_MutableCinematicActor_C) == 0x000008, "Wrong alignment on ABP_MutableCinematicActor_C");
static_assert(sizeof(ABP_MutableCinematicActor_C) == 0x0004B8, "Wrong size on ABP_MutableCinematicActor_C");
static_assert(offsetof(ABP_MutableCinematicActor_C, UberGraphFrame) == 0x0003D0, "Member 'ABP_MutableCinematicActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, CustomizableSkeletalComponent) == 0x0003D8, "Member 'ABP_MutableCinematicActor_C::CustomizableSkeletalComponent' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, tSandMaterialSpawnInOut_ParameterValue_0275A26145A71258290A33AEECF12260) == 0x0003E0, "Member 'ABP_MutableCinematicActor_C::tSandMaterialSpawnInOut_ParameterValue_0275A26145A71258290A33AEECF12260' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, tSandMaterialSpawnInOut__Direction_0275A26145A71258290A33AEECF12260) == 0x0003E4, "Member 'ABP_MutableCinematicActor_C::tSandMaterialSpawnInOut__Direction_0275A26145A71258290A33AEECF12260' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, tSandMaterialSpawnInOut) == 0x0003E8, "Member 'ABP_MutableCinematicActor_C::tSandMaterialSpawnInOut' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Mutable_Instance) == 0x0003F0, "Member 'ABP_MutableCinematicActor_C::Mutable_Instance' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, bIsHologram) == 0x0003F8, "Member 'ABP_MutableCinematicActor_C::bIsHologram' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, bUseMorphTargets) == 0x0003F9, "Member 'ABP_MutableCinematicActor_C::bUseMorphTargets' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, bUseChaosClothPhysics) == 0x0003FA, "Member 'ABP_MutableCinematicActor_C::bUseChaosClothPhysics' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, bHideMaterials) == 0x0003FB, "Member 'ABP_MutableCinematicActor_C::bHideMaterials' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Materials_to_Hide) == 0x000400, "Member 'ABP_MutableCinematicActor_C::Materials_to_Hide' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Debug) == 0x000410, "Member 'ABP_MutableCinematicActor_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Ghola_Tattoo_Texture) == 0x000418, "Member 'ABP_MutableCinematicActor_C::Ghola_Tattoo_Texture' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Ghola_Tattoo_Opacity) == 0x000420, "Member 'ABP_MutableCinematicActor_C::Ghola_Tattoo_Opacity' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Ghola_Tattoo_Emissive_Boost) == 0x000428, "Member 'ABP_MutableCinematicActor_C::Ghola_Tattoo_Emissive_Boost' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, NewEventDispatcher) == 0x000430, "Member 'ABP_MutableCinematicActor_C::NewEventDispatcher' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Ghola_Tattoo_Pulse_Speed) == 0x000440, "Member 'ABP_MutableCinematicActor_C::Ghola_Tattoo_Pulse_Speed' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Hologram_Color) == 0x000448, "Member 'ABP_MutableCinematicActor_C::Hologram_Color' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Hologram_Material) == 0x000458, "Member 'ABP_MutableCinematicActor_C::Hologram_Material' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, SandVisionMaterial) == 0x000460, "Member 'ABP_MutableCinematicActor_C::SandVisionMaterial' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, bIsSandVision) == 0x000468, "Member 'ABP_MutableCinematicActor_C::bIsSandVision' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Ghola_Head_Material) == 0x000470, "Member 'ABP_MutableCinematicActor_C::Ghola_Head_Material' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Male_Head_Base_Material) == 0x000478, "Member 'ABP_MutableCinematicActor_C::Male_Head_Base_Material' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Female_Head_Base_Material) == 0x000480, "Member 'ABP_MutableCinematicActor_C::Female_Head_Base_Material' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Male_Head_Ghola_Material) == 0x000488, "Member 'ABP_MutableCinematicActor_C::Male_Head_Ghola_Material' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Female_Head_Ghola_Material) == 0x000490, "Member 'ABP_MutableCinematicActor_C::Female_Head_Ghola_Material' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, SandVisionParticles) == 0x000498, "Member 'ABP_MutableCinematicActor_C::SandVisionParticles' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, IsAlreadySpawned) == 0x0004A0, "Member 'ABP_MutableCinematicActor_C::IsAlreadySpawned' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, Current_Mutable_Instance) == 0x0004A8, "Member 'ABP_MutableCinematicActor_C::Current_Mutable_Instance' has a wrong offset!");
static_assert(offsetof(ABP_MutableCinematicActor_C, GholaMutableFeatureEnabled) == 0x0004B0, "Member 'ABP_MutableCinematicActor_C::GholaMutableFeatureEnabled' has a wrong offset!");

}

