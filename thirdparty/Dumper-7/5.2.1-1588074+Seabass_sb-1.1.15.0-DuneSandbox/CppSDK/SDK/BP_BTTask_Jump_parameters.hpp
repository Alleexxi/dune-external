#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTTask_Jump

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BTTask_Jump.BP_BTTask_Jump_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BP_BTTask_Jump_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTTask_Jump_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BP_BTTask_Jump_C_ReceiveExecuteAI");
static_assert(sizeof(BP_BTTask_Jump_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BP_BTTask_Jump_C_ReceiveExecuteAI");
static_assert(offsetof(BP_BTTask_Jump_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BP_BTTask_Jump_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BP_BTTask_Jump_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BP_BTTask_Jump.BP_BTTask_Jump_C.ExecuteUbergraph_BP_BTTask_Jump
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJump_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump) == 0x000008, "Wrong alignment on BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump");
static_assert(sizeof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump) == 0x0000D0, "Wrong size on BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, EntryPoint) == 0x000000, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, K2Node_Event_OwnerController) == 0x000008, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, K2Node_DynamicCast_AsCharacter_1) == 0x000040, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_CanJump_ReturnValue) == 0x000068, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_CanJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000070, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_BTTask_Jump_C_ExecuteUbergraph_BP_BTTask_Jump::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

