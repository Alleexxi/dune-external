#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReplicationGraph

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "ReplicationGraph_structs.hpp"


namespace SDK
{

// Class ReplicationGraph.ReplicationGraphNode
// 0x0028 (0x0058 - 0x0030)
class UReplicationGraphNode : public UObject
{
public:
	TArray<class UReplicationGraphNode*>          AllChildNodes;                                     // 0x0030(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode">();
	}
	static class UReplicationGraphNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode>();
	}
};
static_assert(alignof(UReplicationGraphNode) == 0x000008, "Wrong alignment on UReplicationGraphNode");
static_assert(sizeof(UReplicationGraphNode) == 0x000058, "Wrong size on UReplicationGraphNode");
static_assert(offsetof(UReplicationGraphNode, AllChildNodes) == 0x000030, "Member 'UReplicationGraphNode::AllChildNodes' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphNode_ActorListFrequencyBuckets
// 0x00C8 (0x0120 - 0x0058)
class UReplicationGraphNode_ActorListFrequencyBuckets final : public UReplicationGraphNode
{
public:
	uint8                                         Pad_58[0xC8];                                      // 0x0058(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_ActorListFrequencyBuckets">();
	}
	static class UReplicationGraphNode_ActorListFrequencyBuckets* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_ActorListFrequencyBuckets>();
	}
};
static_assert(alignof(UReplicationGraphNode_ActorListFrequencyBuckets) == 0x000008, "Wrong alignment on UReplicationGraphNode_ActorListFrequencyBuckets");
static_assert(sizeof(UReplicationGraphNode_ActorListFrequencyBuckets) == 0x000120, "Wrong size on UReplicationGraphNode_ActorListFrequencyBuckets");

// Class ReplicationGraph.NetReplicationGraphConnection
// 0x03E8 (0x0418 - 0x0030)
class UNetReplicationGraphConnection : public UReplicationConnectionDriver
{
public:
	class UNetConnection*                         NetConnection;                                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x194];                                     // 0x0038(0x0194)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AReplicationGraphDebugActor> DebugActor;                                    // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLastLocationGatherInfo>        LastGatherLocations;                               // 0x01D8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E8[0xF8];                                     // 0x01E8(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UReplicationGraphNode*>          ConnectionGraphNodes;                              // 0x02E0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode_TearOff_ForConnection* TearOffNode;                                  // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x120];                                    // 0x02F8(0x0120)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetReplicationGraphConnection">();
	}
	static class UNetReplicationGraphConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetReplicationGraphConnection>();
	}
};
static_assert(alignof(UNetReplicationGraphConnection) == 0x000008, "Wrong alignment on UNetReplicationGraphConnection");
static_assert(sizeof(UNetReplicationGraphConnection) == 0x000418, "Wrong size on UNetReplicationGraphConnection");
static_assert(offsetof(UNetReplicationGraphConnection, NetConnection) == 0x000030, "Member 'UNetReplicationGraphConnection::NetConnection' has a wrong offset!");
static_assert(offsetof(UNetReplicationGraphConnection, DebugActor) == 0x0001CC, "Member 'UNetReplicationGraphConnection::DebugActor' has a wrong offset!");
static_assert(offsetof(UNetReplicationGraphConnection, LastGatherLocations) == 0x0001D8, "Member 'UNetReplicationGraphConnection::LastGatherLocations' has a wrong offset!");
static_assert(offsetof(UNetReplicationGraphConnection, ConnectionGraphNodes) == 0x0002E0, "Member 'UNetReplicationGraphConnection::ConnectionGraphNodes' has a wrong offset!");
static_assert(offsetof(UNetReplicationGraphConnection, TearOffNode) == 0x0002F0, "Member 'UNetReplicationGraphConnection::TearOffNode' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphNode_ActorList
// 0x0080 (0x00D8 - 0x0058)
class UReplicationGraphNode_ActorList : public UReplicationGraphNode
{
public:
	uint8                                         Pad_58[0x80];                                      // 0x0058(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_ActorList">();
	}
	static class UReplicationGraphNode_ActorList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_ActorList>();
	}
};
static_assert(alignof(UReplicationGraphNode_ActorList) == 0x000008, "Wrong alignment on UReplicationGraphNode_ActorList");
static_assert(sizeof(UReplicationGraphNode_ActorList) == 0x0000D8, "Wrong size on UReplicationGraphNode_ActorList");

// Class ReplicationGraph.ReplicationGraph
// 0x0690 (0x06C0 - 0x0030)
#pragma pack(push, 0x1)
class alignas(0x40) UReplicationGraph : public UReplicationDriver
{
public:
	TSubclassOf<class UNetReplicationGraphConnection> ReplicationConnectionManagerClass;             // 0x0030(0x0008)(ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNetDriver*                             NetDriver;                                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNetReplicationGraphConnection*> Connections;                                       // 0x0040(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UNetReplicationGraphConnection*> PendingConnections;                                // 0x0050(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x30];                                      // 0x0060(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UReplicationGraphNode*>          GlobalGraphNodes;                                  // 0x0090(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UReplicationGraphNode*>          PrepareForReplicationNodes;                        // 0x00A0(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x5E8];                                     // 0x00B0(0x05E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraph">();
	}
	static class UReplicationGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraph>();
	}
};
#pragma pack(pop)
static_assert(alignof(UReplicationGraph) == 0x000040, "Wrong alignment on UReplicationGraph");
static_assert(sizeof(UReplicationGraph) == 0x0006C0, "Wrong size on UReplicationGraph");
static_assert(offsetof(UReplicationGraph, ReplicationConnectionManagerClass) == 0x000030, "Member 'UReplicationGraph::ReplicationConnectionManagerClass' has a wrong offset!");
static_assert(offsetof(UReplicationGraph, NetDriver) == 0x000038, "Member 'UReplicationGraph::NetDriver' has a wrong offset!");
static_assert(offsetof(UReplicationGraph, Connections) == 0x000040, "Member 'UReplicationGraph::Connections' has a wrong offset!");
static_assert(offsetof(UReplicationGraph, PendingConnections) == 0x000050, "Member 'UReplicationGraph::PendingConnections' has a wrong offset!");
static_assert(offsetof(UReplicationGraph, GlobalGraphNodes) == 0x000090, "Member 'UReplicationGraph::GlobalGraphNodes' has a wrong offset!");
static_assert(offsetof(UReplicationGraph, PrepareForReplicationNodes) == 0x0000A0, "Member 'UReplicationGraph::PrepareForReplicationNodes' has a wrong offset!");

// Class ReplicationGraph.BasicReplicationGraph
// 0x0040 (0x0700 - 0x06C0)
class UBasicReplicationGraph final : public UReplicationGraph
{
public:
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                      // 0x0698(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*        AlwaysRelevantNode;                                // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConnectionAlwaysRelevantNodePair> AlwaysRelevantForConnectionList;                // 0x06A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         ActorsWithoutNetConnection;                        // 0x06B8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C8[0x38];                                     // 0x06C8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BasicReplicationGraph">();
	}
	static class UBasicReplicationGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasicReplicationGraph>();
	}
};
static_assert(alignof(UBasicReplicationGraph) == 0x000040, "Wrong alignment on UBasicReplicationGraph");
static_assert(sizeof(UBasicReplicationGraph) == 0x000700, "Wrong size on UBasicReplicationGraph");
static_assert(offsetof(UBasicReplicationGraph, GridNode) == 0x000698, "Member 'UBasicReplicationGraph::GridNode' has a wrong offset!");
static_assert(offsetof(UBasicReplicationGraph, AlwaysRelevantNode) == 0x0006A0, "Member 'UBasicReplicationGraph::AlwaysRelevantNode' has a wrong offset!");
static_assert(offsetof(UBasicReplicationGraph, AlwaysRelevantForConnectionList) == 0x0006A8, "Member 'UBasicReplicationGraph::AlwaysRelevantForConnectionList' has a wrong offset!");
static_assert(offsetof(UBasicReplicationGraph, ActorsWithoutNetConnection) == 0x0006B8, "Member 'UBasicReplicationGraph::ActorsWithoutNetConnection' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphNode_GridSpatialization2D
// 0x0238 (0x0290 - 0x0058)
class UReplicationGraphNode_GridSpatialization2D : public UReplicationGraphNode
{
public:
	uint8                                         Pad_58[0x238];                                     // 0x0058(0x0238)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_GridSpatialization2D">();
	}
	static class UReplicationGraphNode_GridSpatialization2D* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_GridSpatialization2D>();
	}
};
static_assert(alignof(UReplicationGraphNode_GridSpatialization2D) == 0x000008, "Wrong alignment on UReplicationGraphNode_GridSpatialization2D");
static_assert(sizeof(UReplicationGraphNode_GridSpatialization2D) == 0x000290, "Wrong size on UReplicationGraphNode_GridSpatialization2D");

// Class ReplicationGraph.FastSharedReplicationInterface
// 0x0000 (0x0000 - 0x0000)
class IFastSharedReplicationInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FastSharedReplicationInterface">();
	}
	static class IFastSharedReplicationInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFastSharedReplicationInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IFastSharedReplicationInterface) == 0x000001, "Wrong alignment on IFastSharedReplicationInterface");
static_assert(sizeof(IFastSharedReplicationInterface) == 0x000001, "Wrong size on IFastSharedReplicationInterface");

// Class ReplicationGraph.ReplicationGraphNode_DynamicSpatialFrequency
// 0x0018 (0x00F0 - 0x00D8)
class UReplicationGraphNode_DynamicSpatialFrequency final : public UReplicationGraphNode_ActorList
{
public:
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_DynamicSpatialFrequency">();
	}
	static class UReplicationGraphNode_DynamicSpatialFrequency* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_DynamicSpatialFrequency>();
	}
};
static_assert(alignof(UReplicationGraphNode_DynamicSpatialFrequency) == 0x000008, "Wrong alignment on UReplicationGraphNode_DynamicSpatialFrequency");
static_assert(sizeof(UReplicationGraphNode_DynamicSpatialFrequency) == 0x0000F0, "Wrong size on UReplicationGraphNode_DynamicSpatialFrequency");

// Class ReplicationGraph.ReplicationGraphNode_ConnectionDormancyNode
// 0x0080 (0x0158 - 0x00D8)
class UReplicationGraphNode_ConnectionDormancyNode final : public UReplicationGraphNode_ActorList
{
public:
	uint8                                         Pad_D8[0x80];                                      // 0x00D8(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_ConnectionDormancyNode">();
	}
	static class UReplicationGraphNode_ConnectionDormancyNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_ConnectionDormancyNode>();
	}
};
static_assert(alignof(UReplicationGraphNode_ConnectionDormancyNode) == 0x000008, "Wrong alignment on UReplicationGraphNode_ConnectionDormancyNode");
static_assert(sizeof(UReplicationGraphNode_ConnectionDormancyNode) == 0x000158, "Wrong size on UReplicationGraphNode_ConnectionDormancyNode");

// Class ReplicationGraph.ReplicationGraphNode_DormancyNode
// 0x0048 (0x0120 - 0x00D8)
class UReplicationGraphNode_DormancyNode final : public UReplicationGraphNode_ActorList
{
public:
	uint8                                         Pad_D8[0x48];                                      // 0x00D8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_DormancyNode">();
	}
	static class UReplicationGraphNode_DormancyNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_DormancyNode>();
	}
};
static_assert(alignof(UReplicationGraphNode_DormancyNode) == 0x000008, "Wrong alignment on UReplicationGraphNode_DormancyNode");
static_assert(sizeof(UReplicationGraphNode_DormancyNode) == 0x000120, "Wrong size on UReplicationGraphNode_DormancyNode");

// Class ReplicationGraph.ReplicationGraphNode_GridCell
// 0x00A8 (0x0180 - 0x00D8)
class alignas(0x10) UReplicationGraphNode_GridCell final : public UReplicationGraphNode_ActorList
{
public:
	uint8                                         Pad_D8[0x88];                                      // 0x00D8(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UReplicationGraphNode*                  PriorityNode;                                      // 0x0160(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode*                  DynamicNode;                                       // 0x0168(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReplicationGraphNode_DormancyNode*     DormancyNode;                                      // 0x0170(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_GridCell">();
	}
	static class UReplicationGraphNode_GridCell* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_GridCell>();
	}
};
static_assert(alignof(UReplicationGraphNode_GridCell) == 0x000010, "Wrong alignment on UReplicationGraphNode_GridCell");
static_assert(sizeof(UReplicationGraphNode_GridCell) == 0x000180, "Wrong size on UReplicationGraphNode_GridCell");
static_assert(offsetof(UReplicationGraphNode_GridCell, PriorityNode) == 0x000160, "Member 'UReplicationGraphNode_GridCell::PriorityNode' has a wrong offset!");
static_assert(offsetof(UReplicationGraphNode_GridCell, DynamicNode) == 0x000168, "Member 'UReplicationGraphNode_GridCell::DynamicNode' has a wrong offset!");
static_assert(offsetof(UReplicationGraphNode_GridCell, DormancyNode) == 0x000170, "Member 'UReplicationGraphNode_GridCell::DormancyNode' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphNode_AlwaysRelevant
// 0x0018 (0x0070 - 0x0058)
class UReplicationGraphNode_AlwaysRelevant final : public UReplicationGraphNode
{
public:
	class UReplicationGraphNode*                  ChildNode;                                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_AlwaysRelevant">();
	}
	static class UReplicationGraphNode_AlwaysRelevant* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_AlwaysRelevant>();
	}
};
static_assert(alignof(UReplicationGraphNode_AlwaysRelevant) == 0x000008, "Wrong alignment on UReplicationGraphNode_AlwaysRelevant");
static_assert(sizeof(UReplicationGraphNode_AlwaysRelevant) == 0x000070, "Wrong size on UReplicationGraphNode_AlwaysRelevant");
static_assert(offsetof(UReplicationGraphNode_AlwaysRelevant, ChildNode) == 0x000058, "Member 'UReplicationGraphNode_AlwaysRelevant::ChildNode' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0070 (0x0148 - 0x00D8)
class UReplicationGraphNode_AlwaysRelevant_ForConnection final : public UReplicationGraphNode_ActorList
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAlwaysRelevantActorInfo>       PastRelevantActors;                                // 0x00E8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0x50];                                      // 0x00F8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_AlwaysRelevant_ForConnection">();
	}
	static class UReplicationGraphNode_AlwaysRelevant_ForConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_AlwaysRelevant_ForConnection>();
	}
};
static_assert(alignof(UReplicationGraphNode_AlwaysRelevant_ForConnection) == 0x000008, "Wrong alignment on UReplicationGraphNode_AlwaysRelevant_ForConnection");
static_assert(sizeof(UReplicationGraphNode_AlwaysRelevant_ForConnection) == 0x000148, "Wrong size on UReplicationGraphNode_AlwaysRelevant_ForConnection");
static_assert(offsetof(UReplicationGraphNode_AlwaysRelevant_ForConnection, PastRelevantActors) == 0x0000E8, "Member 'UReplicationGraphNode_AlwaysRelevant_ForConnection::PastRelevantActors' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphNode_TearOff_ForConnection
// 0x0020 (0x0078 - 0x0058)
class UReplicationGraphNode_TearOff_ForConnection final : public UReplicationGraphNode
{
public:
	TArray<struct FTearOffActorInfo>              TearOffActors;                                     // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphNode_TearOff_ForConnection">();
	}
	static class UReplicationGraphNode_TearOff_ForConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplicationGraphNode_TearOff_ForConnection>();
	}
};
static_assert(alignof(UReplicationGraphNode_TearOff_ForConnection) == 0x000008, "Wrong alignment on UReplicationGraphNode_TearOff_ForConnection");
static_assert(sizeof(UReplicationGraphNode_TearOff_ForConnection) == 0x000078, "Wrong size on UReplicationGraphNode_TearOff_ForConnection");
static_assert(offsetof(UReplicationGraphNode_TearOff_ForConnection, TearOffActors) == 0x000058, "Member 'UReplicationGraphNode_TearOff_ForConnection::TearOffActors' has a wrong offset!");

// Class ReplicationGraph.ReplicationGraphDebugActor
// 0x0010 (0x0360 - 0x0350)
class AReplicationGraphDebugActor final : public AActor
{
public:
	class UReplicationGraph*                      ReplicationGraph;                                  // 0x0350(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNetReplicationGraphConnection*         ConnectionManager;                                 // 0x0358(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ClientCellInfo(const struct FVector& CellLocation, float CellSize, const TArray<class AActor*>& Actors, const class FString& CellName);
	void ServerCellInfo();
	void ServerPrintAllActorInfo(const class FString& Str);
	void ServerPrintCullDistances();
	void ServerSetConditionalActorBreakpoint(class AActor* Actor);
	void ServerSetCullDistanceForClass(class UClass* Class_0, float CullDistance);
	void ServerSetPeriodFrameForClass(class UClass* Class_0, int32 PeriodFrame);
	void ServerStartDebugging();
	void ServerStopDebugging();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReplicationGraphDebugActor">();
	}
	static class AReplicationGraphDebugActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReplicationGraphDebugActor>();
	}
};
static_assert(alignof(AReplicationGraphDebugActor) == 0x000008, "Wrong alignment on AReplicationGraphDebugActor");
static_assert(sizeof(AReplicationGraphDebugActor) == 0x000360, "Wrong size on AReplicationGraphDebugActor");
static_assert(offsetof(AReplicationGraphDebugActor, ReplicationGraph) == 0x000350, "Member 'AReplicationGraphDebugActor::ReplicationGraph' has a wrong offset!");
static_assert(offsetof(AReplicationGraphDebugActor, ConnectionManager) == 0x000358, "Member 'AReplicationGraphDebugActor::ConnectionManager' has a wrong offset!");

}

