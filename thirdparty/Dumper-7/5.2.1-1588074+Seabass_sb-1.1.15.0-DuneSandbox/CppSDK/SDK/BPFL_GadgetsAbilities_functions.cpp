#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_GadgetsAbilities

#include "Basic.hpp"

#include "BPFL_GadgetsAbilities_classes.hpp"
#include "BPFL_GadgetsAbilities_parameters.hpp"


namespace SDK
{

// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.Check Should Alternate Input Mode
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADunePlayerCharacter*             Dune_Player_Character                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBPFL_GadgetsAbilities_C::Check_Should_Alternate_Input_Mode(class ADunePlayerCharacter* Dune_Player_Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "Check Should Alternate Input Mode");

	Params::BPFL_GadgetsAbilities_C_Check_Should_Alternate_Input_Mode Parms{};

	Parms.Dune_Player_Character = Dune_Player_Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.GetAngleToActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           LookingActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float*                                  Angle_To_Attacker                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::GetAngleToActor(class AActor* LookingActor, class AActor* TargetActor, class UObject* __WorldContext, float* Angle_To_Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "GetAngleToActor");

	Params::BPFL_GadgetsAbilities_C_GetAngleToActor Parms{};

	Parms.LookingActor = LookingActor;
	Parms.TargetActor = TargetActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Angle_To_Attacker != nullptr)
		*Angle_To_Attacker = Parms.Angle_To_Attacker;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsAbilityUsingHoldInput
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Ability_Owner                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    In_Gamepad_Uses_Hold_Input                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    In_Keyboard_Uses_Hold_Input                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Uses_Hold_Input                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::IsAbilityUsingHoldInput(class AActor* Ability_Owner, bool In_Gamepad_Uses_Hold_Input, bool In_Keyboard_Uses_Hold_Input, class UObject* __WorldContext, bool* Uses_Hold_Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "IsAbilityUsingHoldInput");

	Params::BPFL_GadgetsAbilities_C_IsAbilityUsingHoldInput Parms{};

	Parms.Ability_Owner = Ability_Owner;
	Parms.In_Gamepad_Uses_Hold_Input = In_Gamepad_Uses_Hold_Input;
	Parms.In_Keyboard_Uses_Hold_Input = In_Keyboard_Uses_Hold_Input;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Uses_Hold_Input != nullptr)
		*Uses_Hold_Input = Parms.Uses_Hold_Input;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsActorFacingTarget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           LookingActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsLooking                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::IsActorFacingTarget(class AActor* LookingActor, class AActor* TargetActor, double Angle, class UObject* __WorldContext, bool* IsLooking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "IsActorFacingTarget");

	Params::BPFL_GadgetsAbilities_C_IsActorFacingTarget Parms{};

	Parms.LookingActor = LookingActor;
	Parms.TargetActor = TargetActor;
	Parms.Angle = Angle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsLooking != nullptr)
		*IsLooking = Parms.IsLooking;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsDamageTypeInArray
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UClass*>&                  Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UClass*                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::IsDamageTypeInArray(TArray<class UClass*>& Filter, class UClass* DamageType, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "IsDamageTypeInArray");

	Params::BPFL_GadgetsAbilities_C_IsDamageTypeInArray Parms{};

	Parms.Filter = std::move(Filter);
	Parms.DamageType = DamageType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Filter = std::move(Parms.Filter);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.IsDamageTypeInSet
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const TSet<class UClass*>&              Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UClass*                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::IsDamageTypeInSet(const TSet<class UClass*>& Filter, class UClass* DamageType, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "IsDamageTypeInSet");

	Params::BPFL_GadgetsAbilities_C_IsDamageTypeInSet Parms{};

	Parms.Filter = std::move(Filter);
	Parms.DamageType = DamageType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.MulticastPlayAudioOnCharacter
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFcAudioEvent*                    AudioEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DuneCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::MulticastPlayAudioOnCharacter(class UFcAudioEvent* AudioEvent, class AActor* DuneCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "MulticastPlayAudioOnCharacter");

	Params::BPFL_GadgetsAbilities_C_MulticastPlayAudioOnCharacter Parms{};

	Parms.AudioEvent = AudioEvent;
	Parms.DuneCharacter = DuneCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.PlayAudioOnCharacter
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UFcAudioEvent*              AudioEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DuneCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::PlayAudioOnCharacter(const class UFcAudioEvent* AudioEvent, class AActor* DuneCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "PlayAudioOnCharacter");

	Params::BPFL_GadgetsAbilities_C_PlayAudioOnCharacter Parms{};

	Parms.AudioEvent = AudioEvent;
	Parms.DuneCharacter = DuneCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetCameraContextEnabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             CameraContext                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::SetCameraContextEnabled(class AActor* Actor, class FName CameraContext, bool bIsEnabled, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "SetCameraContextEnabled");

	Params::BPFL_GadgetsAbilities_C_SetCameraContextEnabled Parms{};

	Parms.Actor = Actor;
	Parms.CameraContext = CameraContext;
	Parms.bIsEnabled = bIsEnabled;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetHUDModeOverrideActive
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const EHUDMode                          NewHUDMode                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldBeActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHUDMode&                               CachedPreviousMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool&                                   CachedIsOverrideActive                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::SetHUDModeOverrideActive(class AActor* Actor, const EHUDMode NewHUDMode, bool ShouldBeActive, EHUDMode& CachedPreviousMode, bool& CachedIsOverrideActive, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "SetHUDModeOverrideActive");

	Params::BPFL_GadgetsAbilities_C_SetHUDModeOverrideActive Parms{};

	Parms.Actor = Actor;
	Parms.NewHUDMode = NewHUDMode;
	Parms.ShouldBeActive = ShouldBeActive;
	Parms.CachedPreviousMode = CachedPreviousMode;
	Parms.CachedIsOverrideActive = CachedIsOverrideActive;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	CachedPreviousMode = Parms.CachedPreviousMode;
	CachedIsOverrideActive = Parms.CachedIsOverrideActive;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetInputContextEnabled
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             InputContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::SetInputContextEnabled(class AActor* Actor, class FName InputContext, bool bIsEnabled, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "SetInputContextEnabled");

	Params::BPFL_GadgetsAbilities_C_SetInputContextEnabled Parms{};

	Parms.Actor = Actor;
	Parms.InputContext = InputContext;
	Parms.bIsEnabled = bIsEnabled;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.SetMovementInputBlockActive
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool&                                   IsMovementInputBlocked                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldBeBlocked                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::SetMovementInputBlockActive(class AActor* Actor, bool& IsMovementInputBlocked, bool ShouldBeBlocked, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "SetMovementInputBlockActive");

	Params::BPFL_GadgetsAbilities_C_SetMovementInputBlockActive Parms{};

	Parms.Actor = Actor;
	Parms.IsMovementInputBlocked = IsMovementInputBlocked;
	Parms.ShouldBeBlocked = ShouldBeBlocked;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	IsMovementInputBlocked = Parms.IsMovementInputBlocked;
}


// Function BPFL_GadgetsAbilities.BPFL_GadgetsAbilities_C.StopAudioOnCharacter
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UFcAudioEvent*              AudioEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DuneCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_GadgetsAbilities_C::StopAudioOnCharacter(const class UFcAudioEvent* AudioEvent, class AActor* DuneCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_GadgetsAbilities_C", "StopAudioOnCharacter");

	Params::BPFL_GadgetsAbilities_C_StopAudioOnCharacter Parms{};

	Parms.AudioEvent = AudioEvent;
	Parms.DuneCharacter = DuneCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

