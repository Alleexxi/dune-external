#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MercunaNavLink_Vault

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mercuna_structs.hpp"


namespace SDK::Params
{

// Function BP_MercunaNavLink_Vault.BP_MercunaNavLink_Vault_C.ReceiveNavLinkStart
// 0x0028 (0x0028 - 0x0000)
struct BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMercunaNavigationLinkDirection               Direction;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Destination;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart) == 0x000008, "Wrong alignment on BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart");
static_assert(sizeof(BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart) == 0x000028, "Wrong size on BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart, Pawn) == 0x000000, "Member 'BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart::Pawn' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart, Direction) == 0x000008, "Member 'BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart::Direction' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart, Destination) == 0x000010, "Member 'BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart::Destination' has a wrong offset!");

// Function BP_MercunaNavLink_Vault.BP_MercunaNavLink_Vault_C.ExecuteUbergraph_BP_MercunaNavLink_Vault
// 0x0078 (0x0078 - 0x0000)
struct BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMercunaNavigationLinkDirection               K2Node_Event_Direction;                            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Destination;                          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMercunaGroundNavigationComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateVelocity_Velocity;               // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault) == 0x000008, "Wrong alignment on BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault");
static_assert(sizeof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault) == 0x000078, "Wrong size on BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, EntryPoint) == 0x000000, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, K2Node_Event_Pawn) == 0x000008, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, K2Node_Event_Direction) == 0x000010, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, K2Node_Event_Destination) == 0x000018, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::K2Node_Event_Destination' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, K2Node_DynamicCast_AsDune_Character) == 0x000038, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault, CallFunc_CalculateVelocity_Velocity) == 0x000060, "Member 'BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault::CallFunc_CalculateVelocity_Velocity' has a wrong offset!");

// Function BP_MercunaNavLink_Vault.BP_MercunaNavLink_Vault_C.CalculateVelocity
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MercunaNavLink_Vault_C_CalculateVelocity final
{
public:
	struct FVector                                Destination_Location;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Starting_Location;                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MercunaNavLink_Vault_C_CalculateVelocity) == 0x000008, "Wrong alignment on BP_MercunaNavLink_Vault_C_CalculateVelocity");
static_assert(sizeof(BP_MercunaNavLink_Vault_C_CalculateVelocity) == 0x0000E8, "Wrong size on BP_MercunaNavLink_Vault_C_CalculateVelocity");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, Destination_Location) == 0x000000, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::Destination_Location' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, Starting_Location) == 0x000018, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::Starting_Location' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, Duration) == 0x000030, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::Duration' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, Velocity) == 0x000038, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_BreakVector_X_1) == 0x000068, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Square_ReturnValue) == 0x000088, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_Vault_C_CalculateVelocity, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'BP_MercunaNavLink_Vault_C_CalculateVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

