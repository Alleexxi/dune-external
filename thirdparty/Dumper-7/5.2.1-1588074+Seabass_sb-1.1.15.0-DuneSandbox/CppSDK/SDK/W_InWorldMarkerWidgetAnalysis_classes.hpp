#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InWorldMarkerWidgetAnalysis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_InWorldMarkerWidgetAnalysis.W_InWorldMarkerWidgetAnalysis_C
// 0x0080 (0x04E0 - 0x0460)
class UW_InWorldMarkerWidgetAnalysis_C final : public UInWorldMarkerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Transition2;                                       // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Transition;                                        // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Diamond;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              MarkerScaleBox;                                    // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Stalk;                                             // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StalkDiamondBottom;                                // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Far_Distance_State;                                // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IncreaseSizeFromDistance;                          // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinScale;                                          // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxScale;                                          // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        FarDistanceIconOnly;                               // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinOpacity;                                        // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxOpacity;                                        // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OpacityFullDistance;                               // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        OpacityZeroDistance;                               // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_InWorldMarkerWidgetAnalysis(int32 EntryPoint);
	void HasAnalysisText(bool* HasValidText);
	void HasDistanceStateChanged(double InDistance, bool InIsClosestMarker, bool* HasChanged, bool* DistanceState);
	void SetPlayerDistance(const float MetersToPlayer, const bool bIsClosestMarker);
	void Show_Close_Distance_State(bool Should_Animate_);
	void Show_Far_Distance_State(bool Should_Animate_);
	void UpdateDistanceState();
	void UpdateWidget(const struct FEMapMarker& MarkerType, const struct FFullscreenMapMarkerRowBase& MarkerStaticData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_InWorldMarkerWidgetAnalysis_C">();
	}
	static class UW_InWorldMarkerWidgetAnalysis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_InWorldMarkerWidgetAnalysis_C>();
	}
};
static_assert(alignof(UW_InWorldMarkerWidgetAnalysis_C) == 0x000010, "Wrong alignment on UW_InWorldMarkerWidgetAnalysis_C");
static_assert(sizeof(UW_InWorldMarkerWidgetAnalysis_C) == 0x0004E0, "Wrong size on UW_InWorldMarkerWidgetAnalysis_C");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, UberGraphFrame) == 0x000460, "Member 'UW_InWorldMarkerWidgetAnalysis_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, Transition2) == 0x000468, "Member 'UW_InWorldMarkerWidgetAnalysis_C::Transition2' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, Transition) == 0x000470, "Member 'UW_InWorldMarkerWidgetAnalysis_C::Transition' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, Diamond) == 0x000478, "Member 'UW_InWorldMarkerWidgetAnalysis_C::Diamond' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, MarkerScaleBox) == 0x000480, "Member 'UW_InWorldMarkerWidgetAnalysis_C::MarkerScaleBox' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, Stalk) == 0x000488, "Member 'UW_InWorldMarkerWidgetAnalysis_C::Stalk' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, StalkDiamondBottom) == 0x000490, "Member 'UW_InWorldMarkerWidgetAnalysis_C::StalkDiamondBottom' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, Far_Distance_State) == 0x000498, "Member 'UW_InWorldMarkerWidgetAnalysis_C::Far_Distance_State' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, IncreaseSizeFromDistance) == 0x0004A0, "Member 'UW_InWorldMarkerWidgetAnalysis_C::IncreaseSizeFromDistance' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, MinScale) == 0x0004A8, "Member 'UW_InWorldMarkerWidgetAnalysis_C::MinScale' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, MaxScale) == 0x0004B0, "Member 'UW_InWorldMarkerWidgetAnalysis_C::MaxScale' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, FarDistanceIconOnly) == 0x0004B8, "Member 'UW_InWorldMarkerWidgetAnalysis_C::FarDistanceIconOnly' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, MinOpacity) == 0x0004C0, "Member 'UW_InWorldMarkerWidgetAnalysis_C::MinOpacity' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, MaxOpacity) == 0x0004C8, "Member 'UW_InWorldMarkerWidgetAnalysis_C::MaxOpacity' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, OpacityFullDistance) == 0x0004D0, "Member 'UW_InWorldMarkerWidgetAnalysis_C::OpacityFullDistance' has a wrong offset!");
static_assert(offsetof(UW_InWorldMarkerWidgetAnalysis_C, OpacityZeroDistance) == 0x0004D8, "Member 'UW_InWorldMarkerWidgetAnalysis_C::OpacityZeroDistance' has a wrong offset!");

}

