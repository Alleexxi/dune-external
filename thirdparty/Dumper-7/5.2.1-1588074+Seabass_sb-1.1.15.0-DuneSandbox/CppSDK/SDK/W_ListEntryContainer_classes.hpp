#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ListEntryContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ListEntryContainer.W_ListEntryContainer_C
// 0x00D0 (0x04D0 - 0x0400)
class UW_ListEntryContainer_C final : public UDuneListViewEntryContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pressed;                                           // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToSelected;                                        // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToHovered;                                         // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             BottomTriangle;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             GhostSlot;                                         // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneSizeBox*                           GhostSlotSizeBox;                                  // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             GridPanel;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             HoveredGradient;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             IconContent;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconOverlay;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ListEntryContent;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             PressedGradient;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             RightSideContent;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             SecondaryContent;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             SecondaryContentLine;                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             SecondatyContentBG;                                // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMargin                                Content_Padding;                                   // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Content_Horizontal_Alignment;                      // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Content_Vertical_Alignment;                        // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Secondary_Content;                             // 0x04A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Icon_Content;                                  // 0x04A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Secondary_Content_Padding;                         // 0x04A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Secondary_Content_Horizontal_Alignment;            // 0x04B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Secondary_Content_Vertical_Alignment;              // 0x04B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedSelected;                                    // 0x04B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Right_Content;                                 // 0x04B7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              GhostSlotMinimumSize;                              // 0x04B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_SetHovered(const bool bIsHovered, const bool bIsInstant);
	void BP_SetSelected(const bool bIsSelected, const bool bIsInstant);
	void ExecuteUbergraph_W_ListEntryContainer(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Set_Hovered(bool IsHovered_, bool IsInstant);
	void Set_Selected(bool IsSelected_, bool IsInstant);
	void SetupGhostSlot();
	void SetupSlot(class UGridSlot* Grid_Slot, const struct FMargin& Padding_0, EHorizontalAlignment Horizontal_Alignment, EVerticalAlignment Vertical_Alignment);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ListEntryContainer_C">();
	}
	static class UW_ListEntryContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ListEntryContainer_C>();
	}
};
static_assert(alignof(UW_ListEntryContainer_C) == 0x000010, "Wrong alignment on UW_ListEntryContainer_C");
static_assert(sizeof(UW_ListEntryContainer_C) == 0x0004D0, "Wrong size on UW_ListEntryContainer_C");
static_assert(offsetof(UW_ListEntryContainer_C, UberGraphFrame) == 0x000400, "Member 'UW_ListEntryContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Pressed) == 0x000408, "Member 'UW_ListEntryContainer_C::Pressed' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, ToSelected) == 0x000410, "Member 'UW_ListEntryContainer_C::ToSelected' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, ToHovered) == 0x000418, "Member 'UW_ListEntryContainer_C::ToHovered' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Border) == 0x000420, "Member 'UW_ListEntryContainer_C::Border' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, BottomTriangle) == 0x000428, "Member 'UW_ListEntryContainer_C::BottomTriangle' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, GhostSlot) == 0x000430, "Member 'UW_ListEntryContainer_C::GhostSlot' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, GhostSlotSizeBox) == 0x000438, "Member 'UW_ListEntryContainer_C::GhostSlotSizeBox' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, GridPanel) == 0x000440, "Member 'UW_ListEntryContainer_C::GridPanel' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, HoveredGradient) == 0x000448, "Member 'UW_ListEntryContainer_C::HoveredGradient' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, IconContent) == 0x000450, "Member 'UW_ListEntryContainer_C::IconContent' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, IconOverlay) == 0x000458, "Member 'UW_ListEntryContainer_C::IconOverlay' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, ListEntryContent) == 0x000460, "Member 'UW_ListEntryContainer_C::ListEntryContent' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, PressedGradient) == 0x000468, "Member 'UW_ListEntryContainer_C::PressedGradient' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, RightSideContent) == 0x000470, "Member 'UW_ListEntryContainer_C::RightSideContent' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, SecondaryContent) == 0x000478, "Member 'UW_ListEntryContainer_C::SecondaryContent' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, SecondaryContentLine) == 0x000480, "Member 'UW_ListEntryContainer_C::SecondaryContentLine' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, SecondatyContentBG) == 0x000488, "Member 'UW_ListEntryContainer_C::SecondatyContentBG' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Content_Padding) == 0x000490, "Member 'UW_ListEntryContainer_C::Content_Padding' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Content_Horizontal_Alignment) == 0x0004A0, "Member 'UW_ListEntryContainer_C::Content_Horizontal_Alignment' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Content_Vertical_Alignment) == 0x0004A1, "Member 'UW_ListEntryContainer_C::Content_Vertical_Alignment' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Use_Secondary_Content) == 0x0004A2, "Member 'UW_ListEntryContainer_C::Use_Secondary_Content' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Use_Icon_Content) == 0x0004A3, "Member 'UW_ListEntryContainer_C::Use_Icon_Content' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Secondary_Content_Padding) == 0x0004A4, "Member 'UW_ListEntryContainer_C::Secondary_Content_Padding' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Secondary_Content_Horizontal_Alignment) == 0x0004B4, "Member 'UW_ListEntryContainer_C::Secondary_Content_Horizontal_Alignment' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Secondary_Content_Vertical_Alignment) == 0x0004B5, "Member 'UW_ListEntryContainer_C::Secondary_Content_Vertical_Alignment' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, CachedSelected) == 0x0004B6, "Member 'UW_ListEntryContainer_C::CachedSelected' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, Use_Right_Content) == 0x0004B7, "Member 'UW_ListEntryContainer_C::Use_Right_Content' has a wrong offset!");
static_assert(offsetof(UW_ListEntryContainer_C, GhostSlotMinimumSize) == 0x0004B8, "Member 'UW_ListEntryContainer_C::GhostSlotMinimumSize' has a wrong offset!");

}

