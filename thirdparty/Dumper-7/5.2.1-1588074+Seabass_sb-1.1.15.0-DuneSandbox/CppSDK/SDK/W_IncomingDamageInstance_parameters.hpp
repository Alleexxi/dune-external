#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_IncomingDamageInstance

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_IncomingDamageInstance.W_IncomingDamageInstance_C.Set Shielded State
// 0x0058 (0x0058 - 0x0000)
struct W_IncomingDamageInstance_C_Set_Shielded_State final
{
public:
	bool                                          IsShielded;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_Select_Default;                             // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_Select_Option_0_ImplicitCast;               // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_Select_Option_1_ImplicitCast;               // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingDamageInstance_C_Set_Shielded_State) == 0x000008, "Wrong alignment on W_IncomingDamageInstance_C_Set_Shielded_State");
static_assert(sizeof(W_IncomingDamageInstance_C_Set_Shielded_State) == 0x000058, "Wrong size on W_IncomingDamageInstance_C_Set_Shielded_State");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, IsShielded) == 0x000000, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::IsShielded' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, Temp_bool_Variable) == 0x000001, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, Temp_bool_Variable_1) == 0x000002, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000004, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000008, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, K2Node_Select_Default) == 0x000030, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, K2Node_Select_Default_1) == 0x000038, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, K2Node_Select_Option_0_ImplicitCast) == 0x000048, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_Set_Shielded_State, K2Node_Select_Option_1_ImplicitCast) == 0x000050, "Member 'W_IncomingDamageInstance_C_Set_Shielded_State::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");

// Function W_IncomingDamageInstance.W_IncomingDamageInstance_C.ExecuteUbergraph_W_IncomingDamageInstance
// 0x0138 (0x0138 - 0x0000)
struct W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RotationDegrees;                      // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_ViewportSize;                         // 0x0008(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_A_ImplicitCast;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance) == 0x000008, "Wrong alignment on W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance");
static_assert(sizeof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance) == 0x000138, "Wrong size on W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, EntryPoint) == 0x000000, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, K2Node_Event_RotationDegrees) == 0x000004, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::K2Node_Event_RotationDegrees' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, K2Node_Event_ViewportSize) == 0x000008, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::K2Node_Event_ViewportSize' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_GetViewportScale_ReturnValue) == 0x000018, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_BreakVector2D_X) == 0x000020, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_NormalizeAxis_ReturnValue) == 0x000080, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_DegSin_ReturnValue) == 0x000088, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_DegreesToRadians_ReturnValue) == 0x000090, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_DegCos_ReturnValue) == 0x000098, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Sin_ReturnValue) == 0x0000A0, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A8, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Abs_ReturnValue) == 0x0000B8, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_SelectFloat_ReturnValue) == 0x0000C0, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000C8, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Lerp_ReturnValue_1) == 0x0000D8, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E0, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x0000E8, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000F8, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000108, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000120, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000128, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance, CallFunc_DegreesToRadians_A_ImplicitCast) == 0x000130, "Member 'W_IncomingDamageInstance_C_ExecuteUbergraph_W_IncomingDamageInstance::CallFunc_DegreesToRadians_A_ImplicitCast' has a wrong offset!");

// Function W_IncomingDamageInstance.W_IncomingDamageInstance_C.SetRotation
// 0x0018 (0x0018 - 0x0000)
struct W_IncomingDamageInstance_C_SetRotation final
{
public:
	float                                         RotationDegrees;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ViewportSize;                                      // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IncomingDamageInstance_C_SetRotation) == 0x000008, "Wrong alignment on W_IncomingDamageInstance_C_SetRotation");
static_assert(sizeof(W_IncomingDamageInstance_C_SetRotation) == 0x000018, "Wrong size on W_IncomingDamageInstance_C_SetRotation");
static_assert(offsetof(W_IncomingDamageInstance_C_SetRotation, RotationDegrees) == 0x000000, "Member 'W_IncomingDamageInstance_C_SetRotation::RotationDegrees' has a wrong offset!");
static_assert(offsetof(W_IncomingDamageInstance_C_SetRotation, ViewportSize) == 0x000008, "Member 'W_IncomingDamageInstance_C_SetRotation::ViewportSize' has a wrong offset!");

}

