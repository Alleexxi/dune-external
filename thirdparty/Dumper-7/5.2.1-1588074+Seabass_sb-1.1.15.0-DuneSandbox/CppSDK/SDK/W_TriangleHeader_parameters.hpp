#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TriangleHeader

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_TriangleHeader.W_TriangleHeader_C.ExecuteUbergraph_W_TriangleHeader
// 0x00E0 (0x00E0 - 0x0000)
struct W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateSizeRule                                Temp_byte_Variable_6;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateSizeRule                                Temp_byte_Variable_7;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0078(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateSizeRule                                K2Node_Select_Default_4;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x00C4(0x0008)(NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeprecateSlateVector2D                CallFunc_Set_Desired_Size_Desired_Size_ImplicitCast; // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader) == 0x000008, "Wrong alignment on W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader");
static_assert(sizeof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader) == 0x0000E0, "Wrong size on W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, EntryPoint) == 0x000000, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable) == 0x000004, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_1) == 0x000005, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_bool_Variable) == 0x000006, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_2) == 0x000007, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_3) == 0x000008, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_bool_Variable_1) == 0x000009, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_4) == 0x00000A, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_5) == 0x00000B, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_bool_Variable_2) == 0x00000C, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_real_Variable) == 0x000010, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_real_Variable_1) == 0x000018, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_bool_Variable_3) == 0x000020, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_6) == 0x000021, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_byte_Variable_7) == 0x000022, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Event_IsDesignTime) == 0x000023, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Event_MyGeometry) == 0x000024, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Select_Default) == 0x000060, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000061, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_GetContent_ReturnValue) == 0x000068, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Select_Default_1) == 0x000071, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_TextToUpper_ReturnValue) == 0x000078, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, Temp_bool_Variable_4) == 0x000090, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Select_Default_2) == 0x000091, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Select_Default_3) == 0x000098, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x0000B8, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_Select_Default_4) == 0x0000C0, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, K2Node_MakeStruct_SlateChildSize) == 0x0000C4, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000CC, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_Set_Desired_Size_Desired_Size_ImplicitCast) == 0x0000D0, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_Set_Desired_Size_Desired_Size_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x0000D8, "Member 'W_TriangleHeader_C_ExecuteUbergraph_W_TriangleHeader::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function W_TriangleHeader.W_TriangleHeader_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_TriangleHeader_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TriangleHeader_C_PreConstruct) == 0x000001, "Wrong alignment on W_TriangleHeader_C_PreConstruct");
static_assert(sizeof(W_TriangleHeader_C_PreConstruct) == 0x000001, "Wrong size on W_TriangleHeader_C_PreConstruct");
static_assert(offsetof(W_TriangleHeader_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_TriangleHeader_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_TriangleHeader.W_TriangleHeader_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_TriangleHeader_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TriangleHeader_C_Tick) == 0x000004, "Wrong alignment on W_TriangleHeader_C_Tick");
static_assert(sizeof(W_TriangleHeader_C_Tick) == 0x00003C, "Wrong size on W_TriangleHeader_C_Tick");
static_assert(offsetof(W_TriangleHeader_C_Tick, MyGeometry) == 0x000000, "Member 'W_TriangleHeader_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_TriangleHeader_C_Tick, InDeltaTime) == 0x000038, "Member 'W_TriangleHeader_C_Tick::InDeltaTime' has a wrong offset!");

}

