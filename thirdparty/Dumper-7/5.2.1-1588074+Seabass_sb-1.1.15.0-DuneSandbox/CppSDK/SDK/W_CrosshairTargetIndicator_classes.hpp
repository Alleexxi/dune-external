#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CrosshairTargetIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CrosshairTargetIndicator.W_CrosshairTargetIndicator_C
// 0x0020 (0x0440 - 0x0420)
class UW_CrosshairTargetIndicator_C final : public UCrosshairTargetIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Angle;                                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PartsAreAngled;                                    // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdatePartPositionAndRotation(double AngleOffset, class UImage* Part);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_CrosshairTargetIndicator(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CrosshairTargetIndicator_C">();
	}
	static class UW_CrosshairTargetIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CrosshairTargetIndicator_C>();
	}
};
static_assert(alignof(UW_CrosshairTargetIndicator_C) == 0x000010, "Wrong alignment on UW_CrosshairTargetIndicator_C");
static_assert(sizeof(UW_CrosshairTargetIndicator_C) == 0x000440, "Wrong size on UW_CrosshairTargetIndicator_C");
static_assert(offsetof(UW_CrosshairTargetIndicator_C, UberGraphFrame) == 0x000420, "Member 'UW_CrosshairTargetIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CrosshairTargetIndicator_C, Angle) == 0x000428, "Member 'UW_CrosshairTargetIndicator_C::Angle' has a wrong offset!");
static_assert(offsetof(UW_CrosshairTargetIndicator_C, Radius) == 0x000430, "Member 'UW_CrosshairTargetIndicator_C::Radius' has a wrong offset!");
static_assert(offsetof(UW_CrosshairTargetIndicator_C, PartsAreAngled) == 0x000438, "Member 'UW_CrosshairTargetIndicator_C::PartsAreAngled' has a wrong offset!");

}

