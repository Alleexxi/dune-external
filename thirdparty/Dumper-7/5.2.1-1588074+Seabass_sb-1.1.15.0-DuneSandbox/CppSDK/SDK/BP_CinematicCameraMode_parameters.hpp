#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicCameraMode

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CinematicCameraMode.BP_CinematicCameraMode_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicCameraMode_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicCameraMode_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_CinematicCameraMode_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_CinematicCameraMode_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_CinematicCameraMode_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_CinematicCameraMode_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_CinematicCameraMode_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_CinematicCameraMode.BP_CinematicCameraMode_C.OnActorEndOverlap_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicCameraMode_C_OnActorEndOverlap_Event final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicCameraMode_C_OnActorEndOverlap_Event) == 0x000008, "Wrong alignment on BP_CinematicCameraMode_C_OnActorEndOverlap_Event");
static_assert(sizeof(BP_CinematicCameraMode_C_OnActorEndOverlap_Event) == 0x000010, "Wrong size on BP_CinematicCameraMode_C_OnActorEndOverlap_Event");
static_assert(offsetof(BP_CinematicCameraMode_C_OnActorEndOverlap_Event, OverlappedActor) == 0x000000, "Member 'BP_CinematicCameraMode_C_OnActorEndOverlap_Event::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_OnActorEndOverlap_Event, OtherActor) == 0x000008, "Member 'BP_CinematicCameraMode_C_OnActorEndOverlap_Event::OtherActor' has a wrong offset!");

// Function BP_CinematicCameraMode.BP_CinematicCameraMode_C.ExecuteUbergraph_BP_CinematicCameraMode
// 0x0050 (0x0050 - 0x0000)
struct BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerCharacter*                   K2Node_DynamicCast_AsDune_Player_Character_1;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode) == 0x000008, "Wrong alignment on BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode");
static_assert(sizeof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode) == 0x000050, "Wrong size on BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, EntryPoint) == 0x000000, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, Temp_bool_IsClosed_Variable) == 0x000014, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_Event_OtherActor) == 0x000018, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_DynamicCast_AsDune_Player_Character) == 0x000020, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_DynamicCast_AsDune_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_CustomEvent_OverlappedActor) == 0x000030, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_CustomEvent_OtherActor) == 0x000038, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_DynamicCast_AsDune_Player_Character_1) == 0x000040, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_DynamicCast_AsDune_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode, Temp_bool_Has_Been_Initd_Variable) == 0x000049, "Member 'BP_CinematicCameraMode_C_ExecuteUbergraph_BP_CinematicCameraMode::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");

}

