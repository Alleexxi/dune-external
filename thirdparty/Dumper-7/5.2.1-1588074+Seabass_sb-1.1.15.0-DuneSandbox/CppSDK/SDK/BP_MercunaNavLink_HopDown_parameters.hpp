#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MercunaNavLink_HopDown

#include "Basic.hpp"

#include "Mercuna_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MercunaNavLink_HopDown.BP_MercunaNavLink_HopDown_C.ReceiveNavLinkStart
// 0x0028 (0x0028 - 0x0000)
struct BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMercunaNavigationLinkDirection               Direction;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Destination;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart) == 0x000008, "Wrong alignment on BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart");
static_assert(sizeof(BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart) == 0x000028, "Wrong size on BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart, Pawn) == 0x000000, "Member 'BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart::Pawn' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart, Direction) == 0x000008, "Member 'BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart::Direction' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart, Destination) == 0x000010, "Member 'BP_MercunaNavLink_HopDown_C_ReceiveNavLinkStart::Destination' has a wrong offset!");

// Function BP_MercunaNavLink_HopDown.BP_MercunaNavLink_HopDown_C.ExecuteUbergraph_BP_MercunaNavLink_HopDown
// 0x00F8 (0x00F8 - 0x0000)
struct BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMercunaNavigationLinkDirection               K2Node_Event_Direction;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Destination;                          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMercunaGroundNavigationComponent*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown) == 0x000008, "Wrong alignment on BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown");
static_assert(sizeof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown) == 0x0000F8, "Wrong size on BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, EntryPoint) == 0x000000, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, K2Node_Event_Pawn) == 0x000020, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, K2Node_Event_Direction) == 0x000028, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, K2Node_Event_Destination) == 0x000030, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::K2Node_Event_Destination' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_FindLookAtRotation_ReturnValue) == 0x000068, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_GetForwardVector_ReturnValue) == 0x000088, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, K2Node_DynamicCast_AsCharacter) == 0x0000B8, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_BreakVector_X) == 0x0000C8, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BP_MercunaNavLink_HopDown_C_ExecuteUbergraph_BP_MercunaNavLink_HopDown::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

