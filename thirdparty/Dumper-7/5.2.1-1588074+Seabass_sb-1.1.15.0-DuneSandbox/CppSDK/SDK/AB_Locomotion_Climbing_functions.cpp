#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Locomotion_Climbing

#include "Basic.hpp"

#include "AB_Locomotion_Climbing_classes.hpp"
#include "AB_Locomotion_Climbing_parameters.hpp"


namespace SDK
{

// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.SuspensorLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       SuspensorLayer_0                                       (Parm, OutParm, NoDestructor)

void UAB_Locomotion_Climbing_C::SuspensorLayer(struct FPoseLink* SuspensorLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "SuspensorLayer");

	Params::AB_Locomotion_Climbing_C_SuspensorLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SuspensorLayer_0 != nullptr)
		*SuspensorLayer_0 = std::move(Parms.SuspensorLayer_0);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.ScramblingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink*                       ScramblingLayer_0                                      (Parm, OutParm, NoDestructor)

void UAB_Locomotion_Climbing_C::ScramblingLayer(struct FPoseLink* ScramblingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "ScramblingLayer");

	Params::AB_Locomotion_Climbing_C_ScramblingLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScramblingLayer_0 != nullptr)
		*ScramblingLayer_0 = std::move(Parms.ScramblingLayer_0);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.QuicksandLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    HasWeaponInHand                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink*                       QuicksandLayer_0                                       (Parm, OutParm, NoDestructor)

void UAB_Locomotion_Climbing_C::QuicksandLayer(const struct FPoseLink& InPose_0, bool HasWeaponInHand, struct FPoseLink* QuicksandLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "QuicksandLayer");

	Params::AB_Locomotion_Climbing_C_QuicksandLayer Parms{};

	Parms.InPose_0 = std::move(InPose_0);
	Parms.HasWeaponInHand = HasWeaponInHand;

	UObject::ProcessEvent(Func, &Parms);

	if (QuicksandLayer_0 != nullptr)
		*QuicksandLayer_0 = std::move(Parms.QuicksandLayer_0);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.ExecuteUbergraph_AB_Locomotion_Climbing
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_Locomotion_Climbing_C::ExecuteUbergraph_AB_Locomotion_Climbing(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "ExecuteUbergraph_AB_Locomotion_Climbing");

	Params::AB_Locomotion_Climbing_C_ExecuteUbergraph_AB_Locomotion_Climbing Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_B702493E4B76F7A61749F9B7BFACC7E5
// (BlueprintEvent)

void UAB_Locomotion_Climbing_C::EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_B702493E4B76F7A61749F9B7BFACC7E5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_B702493E4B76F7A61749F9B7BFACC7E5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_98189B19456BAD10A7C7509F0327CCD1
// (BlueprintEvent)

void UAB_Locomotion_Climbing_C::EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_98189B19456BAD10A7C7509F0327CCD1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_98189B19456BAD10A7C7509F0327CCD1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_846B94164CBA68FDDE02F39D21EDD8C0
// (BlueprintEvent)

void UAB_Locomotion_Climbing_C::EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_846B94164CBA68FDDE02F39D21EDD8C0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_846B94164CBA68FDDE02F39D21EDD8C0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_4CA7535F4D0CD79990A144A3199CBF21
// (BlueprintEvent)

void UAB_Locomotion_Climbing_C::EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_4CA7535F4D0CD79990A144A3199CBF21()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_4CA7535F4D0CD79990A144A3199CBF21");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_09DE4A5E4DBB9076DFF79E9199664AC7
// (BlueprintEvent)

void UAB_Locomotion_Climbing_C::EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_09DE4A5E4DBB9076DFF79E9199664AC7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Locomotion_Climbing_AnimGraphNode_TransitionResult_09DE4A5E4DBB9076DFF79E9199664AC7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.DisabledLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose_4                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       DisabledLayer_0                                        (Parm, OutParm, NoDestructor)

void UAB_Locomotion_Climbing_C::DisabledLayer(const struct FPoseLink& InPose_4, struct FPoseLink* DisabledLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "DisabledLayer");

	Params::AB_Locomotion_Climbing_C_DisabledLayer Parms{};

	Parms.InPose_4 = std::move(InPose_4);

	UObject::ProcessEvent(Func, &Parms);

	if (DisabledLayer_0 != nullptr)
		*DisabledLayer_0 = std::move(Parms.DisabledLayer_0);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.ClimbingLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPoseLink&                 InPose_1                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       ClimbingLayer_0                                        (Parm, OutParm, NoDestructor)

void UAB_Locomotion_Climbing_C::ClimbingLayer(const struct FPoseLink& InPose_1, struct FPoseLink* ClimbingLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "ClimbingLayer");

	Params::AB_Locomotion_Climbing_C_ClimbingLayer Parms{};

	Parms.InPose_1 = std::move(InPose_1);

	UObject::ProcessEvent(Func, &Parms);

	if (ClimbingLayer_0 != nullptr)
		*ClimbingLayer_0 = std::move(Parms.ClimbingLayer_0);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UAB_Locomotion_Climbing_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.AnimNotify_HopEnded
// (BlueprintCallable, BlueprintEvent)

void UAB_Locomotion_Climbing_C::AnimNotify_HopEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "AnimNotify_HopEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.AnimNotify_EdgeTransitionReset
// (BlueprintCallable, BlueprintEvent)

void UAB_Locomotion_Climbing_C::AnimNotify_EdgeTransitionReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "AnimNotify_EdgeTransitionReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.AnimNotify_EdgeTransitionComplete
// (BlueprintCallable, BlueprintEvent)

void UAB_Locomotion_Climbing_C::AnimNotify_EdgeTransitionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "AnimNotify_EdgeTransitionComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.AnimNotify_EdgeTransitionBegin
// (BlueprintCallable, BlueprintEvent)

void UAB_Locomotion_Climbing_C::AnimNotify_EdgeTransitionBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "AnimNotify_EdgeTransitionBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AB_Locomotion_Climbing.AB_Locomotion_Climbing_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UAB_Locomotion_Climbing_C::AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Locomotion_Climbing_C", "AnimGraph");

	Params::AB_Locomotion_Climbing_C_AnimGraph Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

