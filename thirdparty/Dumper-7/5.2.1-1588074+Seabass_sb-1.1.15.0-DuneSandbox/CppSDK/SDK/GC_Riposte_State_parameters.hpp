#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Riposte_State

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Riposte_State.GC_Riposte_State_C.ExecuteUbergraph_GC_Riposte_State
// 0x0218 (0x0218 - 0x0000)
struct GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_CustomEvent_InDamagingActor;                // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_InHitResult;                    // 0x0010(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDamageImmunityHitPredictionType              K2Node_CustomEvent_InPredictionType;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_CustomEvent_InDamagingActor_1;              // 0x0110(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_InHitResult_1;                  // 0x0118(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInStateOrSubstateByTag_ReturnValue;     // 0x0210(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State) == 0x000008, "Wrong alignment on GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State");
static_assert(sizeof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State) == 0x000218, "Wrong size on GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, EntryPoint) == 0x000000, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_CustomEvent_InDamagingActor) == 0x000008, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_CustomEvent_InDamagingActor' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_CustomEvent_InHitResult) == 0x000010, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_CustomEvent_InHitResult' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x0000F8, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_CustomEvent_Target) == 0x000100, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_CustomEvent_InPredictionType) == 0x000108, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_CustomEvent_InPredictionType' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_CustomEvent_InDamagingActor_1) == 0x000110, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_CustomEvent_InDamagingActor_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_CustomEvent_InHitResult_1) == 0x000118, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_CustomEvent_InHitResult_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_DynamicCast_AsDune_Character) == 0x000200, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, CallFunc_PlayAnimMontage_ReturnValue) == 0x00020C, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, CallFunc_IsInStateOrSubstateByTag_ReturnValue) == 0x000210, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::CallFunc_IsInStateOrSubstateByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State, K2Node_SwitchEnum_CmpSuccess) == 0x000211, "Member 'GC_Riposte_State_C_ExecuteUbergraph_GC_Riposte_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.OnActive
// 0x00F8 (0x00F8 - 0x0000)
struct GC_Riposte_State_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnActive_ReturnValue;                     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_OnActive) == 0x000008, "Wrong alignment on GC_Riposte_State_C_OnActive");
static_assert(sizeof(GC_Riposte_State_C_OnActive) == 0x0000F8, "Wrong size on GC_Riposte_State_C_OnActive");
static_assert(offsetof(GC_Riposte_State_C_OnActive, MyTarget) == 0x000000, "Member 'GC_Riposte_State_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnActive, Parameters) == 0x000008, "Member 'GC_Riposte_State_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GC_Riposte_State_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnActive, CallFunc_OnActive_ReturnValue) == 0x0000E1, "Member 'GC_Riposte_State_C_OnActive::CallFunc_OnActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnActive, K2Node_DynamicCast_AsDune_Character) == 0x0000E8, "Member 'GC_Riposte_State_C_OnActive::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GC_Riposte_State_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnActive, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000F1, "Member 'GC_Riposte_State_C_OnActive::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.OnImmunityBlockedHit
// 0x00F0 (0x00F0 - 0x0000)
struct GC_Riposte_State_C_OnImmunityBlockedHit final
{
public:
	const class AActor*                           InDamagingActor;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             InHitResult;                                       // 0x0008(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GC_Riposte_State_C_OnImmunityBlockedHit) == 0x000008, "Wrong alignment on GC_Riposte_State_C_OnImmunityBlockedHit");
static_assert(sizeof(GC_Riposte_State_C_OnImmunityBlockedHit) == 0x0000F0, "Wrong size on GC_Riposte_State_C_OnImmunityBlockedHit");
static_assert(offsetof(GC_Riposte_State_C_OnImmunityBlockedHit, InDamagingActor) == 0x000000, "Member 'GC_Riposte_State_C_OnImmunityBlockedHit::InDamagingActor' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnImmunityBlockedHit, InHitResult) == 0x000008, "Member 'GC_Riposte_State_C_OnImmunityBlockedHit::InHitResult' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.OnImmunityBlockedHitPredicted
// 0x00F8 (0x00F8 - 0x0000)
struct GC_Riposte_State_C_OnImmunityBlockedHitPredicted final
{
public:
	EDamageImmunityHitPredictionType              InPredictionType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           InDamagingActor;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             InHitResult;                                       // 0x0010(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GC_Riposte_State_C_OnImmunityBlockedHitPredicted) == 0x000008, "Wrong alignment on GC_Riposte_State_C_OnImmunityBlockedHitPredicted");
static_assert(sizeof(GC_Riposte_State_C_OnImmunityBlockedHitPredicted) == 0x0000F8, "Wrong size on GC_Riposte_State_C_OnImmunityBlockedHitPredicted");
static_assert(offsetof(GC_Riposte_State_C_OnImmunityBlockedHitPredicted, InPredictionType) == 0x000000, "Member 'GC_Riposte_State_C_OnImmunityBlockedHitPredicted::InPredictionType' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnImmunityBlockedHitPredicted, InDamagingActor) == 0x000008, "Member 'GC_Riposte_State_C_OnImmunityBlockedHitPredicted::InDamagingActor' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnImmunityBlockedHitPredicted, InHitResult) == 0x000010, "Member 'GC_Riposte_State_C_OnImmunityBlockedHitPredicted::InHitResult' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.OnRemove
// 0x0100 (0x0100 - 0x0000)
struct GC_Riposte_State_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnRemove_ReturnValue;                     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VFX_Abl_Deflection_ImpactImage_C*   K2Node_DynamicCast_AsBP_VFX_Abl_Deflection_Impact_Image; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrenlyInUse_ReturnValue;              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_OnRemove) == 0x000008, "Wrong alignment on GC_Riposte_State_C_OnRemove");
static_assert(sizeof(GC_Riposte_State_C_OnRemove) == 0x000100, "Wrong size on GC_Riposte_State_C_OnRemove");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_Riposte_State_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, Parameters) == 0x000008, "Member 'GC_Riposte_State_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GC_Riposte_State_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, CallFunc_OnRemove_ReturnValue) == 0x0000E1, "Member 'GC_Riposte_State_C_OnRemove::CallFunc_OnRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000E8, "Member 'GC_Riposte_State_C_OnRemove::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, K2Node_DynamicCast_AsBP_VFX_Abl_Deflection_Impact_Image) == 0x0000F0, "Member 'GC_Riposte_State_C_OnRemove::K2Node_DynamicCast_AsBP_VFX_Abl_Deflection_Impact_Image' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GC_Riposte_State_C_OnRemove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'GC_Riposte_State_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_OnRemove, CallFunc_IsCurrenlyInUse_ReturnValue) == 0x0000FA, "Member 'GC_Riposte_State_C_OnRemove::CallFunc_IsCurrenlyInUse_ReturnValue' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.SetImmunityDelegates
// 0x0070 (0x0070 - 0x0000)
struct GC_Riposte_State_C_SetImmunityDelegates final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeBound;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageableActorComponent*              DamageableComponent;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageableActorComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDamageImmunityHitPredictionType InPredictionType, const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate; // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate_1; // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDamageImmunityHitPredictionType InPredictionType, const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate_2; // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class AActor* InDamagingActor, const struct FHitResult& InHitResult)> K2Node_CreateDelegate_OutputDelegate_3; // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_SetImmunityDelegates) == 0x000008, "Wrong alignment on GC_Riposte_State_C_SetImmunityDelegates");
static_assert(sizeof(GC_Riposte_State_C_SetImmunityDelegates) == 0x000070, "Wrong size on GC_Riposte_State_C_SetImmunityDelegates");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, TargetActor) == 0x000000, "Member 'GC_Riposte_State_C_SetImmunityDelegates::TargetActor' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, ShouldBeBound) == 0x000008, "Member 'GC_Riposte_State_C_SetImmunityDelegates::ShouldBeBound' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, DamageableComponent) == 0x000010, "Member 'GC_Riposte_State_C_SetImmunityDelegates::DamageableComponent' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GC_Riposte_State_C_SetImmunityDelegates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'GC_Riposte_State_C_SetImmunityDelegates::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GC_Riposte_State_C_SetImmunityDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'GC_Riposte_State_C_SetImmunityDelegates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'GC_Riposte_State_C_SetImmunityDelegates::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'GC_Riposte_State_C_SetImmunityDelegates::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SetImmunityDelegates, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'GC_Riposte_State_C_SetImmunityDelegates::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.SpawnImage
// 0x0210 (0x0210 - 0x0000)
struct GC_Riposte_State_C_SpawnImage final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_VFX_Abl_Deflection_ImpactImage_C*   K2Node_DynamicCast_AsBP_VFX_Abl_Deflection_Impact_Image; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VFX_Abl_Deflection_ImpactImage_C*   CallFunc_FinishSpawningActor_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_VFX_Abl_Deflection_ImpactImage_C> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x01E0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_SpawnImage) == 0x000010, "Wrong alignment on GC_Riposte_State_C_SpawnImage");
static_assert(sizeof(GC_Riposte_State_C_SpawnImage) == 0x000210, "Wrong size on GC_Riposte_State_C_SpawnImage");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, K2Node_DynamicCast_AsBP_VFX_Abl_Deflection_Impact_Image) == 0x000020, "Member 'GC_Riposte_State_C_SpawnImage::K2Node_DynamicCast_AsBP_VFX_Abl_Deflection_Impact_Image' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GC_Riposte_State_C_SpawnImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000050, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000138, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000140, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000158, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D0, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001D8, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImage, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0001E0, "Member 'GC_Riposte_State_C_SpawnImage::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.SpawnImpactVFX
// 0x0200 (0x0200 - 0x0000)
struct GC_Riposte_State_C_SpawnImpactVFX final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         K2Node_DynamicCast_AsDune_Character;               // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_SpawnImpactVFX) == 0x000008, "Wrong alignment on GC_Riposte_State_C_SpawnImpactVFX");
static_assert(sizeof(GC_Riposte_State_C_SpawnImpactVFX) == 0x000200, "Wrong size on GC_Riposte_State_C_SpawnImpactVFX");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, HitResult) == 0x000000, "Member 'GC_Riposte_State_C_SpawnImpactVFX::HitResult' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_GetOwner_ReturnValue) == 0x0000E8, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, K2Node_DynamicCast_AsDune_Character) == 0x0001C8, "Member 'GC_Riposte_State_C_SpawnImpactVFX::K2Node_DynamicCast_AsDune_Character' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'GC_Riposte_State_C_SpawnImpactVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001D8, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_GetOwner_ReturnValue_1) == 0x0001F0, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_Riposte_State_C_SpawnImpactVFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001F8, "Member 'GC_Riposte_State_C_SpawnImpactVFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function GC_Riposte_State.GC_Riposte_State_C.TryPlayInterruption
// 0x0008 (0x0008 - 0x0000)
struct GC_Riposte_State_C_TryPlayInterruption final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Riposte_State_C_TryPlayInterruption) == 0x000008, "Wrong alignment on GC_Riposte_State_C_TryPlayInterruption");
static_assert(sizeof(GC_Riposte_State_C_TryPlayInterruption) == 0x000008, "Wrong size on GC_Riposte_State_C_TryPlayInterruption");
static_assert(offsetof(GC_Riposte_State_C_TryPlayInterruption, Target) == 0x000000, "Member 'GC_Riposte_State_C_TryPlayInterruption::Target' has a wrong offset!");

}

