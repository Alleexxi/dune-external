#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HeatstrokeHUDWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_HeatstrokeHUDWidget.W_HeatstrokeHUDWidget_C
// 0x0040 (0x0510 - 0x04D0)
class UW_HeatstrokeHUDWidget_C final : public UHeatstrokeHUDWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IndicatorArrowImage;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             SunIcon;                                           // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Low_Heat_Color;                                    // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           High_Heat_color;                                   // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetBarColor(const struct FLinearColor& InColorAndOpacity);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_HeatstrokeHUDWidget(int32 EntryPoint);
	void BP_OnGameplayTagChanged(const struct FGameplayTag& Tag, int32 TagCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_HeatstrokeHUDWidget_C">();
	}
	static class UW_HeatstrokeHUDWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_HeatstrokeHUDWidget_C>();
	}
};
static_assert(alignof(UW_HeatstrokeHUDWidget_C) == 0x000010, "Wrong alignment on UW_HeatstrokeHUDWidget_C");
static_assert(sizeof(UW_HeatstrokeHUDWidget_C) == 0x000510, "Wrong size on UW_HeatstrokeHUDWidget_C");
static_assert(offsetof(UW_HeatstrokeHUDWidget_C, UberGraphFrame) == 0x0004D0, "Member 'UW_HeatstrokeHUDWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_HeatstrokeHUDWidget_C, IndicatorArrowImage) == 0x0004D8, "Member 'UW_HeatstrokeHUDWidget_C::IndicatorArrowImage' has a wrong offset!");
static_assert(offsetof(UW_HeatstrokeHUDWidget_C, SunIcon) == 0x0004E0, "Member 'UW_HeatstrokeHUDWidget_C::SunIcon' has a wrong offset!");
static_assert(offsetof(UW_HeatstrokeHUDWidget_C, Low_Heat_Color) == 0x0004E8, "Member 'UW_HeatstrokeHUDWidget_C::Low_Heat_Color' has a wrong offset!");
static_assert(offsetof(UW_HeatstrokeHUDWidget_C, High_Heat_color) == 0x0004F8, "Member 'UW_HeatstrokeHUDWidget_C::High_Heat_color' has a wrong offset!");

}

