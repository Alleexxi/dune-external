#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTTask_Jump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BTTask_Jump.BP_BTTask_Jump_C
// 0x0018 (0x00C8 - 0x00B0)
class UBP_BTTask_Jump_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          JumpInPlace;                                       // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LaunchVelocityZ;                                   // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BP_BTTask_Jump(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BTTask_Jump_C">();
	}
	static class UBP_BTTask_Jump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BTTask_Jump_C>();
	}
};
static_assert(alignof(UBP_BTTask_Jump_C) == 0x000008, "Wrong alignment on UBP_BTTask_Jump_C");
static_assert(sizeof(UBP_BTTask_Jump_C) == 0x0000C8, "Wrong size on UBP_BTTask_Jump_C");
static_assert(offsetof(UBP_BTTask_Jump_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_BTTask_Jump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_Jump_C, JumpInPlace) == 0x0000B8, "Member 'UBP_BTTask_Jump_C::JumpInPlace' has a wrong offset!");
static_assert(offsetof(UBP_BTTask_Jump_C, LaunchVelocityZ) == 0x0000C0, "Member 'UBP_BTTask_Jump_C::LaunchVelocityZ' has a wrong offset!");

}

