#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BorderBackgroundContent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.ExecuteUbergraph_W_BorderBackgroundContent
// 0x0038 (0x0038 - 0x0000)
struct W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color;                                // 0x0004(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_Color_1;                              // 0x0018(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BorderSize;                           // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetBorderSizeInner_BorderSize_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent) == 0x000008, "Wrong alignment on W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent");
static_assert(sizeof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent) == 0x000038, "Wrong size on W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent");
static_assert(offsetof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent, EntryPoint) == 0x000000, "Member 'W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent, K2Node_Event_Color) == 0x000004, "Member 'W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent, K2Node_Event_IsDesignTime) == 0x000014, "Member 'W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent, K2Node_Event_Color_1) == 0x000018, "Member 'W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent::K2Node_Event_Color_1' has a wrong offset!");
static_assert(offsetof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent, K2Node_Event_BorderSize) == 0x000028, "Member 'W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent::K2Node_Event_BorderSize' has a wrong offset!");
static_assert(offsetof(W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent, CallFunc_SetBorderSizeInner_BorderSize_ImplicitCast) == 0x000030, "Member 'W_BorderBackgroundContent_C_ExecuteUbergraph_W_BorderBackgroundContent::CallFunc_SetBorderSizeInner_BorderSize_ImplicitCast' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_BorderBackgroundContent_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_PreConstruct) == 0x000001, "Wrong alignment on W_BorderBackgroundContent_C_PreConstruct");
static_assert(sizeof(W_BorderBackgroundContent_C_PreConstruct) == 0x000001, "Wrong size on W_BorderBackgroundContent_C_PreConstruct");
static_assert(offsetof(W_BorderBackgroundContent_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_BorderBackgroundContent_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.SetBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct W_BorderBackgroundContent_C_SetBackgroundColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_SetBackgroundColor) == 0x000004, "Wrong alignment on W_BorderBackgroundContent_C_SetBackgroundColor");
static_assert(sizeof(W_BorderBackgroundContent_C_SetBackgroundColor) == 0x000010, "Wrong size on W_BorderBackgroundContent_C_SetBackgroundColor");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBackgroundColor, Color) == 0x000000, "Member 'W_BorderBackgroundContent_C_SetBackgroundColor::Color' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.SetBackgroundColorInner
// 0x0010 (0x0010 - 0x0000)
struct W_BorderBackgroundContent_C_SetBackgroundColorInner final
{
public:
	struct FLinearColor                           BackgroundColor_0;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_SetBackgroundColorInner) == 0x000004, "Wrong alignment on W_BorderBackgroundContent_C_SetBackgroundColorInner");
static_assert(sizeof(W_BorderBackgroundContent_C_SetBackgroundColorInner) == 0x000010, "Wrong size on W_BorderBackgroundContent_C_SetBackgroundColorInner");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBackgroundColorInner, BackgroundColor_0) == 0x000000, "Member 'W_BorderBackgroundContent_C_SetBackgroundColorInner::BackgroundColor_0' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.SetBorderColor
// 0x0010 (0x0010 - 0x0000)
struct W_BorderBackgroundContent_C_SetBorderColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_SetBorderColor) == 0x000004, "Wrong alignment on W_BorderBackgroundContent_C_SetBorderColor");
static_assert(sizeof(W_BorderBackgroundContent_C_SetBorderColor) == 0x000010, "Wrong size on W_BorderBackgroundContent_C_SetBorderColor");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBorderColor, Color) == 0x000000, "Member 'W_BorderBackgroundContent_C_SetBorderColor::Color' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.SetBorderColorInner
// 0x0010 (0x0010 - 0x0000)
struct W_BorderBackgroundContent_C_SetBorderColorInner final
{
public:
	struct FLinearColor                           BorderColor_0;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_SetBorderColorInner) == 0x000004, "Wrong alignment on W_BorderBackgroundContent_C_SetBorderColorInner");
static_assert(sizeof(W_BorderBackgroundContent_C_SetBorderColorInner) == 0x000010, "Wrong size on W_BorderBackgroundContent_C_SetBorderColorInner");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBorderColorInner, BorderColor_0) == 0x000000, "Member 'W_BorderBackgroundContent_C_SetBorderColorInner::BorderColor_0' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.SetBorderSize
// 0x0004 (0x0004 - 0x0000)
struct W_BorderBackgroundContent_C_SetBorderSize final
{
public:
	float                                         BorderSize_0;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_SetBorderSize) == 0x000004, "Wrong alignment on W_BorderBackgroundContent_C_SetBorderSize");
static_assert(sizeof(W_BorderBackgroundContent_C_SetBorderSize) == 0x000004, "Wrong size on W_BorderBackgroundContent_C_SetBorderSize");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBorderSize, BorderSize_0) == 0x000000, "Member 'W_BorderBackgroundContent_C_SetBorderSize::BorderSize_0' has a wrong offset!");

// Function W_BorderBackgroundContent.W_BorderBackgroundContent_C.SetBorderSizeInner
// 0x0018 (0x0018 - 0x0000)
struct W_BorderBackgroundContent_C_SetBorderSizeInner final
{
public:
	double                                        BorderSize_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BorderBackgroundContent_C_SetBorderSizeInner) == 0x000008, "Wrong alignment on W_BorderBackgroundContent_C_SetBorderSizeInner");
static_assert(sizeof(W_BorderBackgroundContent_C_SetBorderSizeInner) == 0x000018, "Wrong size on W_BorderBackgroundContent_C_SetBorderSizeInner");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBorderSizeInner, BorderSize_0) == 0x000000, "Member 'W_BorderBackgroundContent_C_SetBorderSizeInner::BorderSize_0' has a wrong offset!");
static_assert(offsetof(W_BorderBackgroundContent_C_SetBorderSizeInner, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'W_BorderBackgroundContent_C_SetBorderSizeInner::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

