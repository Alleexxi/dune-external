#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MercunaNavLink_Vault

#include "Basic.hpp"

#include "BP_MercunaNavLink_Vault_classes.hpp"
#include "BP_MercunaNavLink_Vault_parameters.hpp"


namespace SDK
{

// Function BP_MercunaNavLink_Vault.BP_MercunaNavLink_Vault_C.ReceiveNavLinkStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMercunaNavigationLinkDirection         Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Destination                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MercunaNavLink_Vault_C::ReceiveNavLinkStart(class APawn* Pawn, EMercunaNavigationLinkDirection Direction, const struct FVector& Destination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MercunaNavLink_Vault_C", "ReceiveNavLinkStart");

	Params::BP_MercunaNavLink_Vault_C_ReceiveNavLinkStart Parms{};

	Parms.Pawn = Pawn;
	Parms.Direction = Direction;
	Parms.Destination = std::move(Destination);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MercunaNavLink_Vault.BP_MercunaNavLink_Vault_C.ExecuteUbergraph_BP_MercunaNavLink_Vault
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MercunaNavLink_Vault_C::ExecuteUbergraph_BP_MercunaNavLink_Vault(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MercunaNavLink_Vault_C", "ExecuteUbergraph_BP_MercunaNavLink_Vault");

	Params::BP_MercunaNavLink_Vault_C_ExecuteUbergraph_BP_MercunaNavLink_Vault Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MercunaNavLink_Vault.BP_MercunaNavLink_Vault_C.CalculateVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Destination_Location                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Starting_Location                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MercunaNavLink_Vault_C::CalculateVelocity(const struct FVector& Destination_Location, const struct FVector& Starting_Location, double Duration, struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MercunaNavLink_Vault_C", "CalculateVelocity");

	Params::BP_MercunaNavLink_Vault_C_CalculateVelocity Parms{};

	Parms.Destination_Location = std::move(Destination_Location);
	Parms.Starting_Location = std::move(Starting_Location);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}

}

