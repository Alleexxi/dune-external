#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CountdownTimerFeedbackWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_CountdownTimerFeedbackWidget.W_CountdownTimerFeedbackWidget_C.ExecuteUbergraph_W_CountdownTimerFeedbackWidget
// 0x0068 (0x0068 - 0x0000)
struct W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RemainingTimeText;                    // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_Event_FeedbackText;                         // 0x0020(0x0018)(ConstParm)
	class FText                                   K2Node_Event_RemainingTimeText_1;                  // 0x0038(0x0018)(ConstParm)
	struct FLinearColor                           K2Node_Event_BackgroundColor;                      // 0x0050(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisplayRemainingTime;                // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget) == 0x000008, "Wrong alignment on W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget");
static_assert(sizeof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget) == 0x000068, "Wrong size on W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, EntryPoint) == 0x000000, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, Temp_bool_Variable) == 0x000004, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, K2Node_Event_RemainingTimeText) == 0x000008, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::K2Node_Event_RemainingTimeText' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, K2Node_Event_FeedbackText) == 0x000020, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::K2Node_Event_FeedbackText' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, K2Node_Event_RemainingTimeText_1) == 0x000038, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::K2Node_Event_RemainingTimeText_1' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, K2Node_Event_BackgroundColor) == 0x000050, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::K2Node_Event_BackgroundColor' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, K2Node_Event_bDisplayRemainingTime) == 0x000060, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::K2Node_Event_bDisplayRemainingTime' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, Temp_byte_Variable) == 0x000061, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, Temp_byte_Variable_1) == 0x000062, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget, K2Node_Select_Default) == 0x000063, "Member 'W_CountdownTimerFeedbackWidget_C_ExecuteUbergraph_W_CountdownTimerFeedbackWidget::K2Node_Select_Default' has a wrong offset!");

// Function W_CountdownTimerFeedbackWidget.W_CountdownTimerFeedbackWidget_C.BP_UpdateRemainingTimeText
// 0x0018 (0x0018 - 0x0000)
struct W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText final
{
public:
	class FText                                   RemainingTimeText;                                 // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText) == 0x000008, "Wrong alignment on W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText");
static_assert(sizeof(W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText) == 0x000018, "Wrong size on W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText, RemainingTimeText) == 0x000000, "Member 'W_CountdownTimerFeedbackWidget_C_BP_UpdateRemainingTimeText::RemainingTimeText' has a wrong offset!");

// Function W_CountdownTimerFeedbackWidget.W_CountdownTimerFeedbackWidget_C.BP_SetupFeedbackInfoOnTimerStarted
// 0x0048 (0x0048 - 0x0000)
struct W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted final
{
public:
	class FText                                   FeedbackText;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   RemainingTimeText;                                 // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           BackgroundColor;                                   // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayRemainingTime;                             // 0x0040(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted) == 0x000008, "Wrong alignment on W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted");
static_assert(sizeof(W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted) == 0x000048, "Wrong size on W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted, FeedbackText) == 0x000000, "Member 'W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted::FeedbackText' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted, RemainingTimeText) == 0x000018, "Member 'W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted::RemainingTimeText' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted, BackgroundColor) == 0x000030, "Member 'W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted::BackgroundColor' has a wrong offset!");
static_assert(offsetof(W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted, bDisplayRemainingTime) == 0x000040, "Member 'W_CountdownTimerFeedbackWidget_C_BP_SetupFeedbackInfoOnTimerStarted::bDisplayRemainingTime' has a wrong offset!");

}

