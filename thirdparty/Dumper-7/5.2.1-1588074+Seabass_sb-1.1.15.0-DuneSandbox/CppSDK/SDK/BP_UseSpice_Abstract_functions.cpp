#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UseSpice_Abstract

#include "Basic.hpp"

#include "BP_UseSpice_Abstract_classes.hpp"
#include "BP_UseSpice_Abstract_parameters.hpp"


namespace SDK
{

// Function BP_UseSpice_Abstract.BP_UseSpice_Abstract_C.BP_CanUse
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class AController*                Instigator                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class AActor*                     Target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ECanUse                                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ECanUse UBP_UseSpice_Abstract_C::BP_CanUse(const class AController* Instigator, const class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseSpice_Abstract_C", "BP_CanUse");

	Params::BP_UseSpice_Abstract_C_BP_CanUse Parms{};

	Parms.Instigator = Instigator;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UseSpice_Abstract.BP_UseSpice_Abstract_C.BP_Use
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AController*                      Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UseSpice_Abstract_C::BP_Use(class AController* Instigator, class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseSpice_Abstract_C", "BP_Use");

	Params::BP_UseSpice_Abstract_C_BP_Use Parms{};

	Parms.Instigator = Instigator;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UseSpice_Abstract.BP_UseSpice_Abstract_C.GetSpicePerStack
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double*                                 SpicePerStack                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseSpice_Abstract_C::GetSpicePerStack(double* SpicePerStack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseSpice_Abstract_C", "GetSpicePerStack");

	Params::BP_UseSpice_Abstract_C_GetSpicePerStack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpicePerStack != nullptr)
		*SpicePerStack = Parms.SpicePerStack;
}

}

