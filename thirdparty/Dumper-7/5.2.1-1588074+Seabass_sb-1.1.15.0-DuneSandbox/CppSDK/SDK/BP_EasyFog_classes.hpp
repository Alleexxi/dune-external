#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EasyFog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_EasyFog_VisibilitySettings_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EasyFog.BP_EasyFog_C
// 0x0050 (0x03A0 - 0x0350)
class ABP_EasyFog_C : public AActor
{
public:
	class UStaticMeshComponent*                   VisualHint;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FogCard;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Variation;                                         // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EasyFog_VisibilitySettings                  VisibilitySetting;                                 // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TwoSided;                                          // 0x0375(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          pivotAtBottom;                                     // 0x0376(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377[0x1];                                      // 0x0377(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WindSpeed;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DayColor;                                          // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NightColor;                                        // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void SetCustomPrimitiveDataColor(const struct FLinearColor& InColor, int32 DataIndex);
	void SetCustomPrimitiveData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EasyFog_C">();
	}
	static class ABP_EasyFog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EasyFog_C>();
	}
};
static_assert(alignof(ABP_EasyFog_C) == 0x000008, "Wrong alignment on ABP_EasyFog_C");
static_assert(sizeof(ABP_EasyFog_C) == 0x0003A0, "Wrong size on ABP_EasyFog_C");
static_assert(offsetof(ABP_EasyFog_C, VisualHint) == 0x000350, "Member 'ABP_EasyFog_C::VisualHint' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, Arrow) == 0x000358, "Member 'ABP_EasyFog_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, FogCard) == 0x000360, "Member 'ABP_EasyFog_C::FogCard' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, DefaultSceneRoot) == 0x000368, "Member 'ABP_EasyFog_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, Variation) == 0x000370, "Member 'ABP_EasyFog_C::Variation' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, VisibilitySetting) == 0x000374, "Member 'ABP_EasyFog_C::VisibilitySetting' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, TwoSided) == 0x000375, "Member 'ABP_EasyFog_C::TwoSided' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, pivotAtBottom) == 0x000376, "Member 'ABP_EasyFog_C::pivotAtBottom' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, WindSpeed) == 0x000378, "Member 'ABP_EasyFog_C::WindSpeed' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, DayColor) == 0x000380, "Member 'ABP_EasyFog_C::DayColor' has a wrong offset!");
static_assert(offsetof(ABP_EasyFog_C, NightColor) == 0x000390, "Member 'ABP_EasyFog_C::NightColor' has a wrong offset!");

}

