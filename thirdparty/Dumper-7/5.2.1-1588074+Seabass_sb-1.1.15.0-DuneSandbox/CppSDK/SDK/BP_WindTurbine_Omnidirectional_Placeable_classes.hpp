#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindTurbine_Omnidirectional_Placeable

#include "Basic.hpp"

#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WindTurbine_Omnidirectional_Placeable.BP_WindTurbine_Omnidirectional_Placeable_C
// 0x0020 (0x0AB0 - 0x0A90)
class ABP_WindTurbine_Omnidirectional_Placeable_C final : public AFuelPoweredPlaceable
{
public:
	class UBP_PowerConsoleMeshComponent_C*        BP_PowerConsoleMeshComponent;                      // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      WindTurbineMeshCollision;                          // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Env_Prop_Choam_Windturbine_Omnidirectional_01;  // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WindTurbine_Omnidirectional_Placeable_C">();
	}
	static class ABP_WindTurbine_Omnidirectional_Placeable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WindTurbine_Omnidirectional_Placeable_C>();
	}
};
static_assert(alignof(ABP_WindTurbine_Omnidirectional_Placeable_C) == 0x000010, "Wrong alignment on ABP_WindTurbine_Omnidirectional_Placeable_C");
static_assert(sizeof(ABP_WindTurbine_Omnidirectional_Placeable_C) == 0x000AB0, "Wrong size on ABP_WindTurbine_Omnidirectional_Placeable_C");
static_assert(offsetof(ABP_WindTurbine_Omnidirectional_Placeable_C, BP_PowerConsoleMeshComponent) == 0x000A90, "Member 'ABP_WindTurbine_Omnidirectional_Placeable_C::BP_PowerConsoleMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_WindTurbine_Omnidirectional_Placeable_C, WindTurbineMeshCollision) == 0x000A98, "Member 'ABP_WindTurbine_Omnidirectional_Placeable_C::WindTurbineMeshCollision' has a wrong offset!");
static_assert(offsetof(ABP_WindTurbine_Omnidirectional_Placeable_C, SK_Env_Prop_Choam_Windturbine_Omnidirectional_01) == 0x000AA0, "Member 'ABP_WindTurbine_Omnidirectional_Placeable_C::SK_Env_Prop_Choam_Windturbine_Omnidirectional_01' has a wrong offset!");

}

