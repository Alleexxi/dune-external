#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraMod_GroundVehicle_AutoCenter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C
// 0x0030 (0x00D0 - 0x00A0)
class UBP_CameraMod_GroundVehicle_AutoCenter_C final : public UDuneCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        LastCameraInputTime;                               // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoCenterActive;                                  // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuneWheeledVehicle*                    DuneVehicle;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        SmoothedVelocity;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VehicleSpeedKmh;                                   // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
	void CheckAutoCenter(double DelayBeforeAutoCenter, double SpeedThresholdKmh, bool* ShouldAutoCenter);
	void CheckPlayerCameraInput(bool* CameraMoved);
	void ExecuteUbergraph_BP_CameraMod_GroundVehicle_AutoCenter(int32 EntryPoint);
	void OnAddedToCamera();
	void StartAutoCenter();
	void StopAutoCenter(const struct FRotator& ViewRotation);
	void UpdateSpringArmRotation(double DeltaTime, double InterpSpeed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CameraMod_GroundVehicle_AutoCenter_C">();
	}
	static class UBP_CameraMod_GroundVehicle_AutoCenter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CameraMod_GroundVehicle_AutoCenter_C>();
	}
};
static_assert(alignof(UBP_CameraMod_GroundVehicle_AutoCenter_C) == 0x000008, "Wrong alignment on UBP_CameraMod_GroundVehicle_AutoCenter_C");
static_assert(sizeof(UBP_CameraMod_GroundVehicle_AutoCenter_C) == 0x0000D0, "Wrong size on UBP_CameraMod_GroundVehicle_AutoCenter_C");
static_assert(offsetof(UBP_CameraMod_GroundVehicle_AutoCenter_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_CameraMod_GroundVehicle_AutoCenter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_GroundVehicle_AutoCenter_C, LastCameraInputTime) == 0x0000A8, "Member 'UBP_CameraMod_GroundVehicle_AutoCenter_C::LastCameraInputTime' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_GroundVehicle_AutoCenter_C, AutoCenterActive) == 0x0000B0, "Member 'UBP_CameraMod_GroundVehicle_AutoCenter_C::AutoCenterActive' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_GroundVehicle_AutoCenter_C, DuneVehicle) == 0x0000B8, "Member 'UBP_CameraMod_GroundVehicle_AutoCenter_C::DuneVehicle' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_GroundVehicle_AutoCenter_C, SmoothedVelocity) == 0x0000C0, "Member 'UBP_CameraMod_GroundVehicle_AutoCenter_C::SmoothedVelocity' has a wrong offset!");
static_assert(offsetof(UBP_CameraMod_GroundVehicle_AutoCenter_C, VehicleSpeedKmh) == 0x0000C8, "Member 'UBP_CameraMod_GroundVehicle_AutoCenter_C::VehicleSpeedKmh' has a wrong offset!");

}

