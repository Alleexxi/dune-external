#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraMod_GroundVehicle_AutoCenter

#include "Basic.hpp"

#include "BP_CameraMod_GroundVehicle_AutoCenter_classes.hpp"
#include "BP_CameraMod_GroundVehicle_AutoCenter_parameters.hpp"


namespace SDK
{

// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.BlueprintModifyCamera
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ViewLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  ViewRotation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         NewViewLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        NewViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  NewFOV                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "BlueprintModifyCamera");

	Params::BP_CameraMod_GroundVehicle_AutoCenter_C_BlueprintModifyCamera Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.ViewLocation = std::move(ViewLocation);
	Parms.ViewRotation = std::move(ViewRotation);
	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	if (NewViewLocation != nullptr)
		*NewViewLocation = std::move(Parms.NewViewLocation);

	if (NewViewRotation != nullptr)
		*NewViewRotation = std::move(Parms.NewViewRotation);

	if (NewFOV != nullptr)
		*NewFOV = Parms.NewFOV;
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.CheckAutoCenter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DelayBeforeAutoCenter                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SpeedThresholdKmh                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ShouldAutoCenter                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::CheckAutoCenter(double DelayBeforeAutoCenter, double SpeedThresholdKmh, bool* ShouldAutoCenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "CheckAutoCenter");

	Params::BP_CameraMod_GroundVehicle_AutoCenter_C_CheckAutoCenter Parms{};

	Parms.DelayBeforeAutoCenter = DelayBeforeAutoCenter;
	Parms.SpeedThresholdKmh = SpeedThresholdKmh;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldAutoCenter != nullptr)
		*ShouldAutoCenter = Parms.ShouldAutoCenter;
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.CheckPlayerCameraInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CameraMoved                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::CheckPlayerCameraInput(bool* CameraMoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "CheckPlayerCameraInput");

	Params::BP_CameraMod_GroundVehicle_AutoCenter_C_CheckPlayerCameraInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraMoved != nullptr)
		*CameraMoved = Parms.CameraMoved;
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.ExecuteUbergraph_BP_CameraMod_GroundVehicle_AutoCenter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::ExecuteUbergraph_BP_CameraMod_GroundVehicle_AutoCenter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "ExecuteUbergraph_BP_CameraMod_GroundVehicle_AutoCenter");

	Params::BP_CameraMod_GroundVehicle_AutoCenter_C_ExecuteUbergraph_BP_CameraMod_GroundVehicle_AutoCenter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.OnAddedToCamera
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::OnAddedToCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "OnAddedToCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.StartAutoCenter
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::StartAutoCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "StartAutoCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.StopAutoCenter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  ViewRotation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::StopAutoCenter(const struct FRotator& ViewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "StopAutoCenter");

	Params::BP_CameraMod_GroundVehicle_AutoCenter_C_StopAutoCenter Parms{};

	Parms.ViewRotation = std::move(ViewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CameraMod_GroundVehicle_AutoCenter.BP_CameraMod_GroundVehicle_AutoCenter_C.UpdateSpringArmRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CameraMod_GroundVehicle_AutoCenter_C::UpdateSpringArmRotation(double DeltaTime, double InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CameraMod_GroundVehicle_AutoCenter_C", "UpdateSpringArmRotation");

	Params::BP_CameraMod_GroundVehicle_AutoCenter_C_UpdateSpringArmRotation Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);
}

}

