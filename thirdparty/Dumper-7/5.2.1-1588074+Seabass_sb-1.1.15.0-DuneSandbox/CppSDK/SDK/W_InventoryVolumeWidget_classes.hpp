#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryVolumeWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_InventoryVolumeWidget.W_InventoryVolumeWidget_C
// 0x0020 (0x0440 - 0x0420)
class UW_InventoryVolumeWidget_C final : public UInventoryVolumeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       VText_0;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VolumeStorageLabel_C*                W_Volume_Storage_Label;                            // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Set_MaxState(bool IsMax);
	void OnMaxVolumeStateChanged(EResultOfVolumeUpdate ResultOfVolumeUpdate);
	void ExecuteUbergraph_W_InventoryVolumeWidget(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_InventoryVolumeWidget_C">();
	}
	static class UW_InventoryVolumeWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_InventoryVolumeWidget_C>();
	}
};
static_assert(alignof(UW_InventoryVolumeWidget_C) == 0x000010, "Wrong alignment on UW_InventoryVolumeWidget_C");
static_assert(sizeof(UW_InventoryVolumeWidget_C) == 0x000440, "Wrong size on UW_InventoryVolumeWidget_C");
static_assert(offsetof(UW_InventoryVolumeWidget_C, UberGraphFrame) == 0x000420, "Member 'UW_InventoryVolumeWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_InventoryVolumeWidget_C, VText_0) == 0x000428, "Member 'UW_InventoryVolumeWidget_C::VText_0' has a wrong offset!");
static_assert(offsetof(UW_InventoryVolumeWidget_C, W_Volume_Storage_Label) == 0x000430, "Member 'UW_InventoryVolumeWidget_C::W_Volume_Storage_Label' has a wrong offset!");

}

