#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Deflection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_EquipableMeleeBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Deflection.GA_Deflection_C
// 0x00B0 (0x0800 - 0x0750)
class UGA_Deflection_C : public UGA_EquipableMeleeBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Deflection_C;                    // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           EntryMontage;                                      // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CachedDeflectionAngle;                             // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedStaminaCostPerTrigger;                       // 0x0764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class UDuneDamageType>>    DeflectionDamageTypes;                             // 0x0768(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EWeaponModFrame>                       Weapon_Mod_Frames;                                 // 0x0778(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AppliedDeflectionState;                            // 0x0788(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CostPerTriggerSpecHandle;                          // 0x0790(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CachedStaminaCostPerSecond;                        // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeflectionTriggered;                               // 0x07A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           StanceMontage;                                     // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ExitMontage;                                       // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CachedDeteriorationCooldown;                       // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeteriorationOnCooldown;                           // 0x07BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CachedCooldownFull;                                // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedCooldownReduced;                             // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              TelemetryActivationTime;                           // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETelemetryAbilityOutcome                      TelemetryOutcome;                                  // 0x07D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETelemetryAbilityPhase                        TelemetryPhase;                                    // 0x07D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamepadUsesHoldInput;                              // 0x07D2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeyboardUsesHoldInput;                             // 0x07D3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStaminaDrainActive;                              // 0x07D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Camera_Context;                                    // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADuneCharacter*                         DuneChar;                                          // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bEquippedMeleeWeapon;                              // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitCancel*                CancelWaitTask;                                    // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Added_9701B952478ECA293231B89DBC8C279A();
	void ApplyStaminaCost();
	void CacheTuningValues();
	void DeteriorateEquippedWeapon();
	void ExecuteUbergraph_GA_Deflection(int32 EntryPoint);
	void FinishDeteriorationCooldown();
	void InitializeStaticProperties(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpec& Spec);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnBlendOut_65F48C7B4C1F19A89C548FA068A0D219();
	void OnBlendOut_7BF2CEB644D9086D0D4E04A579A0A74F();
	void OnBlendOut_EE3F105D4D5E7720249716A1E180BDCE();
	void OnBlockedHits_82D0BB8E47CEC04733D092BAA2673AD2(const class AActor* InDamagingActor, const struct FHitResult& InHitResult);
	void OnBlockedHitsPredicted_82D0BB8E47CEC04733D092BAA2673AD2(EDamageImmunityHitPredictionType InPredictionType, const class AActor* InDamagingActor, const struct FHitResult& InHitResult);
	void OnCancel_BA8A10BF465FB3B13EF10B97D2F808DF();
	void OnCancelled_65F48C7B4C1F19A89C548FA068A0D219();
	void OnCancelled_7BF2CEB644D9086D0D4E04A579A0A74F();
	void OnCancelled_EE3F105D4D5E7720249716A1E180BDCE();
	void OnChange_21EB64F04264380FB49B449292B618FA();
	void OnCompleted_65F48C7B4C1F19A89C548FA068A0D219();
	void OnCompleted_7BF2CEB644D9086D0D4E04A579A0A74F();
	void OnCompleted_EE3F105D4D5E7720249716A1E180BDCE();
	void OnDamageTaken();
	void OnFinish_A9A6FFD5499F06B6B298E1A9C69DEF78();
	void OnFinish_CC255BDF454903AA307A2A813D035F4B();
	void OnFinish_D33C482E497402F1576829983DA161D7();
	void OnImmunityBlockedHit(const class AActor* InDamagingActor, const struct FHitResult& InHitResult);
	void OnInterrupted_65F48C7B4C1F19A89C548FA068A0D219();
	void OnInterrupted_7BF2CEB644D9086D0D4E04A579A0A74F();
	void OnInterrupted_EE3F105D4D5E7720249716A1E180BDCE();
	void OnPress_4951229B426E75DD71DCC5BA37B74185(float TimeWaited);
	void OnRelease_DC5A9E6D4CC011D8C52B5F87580FF8B4(float TimeHeld);
	void OnSync_183A95C34E92FC0D5E0195894127C044();
	void Removed_7FCDDED949F89D3D80A219B97BA60FD9();
	void ResetInternalVariables();
	void SetDeflectionStateAndImmunity(bool IsEnabled);
	void SetStaminaDrain(bool IsEnabled);
	void SetupCostPerTrigger();
	void StartDeflectionIntro();
	void TriggerDeflection();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Deflection_C">();
	}
	static class UGA_Deflection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Deflection_C>();
	}
};
static_assert(alignof(UGA_Deflection_C) == 0x000010, "Wrong alignment on UGA_Deflection_C");
static_assert(sizeof(UGA_Deflection_C) == 0x000800, "Wrong size on UGA_Deflection_C");
static_assert(offsetof(UGA_Deflection_C, UberGraphFrame_GA_Deflection_C) == 0x000750, "Member 'UGA_Deflection_C::UberGraphFrame_GA_Deflection_C' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, EntryMontage) == 0x000758, "Member 'UGA_Deflection_C::EntryMontage' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CachedDeflectionAngle) == 0x000760, "Member 'UGA_Deflection_C::CachedDeflectionAngle' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CachedStaminaCostPerTrigger) == 0x000764, "Member 'UGA_Deflection_C::CachedStaminaCostPerTrigger' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, DeflectionDamageTypes) == 0x000768, "Member 'UGA_Deflection_C::DeflectionDamageTypes' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, Weapon_Mod_Frames) == 0x000778, "Member 'UGA_Deflection_C::Weapon_Mod_Frames' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, AppliedDeflectionState) == 0x000788, "Member 'UGA_Deflection_C::AppliedDeflectionState' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CostPerTriggerSpecHandle) == 0x000790, "Member 'UGA_Deflection_C::CostPerTriggerSpecHandle' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CachedStaminaCostPerSecond) == 0x0007A0, "Member 'UGA_Deflection_C::CachedStaminaCostPerSecond' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, DeflectionTriggered) == 0x0007A4, "Member 'UGA_Deflection_C::DeflectionTriggered' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, StanceMontage) == 0x0007A8, "Member 'UGA_Deflection_C::StanceMontage' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, ExitMontage) == 0x0007B0, "Member 'UGA_Deflection_C::ExitMontage' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CachedDeteriorationCooldown) == 0x0007B8, "Member 'UGA_Deflection_C::CachedDeteriorationCooldown' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, DeteriorationOnCooldown) == 0x0007BC, "Member 'UGA_Deflection_C::DeteriorationOnCooldown' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CachedCooldownFull) == 0x0007C0, "Member 'UGA_Deflection_C::CachedCooldownFull' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CachedCooldownReduced) == 0x0007C4, "Member 'UGA_Deflection_C::CachedCooldownReduced' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, TelemetryActivationTime) == 0x0007C8, "Member 'UGA_Deflection_C::TelemetryActivationTime' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, TelemetryOutcome) == 0x0007D0, "Member 'UGA_Deflection_C::TelemetryOutcome' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, TelemetryPhase) == 0x0007D1, "Member 'UGA_Deflection_C::TelemetryPhase' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, GamepadUsesHoldInput) == 0x0007D2, "Member 'UGA_Deflection_C::GamepadUsesHoldInput' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, KeyboardUsesHoldInput) == 0x0007D3, "Member 'UGA_Deflection_C::KeyboardUsesHoldInput' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, IsStaminaDrainActive) == 0x0007D4, "Member 'UGA_Deflection_C::IsStaminaDrainActive' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, Camera_Context) == 0x0007D8, "Member 'UGA_Deflection_C::Camera_Context' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, DuneChar) == 0x0007E0, "Member 'UGA_Deflection_C::DuneChar' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, bEquippedMeleeWeapon) == 0x0007E8, "Member 'UGA_Deflection_C::bEquippedMeleeWeapon' has a wrong offset!");
static_assert(offsetof(UGA_Deflection_C, CancelWaitTask) == 0x0007F0, "Member 'UGA_Deflection_C::CancelWaitTask' has a wrong offset!");

}

