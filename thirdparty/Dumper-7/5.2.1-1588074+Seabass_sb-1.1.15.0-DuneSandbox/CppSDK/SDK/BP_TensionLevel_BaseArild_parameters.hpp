#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TensionLevel_BaseArild

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"


namespace SDK::Params
{

// Function BP_TensionLevel_BaseArild.BP_TensionLevel_BaseArild_C.BlueprintShouldDeactivate
// 0x0028 (0x0028 - 0x0000)
struct BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate final
{
public:
	struct FAudioThreatInfo                       CurrentThreatInfo;                                 // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         TimeSinceActivated;                                // 0x0020(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activation_Logic_Should_Activate;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate) == 0x000008, "Wrong alignment on BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate");
static_assert(sizeof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate) == 0x000028, "Wrong size on BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate, CurrentThreatInfo) == 0x000000, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate::CurrentThreatInfo' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate, TimeSinceActivated) == 0x000020, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate::TimeSinceActivated' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate, ReturnValue) == 0x000024, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate, CallFunc_Activation_Logic_Should_Activate) == 0x000025, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate::CallFunc_Activation_Logic_Should_Activate' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldDeactivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_TensionLevel_BaseArild.BP_TensionLevel_BaseArild_C.BlueprintShouldActivate
// 0x0030 (0x0030 - 0x0000)
struct BP_TensionLevel_BaseArild_C_BlueprintShouldActivate final
{
public:
	class UAudioThreatLevel*                      PreviousThreatLevel;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAudioThreatInfo                       CurrentThreatInfo;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activation_Logic_Should_Activate;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TensionLevel_BaseArild_C_BlueprintShouldActivate) == 0x000008, "Wrong alignment on BP_TensionLevel_BaseArild_C_BlueprintShouldActivate");
static_assert(sizeof(BP_TensionLevel_BaseArild_C_BlueprintShouldActivate) == 0x000030, "Wrong size on BP_TensionLevel_BaseArild_C_BlueprintShouldActivate");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldActivate, PreviousThreatLevel) == 0x000000, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldActivate::PreviousThreatLevel' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldActivate, CurrentThreatInfo) == 0x000008, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldActivate::CurrentThreatInfo' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldActivate, ReturnValue) == 0x000028, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_BlueprintShouldActivate, CallFunc_Activation_Logic_Should_Activate) == 0x000029, "Member 'BP_TensionLevel_BaseArild_C_BlueprintShouldActivate::CallFunc_Activation_Logic_Should_Activate' has a wrong offset!");

// Function BP_TensionLevel_BaseArild.BP_TensionLevel_BaseArild_C.Activation Logic
// 0x0098 (0x0098 - 0x0000)
struct BP_TensionLevel_BaseArild_C_Activation_Logic final
{
public:
	struct FAudioThreatInfo                       Current_Threat_Info;                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Should_Activate;                                   // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultAggroCount;                                  // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultDamage;                                      // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultProjectileCount;                             // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultMeleeCount;                                  // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultFlyby;                                       // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GatherNpcAggroCount_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UDuneDamageType>>    K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UDuneDamageType>>    K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GatherPlayerHitCountSince_ReturnValue;    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GatherDamageSince_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GatherPlayerHitCountSince_ReturnValue_1;  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GatherFlybyCountSince_ReturnValue;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GatherPlayerHitCountSince_LastTimePeriodSeconds_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GatherDamageSince_LastTimePeriodSeconds_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GatherPlayerHitCountSince_LastTimePeriodSeconds_ImplicitCast_1; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GatherFlybyCountSince_LastTimePeriodSeconds_ImplicitCast; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TensionLevel_BaseArild_C_Activation_Logic) == 0x000008, "Wrong alignment on BP_TensionLevel_BaseArild_C_Activation_Logic");
static_assert(sizeof(BP_TensionLevel_BaseArild_C_Activation_Logic) == 0x000098, "Wrong size on BP_TensionLevel_BaseArild_C_Activation_Logic");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, Current_Threat_Info) == 0x000000, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::Current_Threat_Info' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, Should_Activate) == 0x000020, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::Should_Activate' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, ResultAggroCount) == 0x000021, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::ResultAggroCount' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, ResultDamage) == 0x000022, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::ResultDamage' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, ResultProjectileCount) == 0x000023, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::ResultProjectileCount' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, ResultMeleeCount) == 0x000024, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::ResultMeleeCount' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, ResultFlyby) == 0x000025, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::ResultFlyby' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherNpcAggroCount_ReturnValue) == 0x000028, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherNpcAggroCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00002D, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, K2Node_MakeArray_Array_1) == 0x000048, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_BooleanOR_ReturnValue_1) == 0x000058, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_BooleanOR_ReturnValue_2) == 0x000059, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_BooleanOR_ReturnValue_3) == 0x00005A, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherPlayerHitCountSince_ReturnValue) == 0x00005C, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherPlayerHitCountSince_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherDamageSince_ReturnValue) == 0x000064, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherDamageSince_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherPlayerHitCountSince_ReturnValue_1) == 0x00006C, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherPlayerHitCountSince_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000070, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherFlybyCountSince_ReturnValue) == 0x000074, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherFlybyCountSince_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x000078, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherPlayerHitCountSince_LastTimePeriodSeconds_ImplicitCast) == 0x00007C, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherPlayerHitCountSince_LastTimePeriodSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherDamageSince_LastTimePeriodSeconds_ImplicitCast) == 0x000080, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherDamageSince_LastTimePeriodSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherPlayerHitCountSince_LastTimePeriodSeconds_ImplicitCast_1) == 0x000090, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherPlayerHitCountSince_LastTimePeriodSeconds_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TensionLevel_BaseArild_C_Activation_Logic, CallFunc_GatherFlybyCountSince_LastTimePeriodSeconds_ImplicitCast) == 0x000094, "Member 'BP_TensionLevel_BaseArild_C_Activation_Logic::CallFunc_GatherFlybyCountSince_LastTimePeriodSeconds_ImplicitCast' has a wrong offset!");

}

