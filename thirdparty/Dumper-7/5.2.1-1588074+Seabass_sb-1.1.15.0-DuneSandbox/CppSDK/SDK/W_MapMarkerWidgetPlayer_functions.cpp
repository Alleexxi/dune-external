#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapMarkerWidgetPlayer

#include "Basic.hpp"

#include "W_MapMarkerWidgetPlayer_classes.hpp"
#include "W_MapMarkerWidgetPlayer_parameters.hpp"


namespace SDK
{

// Function W_MapMarkerWidgetPlayer.W_MapMarkerWidgetPlayer_C.ExecuteUbergraph_W_MapMarkerWidgetPlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MapMarkerWidgetPlayer_C::ExecuteUbergraph_W_MapMarkerWidgetPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapMarkerWidgetPlayer_C", "ExecuteUbergraph_W_MapMarkerWidgetPlayer");

	Params::W_MapMarkerWidgetPlayer_C_ExecuteUbergraph_W_MapMarkerWidgetPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MapMarkerWidgetPlayer.W_MapMarkerWidgetPlayer_C.RotateIconWithOwner
// (Public, BlueprintCallable, BlueprintEvent)

void UW_MapMarkerWidgetPlayer_C::RotateIconWithOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapMarkerWidgetPlayer_C", "RotateIconWithOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapMarkerWidgetPlayer.W_MapMarkerWidgetPlayer_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MapMarkerWidgetPlayer_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapMarkerWidgetPlayer_C", "Tick");

	Params::W_MapMarkerWidgetPlayer_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MapMarkerWidgetPlayer.W_MapMarkerWidgetPlayer_C.Update
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FEMapMarker&               MarkerType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FFullscreenMapMarkerRowBase&MarkerStaticData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FMapMarkerGuiData&         MarkerDynamicData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_MapMarkerWidgetPlayer_C::Update(const struct FEMapMarker& MarkerType, const struct FFullscreenMapMarkerRowBase& MarkerStaticData, const struct FMapMarkerGuiData& MarkerDynamicData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapMarkerWidgetPlayer_C", "Update");

	Params::W_MapMarkerWidgetPlayer_C_Update Parms{};

	Parms.MarkerType = std::move(MarkerType);
	Parms.MarkerStaticData = std::move(MarkerStaticData);
	Parms.MarkerDynamicData = std::move(MarkerDynamicData);

	UObject::ProcessEvent(Func, &Parms);
}

}

