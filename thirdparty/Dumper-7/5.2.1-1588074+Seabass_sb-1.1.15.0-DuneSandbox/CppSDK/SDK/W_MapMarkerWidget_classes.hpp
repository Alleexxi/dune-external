#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapMarkerWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MapMarkerWidget.W_MapMarkerWidget_C
// 0x0020 (0x04F0 - 0x04D0)
class UW_MapMarkerWidget_C final : public UMapMarkerWidgetBase
{
public:
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       IconFlashAnimation;                                // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                m_MarkerButton;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MapMarkerRadiusIndicator_C*          RadiusIndicator;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_MapMarkerWidget(int32 EntryPoint);
	void OnDiscoveryLevelChanged(const EMarkerDiscoveryLevel DiscoveryLevel, const TSoftObjectPtr<class UTexture2D>& MarkerIconTexture, const struct FEIconPresetWidgetName& MarkerIconPreset);
	void SetIconFlashing(bool EnableFlashing);
	void Update(const struct FEMapMarker& MarkerType, const struct FFullscreenMapMarkerRowBase& MarkerStaticData, const struct FMapMarkerGuiData& MarkerDynamicData);
	void UpdateRadius(const struct FLinearColor& Color, bool bShowRadius);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MapMarkerWidget_C">();
	}
	static class UW_MapMarkerWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MapMarkerWidget_C>();
	}
};
static_assert(alignof(UW_MapMarkerWidget_C) == 0x000010, "Wrong alignment on UW_MapMarkerWidget_C");
static_assert(sizeof(UW_MapMarkerWidget_C) == 0x0004F0, "Wrong size on UW_MapMarkerWidget_C");
static_assert(offsetof(UW_MapMarkerWidget_C, UberGraphFrame) == 0x0004D0, "Member 'UW_MapMarkerWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MapMarkerWidget_C, IconFlashAnimation) == 0x0004D8, "Member 'UW_MapMarkerWidget_C::IconFlashAnimation' has a wrong offset!");
static_assert(offsetof(UW_MapMarkerWidget_C, m_MarkerButton) == 0x0004E0, "Member 'UW_MapMarkerWidget_C::m_MarkerButton' has a wrong offset!");
static_assert(offsetof(UW_MapMarkerWidget_C, RadiusIndicator) == 0x0004E8, "Member 'UW_MapMarkerWidget_C::RadiusIndicator' has a wrong offset!");

}

