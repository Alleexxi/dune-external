#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ServiceMessageNotificationEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_ServiceMessageNotificationEntry.W_ServiceMessageNotificationEntry_C.ExecuteUbergraph_W_ServiceMessageNotificationEntry
// 0x0028 (0x0028 - 0x0000)
struct W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_CountdownText;                        // 0x0008(0x0018)(ConstParm)
	const class UServiceMessageNotificationData*  K2Node_Event_NotificationData;                     // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry) == 0x000008, "Wrong alignment on W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry");
static_assert(sizeof(W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry) == 0x000028, "Wrong size on W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry, EntryPoint) == 0x000000, "Member 'W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry, K2Node_Event_CountdownText) == 0x000008, "Member 'W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry::K2Node_Event_CountdownText' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry, K2Node_Event_NotificationData) == 0x000020, "Member 'W_ServiceMessageNotificationEntry_C_ExecuteUbergraph_W_ServiceMessageNotificationEntry::K2Node_Event_NotificationData' has a wrong offset!");

// Function W_ServiceMessageNotificationEntry.W_ServiceMessageNotificationEntry_C.OnCountdownTimerStep
// 0x0018 (0x0018 - 0x0000)
struct W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep final
{
public:
	class FText                                   CountdownText_0;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep) == 0x000008, "Wrong alignment on W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep");
static_assert(sizeof(W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep) == 0x000018, "Wrong size on W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep, CountdownText_0) == 0x000000, "Member 'W_ServiceMessageNotificationEntry_C_OnCountdownTimerStep::CountdownText_0' has a wrong offset!");

// Function W_ServiceMessageNotificationEntry.W_ServiceMessageNotificationEntry_C.OnSetData
// 0x0008 (0x0008 - 0x0000)
struct W_ServiceMessageNotificationEntry_C_OnSetData final
{
public:
	const class UServiceMessageNotificationData*  NotificationData_0;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ServiceMessageNotificationEntry_C_OnSetData) == 0x000008, "Wrong alignment on W_ServiceMessageNotificationEntry_C_OnSetData");
static_assert(sizeof(W_ServiceMessageNotificationEntry_C_OnSetData) == 0x000008, "Wrong size on W_ServiceMessageNotificationEntry_C_OnSetData");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_OnSetData, NotificationData_0) == 0x000000, "Member 'W_ServiceMessageNotificationEntry_C_OnSetData::NotificationData_0' has a wrong offset!");

// Function W_ServiceMessageNotificationEntry.W_ServiceMessageNotificationEntry_C.SetCountdownVisibility
// 0x0005 (0x0005 - 0x0000)
struct W_ServiceMessageNotificationEntry_C_SetCountdownVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCountdownEnabled_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility) == 0x000001, "Wrong alignment on W_ServiceMessageNotificationEntry_C_SetCountdownVisibility");
static_assert(sizeof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility) == 0x000005, "Wrong size on W_ServiceMessageNotificationEntry_C_SetCountdownVisibility");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility, Temp_bool_Variable) == 0x000000, "Member 'W_ServiceMessageNotificationEntry_C_SetCountdownVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility, Temp_byte_Variable) == 0x000001, "Member 'W_ServiceMessageNotificationEntry_C_SetCountdownVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'W_ServiceMessageNotificationEntry_C_SetCountdownVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility, CallFunc_IsCountdownEnabled_ReturnValue) == 0x000003, "Member 'W_ServiceMessageNotificationEntry_C_SetCountdownVisibility::CallFunc_IsCountdownEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetCountdownVisibility, K2Node_Select_Default) == 0x000004, "Member 'W_ServiceMessageNotificationEntry_C_SetCountdownVisibility::K2Node_Select_Default' has a wrong offset!");

// Function W_ServiceMessageNotificationEntry.W_ServiceMessageNotificationEntry_C.SetStyle
// 0x0034 (0x0034 - 0x0000)
struct W_ServiceMessageNotificationEntry_C_SetStyle final
{
public:
	EServiceMessageNotificationStyle              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ServiceMessageNotificationEntry_C_SetStyle) == 0x000004, "Wrong alignment on W_ServiceMessageNotificationEntry_C_SetStyle");
static_assert(sizeof(W_ServiceMessageNotificationEntry_C_SetStyle) == 0x000034, "Wrong size on W_ServiceMessageNotificationEntry_C_SetStyle");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetStyle, Temp_byte_Variable) == 0x000000, "Member 'W_ServiceMessageNotificationEntry_C_SetStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetStyle, Temp_struct_Variable) == 0x000004, "Member 'W_ServiceMessageNotificationEntry_C_SetStyle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetStyle, Temp_struct_Variable_1) == 0x000014, "Member 'W_ServiceMessageNotificationEntry_C_SetStyle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ServiceMessageNotificationEntry_C_SetStyle, K2Node_Select_Default) == 0x000024, "Member 'W_ServiceMessageNotificationEntry_C_SetStyle::K2Node_Select_Default' has a wrong offset!");

}

