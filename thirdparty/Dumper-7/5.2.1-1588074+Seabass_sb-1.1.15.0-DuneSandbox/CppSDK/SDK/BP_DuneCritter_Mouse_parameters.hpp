#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DuneCritter_Mouse

#include "Basic.hpp"

#include "DuneSandbox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DuneCritter_Mouse.BP_DuneCritter_Mouse_C.BPOnDamageTaken
// 0x0230 (0x0230 - 0x0000)
struct BP_DuneCritter_Mouse_C_BPOnDamageTaken final
{
public:
	struct FMulticastDamageInfo                   DamageInfo;                                        // 0x0000(0x0230)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DuneCritter_Mouse_C_BPOnDamageTaken) == 0x000008, "Wrong alignment on BP_DuneCritter_Mouse_C_BPOnDamageTaken");
static_assert(sizeof(BP_DuneCritter_Mouse_C_BPOnDamageTaken) == 0x000230, "Wrong size on BP_DuneCritter_Mouse_C_BPOnDamageTaken");
static_assert(offsetof(BP_DuneCritter_Mouse_C_BPOnDamageTaken, DamageInfo) == 0x000000, "Member 'BP_DuneCritter_Mouse_C_BPOnDamageTaken::DamageInfo' has a wrong offset!");

// Function BP_DuneCritter_Mouse.BP_DuneCritter_Mouse_C.ExecuteUbergraph_BP_DuneCritter_Mouse
// 0x03B0 (0x03B0 - 0x0000)
struct BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAB_Mouse_C*                            K2Node_DynamicCast_AsAB_Mouse;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAB_Mouse_C*                            K2Node_DynamicCast_AsAB_Mouse_1;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMulticastDamageInfo                   K2Node_Event_DamageInfo;                           // 0x0050(0x0230)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse) == 0x000008, "Wrong alignment on BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse");
static_assert(sizeof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse) == 0x0003B0, "Wrong size on BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, EntryPoint) == 0x000000, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, K2Node_DynamicCast_AsAB_Mouse) == 0x000028, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::K2Node_DynamicCast_AsAB_Mouse' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000038, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, K2Node_DynamicCast_AsAB_Mouse_1) == 0x000040, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::K2Node_DynamicCast_AsAB_Mouse_1' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, K2Node_Event_DamageInfo) == 0x000050, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::K2Node_Event_DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000280, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_bBlockingHit) == 0x000298, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_bInitialOverlap) == 0x000299, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_Time) == 0x00029C, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_Distance) == 0x0002A0, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_Location) == 0x0002A8, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C0, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_Normal) == 0x0002D8, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F0, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_PhysMat) == 0x000308, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_HitActor) == 0x000310, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_HitComponent) == 0x000318, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_HitBoneName) == 0x000320, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_BoneName) == 0x000328, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_HitItem) == 0x000330, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_ElementIndex) == 0x000334, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_FaceIndex) == 0x000338, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_TraceStart) == 0x000340, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000370, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_Normal_ReturnValue) == 0x000388, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_Dot_VectorVector_ReturnValue) == 0x0003A0, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0003A8, "Member 'BP_DuneCritter_Mouse_C_ExecuteUbergraph_BP_DuneCritter_Mouse::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

