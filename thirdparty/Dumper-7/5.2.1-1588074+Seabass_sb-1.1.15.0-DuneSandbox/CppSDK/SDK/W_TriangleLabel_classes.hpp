#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TriangleLabel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TriangleLabel.W_TriangleLabel_C
// 0x00E0 (0x04D0 - 0x03F0)
class UW_TriangleLabel_C final : public UDuneUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ChevronLeft;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ChevronLScaleBox;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChevronRight;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ChevronRScaleBox;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlockNormal;                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TriangleLabel;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Show_Chevrons_;                                    // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Triangle_Label_Material_Instance;                  // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Chevron_Material_Instance;                         // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Outline_Thickness;                                 // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Triangle_Label_Background_Color;                   // 0x044C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Triangle_Label_Outline_Color;                      // 0x045C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Chevron_Outline_Color;                             // 0x046C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Chevron_Background_Color;                          // 0x047C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gradient_Offset;                                   // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Chevron_Spacing;                                   // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Content_Padding;                                   // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Label_Size;                                        // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Content_Horizontal_Alignment;                      // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Content_Vertical_Alignment;                        // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x2];                                      // 0x04BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Triangle_Label_Background_ColorSelected;           // 0x04BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_TriangleLabel(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SelectedEvent();
	void Set_Background_Color(const struct FLinearColor& Color);
	void Set_Desired_Size(const struct FDeprecateSlateVector2D& Desired_Size);
	void Set_Fill_Color(const struct FLinearColor& Color);
	void Set_Outline_Color(const struct FLinearColor& Color);
	void Setup_Materials();
	void UnselectedEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TriangleLabel_C">();
	}
	static class UW_TriangleLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TriangleLabel_C>();
	}
};
static_assert(alignof(UW_TriangleLabel_C) == 0x000010, "Wrong alignment on UW_TriangleLabel_C");
static_assert(sizeof(UW_TriangleLabel_C) == 0x0004D0, "Wrong size on UW_TriangleLabel_C");
static_assert(offsetof(UW_TriangleLabel_C, UberGraphFrame) == 0x0003F0, "Member 'UW_TriangleLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, ChevronLeft) == 0x0003F8, "Member 'UW_TriangleLabel_C::ChevronLeft' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, ChevronLScaleBox) == 0x000400, "Member 'UW_TriangleLabel_C::ChevronLScaleBox' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, ChevronRight) == 0x000408, "Member 'UW_TriangleLabel_C::ChevronRight' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, ChevronRScaleBox) == 0x000410, "Member 'UW_TriangleLabel_C::ChevronRScaleBox' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, CommonTextBlockNormal) == 0x000418, "Member 'UW_TriangleLabel_C::CommonTextBlockNormal' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Content) == 0x000420, "Member 'UW_TriangleLabel_C::Content' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, TriangleLabel) == 0x000428, "Member 'UW_TriangleLabel_C::TriangleLabel' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Show_Chevrons_) == 0x000430, "Member 'UW_TriangleLabel_C::Show_Chevrons_' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Triangle_Label_Material_Instance) == 0x000438, "Member 'UW_TriangleLabel_C::Triangle_Label_Material_Instance' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Chevron_Material_Instance) == 0x000440, "Member 'UW_TriangleLabel_C::Chevron_Material_Instance' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Outline_Thickness) == 0x000448, "Member 'UW_TriangleLabel_C::Outline_Thickness' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Triangle_Label_Background_Color) == 0x00044C, "Member 'UW_TriangleLabel_C::Triangle_Label_Background_Color' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Triangle_Label_Outline_Color) == 0x00045C, "Member 'UW_TriangleLabel_C::Triangle_Label_Outline_Color' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Chevron_Outline_Color) == 0x00046C, "Member 'UW_TriangleLabel_C::Chevron_Outline_Color' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Chevron_Background_Color) == 0x00047C, "Member 'UW_TriangleLabel_C::Chevron_Background_Color' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Gradient_Offset) == 0x00048C, "Member 'UW_TriangleLabel_C::Gradient_Offset' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Chevron_Spacing) == 0x000490, "Member 'UW_TriangleLabel_C::Chevron_Spacing' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Content_Padding) == 0x000498, "Member 'UW_TriangleLabel_C::Content_Padding' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Label_Size) == 0x0004A8, "Member 'UW_TriangleLabel_C::Label_Size' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Content_Horizontal_Alignment) == 0x0004B8, "Member 'UW_TriangleLabel_C::Content_Horizontal_Alignment' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Content_Vertical_Alignment) == 0x0004B9, "Member 'UW_TriangleLabel_C::Content_Vertical_Alignment' has a wrong offset!");
static_assert(offsetof(UW_TriangleLabel_C, Triangle_Label_Background_ColorSelected) == 0x0004BC, "Member 'UW_TriangleLabel_C::Triangle_Label_Background_ColorSelected' has a wrong offset!");

}

