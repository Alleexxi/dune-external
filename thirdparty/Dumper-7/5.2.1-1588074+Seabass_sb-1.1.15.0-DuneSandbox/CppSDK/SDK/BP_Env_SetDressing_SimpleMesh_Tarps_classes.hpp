#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Env_SetDressing_SimpleMesh_Tarps

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESetDressingTarpWIndPreset_structs.hpp"
#include "FSetDressingTarpWindPresetDefinition_structs.hpp"
#include "BP_Env_SetDressing_SimpleMesh_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Env_SetDressing_SimpleMesh_Tarps.BP_Env_SetDressing_SimpleMesh_Tarps_C
// 0x0158 (0x0550 - 0x03F8)
class ABP_Env_SetDressing_SimpleMesh_Tarps_C : public ABP_Env_SetDressing_SimpleMesh_C
{
public:
	class UBP_AutoPlayAudioComponent_C*           Audio_Slaver_TarpFlag;                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Logo;                                          // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Logo___Offset_U;                                   // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Logo___Offset_V;                                   // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Logo___Rotation;                                   // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Logo___Scale;                                      // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tarp_Color;                                        // 0x0414(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tarp_Wear_Color;                                   // 0x0424(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tarp_Dirt_Color;                                   // 0x0434(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Border_Trims;                                  // 0x0444(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Border_Trims_Color;                                // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Wind;                                       // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Global_Intensity;                                  // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESetDressingTarpWIndPreset                    Preset;                                            // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Vertex_Color_Channel;                              // 0x046C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Vertex_Color_Remap;                                // 0x0480(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Vertex_Color_Exponent;                             // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Deformation_Vector;                                // 0x04A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Deformation_Using_Vertex_Normal;                   // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Projection_Vertical;                               // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Wave_Size;                                         // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, struct FFSetDressingTarpWindPresetDefinition> Presets;                       // 0x04D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        DeformationBias;                                   // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeformationMin;                                    // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeformationMax;                                    // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WindSpeed;                                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Set_Tarp_Specific_CPD(class UPrimitiveComponent* Tarp_mesh);
	void Set_Custom_Primitive_Data(class UPrimitiveComponent* Primitive_Component);
	void InitWindPreset();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Env_SetDressing_SimpleMesh_Tarps_C">();
	}
	static class ABP_Env_SetDressing_SimpleMesh_Tarps_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Env_SetDressing_SimpleMesh_Tarps_C>();
	}
};
static_assert(alignof(ABP_Env_SetDressing_SimpleMesh_Tarps_C) == 0x000010, "Wrong alignment on ABP_Env_SetDressing_SimpleMesh_Tarps_C");
static_assert(sizeof(ABP_Env_SetDressing_SimpleMesh_Tarps_C) == 0x000550, "Wrong size on ABP_Env_SetDressing_SimpleMesh_Tarps_C");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Audio_Slaver_TarpFlag) == 0x0003F8, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Audio_Slaver_TarpFlag' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Add_Logo) == 0x000400, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Add_Logo' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Logo___Offset_U) == 0x000404, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Logo___Offset_U' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Logo___Offset_V) == 0x000408, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Logo___Offset_V' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Logo___Rotation) == 0x00040C, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Logo___Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Logo___Scale) == 0x000410, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Logo___Scale' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Tarp_Color) == 0x000414, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Tarp_Color' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Tarp_Wear_Color) == 0x000424, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Tarp_Wear_Color' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Tarp_Dirt_Color) == 0x000434, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Tarp_Dirt_Color' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Add_Border_Trims) == 0x000444, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Add_Border_Trims' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Border_Trims_Color) == 0x000448, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Border_Trims_Color' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Enable_Wind) == 0x000458, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Enable_Wind' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Global_Intensity) == 0x000460, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Global_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Preset) == 0x000468, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Preset' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Vertex_Color_Channel) == 0x00046C, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Vertex_Color_Channel' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Vertex_Color_Remap) == 0x000480, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Vertex_Color_Remap' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Vertex_Color_Exponent) == 0x0004A0, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Vertex_Color_Exponent' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Deformation_Vector) == 0x0004A8, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Deformation_Vector' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Deformation_Using_Vertex_Normal) == 0x0004C0, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Deformation_Using_Vertex_Normal' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Projection_Vertical) == 0x0004C8, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Projection_Vertical' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Wave_Size) == 0x0004D0, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Wave_Size' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, Presets) == 0x0004D8, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::Presets' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, DeformationBias) == 0x000528, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::DeformationBias' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, DeformationMin) == 0x000530, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::DeformationMin' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, DeformationMax) == 0x000538, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::DeformationMax' has a wrong offset!");
static_assert(offsetof(ABP_Env_SetDressing_SimpleMesh_Tarps_C, WindSpeed) == 0x000540, "Member 'ABP_Env_SetDressing_SimpleMesh_Tarps_C::WindSpeed' has a wrong offset!");

}

