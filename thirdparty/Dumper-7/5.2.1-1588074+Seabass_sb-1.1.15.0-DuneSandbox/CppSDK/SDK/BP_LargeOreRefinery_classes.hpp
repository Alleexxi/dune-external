#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LargeOreRefinery

#include "Basic.hpp"

#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LargeOreRefinery.BP_LargeOreRefinery_C
// 0x0030 (0x0A50 - 0x0A20)
class ABP_LargeOreRefinery_C final : public AAnimatedItemCraftingStation
{
public:
	class UStaticMeshComponent*                   SM_Roller_Back;                                    // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roller_Front;                                   // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Base;                                           // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraTransformComponent*              CameraTransform;                                   // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PowerConsoleMeshComponent_C*        BP_PowerConsoleMeshComponent;                      // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	TArray<class UPrimitiveComponent*> GetExtraBPComponentsToIgnoreCollisionOnBrush();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LargeOreRefinery_C">();
	}
	static class ABP_LargeOreRefinery_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LargeOreRefinery_C>();
	}
};
static_assert(alignof(ABP_LargeOreRefinery_C) == 0x000010, "Wrong alignment on ABP_LargeOreRefinery_C");
static_assert(sizeof(ABP_LargeOreRefinery_C) == 0x000A50, "Wrong size on ABP_LargeOreRefinery_C");
static_assert(offsetof(ABP_LargeOreRefinery_C, SM_Roller_Back) == 0x000A20, "Member 'ABP_LargeOreRefinery_C::SM_Roller_Back' has a wrong offset!");
static_assert(offsetof(ABP_LargeOreRefinery_C, SM_Roller_Front) == 0x000A28, "Member 'ABP_LargeOreRefinery_C::SM_Roller_Front' has a wrong offset!");
static_assert(offsetof(ABP_LargeOreRefinery_C, SM_Base) == 0x000A30, "Member 'ABP_LargeOreRefinery_C::SM_Base' has a wrong offset!");
static_assert(offsetof(ABP_LargeOreRefinery_C, CameraTransform) == 0x000A38, "Member 'ABP_LargeOreRefinery_C::CameraTransform' has a wrong offset!");
static_assert(offsetof(ABP_LargeOreRefinery_C, BP_PowerConsoleMeshComponent) == 0x000A40, "Member 'ABP_LargeOreRefinery_C::BP_PowerConsoleMeshComponent' has a wrong offset!");

}

