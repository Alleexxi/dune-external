#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DuneGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DuneGameState.BP_DuneGameState_C
// 0x0018 (0x0668 - 0x0650)
class ABP_DuneGameState_C final : public ADuneGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0650(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PlayerEventsComponent_C*            BP_PlayerEventComponent;                           // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void OnCutsceneStarted();
	void OnCutsceneEnded();
	void ExecuteUbergraph_BP_DuneGameState(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DuneGameState_C">();
	}
	static class ABP_DuneGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DuneGameState_C>();
	}
};
static_assert(alignof(ABP_DuneGameState_C) == 0x000008, "Wrong alignment on ABP_DuneGameState_C");
static_assert(sizeof(ABP_DuneGameState_C) == 0x000668, "Wrong size on ABP_DuneGameState_C");
static_assert(offsetof(ABP_DuneGameState_C, UberGraphFrame) == 0x000650, "Member 'ABP_DuneGameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DuneGameState_C, BP_PlayerEventComponent) == 0x000658, "Member 'ABP_DuneGameState_C::BP_PlayerEventComponent' has a wrong offset!");
static_assert(offsetof(ABP_DuneGameState_C, DefaultSceneRoot) == 0x000660, "Member 'ABP_DuneGameState_C::DefaultSceneRoot' has a wrong offset!");

}

