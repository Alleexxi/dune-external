#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NegativeScaleValidator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UE4Dreamworld_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NegativeScaleValidator.BP_NegativeScaleValidator_C
// 0x0018 (0x0088 - 0x0070)
class UBP_NegativeScaleValidator_C final : public USceneValidator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         Actors;                                            // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void BP_GatherWorldData(class UWorld* World);
	void Does_Vector_Have_Negative_Values(const struct FVector& Vector, bool* HasNegativeValues);
	void ExecuteUbergraph_BP_NegativeScaleValidator(int32 EntryPoint);
	void GatherWorldData(class UWorld* World);
	bool ValidateWorld(bool bSectionsPassedValidation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NegativeScaleValidator_C">();
	}
	static class UBP_NegativeScaleValidator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NegativeScaleValidator_C>();
	}
};
static_assert(alignof(UBP_NegativeScaleValidator_C) == 0x000008, "Wrong alignment on UBP_NegativeScaleValidator_C");
static_assert(sizeof(UBP_NegativeScaleValidator_C) == 0x000088, "Wrong size on UBP_NegativeScaleValidator_C");
static_assert(offsetof(UBP_NegativeScaleValidator_C, UberGraphFrame) == 0x000070, "Member 'UBP_NegativeScaleValidator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NegativeScaleValidator_C, Actors) == 0x000078, "Member 'UBP_NegativeScaleValidator_C::Actors' has a wrong offset!");

}

