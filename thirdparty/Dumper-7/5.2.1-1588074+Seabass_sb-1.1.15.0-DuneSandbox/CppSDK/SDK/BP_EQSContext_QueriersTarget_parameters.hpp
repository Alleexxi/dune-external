#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EQSContext_QueriersTarget

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_EQSContext_QueriersTarget.BP_EQSContext_QueriersTarget_C.ProvideSingleActor
// 0x0090 (0x0090 - 0x0000)
struct BP_EQSContext_QueriersTarget_C_ProvideSingleActor final
{
public:
	class UObject*                                QuerierObject;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 QuerierActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ResultingActor;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EQS_TestPawn_C*                     K2Node_DynamicCast_AsBP_EQS_Test_Pawn;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADuneSquadController*                   K2Node_DynamicCast_AsDune_Squad_Controller;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADuneNpcCharacter*>              CallFunc_GetSquadMembers_ReturnValue;              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class ADuneNpcCharacter*                      CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor) == 0x000008, "Wrong alignment on BP_EQSContext_QueriersTarget_C_ProvideSingleActor");
static_assert(sizeof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor) == 0x000090, "Wrong size on BP_EQSContext_QueriersTarget_C_ProvideSingleActor");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, QuerierObject) == 0x000000, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::QuerierObject' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, QuerierActor) == 0x000008, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::QuerierActor' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, ResultingActor) == 0x000010, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::ResultingActor' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_AsBP_EQS_Test_Pawn) == 0x000018, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_AsBP_EQS_Test_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_AsDune_Squad_Controller) == 0x000030, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_AsDune_Squad_Controller' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, CallFunc_GetSquadMembers_ReturnValue) == 0x000040, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::CallFunc_GetSquadMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, CallFunc_GetValueAsObject_ReturnValue) == 0x000058, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, CallFunc_GetBlackboard_ReturnValue_1) == 0x000060, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_AsActor) == 0x000068, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, CallFunc_GetValueAsObject_ReturnValue_1) == 0x000078, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::CallFunc_GetValueAsObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_AsActor_1) == 0x000080, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BP_EQSContext_QueriersTarget_C_ProvideSingleActor, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_EQSContext_QueriersTarget_C_ProvideSingleActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

