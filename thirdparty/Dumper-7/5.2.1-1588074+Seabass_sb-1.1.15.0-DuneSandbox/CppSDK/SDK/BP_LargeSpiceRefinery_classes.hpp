#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LargeSpiceRefinery

#include "Basic.hpp"

#include "DuneSandbox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LargeSpiceRefinery.BP_LargeSpiceRefinery_C
// 0x0060 (0x0A80 - 0x0A20)
class ABP_LargeSpiceRefinery_C final : public AAnimatedItemCraftingStation
{
public:
	class UStaticMeshComponent*                   SM_Roller_Lower_Flipped;                           // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Engine_03;                                      // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Engine_02;                                      // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Engine_01;                                      // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Env_Prop_Choam_SpiceRefinery_Large_Glass;       // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roller_Upper;                                   // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roller_Lower;                                   // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SpiceRefinery_Base;                             // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PowerConsoleMeshComponent_C*        BP_PowerConsoleMeshComponent1;                     // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraTransformComponent*              CameraTransform;                                   // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PowerConsoleMeshComponent_C*        BP_PowerConsoleMeshComponent;                      // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_SandMesh;                                       // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LargeSpiceRefinery_C">();
	}
	static class ABP_LargeSpiceRefinery_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LargeSpiceRefinery_C>();
	}
};
static_assert(alignof(ABP_LargeSpiceRefinery_C) == 0x000010, "Wrong alignment on ABP_LargeSpiceRefinery_C");
static_assert(sizeof(ABP_LargeSpiceRefinery_C) == 0x000A80, "Wrong size on ABP_LargeSpiceRefinery_C");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Roller_Lower_Flipped) == 0x000A20, "Member 'ABP_LargeSpiceRefinery_C::SM_Roller_Lower_Flipped' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Engine_03) == 0x000A28, "Member 'ABP_LargeSpiceRefinery_C::SM_Engine_03' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Engine_02) == 0x000A30, "Member 'ABP_LargeSpiceRefinery_C::SM_Engine_02' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Engine_01) == 0x000A38, "Member 'ABP_LargeSpiceRefinery_C::SM_Engine_01' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Env_Prop_Choam_SpiceRefinery_Large_Glass) == 0x000A40, "Member 'ABP_LargeSpiceRefinery_C::SM_Env_Prop_Choam_SpiceRefinery_Large_Glass' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Roller_Upper) == 0x000A48, "Member 'ABP_LargeSpiceRefinery_C::SM_Roller_Upper' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_Roller_Lower) == 0x000A50, "Member 'ABP_LargeSpiceRefinery_C::SM_Roller_Lower' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, SM_SpiceRefinery_Base) == 0x000A58, "Member 'ABP_LargeSpiceRefinery_C::SM_SpiceRefinery_Base' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, BP_PowerConsoleMeshComponent1) == 0x000A60, "Member 'ABP_LargeSpiceRefinery_C::BP_PowerConsoleMeshComponent1' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, CameraTransform) == 0x000A68, "Member 'ABP_LargeSpiceRefinery_C::CameraTransform' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, BP_PowerConsoleMeshComponent) == 0x000A70, "Member 'ABP_LargeSpiceRefinery_C::BP_PowerConsoleMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_LargeSpiceRefinery_C, MI_SandMesh) == 0x000A78, "Member 'ABP_LargeSpiceRefinery_C::MI_SandMesh' has a wrong offset!");

}

