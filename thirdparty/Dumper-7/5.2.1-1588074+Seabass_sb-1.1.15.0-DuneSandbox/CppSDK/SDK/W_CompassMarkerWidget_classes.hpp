#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CompassMarkerWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "DuneSandbox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CompassMarkerWidget.W_CompassMarkerWidget_C
// 0x0030 (0x04B0 - 0x0480)
class UW_CompassMarkerWidget_C final : public UCompassMarkerWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FlashIconAnimation;                                // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       m_DistanceView;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDuneImage*                             MarkerHeightIndicator;                             // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCurveFloat*                            DistanceFadeCurve;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Update(const ECompassMarkerClass MarkerClass, const struct FEMapMarker& MarkerType, const struct FFullscreenMapMarkerRowBase& MarkerStaticData);
	void SetPlayerDistance(const float MetersToPlayer, const float CenterDeviation);
	void SetMarkerHeight(const ECompassMarkerHeight MarkerHeight);
	void SetIconFlashing(bool EnableFlashing);
	void HidePlayerDistance();
	void ExecuteUbergraph_W_CompassMarkerWidget(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CompassMarkerWidget_C">();
	}
	static class UW_CompassMarkerWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CompassMarkerWidget_C>();
	}
};
static_assert(alignof(UW_CompassMarkerWidget_C) == 0x000010, "Wrong alignment on UW_CompassMarkerWidget_C");
static_assert(sizeof(UW_CompassMarkerWidget_C) == 0x0004B0, "Wrong size on UW_CompassMarkerWidget_C");
static_assert(offsetof(UW_CompassMarkerWidget_C, UberGraphFrame) == 0x000480, "Member 'UW_CompassMarkerWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CompassMarkerWidget_C, FlashIconAnimation) == 0x000488, "Member 'UW_CompassMarkerWidget_C::FlashIconAnimation' has a wrong offset!");
static_assert(offsetof(UW_CompassMarkerWidget_C, m_DistanceView) == 0x000490, "Member 'UW_CompassMarkerWidget_C::m_DistanceView' has a wrong offset!");
static_assert(offsetof(UW_CompassMarkerWidget_C, MarkerHeightIndicator) == 0x000498, "Member 'UW_CompassMarkerWidget_C::MarkerHeightIndicator' has a wrong offset!");
static_assert(offsetof(UW_CompassMarkerWidget_C, DistanceFadeCurve) == 0x0004A0, "Member 'UW_CompassMarkerWidget_C::DistanceFadeCurve' has a wrong offset!");

}

