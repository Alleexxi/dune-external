#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DWGameplayAbilities

#include "Basic.hpp"

#include "GameplayAbilities_classes.hpp"
#include "Engine_classes.hpp"
#include "DWGameplayAbilities_structs.hpp"
#include "FglCore_structs.hpp"


namespace SDK
{

// Class DWGameplayAbilities.DWAbilitySystemComponent
// 0x01E0 (0x16E8 - 0x1508)
#pragma pack(push, 0x1)
class alignas(0x08) UDWAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                         Pad_1508[0x1E0];                                   // 0x1508(0x01E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientAcknowledgeKey(const int16 AcknowledgementKey);
	void ServerApplyGameplayEffectSpecToSelf(const struct FGameplayEffectSpec& GameplayEffect, const struct FPredictionKey& PredictionKey);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DWAbilitySystemComponent">();
	}
	static class UDWAbilitySystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWAbilitySystemComponent>();
	}
};
#pragma pack(pop)
static_assert(alignof(UDWAbilitySystemComponent) == 0x000008, "Wrong alignment on UDWAbilitySystemComponent");
static_assert(sizeof(UDWAbilitySystemComponent) == 0x0016E8, "Wrong size on UDWAbilitySystemComponent");

// Class DWGameplayAbilities.DWAbilitySystemGlobals
// 0x0020 (0x02C0 - 0x02A0)
class UDWAbilitySystemGlobals final : public UAbilitySystemGlobals
{
public:
	uint8                                         Pad_2A0[0x20];                                     // 0x02A0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DWAbilitySystemGlobals">();
	}
	static class UDWAbilitySystemGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWAbilitySystemGlobals>();
	}
};
static_assert(alignof(UDWAbilitySystemGlobals) == 0x000008, "Wrong alignment on UDWAbilitySystemGlobals");
static_assert(sizeof(UDWAbilitySystemGlobals) == 0x0002C0, "Wrong size on UDWAbilitySystemGlobals");

// Class DWGameplayAbilities.DWAttributeSet
// 0x0000 (0x0038 - 0x0038)
class UDWAttributeSet : public UAttributeSet
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DWAttributeSet">();
	}
	static class UDWAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWAttributeSet>();
	}
};
static_assert(alignof(UDWAttributeSet) == 0x000008, "Wrong alignment on UDWAttributeSet");
static_assert(sizeof(UDWAttributeSet) == 0x000038, "Wrong size on UDWAttributeSet");

// Class DWGameplayAbilities.DWGameplayAbilityFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UDWGameplayAbilityFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FAbilityHandle ActivateAbilityByClass(TSubclassOf<class UDWGameplayAbility> Ability, TScriptInterface<class IAbilitySystemInterface> Target);
	static struct FEffectHandle ApplyEffectByClass(TSubclassOf<class UDWGameplayEffect> GameplayEffectClass, TScriptInterface<class IAbilitySystemInterface> Target, const float Level);
	static EAbilityHandleState GetAbilityState(const struct FAbilityHandle& Handle);
	static struct FActiveGameplayEffectHandle GetActiveGameplayHandle(const struct FEffectHandle& Handle);
	static EEffectHandleState GetEffectState(const struct FEffectHandle& Handle);
	static bool RemoveEffect(const struct FEffectHandle& EffectHandle, TScriptInterface<class IAbilitySystemInterface> Target, const int32 StacksToRemove);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DWGameplayAbilityFunctionLibrary">();
	}
	static class UDWGameplayAbilityFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWGameplayAbilityFunctionLibrary>();
	}
};
static_assert(alignof(UDWGameplayAbilityFunctionLibrary) == 0x000008, "Wrong alignment on UDWGameplayAbilityFunctionLibrary");
static_assert(sizeof(UDWGameplayAbilityFunctionLibrary) == 0x000030, "Wrong size on UDWGameplayAbilityFunctionLibrary");

// Class DWGameplayAbilities.DWGameplayAbility
// 0x0040 (0x0410 - 0x03D0)
class UDWGameplayAbility : public UGameplayAbility
{
public:
	TArray<struct FRuntimeAccessor>               Accessors;                                         // 0x03D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0x30];                                     // 0x03E0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndTask(const struct FAbilityTaskHandle& Handle);
	void InitializeStaticProperties(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpec& Spec);
	void SetupPostAuthorityTransfer(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpec& Spec);

	const struct FRuntimeImmediateContext GetContext() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DWGameplayAbility">();
	}
	static class UDWGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWGameplayAbility>();
	}
};
static_assert(alignof(UDWGameplayAbility) == 0x000008, "Wrong alignment on UDWGameplayAbility");
static_assert(sizeof(UDWGameplayAbility) == 0x000410, "Wrong size on UDWGameplayAbility");
static_assert(offsetof(UDWGameplayAbility, Accessors) == 0x0003D0, "Member 'UDWGameplayAbility::Accessors' has a wrong offset!");

// Class DWGameplayAbilities.DWGameplayEffect
// 0x0010 (0x0920 - 0x0910)
class UDWGameplayEffect : public UGameplayEffect
{
public:
	float                                         m_DurationReductionByDamageMultiplier;             // 0x0908(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_90C[0x14];                                     // 0x090C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetDurationMagnitudeForLevel(const float InLevel, float* OutMagnitude) const;
	bool GetModifierMagnitudeForLevelAndAttribute(const struct FGameplayAttribute& InAttribute, const float InLevel, float* OutMagnitude) const;
	void GetModifierMagnitudesForLevel(TArray<float>* OutVals, float InLevel) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DWGameplayEffect">();
	}
	static class UDWGameplayEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWGameplayEffect>();
	}
};
static_assert(alignof(UDWGameplayEffect) == 0x000010, "Wrong alignment on UDWGameplayEffect");
static_assert(sizeof(UDWGameplayEffect) == 0x000920, "Wrong size on UDWGameplayEffect");
static_assert(offsetof(UDWGameplayEffect, m_DurationReductionByDamageMultiplier) == 0x000908, "Member 'UDWGameplayEffect::m_DurationReductionByDamageMultiplier' has a wrong offset!");

}

