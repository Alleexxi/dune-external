#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapAreaIntroHUDWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MapAreaIntroHUDWidget.W_MapAreaIntroHUDWidget_C
// 0x00A0 (0x0510 - 0x0470)
class UW_MapAreaIntroHUDWidget_C final : public UMapAreaIntroHUDWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TextAniIn;                                         // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HeadAniIn;                                         // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       m_AreaHeadline;                                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       m_AreaSubtext;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Headline;                                          // 0x0498(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Subtext;                                           // 0x04B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FName                                   Row_Name;                                          // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Sub_Region_Name;                                   // 0x04D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Area_Name;                                         // 0x04E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NewVar;                                            // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void WidgetAnimationEvt_HeadAniIn_K2Node_WidgetAnimationEvent_0();
	void ShowStrings(bool EnteredFirstTime);
	void SetStringsBasedOnMap(const struct FMapAreaId& NewParam);
	void Set_Location_Text(const class FText& Headline_0, const class FText& Subtext_0);
	void PreConstruct(bool IsDesignTime);
	void PlayHideAnimation();
	void ExecuteUbergraph_W_MapAreaIntroHUDWidget(int32 EntryPoint);
	void BP_OnMapAreaChanged(const struct FMapAreaId& MapAreaId, const bool bEnteredFirstTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MapAreaIntroHUDWidget_C">();
	}
	static class UW_MapAreaIntroHUDWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MapAreaIntroHUDWidget_C>();
	}
};
static_assert(alignof(UW_MapAreaIntroHUDWidget_C) == 0x000010, "Wrong alignment on UW_MapAreaIntroHUDWidget_C");
static_assert(sizeof(UW_MapAreaIntroHUDWidget_C) == 0x000510, "Wrong size on UW_MapAreaIntroHUDWidget_C");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, UberGraphFrame) == 0x000470, "Member 'UW_MapAreaIntroHUDWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, TextAniIn) == 0x000478, "Member 'UW_MapAreaIntroHUDWidget_C::TextAniIn' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, HeadAniIn) == 0x000480, "Member 'UW_MapAreaIntroHUDWidget_C::HeadAniIn' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, m_AreaHeadline) == 0x000488, "Member 'UW_MapAreaIntroHUDWidget_C::m_AreaHeadline' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, m_AreaSubtext) == 0x000490, "Member 'UW_MapAreaIntroHUDWidget_C::m_AreaSubtext' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, Headline) == 0x000498, "Member 'UW_MapAreaIntroHUDWidget_C::Headline' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, Subtext) == 0x0004B0, "Member 'UW_MapAreaIntroHUDWidget_C::Subtext' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, Row_Name) == 0x0004C8, "Member 'UW_MapAreaIntroHUDWidget_C::Row_Name' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, Sub_Region_Name) == 0x0004D0, "Member 'UW_MapAreaIntroHUDWidget_C::Sub_Region_Name' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, Area_Name) == 0x0004E8, "Member 'UW_MapAreaIntroHUDWidget_C::Area_Name' has a wrong offset!");
static_assert(offsetof(UW_MapAreaIntroHUDWidget_C, NewVar) == 0x000500, "Member 'UW_MapAreaIntroHUDWidget_C::NewVar' has a wrong offset!");

}

