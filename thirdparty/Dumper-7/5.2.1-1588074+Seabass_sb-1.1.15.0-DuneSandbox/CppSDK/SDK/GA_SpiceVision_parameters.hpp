#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpiceVision

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DuneSandbox_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_SpiceVision.GA_SpiceVision_C.BP_OnAvatarSet
// 0x0048 (0x0048 - 0x0000)
struct GA_SpiceVision_C_BP_OnAvatarSet final
{
public:
	struct FGameplayAbilityActorInfo              InActorInfo;                                       // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GA_SpiceVision_C_BP_OnAvatarSet) == 0x000008, "Wrong alignment on GA_SpiceVision_C_BP_OnAvatarSet");
static_assert(sizeof(GA_SpiceVision_C_BP_OnAvatarSet) == 0x000048, "Wrong size on GA_SpiceVision_C_BP_OnAvatarSet");
static_assert(offsetof(GA_SpiceVision_C_BP_OnAvatarSet, InActorInfo) == 0x000000, "Member 'GA_SpiceVision_C_BP_OnAvatarSet::InActorInfo' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.BP_OnSpiceVisionEnableChanged
// 0x0001 (0x0001 - 0x0000)
struct GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged) == 0x000001, "Wrong alignment on GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged");
static_assert(sizeof(GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged) == 0x000001, "Wrong size on GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged");
static_assert(offsetof(GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged, bIsEnabled) == 0x000000, "Member 'GA_SpiceVision_C_BP_OnSpiceVisionEnableChanged::bIsEnabled' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.Changed_6434B40645D24EBA0724C69966ADE08D
// 0x0040 (0x0040 - 0x0000)
struct GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValue;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D) == 0x000008, "Wrong alignment on GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D");
static_assert(sizeof(GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D) == 0x000040, "Wrong size on GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D");
static_assert(offsetof(GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D, Attribute) == 0x000000, "Member 'GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D::Attribute' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D, NewValue) == 0x000038, "Member 'GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D::NewValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D, OldValue) == 0x00003C, "Member 'GA_SpiceVision_C_Changed_6434B40645D24EBA0724C69966ADE08D::OldValue' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.DidSpiceStateChange
// 0x0080 (0x0080 - 0x0000)
struct GA_SpiceVision_C_DidSpiceStateChange final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OldValue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Settings;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   NewState;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StateChanged;                                      // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidStateIncrease;                                  // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   OldSpiceState;                                     // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   NewSpiceState;                                     // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpiceAddictionSettings*                CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_GetSpiceStateFromSpicePercentage_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpiceAddictionSettings*                CallFunc_GetClassDefaultObject_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_GetSpiceStateFromSpicePercentage_ReturnValue_1; // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpiceStateFromSpicePercentage_SpicePercentage_ImplicitCast; // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpiceStateFromSpicePercentage_SpicePercentage_ImplicitCast_1; // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_DidSpiceStateChange) == 0x000008, "Wrong alignment on GA_SpiceVision_C_DidSpiceStateChange");
static_assert(sizeof(GA_SpiceVision_C_DidSpiceStateChange) == 0x000080, "Wrong size on GA_SpiceVision_C_DidSpiceStateChange");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, NewValue) == 0x000000, "Member 'GA_SpiceVision_C_DidSpiceStateChange::NewValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, OldValue) == 0x000008, "Member 'GA_SpiceVision_C_DidSpiceStateChange::OldValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, Settings) == 0x000010, "Member 'GA_SpiceVision_C_DidSpiceStateChange::Settings' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, NewState) == 0x000018, "Member 'GA_SpiceVision_C_DidSpiceStateChange::NewState' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, StateChanged) == 0x000019, "Member 'GA_SpiceVision_C_DidSpiceStateChange::StateChanged' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, DidStateIncrease) == 0x00001A, "Member 'GA_SpiceVision_C_DidSpiceStateChange::DidStateIncrease' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, OldSpiceState) == 0x00001B, "Member 'GA_SpiceVision_C_DidSpiceStateChange::OldSpiceState' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, NewSpiceState) == 0x00001C, "Member 'GA_SpiceVision_C_DidSpiceStateChange::NewSpiceState' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000020, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000028, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetFloatAttribute_ReturnValue) == 0x00002C, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000030, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetSpiceStateFromSpicePercentage_ReturnValue) == 0x000048, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetSpiceStateFromSpicePercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetClassDefaultObject_ReturnValue_1) == 0x000050, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetClassDefaultObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000058, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetSpiceStateFromSpicePercentage_ReturnValue_1) == 0x00005C, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetSpiceStateFromSpicePercentage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000060, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000065, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000066, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_BooleanAND_ReturnValue) == 0x000067, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000070, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetSpiceStateFromSpicePercentage_SpicePercentage_ImplicitCast) == 0x000078, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetSpiceStateFromSpicePercentage_SpicePercentage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DidSpiceStateChange, CallFunc_GetSpiceStateFromSpicePercentage_SpicePercentage_ImplicitCast_1) == 0x00007C, "Member 'GA_SpiceVision_C_DidSpiceStateChange::CallFunc_GetSpiceStateFromSpicePercentage_SpicePercentage_ImplicitCast_1' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.DisableSpiceVisionCameraEffects
// 0x00E8 (0x00E8 - 0x0000)
struct GA_SpiceVision_C_DisableSpiceVisionCameraEffects final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0008(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_DisableSpiceVisionCameraEffects) == 0x000008, "Wrong alignment on GA_SpiceVision_C_DisableSpiceVisionCameraEffects");
static_assert(sizeof(GA_SpiceVision_C_DisableSpiceVisionCameraEffects) == 0x0000E8, "Wrong size on GA_SpiceVision_C_DisableSpiceVisionCameraEffects");
static_assert(offsetof(GA_SpiceVision_C_DisableSpiceVisionCameraEffects, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_SpiceVision_C_DisableSpiceVisionCameraEffects::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DisableSpiceVisionCameraEffects, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000008, "Member 'GA_SpiceVision_C_DisableSpiceVisionCameraEffects::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_DisableSpiceVisionCameraEffects, CallFunc_IsServer_ReturnValue) == 0x0000E0, "Member 'GA_SpiceVision_C_DisableSpiceVisionCameraEffects::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.ExecuteUbergraph_GA_SpiceVision
// 0x0878 (0x0878 - 0x0000)
struct GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_5;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UCameraModifier>>    Temp_class_Variable_1;                             // 0x0028(0x0010)(ReferenceParm)
	struct FGameplayAttribute                     K2Node_CustomEvent_Attribute;                      // 0x0038(0x0038)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> K2Node_CreateDelegate_OutputDelegate; // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Temp_struct_Variable;                              // 0x0098(0x0038)(HasGetValueTypeHash)
	TArray<TSubclassOf<class UCameraModifier>>    Temp_class_Variable_2;                             // 0x00D0(0x0010)(ReferenceParm)
	class USpiceVisionTriggerRowObject*           CallFunc_SpawnObject_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class UCameraModifier>>    Temp_class_Variable_3;                             // 0x00E8(0x0010)(ReferenceParm)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_4;                       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_DidSpiceStateChange_NewState;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DidSpiceStateChange_StateChanged;         // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DidSpiceStateChange_DidStateIncrease;     // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0160(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_2; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_8;                       // 0x0198(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_7;                             // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_3; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_9;                       // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_2;       // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x01D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue_1;                // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;       // 0x0218(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0238(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_2;          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Try_Trigger_Spice_Vision_TriggeredCueTag; // 0x031C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table_1;                 // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x033C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4; // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x0360(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3; // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_3;          // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_6;       // 0x0444(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_6; // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitAttributeChanged*     CallFunc_WaitForAttributeChanged_ReturnValue;      // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_7; // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_2;  // 0x0470(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_7;       // 0x054C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsEnabled)>              K2Node_CreateDelegate_OutputDelegate_8;            // 0x0568(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADunePlayerController*                  K2Node_DynamicCast_AsDune_Player_Controller;       // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x0594(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_8; // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInDialogue_ReturnValue;           // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Complete_Function_Name_ReturnValue;   // 0x05B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_10;      // 0x05D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_8;                             // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_4; // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_4;                // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnabled;                           // 0x0601(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_603[0x5];                                      // 0x0603(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_3;  // 0x0608(0x00D8)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_9; // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_11;      // 0x06E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_7;                       // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0700(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_715[0x3];                                      // 0x0715(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_9;                             // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_5; // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_5;                // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_732[0x6];                                      // 0x0732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_10; // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpiceState                                   CallFunc_Get_Actor_Spice_State_Spice_State;        // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x3];                                      // 0x0741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Try_Trigger_Spice_Vision_TriggeredCueTag_1; // 0x0744(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_13;      // 0x074C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_11; // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_4;  // 0x0768(0x00D8)(ContainsInstancedReference)
	double                                        CallFunc_DidSpiceStateChange_OldValue_ImplicitCast; // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DidSpiceStateChange_NewValue_ImplicitCast; // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2; // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision) == 0x000008, "Wrong alignment on GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision");
static_assert(sizeof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision) == 0x000878, "Wrong size on GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, EntryPoint) == 0x000000, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_5) == 0x000008, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable) == 0x000010, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings) == 0x000018, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_1) == 0x000028, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Attribute) == 0x000038, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Attribute' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_NewValue) == 0x000070, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_OldValue) == 0x000074, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_real_Variable) == 0x000088, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_real_Variable_1) == 0x00008C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000090, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_struct_Variable) == 0x000098, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_2) == 0x0000D0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_SpawnObject_ReturnValue) == 0x0000E0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_3) == 0x0000E8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_4) == 0x0000F8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_4) == 0x000100, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_1) == 0x000108, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_bSuccess_1) == 0x000110, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_DidSpiceStateChange_NewState) == 0x000111, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_DidSpiceStateChange_NewState' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_DidSpiceStateChange_StateChanged) == 0x000112, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_DidSpiceStateChange_StateChanged' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_DidSpiceStateChange_DidStateIncrease) == 0x000113, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_DidSpiceStateChange_DidStateIncrease' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_3) == 0x000118, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_SwitchEnum_CmpSuccess) == 0x000120, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_object_Variable) == 0x000128, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_2) == 0x000130, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_5) == 0x000138, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_1) == 0x000140, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_object_Variable_1) == 0x000148, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_DynamicCast_AsData_Table) == 0x000150, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded) == 0x000160, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_6) == 0x000168, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_2) == 0x000170, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_bSuccess_2) == 0x000178, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_1) == 0x00017C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000190, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_8) == 0x000198, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_8' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_7) == 0x0001A8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_3) == 0x0001B0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_bSuccess_3) == 0x0001B8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_9) == 0x0001C0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_9' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001C8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001D8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001E8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_RandomFloat_ReturnValue) == 0x0001F0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x0001F8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_ReturnValue) == 0x0001FC, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000200, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_RandomFloat_ReturnValue_1) == 0x000208, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x000210, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x000214, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_4) == 0x000218, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000228, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3) == 0x000230, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000238, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2) == 0x000310, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_ReturnValue_2) == 0x000314, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_FTrunc_ReturnValue) == 0x000318, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_Try_Trigger_Spice_Vision_TriggeredCueTag) == 0x00031C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_Try_Trigger_Spice_Vision_TriggeredCueTag' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_object_Variable_2) == 0x000328, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_DynamicCast_AsData_Table_1) == 0x000330, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_DynamicCast_AsData_Table_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_DynamicCast_bSuccess_1) == 0x000338, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_5) == 0x00033C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4) == 0x000350, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5) == 0x000358, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x000360, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3) == 0x000438, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatAttribute_ReturnValue_3) == 0x00043C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatAttribute_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_FTrunc_ReturnValue_1) == 0x000440, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_6) == 0x000444, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_Event_bWasCancelled) == 0x000454, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_6) == 0x000458, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_WaitForAttributeChanged_ReturnValue) == 0x000460, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_WaitForAttributeChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_7) == 0x000468, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_MakeGameplayCueParameters_ReturnValue_2) == 0x000470, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_MakeGameplayCueParameters_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsValid_ReturnValue_1) == 0x000548, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_7) == 0x00054C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_IsEnabled) == 0x00055C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetPlayerController_ReturnValue) == 0x000560, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_8) == 0x000568, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_DynamicCast_AsDune_Player_Controller) == 0x000578, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_DynamicCast_AsDune_Player_Controller' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_DynamicCast_bSuccess_2) == 0x000580, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_6) == 0x000588, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsValid_ReturnValue_2) == 0x000590, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_9) == 0x000594, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_8) == 0x0005A8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsPlayerInDialogue_ReturnValue) == 0x0005B0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsPlayerInDialogue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0005B1, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_Get_Complete_Function_Name_ReturnValue) == 0x0005B8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_Get_Complete_Function_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_Concat_StrStr_ReturnValue) == 0x0005C8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_10) == 0x0005D8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsServer_ReturnValue) == 0x0005E8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_8) == 0x0005F0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_8' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_4) == 0x0005F8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_bSuccess_4) == 0x000600, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_Event_bIsEnabled) == 0x000601, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_Event_bIsEnabled' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_IsServer_ReturnValue_1) == 0x000602, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_MakeGameplayCueParameters_ReturnValue_3) == 0x000608, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_MakeGameplayCueParameters_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_9) == 0x0006E0, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_11) == 0x0006E8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CustomEvent_Loaded_7) == 0x0006F8, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CustomEvent_Loaded_7' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_12) == 0x000700, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatValue_ReturnValue) == 0x000710, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000714, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, Temp_class_Variable_9) == 0x000718, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::Temp_class_Variable_9' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetFloatValue_ReturnValue_1) == 0x000720, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_5) == 0x000728, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_AsSpice_Addiction_Settings_5' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_ClassDynamicCast_bSuccess_5) == 0x000730, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_ClassDynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000731, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_10) == 0x000738, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_Get_Actor_Spice_State_Spice_State) == 0x000740, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_Get_Actor_Spice_State_Spice_State' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_Try_Trigger_Spice_Vision_TriggeredCueTag_1) == 0x000744, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_Try_Trigger_Spice_Vision_TriggeredCueTag_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, K2Node_CreateDelegate_OutputDelegate_13) == 0x00074C, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_11) == 0x000760, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_MakeGameplayCueParameters_ReturnValue_4) == 0x000768, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_MakeGameplayCueParameters_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_DidSpiceStateChange_OldValue_ImplicitCast) == 0x000840, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_DidSpiceStateChange_OldValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000848, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_DidSpiceStateChange_NewValue_ImplicitCast) == 0x000850, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_DidSpiceStateChange_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_FTrunc_A_ImplicitCast) == 0x000858, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_FTrunc_A_ImplicitCast_1) == 0x000860, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000868, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2) == 0x000870, "Member 'GA_SpiceVision_C_ExecuteUbergraph_GA_SpiceVision::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.Get Complete Function Name
// 0x0050 (0x0050 - 0x0000)
struct GA_SpiceVision_C_Get_Complete_Function_Name final
{
public:
	class FString                                 Function_Name;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_Get_Complete_Function_Name) == 0x000008, "Wrong alignment on GA_SpiceVision_C_Get_Complete_Function_Name");
static_assert(sizeof(GA_SpiceVision_C_Get_Complete_Function_Name) == 0x000050, "Wrong size on GA_SpiceVision_C_Get_Complete_Function_Name");
static_assert(offsetof(GA_SpiceVision_C_Get_Complete_Function_Name, Function_Name) == 0x000000, "Member 'GA_SpiceVision_C_Get_Complete_Function_Name::Function_Name' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Get_Complete_Function_Name, ReturnValue) == 0x000010, "Member 'GA_SpiceVision_C_Get_Complete_Function_Name::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Get_Complete_Function_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'GA_SpiceVision_C_Get_Complete_Function_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Get_Complete_Function_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'GA_SpiceVision_C_Get_Complete_Function_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Get_Complete_Function_Name, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'GA_SpiceVision_C_Get_Complete_Function_Name::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_SpiceVision_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_SpiceVision_C_K2_OnEndAbility");
static_assert(sizeof(GA_SpiceVision_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_SpiceVision_C_K2_OnEndAbility");
static_assert(offsetof(GA_SpiceVision_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_SpiceVision_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnCinematicModeChanged
// 0x0001 (0x0001 - 0x0000)
struct GA_SpiceVision_C_OnCinematicModeChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnCinematicModeChanged) == 0x000001, "Wrong alignment on GA_SpiceVision_C_OnCinematicModeChanged");
static_assert(sizeof(GA_SpiceVision_C_OnCinematicModeChanged) == 0x000001, "Wrong size on GA_SpiceVision_C_OnCinematicModeChanged");
static_assert(offsetof(GA_SpiceVision_C_OnCinematicModeChanged, IsEnabled) == 0x000000, "Member 'GA_SpiceVision_C_OnCinematicModeChanged::IsEnabled' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_26ADA9D249DDD1429748E1A5D09689A7
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5D09689A7::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_26ADA9D249DDD1429748E1A5EAA1A90D::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_4B207F6B4546F43960CF33BB94F44765
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_4B207F6B4546F43960CF33BB94F44765::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_6CE2488E4B7268A7033101A56DD40534
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_6CE2488E4B7268A7033101A56DD40534::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_944C09DF4517B767F9F2C4AB07151EF8
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB07151EF8::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB09F70CBB::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_944C09DF4517B767F9F2C4AB3D223E52
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB3D223E52::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_944C09DF4517B767F9F2C4AB64849E5A
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4AB64849E5A::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_944C09DF4517B767F9F2C4ABD01270F3
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD01270F3::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D
// 0x0008 (0x0008 - 0x0000)
struct GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D) == 0x000008, "Wrong alignment on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D");
static_assert(sizeof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D) == 0x000008, "Wrong size on GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D");
static_assert(offsetof(GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D, Loaded) == 0x000000, "Member 'GA_SpiceVision_C_OnLoaded_944C09DF4517B767F9F2C4ABD6A04E8D::Loaded' has a wrong offset!");

// Function GA_SpiceVision.GA_SpiceVision_C.Try Trigger Spice Vision
// 0x01E0 (0x01E0 - 0x0000)
struct GA_SpiceVision_C_Try_Trigger_Spice_Vision final
{
public:
	ESpiceState                                   SpiceState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpiceAddictionLevel;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Settings;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggeredCueTag;                                   // 0x0018(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class FString                                 FunctionName;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0088(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Random_OutItem;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Complete_Function_Name_ReturnValue;   // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Spice_Vision_Data_EntryFound;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpiceVisionData                       CallFunc_Get_Spice_Vision_Data_SpiceVisionData;    // 0x00D0(0x0010)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTriggerSpiceVision_ReturnValue;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0108(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_SpiceVision_C_Try_Trigger_Spice_Vision) == 0x000008, "Wrong alignment on GA_SpiceVision_C_Try_Trigger_Spice_Vision");
static_assert(sizeof(GA_SpiceVision_C_Try_Trigger_Spice_Vision) == 0x0001E0, "Wrong size on GA_SpiceVision_C_Try_Trigger_Spice_Vision");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, SpiceState) == 0x000000, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::SpiceState' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, SpiceAddictionLevel) == 0x000004, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::SpiceAddictionLevel' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, Settings) == 0x000008, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::Settings' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, DataTable) == 0x000010, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::DataTable' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, TriggeredCueTag) == 0x000018, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::TriggeredCueTag' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, FunctionName) == 0x000020, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::FunctionName' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000088, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Array_Random_OutItem) == 0x000098, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Array_Random_OutIndex) == 0x0000A0, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Get_Complete_Function_Name_ReturnValue) == 0x0000A8, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Get_Complete_Function_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B8, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Get_Spice_Vision_Data_EntryFound) == 0x0000C8, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Get_Spice_Vision_Data_EntryFound' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_Get_Spice_Vision_Data_SpiceVisionData) == 0x0000D0, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_Get_Spice_Vision_Data_SpiceVisionData' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, K2Node_CreateDelegate_OutputDelegate) == 0x0000E0, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_CanTriggerSpiceVision_ReturnValue) == 0x0000F8, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_CanTriggerSpiceVision_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000100, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpiceVision_C_Try_Trigger_Spice_Vision, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000108, "Member 'GA_SpiceVision_C_Try_Trigger_Spice_Vision::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

}

