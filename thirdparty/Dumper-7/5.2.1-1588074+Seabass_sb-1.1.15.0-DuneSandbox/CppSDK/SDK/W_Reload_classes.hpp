#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Reload

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DuneSandbox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Reload.W_Reload_C
// 0x0060 (0x04D0 - 0x0470)
class UW_Reload_C final : public UReloadWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ReloadCanceled;                                    // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reload;                                            // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Elements;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PB_PROGRESSReload;                                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Targetting_1;                                      // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Targetting_2;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Targetting_3;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Targetting_4;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TXT_Reload;                                        // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DM_Progress;                                       // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void OnReloadEnd();
	void OnReloadCanceled();
	void OnReloadBegin(float InReloadDuration);
	void ExecuteUbergraph_W_Reload(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Reload_C">();
	}
	static class UW_Reload_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Reload_C>();
	}
};
static_assert(alignof(UW_Reload_C) == 0x000010, "Wrong alignment on UW_Reload_C");
static_assert(sizeof(UW_Reload_C) == 0x0004D0, "Wrong size on UW_Reload_C");
static_assert(offsetof(UW_Reload_C, UberGraphFrame) == 0x000470, "Member 'UW_Reload_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, ReloadCanceled) == 0x000478, "Member 'UW_Reload_C::ReloadCanceled' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, Reload) == 0x000480, "Member 'UW_Reload_C::Reload' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, Elements) == 0x000488, "Member 'UW_Reload_C::Elements' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, PB_PROGRESSReload) == 0x000490, "Member 'UW_Reload_C::PB_PROGRESSReload' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, Targetting_1) == 0x000498, "Member 'UW_Reload_C::Targetting_1' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, Targetting_2) == 0x0004A0, "Member 'UW_Reload_C::Targetting_2' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, Targetting_3) == 0x0004A8, "Member 'UW_Reload_C::Targetting_3' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, Targetting_4) == 0x0004B0, "Member 'UW_Reload_C::Targetting_4' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, TXT_Reload) == 0x0004B8, "Member 'UW_Reload_C::TXT_Reload' has a wrong offset!");
static_assert(offsetof(UW_Reload_C, DM_Progress) == 0x0004C0, "Member 'UW_Reload_C::DM_Progress' has a wrong offset!");

}

