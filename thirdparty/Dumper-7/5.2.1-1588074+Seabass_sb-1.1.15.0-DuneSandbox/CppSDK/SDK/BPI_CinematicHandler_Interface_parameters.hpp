#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CinematicHandler_Interface

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_CinematicHandler_Interface.BPI_CinematicHandler_Interface_C.Set Cinematic Mode
// 0x0001 (0x0001 - 0x0000)
struct BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode final
{
public:
	bool                                          CinematicMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode) == 0x000001, "Wrong alignment on BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode");
static_assert(sizeof(BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode) == 0x000001, "Wrong size on BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode");
static_assert(offsetof(BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode, CinematicMode) == 0x000000, "Member 'BPI_CinematicHandler_Interface_C_Set_Cinematic_Mode::CinematicMode' has a wrong offset!");

// Function BPI_CinematicHandler_Interface.BPI_CinematicHandler_Interface_C.FinishedCinematic
// 0x0008 (0x0008 - 0x0000)
struct BPI_CinematicHandler_Interface_C_FinishedCinematic final
{
public:
	class UObject*                                OwningObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CinematicHandler_Interface_C_FinishedCinematic) == 0x000008, "Wrong alignment on BPI_CinematicHandler_Interface_C_FinishedCinematic");
static_assert(sizeof(BPI_CinematicHandler_Interface_C_FinishedCinematic) == 0x000008, "Wrong size on BPI_CinematicHandler_Interface_C_FinishedCinematic");
static_assert(offsetof(BPI_CinematicHandler_Interface_C_FinishedCinematic, OwningObject) == 0x000000, "Member 'BPI_CinematicHandler_Interface_C_FinishedCinematic::OwningObject' has a wrong offset!");

// Function BPI_CinematicHandler_Interface.BPI_CinematicHandler_Interface_C.BeginCinematic
// 0x0018 (0x0018 - 0x0000)
struct BPI_CinematicHandler_Interface_C_BeginCinematic final
{
public:
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallingObject;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FreezeLevelStreaming;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CinematicHandler_Interface_C_BeginCinematic) == 0x000008, "Wrong alignment on BPI_CinematicHandler_Interface_C_BeginCinematic");
static_assert(sizeof(BPI_CinematicHandler_Interface_C_BeginCinematic) == 0x000018, "Wrong size on BPI_CinematicHandler_Interface_C_BeginCinematic");
static_assert(offsetof(BPI_CinematicHandler_Interface_C_BeginCinematic, LevelSequenceActor) == 0x000000, "Member 'BPI_CinematicHandler_Interface_C_BeginCinematic::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BPI_CinematicHandler_Interface_C_BeginCinematic, CallingObject) == 0x000008, "Member 'BPI_CinematicHandler_Interface_C_BeginCinematic::CallingObject' has a wrong offset!");
static_assert(offsetof(BPI_CinematicHandler_Interface_C_BeginCinematic, FreezeLevelStreaming) == 0x000010, "Member 'BPI_CinematicHandler_Interface_C_BeginCinematic::FreezeLevelStreaming' has a wrong offset!");

}

