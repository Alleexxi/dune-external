#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_EquipableAbility_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_EquipableAbility_Base.GA_EquipableAbility_Base_C.CacheStandardTargetingParams
// 0x0110 (0x0110 - 0x0000)
struct GA_EquipableAbility_Base_C_CacheStandardTargetingParams final
{
public:
	class FString                                 AbilityTuningCT;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	double                                        NewLocalVar;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeightSmall;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeightBig;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeightFar;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeightClose;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RadiusAtDist;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDist;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_4;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_4;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_5;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_5;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_6;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_6;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_7;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_7;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_8;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_8;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_8;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast;  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_1; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_2; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_3; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_4; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_5; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_6; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_7; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_8; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_MaxRange_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_Weight_Sticky_Duration_ImplicitCast; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_Weight_Sticky_Max_ImplicitCast; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_Weight_Sticky_Min_ImplicitCast; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_WeightSmallAngle_ImplicitCast; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_WeightBigAngle_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_WeightFarDistance_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_WeightCloseDistance_ImplicitCast; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Targeting_RadiusAtMaxDistance_ImplicitCast; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams) == 0x000008, "Wrong alignment on GA_EquipableAbility_Base_C_CacheStandardTargetingParams");
static_assert(sizeof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams) == 0x000110, "Wrong size on GA_EquipableAbility_Base_C_CacheStandardTargetingParams");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, AbilityTuningCT) == 0x000000, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::AbilityTuningCT' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, NewLocalVar) == 0x000010, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::NewLocalVar' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, WeightSmall) == 0x000018, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::WeightSmall' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, WeightBig) == 0x000020, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::WeightBig' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, WeightFar) == 0x000028, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::WeightFar' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, WeightClose) == 0x000030, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::WeightClose' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, RadiusAtDist) == 0x000038, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::RadiusAtDist' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, MaxDist) == 0x000040, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::MaxDist' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_GetAbilityLevel_ReturnValue) == 0x000048, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000058, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY) == 0x00005C, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000060, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x000064, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess) == 0x000068, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_1) == 0x000069, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x00006A, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x00006C, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x000070, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x000074, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_2) == 0x000078, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_3) == 0x000079, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_4) == 0x00007A, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_4' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_4) == 0x00007C, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_4' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_5) == 0x000080, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_5' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_5) == 0x000084, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_5' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_4) == 0x000088, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_5) == 0x000089, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_6) == 0x00008A, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_6' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_6) == 0x00008C, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_6' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_7) == 0x000090, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_7' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_7) == 0x000094, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_7' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_6) == 0x000098, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_7) == 0x000099, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutResult_8) == 0x00009A, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutResult_8' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_OutXY_8) == 0x00009C, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_OutXY_8' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_SwitchEnum_CmpSuccess_8) == 0x0000A0, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_SwitchEnum_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast) == 0x0000A4, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_1) == 0x0000A8, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_2) == 0x0000AC, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_3) == 0x0000B0, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_4) == 0x0000B4, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_5) == 0x0000B8, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_6) == 0x0000BC, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_7) == 0x0000C0, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_8) == 0x0000C4, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::CallFunc_EvaluateCurveTableRow_InXY_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_MaxRange_ImplicitCast) == 0x0000C8, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_MaxRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_Weight_Sticky_Duration_ImplicitCast) == 0x0000D0, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_Weight_Sticky_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_Weight_Sticky_Max_ImplicitCast) == 0x0000D8, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_Weight_Sticky_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_Weight_Sticky_Min_ImplicitCast) == 0x0000E0, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_Weight_Sticky_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_WeightSmallAngle_ImplicitCast) == 0x0000E8, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_WeightSmallAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_WeightBigAngle_ImplicitCast) == 0x0000F0, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_WeightBigAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_WeightFarDistance_ImplicitCast) == 0x0000F8, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_WeightFarDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_WeightCloseDistance_ImplicitCast) == 0x000100, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_WeightCloseDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_CacheStandardTargetingParams, K2Node_VariableSet_Targeting_RadiusAtMaxDistance_ImplicitCast) == 0x000108, "Member 'GA_EquipableAbility_Base_C_CacheStandardTargetingParams::K2Node_VariableSet_Targeting_RadiusAtMaxDistance_ImplicitCast' has a wrong offset!");

// Function GA_EquipableAbility_Base.GA_EquipableAbility_Base_C.GetStandardTargetingParams
// 0x0048 (0x0048 - 0x0000)
struct GA_EquipableAbility_Base_C_GetStandardTargetingParams final
{
public:
	double                                        OutRadiusatMaxRange;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutCloseWeight;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutFarWeight;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutSmallAngleWeight;                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutBigAngleWeight;                                 // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutStickyWeightMin;                                // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutStickyWeightMax;                                // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutStickyWeightDuration;                           // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutMaxRange;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EquipableAbility_Base_C_GetStandardTargetingParams) == 0x000008, "Wrong alignment on GA_EquipableAbility_Base_C_GetStandardTargetingParams");
static_assert(sizeof(GA_EquipableAbility_Base_C_GetStandardTargetingParams) == 0x000048, "Wrong size on GA_EquipableAbility_Base_C_GetStandardTargetingParams");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutRadiusatMaxRange) == 0x000000, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutRadiusatMaxRange' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutCloseWeight) == 0x000008, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutCloseWeight' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutFarWeight) == 0x000010, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutFarWeight' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutSmallAngleWeight) == 0x000018, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutSmallAngleWeight' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutBigAngleWeight) == 0x000020, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutBigAngleWeight' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutStickyWeightMin) == 0x000028, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutStickyWeightMin' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutStickyWeightMax) == 0x000030, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutStickyWeightMax' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutStickyWeightDuration) == 0x000038, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutStickyWeightDuration' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_GetStandardTargetingParams, OutMaxRange) == 0x000040, "Member 'GA_EquipableAbility_Base_C_GetStandardTargetingParams::OutMaxRange' has a wrong offset!");

// Function GA_EquipableAbility_Base.GA_EquipableAbility_Base_C.UnableToFindCurveTableEntry
// 0x0088 (0x0088 - 0x0000)
struct GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry final
{
public:
	class FString                                 CurveName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TableName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry) == 0x000008, "Wrong alignment on GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry");
static_assert(sizeof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry) == 0x000088, "Wrong size on GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CurveName) == 0x000000, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CurveName' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, TableName) == 0x000010, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::TableName' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_GetClassDisplayName_ReturnValue) == 0x000048, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000068, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000078, "Member 'GA_EquipableAbility_Base_C_UnableToFindCurveTableEntry::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

}

