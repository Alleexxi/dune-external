#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardButton

#include "Basic.hpp"

#include "W_StandardButton_classes.hpp"
#include "W_StandardButton_parameters.hpp"


namespace SDK
{

// Function W_StandardButton.W_StandardButton_C.SetDesiredSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 DesiredSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Clear                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::SetDesiredSize(const struct FVector2D& DesiredSize, bool Clear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "SetDesiredSize");

	Params::W_StandardButton_C_SetDesiredSize Parms{};

	Parms.DesiredSize = std::move(DesiredSize);
	Parms.Clear = Clear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardButton.W_StandardButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "PreConstruct");

	Params::W_StandardButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardButton.W_StandardButton_C.OnPressedStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UButtonWidget*                    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::OnPressedStateChanged(class UButtonWidget* Widget, bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "OnPressedStateChanged");

	Params::W_StandardButton_C_OnPressedStateChanged Parms{};

	Parms.Widget = Widget;
	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardButton.W_StandardButton_C.OnOverrideDesiredSize
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 DesiredSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::OnOverrideDesiredSize(const struct FVector2D& DesiredSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "OnOverrideDesiredSize");

	Params::W_StandardButton_C_OnOverrideDesiredSize Parms{};

	Parms.DesiredSize = std::move(DesiredSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardButton.W_StandardButton_C.OnHoveredStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UButtonWidget*                    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::OnHoveredStateChanged(class UButtonWidget* Widget, bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "OnHoveredStateChanged");

	Params::W_StandardButton_C_OnHoveredStateChanged Parms{};

	Parms.Widget = Widget;
	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardButton.W_StandardButton_C.OnClearOverrideDesiredSize
// (Event, Public, BlueprintEvent)

void UW_StandardButton_C::OnClearOverrideDesiredSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "OnClearOverrideDesiredSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StandardButton.W_StandardButton_C.OnButtonStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UButtonWidget*                    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EButtonWidgetState                      bNewButtonState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::OnButtonStateChanged(class UButtonWidget* Widget, EButtonWidgetState bNewButtonState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "OnButtonStateChanged");

	Params::W_StandardButton_C_OnButtonStateChanged Parms{};

	Parms.Widget = Widget;
	Parms.bNewButtonState = bNewButtonState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StandardButton.W_StandardButton_C.Get Default Button Material
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstance**               Material                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::Get_Default_Button_Material(class UMaterialInstance** Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "Get Default Button Material");

	Params::W_StandardButton_C_Get_Default_Button_Material Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Material != nullptr)
		*Material = Parms.Material;
}


// Function W_StandardButton.W_StandardButton_C.Get Default Button Glow Color
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor*                    Glow_Color                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::Get_Default_Button_Glow_Color(struct FLinearColor* Glow_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "Get Default Button Glow Color");

	Params::W_StandardButton_C_Get_Default_Button_Glow_Color Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Glow_Color != nullptr)
		*Glow_Color = std::move(Parms.Glow_Color);
}


// Function W_StandardButton.W_StandardButton_C.ExecuteUbergraph_W_StandardButton
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StandardButton_C::ExecuteUbergraph_W_StandardButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StandardButton_C", "ExecuteUbergraph_W_StandardButton");

	Params::W_StandardButton_C_ExecuteUbergraph_W_StandardButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

