#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_CIGC_UT_Cylinder

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AB_CIGC_UT_Cylinder.AB_CIGC_UT_Cylinder_C.ExecuteUbergraph_AB_CIGC_UT_Cylinder
// 0x0040 (0x0040 - 0x0000)
struct AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Delta_Time_X_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder) == 0x000008, "Wrong alignment on AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder");
static_assert(sizeof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder) == 0x000040, "Wrong size on AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, EntryPoint) == 0x000000, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, CallFunc_FInterpTo_ReturnValue) == 0x000018, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, CallFunc_FInterpTo_ReturnValue_1) == 0x000020, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder, K2Node_VariableSet_Delta_Time_X_ImplicitCast) == 0x000038, "Member 'AB_CIGC_UT_Cylinder_C_ExecuteUbergraph_AB_CIGC_UT_Cylinder::K2Node_VariableSet_Delta_Time_X_ImplicitCast' has a wrong offset!");

// Function AB_CIGC_UT_Cylinder.AB_CIGC_UT_Cylinder_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_CIGC_UT_Cylinder_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_CIGC_UT_Cylinder.AB_CIGC_UT_Cylinder_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_CIGC_UT_Cylinder_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_CIGC_UT_Cylinder_C_AnimGraph) == 0x000008, "Wrong alignment on AB_CIGC_UT_Cylinder_C_AnimGraph");
static_assert(sizeof(AB_CIGC_UT_Cylinder_C_AnimGraph) == 0x000010, "Wrong size on AB_CIGC_UT_Cylinder_C_AnimGraph");
static_assert(offsetof(AB_CIGC_UT_Cylinder_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AB_CIGC_UT_Cylinder_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

