#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeathStillPuzzle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_MidCircleStates_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_InnerCircleStates_structs.hpp"
#include "E_OuterCircleStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DeathStillPuzzle.BP_DeathStillPuzzle_C
// 0x0228 (0x0578 - 0x0350)
class ABP_DeathStillPuzzle_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UJourneyStoryEventComponent*            JourneyStoryEvent;                                 // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFcAudioComponent*                      FcAudio;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM__SM_Env_Arch_Frem_Sietch_DeathStillPuzzle_BloodPlane; // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InnerInteract4;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InnerInteract3;                                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InnerInteract2;                                    // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM__SM_Env_Arch_Frem_Sietch_DeathStillPuzzle_01;   // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract8;                                      // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract7;                                      // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract6;                                      // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract5;                                      // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract7;                                    // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract6;                                    // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract5;                                    // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract4;                                    // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract3;                                    // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract2;                                    // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract1;                                    // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OuterInteract;                                     // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract4;                                      // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract3;                                      // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract2;                                      // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MidInteract1;                                      // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InnerInteract1;                                    // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OuterCircle;                                       // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableBaseComponent*             InteractionOuterCircle;                            // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MidCircle;                                         // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableBaseComponent*             InteractionMidCircle;                              // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InnerCircle;                                       // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableBaseComponent*             InteractionInnerCircle;                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BloodVFX_BloodVFXOpacity_0AB61F274D1587B63AFABEB665F1FFB5; // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BloodVFX__Direction_0AB61F274D1587B63AFABEB665F1FFB5; // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BloodVFX;                                          // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         tRotateOuterCircle_Alpha_2870208D4465B73EF8180395403B6C9E; // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            tRotateOuterCircle__Direction_2870208D4465B73EF8180395403B6C9E; // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465[0x3];                                      // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     tRotateOuterCircle;                                // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         tRotateMidCircle_Alpha_64A3F37B49F75DBF9D31749806B77B56; // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            tRotateMidCircle__Direction_64A3F37B49F75DBF9D31749806B77B56; // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     tRotateMidCircle;                                  // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         tRotateInnerCircle_Alpha_BA1F88C946D445DC88C653934EC5A789; // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            tRotateInnerCircle__Direction_BA1F88C946D445DC88C653934EC5A789; // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     tRotateInnerCircle;                                // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InnerCircleCurrentRotation;                        // 0x0490(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               MidCircleCurrentRotation;                          // 0x04A8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               OuterCircleCurrentRotation;                        // 0x04C0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        InnerCircleRotationRate;                           // 0x04D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotating_;                                       // 0x04E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MidCircleRotationRate;                             // 0x04E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OuterCircleRotationRate;                           // 0x04F0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CompleteFlow_;                                     // 0x04F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	E_InnerCircleStates                           InnerCircleState;                                  // 0x04F9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	E_MidCircleStates                             MidCircleState;                                    // 0x04FA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	E_OuterCircleStates                           OuterCircleState;                                  // 0x04FB(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFcAudioEvent>           Audio_Interact;                                    // 0x0500(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UFcAudioEvent*                          Fc_Audio_Interact;                                 // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UFcAudioEvent>           Audio_BloodFlow;                                   // 0x0538(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UFcAudioEvent*                          Fc_Audio_BloodFlow;                                // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_SietchManager_C*                    SietchManager_Ref;                                 // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void tRotateOuterCircle__UpdateFunc();
	void tRotateOuterCircle__FinishedFunc();
	void tRotateMidCircle__UpdateFunc();
	void tRotateMidCircle__FinishedFunc();
	void tRotateInnerCircle__UpdateFunc();
	void tRotateInnerCircle__FinishedFunc();
	void TriggerVFX();
	void RotateOuterCircle(const struct FRotator& TargetRotation);
	void RotateMidCircle(const struct FRotator& TargetRotation);
	void RotateInnerCircle(const struct FRotator& TargetRotation);
	void ReceiveBeginPlay();
	void OnRep_OuterCircleState();
	void OnRep_MidCircleState();
	void OnRep_InnerCircleState();
	void OnRep_CompleteFlow_();
	void OnLoaded_9C30ECFE48D6635FA5F76290FB9DBE06(class UObject* Loaded);
	void OnLoaded_2C1765F14C54D8E72AD514845D50C925(class UObject* Loaded);
	void InitialSetup();
	void InitializeVFX();
	void ExecuteUbergraph_BP_DeathStillPuzzle(int32 EntryPoint);
	void CheckCompletion();
	class UJourneyStoryEventComponent* BP_GetJourneyStoryEventComponent();
	void BndEvt__BP_DeathStillPuzzle_InteractionOuterCircle_K2Node_ComponentBoundEvent_2_NotifyOnInteract__DelegateSignature(class ADuneCharacter* DuneCharacter, const class UInteraction* Interaction);
	void BndEvt__BP_DeathStillPuzzle_InteractionMidCircle_K2Node_ComponentBoundEvent_1_NotifyOnInteract__DelegateSignature(class ADuneCharacter* DuneCharacter, const class UInteraction* Interaction);
	void BndEvt__BP_DeathStillPuzzle_InteractionInnerCircle_K2Node_ComponentBoundEvent_0_NotifyOnInteract__DelegateSignature(class ADuneCharacter* DuneCharacter, const class UInteraction* Interaction);
	void BloodVFX__UpdateFunc();
	void BloodVFX__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DeathStillPuzzle_C">();
	}
	static class ABP_DeathStillPuzzle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DeathStillPuzzle_C>();
	}
};
static_assert(alignof(ABP_DeathStillPuzzle_C) == 0x000008, "Wrong alignment on ABP_DeathStillPuzzle_C");
static_assert(sizeof(ABP_DeathStillPuzzle_C) == 0x000578, "Wrong size on ABP_DeathStillPuzzle_C");
static_assert(offsetof(ABP_DeathStillPuzzle_C, UberGraphFrame) == 0x000350, "Member 'ABP_DeathStillPuzzle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, JourneyStoryEvent) == 0x000358, "Member 'ABP_DeathStillPuzzle_C::JourneyStoryEvent' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, FcAudio) == 0x000360, "Member 'ABP_DeathStillPuzzle_C::FcAudio' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, SM__SM_Env_Arch_Frem_Sietch_DeathStillPuzzle_BloodPlane) == 0x000368, "Member 'ABP_DeathStillPuzzle_C::SM__SM_Env_Arch_Frem_Sietch_DeathStillPuzzle_BloodPlane' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerInteract4) == 0x000370, "Member 'ABP_DeathStillPuzzle_C::InnerInteract4' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerInteract3) == 0x000378, "Member 'ABP_DeathStillPuzzle_C::InnerInteract3' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerInteract2) == 0x000380, "Member 'ABP_DeathStillPuzzle_C::InnerInteract2' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, SM__SM_Env_Arch_Frem_Sietch_DeathStillPuzzle_01) == 0x000388, "Member 'ABP_DeathStillPuzzle_C::SM__SM_Env_Arch_Frem_Sietch_DeathStillPuzzle_01' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract8) == 0x000390, "Member 'ABP_DeathStillPuzzle_C::MidInteract8' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract7) == 0x000398, "Member 'ABP_DeathStillPuzzle_C::MidInteract7' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract6) == 0x0003A0, "Member 'ABP_DeathStillPuzzle_C::MidInteract6' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract5) == 0x0003A8, "Member 'ABP_DeathStillPuzzle_C::MidInteract5' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract7) == 0x0003B0, "Member 'ABP_DeathStillPuzzle_C::OuterInteract7' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract6) == 0x0003B8, "Member 'ABP_DeathStillPuzzle_C::OuterInteract6' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract5) == 0x0003C0, "Member 'ABP_DeathStillPuzzle_C::OuterInteract5' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract4) == 0x0003C8, "Member 'ABP_DeathStillPuzzle_C::OuterInteract4' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract3) == 0x0003D0, "Member 'ABP_DeathStillPuzzle_C::OuterInteract3' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract2) == 0x0003D8, "Member 'ABP_DeathStillPuzzle_C::OuterInteract2' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract1) == 0x0003E0, "Member 'ABP_DeathStillPuzzle_C::OuterInteract1' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterInteract) == 0x0003E8, "Member 'ABP_DeathStillPuzzle_C::OuterInteract' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract4) == 0x0003F0, "Member 'ABP_DeathStillPuzzle_C::MidInteract4' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract3) == 0x0003F8, "Member 'ABP_DeathStillPuzzle_C::MidInteract3' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract2) == 0x000400, "Member 'ABP_DeathStillPuzzle_C::MidInteract2' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidInteract1) == 0x000408, "Member 'ABP_DeathStillPuzzle_C::MidInteract1' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerInteract1) == 0x000410, "Member 'ABP_DeathStillPuzzle_C::InnerInteract1' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterCircle) == 0x000418, "Member 'ABP_DeathStillPuzzle_C::OuterCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InteractionOuterCircle) == 0x000420, "Member 'ABP_DeathStillPuzzle_C::InteractionOuterCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidCircle) == 0x000428, "Member 'ABP_DeathStillPuzzle_C::MidCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InteractionMidCircle) == 0x000430, "Member 'ABP_DeathStillPuzzle_C::InteractionMidCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerCircle) == 0x000438, "Member 'ABP_DeathStillPuzzle_C::InnerCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InteractionInnerCircle) == 0x000440, "Member 'ABP_DeathStillPuzzle_C::InteractionInnerCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, DefaultSceneRoot) == 0x000448, "Member 'ABP_DeathStillPuzzle_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, BloodVFX_BloodVFXOpacity_0AB61F274D1587B63AFABEB665F1FFB5) == 0x000450, "Member 'ABP_DeathStillPuzzle_C::BloodVFX_BloodVFXOpacity_0AB61F274D1587B63AFABEB665F1FFB5' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, BloodVFX__Direction_0AB61F274D1587B63AFABEB665F1FFB5) == 0x000454, "Member 'ABP_DeathStillPuzzle_C::BloodVFX__Direction_0AB61F274D1587B63AFABEB665F1FFB5' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, BloodVFX) == 0x000458, "Member 'ABP_DeathStillPuzzle_C::BloodVFX' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateOuterCircle_Alpha_2870208D4465B73EF8180395403B6C9E) == 0x000460, "Member 'ABP_DeathStillPuzzle_C::tRotateOuterCircle_Alpha_2870208D4465B73EF8180395403B6C9E' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateOuterCircle__Direction_2870208D4465B73EF8180395403B6C9E) == 0x000464, "Member 'ABP_DeathStillPuzzle_C::tRotateOuterCircle__Direction_2870208D4465B73EF8180395403B6C9E' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateOuterCircle) == 0x000468, "Member 'ABP_DeathStillPuzzle_C::tRotateOuterCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateMidCircle_Alpha_64A3F37B49F75DBF9D31749806B77B56) == 0x000470, "Member 'ABP_DeathStillPuzzle_C::tRotateMidCircle_Alpha_64A3F37B49F75DBF9D31749806B77B56' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateMidCircle__Direction_64A3F37B49F75DBF9D31749806B77B56) == 0x000474, "Member 'ABP_DeathStillPuzzle_C::tRotateMidCircle__Direction_64A3F37B49F75DBF9D31749806B77B56' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateMidCircle) == 0x000478, "Member 'ABP_DeathStillPuzzle_C::tRotateMidCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateInnerCircle_Alpha_BA1F88C946D445DC88C653934EC5A789) == 0x000480, "Member 'ABP_DeathStillPuzzle_C::tRotateInnerCircle_Alpha_BA1F88C946D445DC88C653934EC5A789' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateInnerCircle__Direction_BA1F88C946D445DC88C653934EC5A789) == 0x000484, "Member 'ABP_DeathStillPuzzle_C::tRotateInnerCircle__Direction_BA1F88C946D445DC88C653934EC5A789' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, tRotateInnerCircle) == 0x000488, "Member 'ABP_DeathStillPuzzle_C::tRotateInnerCircle' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerCircleCurrentRotation) == 0x000490, "Member 'ABP_DeathStillPuzzle_C::InnerCircleCurrentRotation' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidCircleCurrentRotation) == 0x0004A8, "Member 'ABP_DeathStillPuzzle_C::MidCircleCurrentRotation' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterCircleCurrentRotation) == 0x0004C0, "Member 'ABP_DeathStillPuzzle_C::OuterCircleCurrentRotation' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerCircleRotationRate) == 0x0004D8, "Member 'ABP_DeathStillPuzzle_C::InnerCircleRotationRate' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, IsRotating_) == 0x0004E0, "Member 'ABP_DeathStillPuzzle_C::IsRotating_' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidCircleRotationRate) == 0x0004E8, "Member 'ABP_DeathStillPuzzle_C::MidCircleRotationRate' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterCircleRotationRate) == 0x0004F0, "Member 'ABP_DeathStillPuzzle_C::OuterCircleRotationRate' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, CompleteFlow_) == 0x0004F8, "Member 'ABP_DeathStillPuzzle_C::CompleteFlow_' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, InnerCircleState) == 0x0004F9, "Member 'ABP_DeathStillPuzzle_C::InnerCircleState' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, MidCircleState) == 0x0004FA, "Member 'ABP_DeathStillPuzzle_C::MidCircleState' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, OuterCircleState) == 0x0004FB, "Member 'ABP_DeathStillPuzzle_C::OuterCircleState' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, Audio_Interact) == 0x000500, "Member 'ABP_DeathStillPuzzle_C::Audio_Interact' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, Fc_Audio_Interact) == 0x000530, "Member 'ABP_DeathStillPuzzle_C::Fc_Audio_Interact' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, Audio_BloodFlow) == 0x000538, "Member 'ABP_DeathStillPuzzle_C::Audio_BloodFlow' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, Fc_Audio_BloodFlow) == 0x000568, "Member 'ABP_DeathStillPuzzle_C::Fc_Audio_BloodFlow' has a wrong offset!");
static_assert(offsetof(ABP_DeathStillPuzzle_C, SietchManager_Ref) == 0x000570, "Member 'ABP_DeathStillPuzzle_C::SietchManager_Ref' has a wrong offset!");

}

