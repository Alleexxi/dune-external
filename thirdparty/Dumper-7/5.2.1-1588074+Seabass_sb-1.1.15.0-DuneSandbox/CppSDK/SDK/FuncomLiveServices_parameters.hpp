#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FuncomLiveServices

#include "Basic.hpp"

#include "FuncomLiveServices_structs.hpp"


namespace SDK::Params
{

// Function FuncomLiveServices.ConnectionManager.Close
// 0x0004 (0x0004 - 0x0000)
struct ConnectionManager_Close final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConnectionManager_Close) == 0x000004, "Wrong alignment on ConnectionManager_Close");
static_assert(sizeof(ConnectionManager_Close) == 0x000004, "Wrong size on ConnectionManager_Close");
static_assert(offsetof(ConnectionManager_Close, ReturnValue) == 0x000000, "Member 'ConnectionManager_Close::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.ConnectionManager.Connect
// 0x0078 (0x0078 - 0x0000)
struct ConnectionManager_Connect final
{
public:
	struct FConnectionSettings                    ConnectionSettings;                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ConnectionManager_Connect) == 0x000008, "Wrong alignment on ConnectionManager_Connect");
static_assert(sizeof(ConnectionManager_Connect) == 0x000078, "Wrong size on ConnectionManager_Connect");
static_assert(offsetof(ConnectionManager_Connect, ConnectionSettings) == 0x000000, "Member 'ConnectionManager_Connect::ConnectionSettings' has a wrong offset!");
static_assert(offsetof(ConnectionManager_Connect, ReturnValue) == 0x000070, "Member 'ConnectionManager_Connect::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.ConnectionManager.Init
// 0x0004 (0x0004 - 0x0000)
struct ConnectionManager_Init final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ConnectionManager_Init) == 0x000004, "Wrong alignment on ConnectionManager_Init");
static_assert(sizeof(ConnectionManager_Init) == 0x000004, "Wrong size on ConnectionManager_Init");
static_assert(offsetof(ConnectionManager_Init, ReturnValue) == 0x000000, "Member 'ConnectionManager_Init::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.ConnectionManager.SendMessage
// 0x0018 (0x0018 - 0x0000)
struct ConnectionManager_SendMessage final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ConnectionManager_SendMessage) == 0x000008, "Wrong alignment on ConnectionManager_SendMessage");
static_assert(sizeof(ConnectionManager_SendMessage) == 0x000018, "Wrong size on ConnectionManager_SendMessage");
static_assert(offsetof(ConnectionManager_SendMessage, Data) == 0x000000, "Member 'ConnectionManager_SendMessage::Data' has a wrong offset!");
static_assert(offsetof(ConnectionManager_SendMessage, ReturnValue) == 0x000010, "Member 'ConnectionManager_SendMessage::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.Close
// 0x0004 (0x0004 - 0x0000)
struct WebSocketConnectionManager_Close final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocketConnectionManager_Close) == 0x000004, "Wrong alignment on WebSocketConnectionManager_Close");
static_assert(sizeof(WebSocketConnectionManager_Close) == 0x000004, "Wrong size on WebSocketConnectionManager_Close");
static_assert(offsetof(WebSocketConnectionManager_Close, ReturnValue) == 0x000000, "Member 'WebSocketConnectionManager_Close::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.Connect
// 0x0078 (0x0078 - 0x0000)
struct WebSocketConnectionManager_Connect final
{
public:
	struct FConnectionSettings                    ConnectionSettings;                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WebSocketConnectionManager_Connect) == 0x000008, "Wrong alignment on WebSocketConnectionManager_Connect");
static_assert(sizeof(WebSocketConnectionManager_Connect) == 0x000078, "Wrong size on WebSocketConnectionManager_Connect");
static_assert(offsetof(WebSocketConnectionManager_Connect, ConnectionSettings) == 0x000000, "Member 'WebSocketConnectionManager_Connect::ConnectionSettings' has a wrong offset!");
static_assert(offsetof(WebSocketConnectionManager_Connect, ReturnValue) == 0x000070, "Member 'WebSocketConnectionManager_Connect::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.Init
// 0x0004 (0x0004 - 0x0000)
struct WebSocketConnectionManager_Init final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocketConnectionManager_Init) == 0x000004, "Wrong alignment on WebSocketConnectionManager_Init");
static_assert(sizeof(WebSocketConnectionManager_Init) == 0x000004, "Wrong size on WebSocketConnectionManager_Init");
static_assert(offsetof(WebSocketConnectionManager_Init, ReturnValue) == 0x000000, "Member 'WebSocketConnectionManager_Init::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.OnConnectionClosed
// 0x0020 (0x0020 - 0x0000)
struct WebSocketConnectionManager_OnConnectionClosed final
{
public:
	int32                                         StatusCode;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasClean;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WebSocketConnectionManager_OnConnectionClosed) == 0x000008, "Wrong alignment on WebSocketConnectionManager_OnConnectionClosed");
static_assert(sizeof(WebSocketConnectionManager_OnConnectionClosed) == 0x000020, "Wrong size on WebSocketConnectionManager_OnConnectionClosed");
static_assert(offsetof(WebSocketConnectionManager_OnConnectionClosed, StatusCode) == 0x000000, "Member 'WebSocketConnectionManager_OnConnectionClosed::StatusCode' has a wrong offset!");
static_assert(offsetof(WebSocketConnectionManager_OnConnectionClosed, Reason) == 0x000008, "Member 'WebSocketConnectionManager_OnConnectionClosed::Reason' has a wrong offset!");
static_assert(offsetof(WebSocketConnectionManager_OnConnectionClosed, bWasClean) == 0x000018, "Member 'WebSocketConnectionManager_OnConnectionClosed::bWasClean' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.OnConnectionError
// 0x0010 (0x0010 - 0x0000)
struct WebSocketConnectionManager_OnConnectionError final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocketConnectionManager_OnConnectionError) == 0x000008, "Wrong alignment on WebSocketConnectionManager_OnConnectionError");
static_assert(sizeof(WebSocketConnectionManager_OnConnectionError) == 0x000010, "Wrong size on WebSocketConnectionManager_OnConnectionError");
static_assert(offsetof(WebSocketConnectionManager_OnConnectionError, Error) == 0x000000, "Member 'WebSocketConnectionManager_OnConnectionError::Error' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.OnReceiveData
// 0x0010 (0x0010 - 0x0000)
struct WebSocketConnectionManager_OnReceiveData final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebSocketConnectionManager_OnReceiveData) == 0x000008, "Wrong alignment on WebSocketConnectionManager_OnReceiveData");
static_assert(sizeof(WebSocketConnectionManager_OnReceiveData) == 0x000010, "Wrong size on WebSocketConnectionManager_OnReceiveData");
static_assert(offsetof(WebSocketConnectionManager_OnReceiveData, Data) == 0x000000, "Member 'WebSocketConnectionManager_OnReceiveData::Data' has a wrong offset!");

// Function FuncomLiveServices.WebSocketConnectionManager.SendMessage
// 0x0018 (0x0018 - 0x0000)
struct WebSocketConnectionManager_SendMessage final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WebSocketConnectionManager_SendMessage) == 0x000008, "Wrong alignment on WebSocketConnectionManager_SendMessage");
static_assert(sizeof(WebSocketConnectionManager_SendMessage) == 0x000018, "Wrong size on WebSocketConnectionManager_SendMessage");
static_assert(offsetof(WebSocketConnectionManager_SendMessage, Data) == 0x000000, "Member 'WebSocketConnectionManager_SendMessage::Data' has a wrong offset!");
static_assert(offsetof(WebSocketConnectionManager_SendMessage, ReturnValue) == 0x000010, "Member 'WebSocketConnectionManager_SendMessage::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.AddFriendCallbackProxy.CheckFriendRequestsFromURL
// 0x0010 (0x0010 - 0x0000)
struct AddFriendCallbackProxy_CheckFriendRequestsFromURL final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAddFriendCallbackProxy*                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AddFriendCallbackProxy_CheckFriendRequestsFromURL) == 0x000008, "Wrong alignment on AddFriendCallbackProxy_CheckFriendRequestsFromURL");
static_assert(sizeof(AddFriendCallbackProxy_CheckFriendRequestsFromURL) == 0x000010, "Wrong size on AddFriendCallbackProxy_CheckFriendRequestsFromURL");
static_assert(offsetof(AddFriendCallbackProxy_CheckFriendRequestsFromURL, PlayerController) == 0x000000, "Member 'AddFriendCallbackProxy_CheckFriendRequestsFromURL::PlayerController' has a wrong offset!");
static_assert(offsetof(AddFriendCallbackProxy_CheckFriendRequestsFromURL, ReturnValue) == 0x000008, "Member 'AddFriendCallbackProxy_CheckFriendRequestsFromURL::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.LoginCallbackProxy.AutoLogin
// 0x0018 (0x0018 - 0x0000)
struct LoginCallbackProxy_AutoLogin final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoginCallbackProxy*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoginCallbackProxy_AutoLogin) == 0x000008, "Wrong alignment on LoginCallbackProxy_AutoLogin");
static_assert(sizeof(LoginCallbackProxy_AutoLogin) == 0x000018, "Wrong size on LoginCallbackProxy_AutoLogin");
static_assert(offsetof(LoginCallbackProxy_AutoLogin, WorldContextObject) == 0x000000, "Member 'LoginCallbackProxy_AutoLogin::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_AutoLogin, PlayerController) == 0x000008, "Member 'LoginCallbackProxy_AutoLogin::PlayerController' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_AutoLogin, ReturnValue) == 0x000010, "Member 'LoginCallbackProxy_AutoLogin::ReturnValue' has a wrong offset!");

// Function FuncomLiveServices.LoginCallbackProxy.Login
// 0x0048 (0x0048 - 0x0000)
struct LoginCallbackProxy_Login final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Type;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoginCallbackProxy*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoginCallbackProxy_Login) == 0x000008, "Wrong alignment on LoginCallbackProxy_Login");
static_assert(sizeof(LoginCallbackProxy_Login) == 0x000048, "Wrong size on LoginCallbackProxy_Login");
static_assert(offsetof(LoginCallbackProxy_Login, WorldContextObject) == 0x000000, "Member 'LoginCallbackProxy_Login::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_Login, PlayerController) == 0x000008, "Member 'LoginCallbackProxy_Login::PlayerController' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_Login, Type) == 0x000010, "Member 'LoginCallbackProxy_Login::Type' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_Login, ID) == 0x000020, "Member 'LoginCallbackProxy_Login::ID' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_Login, Token) == 0x000030, "Member 'LoginCallbackProxy_Login::Token' has a wrong offset!");
static_assert(offsetof(LoginCallbackProxy_Login, ReturnValue) == 0x000040, "Member 'LoginCallbackProxy_Login::ReturnValue' has a wrong offset!");

}

