#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightConeSpotlight_Component

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.SetLightValues
// 0x0048 (0x0048 - 0x0000)
struct BP_LightConeSpotlight_Component_C_SetLightValues final
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxLightIntensity;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AttenuationRadius;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InnerConeAngle;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OuterConeAngle;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetInnerConeAngle_NewInnerConeAngle_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOuterConeAngle_NewOuterConeAngle_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightConeSpotlight_Component_C_SetLightValues) == 0x000008, "Wrong alignment on BP_LightConeSpotlight_Component_C_SetLightValues");
static_assert(sizeof(BP_LightConeSpotlight_Component_C_SetLightValues) == 0x000048, "Wrong size on BP_LightConeSpotlight_Component_C_SetLightValues");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, SpotLight) == 0x000000, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::SpotLight' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, LightColor) == 0x000008, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::LightColor' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, MaxLightIntensity) == 0x000018, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::MaxLightIntensity' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, AttenuationRadius) == 0x000020, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, InnerConeAngle) == 0x000028, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::InnerConeAngle' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, OuterConeAngle) == 0x000030, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::OuterConeAngle' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000038, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast) == 0x00003C, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, CallFunc_SetInnerConeAngle_NewInnerConeAngle_ImplicitCast) == 0x000040, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::CallFunc_SetInnerConeAngle_NewInnerConeAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetLightValues, CallFunc_SetOuterConeAngle_NewOuterConeAngle_ImplicitCast) == 0x000044, "Member 'BP_LightConeSpotlight_Component_C_SetLightValues::CallFunc_SetOuterConeAngle_NewOuterConeAngle_ImplicitCast' has a wrong offset!");

// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.SetEmissiveMaterialValues
// 0x0060 (0x0060 - 0x0000)
struct BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues final
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    StaticMesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         EmissiveMaterialIndex;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EmissiveColorParameterName;                        // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EmissiveIntensityParameterName;                    // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxEmissiveIntensity;                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_MaxEmissiveIntensity_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues) == 0x000008, "Wrong alignment on BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues");
static_assert(sizeof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues) == 0x000060, "Wrong size on BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, SpotLight) == 0x000000, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::SpotLight' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, StaticMesh) == 0x000008, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, EmissiveMaterialIndex) == 0x000010, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::EmissiveMaterialIndex' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, EmissiveColorParameterName) == 0x000014, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::EmissiveColorParameterName' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, EmissiveIntensityParameterName) == 0x00001C, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::EmissiveIntensityParameterName' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, MaxEmissiveIntensity) == 0x000028, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::MaxEmissiveIntensity' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, DynamicMaterialInstance) == 0x000030, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, CallFunc_GetLightColor_ReturnValue) == 0x000038, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000050, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues, K2Node_FunctionResult_MaxEmissiveIntensity_ImplicitCast) == 0x000058, "Member 'BP_LightConeSpotlight_Component_C_SetEmissiveMaterialValues::K2Node_FunctionResult_MaxEmissiveIntensity_ImplicitCast' has a wrong offset!");

// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.SetAtmosphericMaterialValues
// 0x0090 (0x0090 - 0x0000)
struct BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues final
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    SpotlightConeMesh;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        AtmosphericIntensity;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AtmosphericSourceIntensity;                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnOffLightConeDuringDay_;                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LengthOfTransition;                                // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HourShift;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumDayIntensity;                               // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues) == 0x000008, "Wrong alignment on BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues");
static_assert(sizeof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues) == 0x000090, "Wrong size on BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, SpotLight) == 0x000000, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::SpotLight' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, SpotlightConeMesh) == 0x000008, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::SpotlightConeMesh' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, AtmosphericIntensity) == 0x000010, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::AtmosphericIntensity' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, AtmosphericSourceIntensity) == 0x000018, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::AtmosphericSourceIntensity' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, TurnOffLightConeDuringDay_) == 0x000020, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::TurnOffLightConeDuringDay_' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, LengthOfTransition) == 0x000028, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::LengthOfTransition' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, HourShift) == 0x000030, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::HourShift' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, MinimumDayIntensity) == 0x000038, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::MinimumDayIntensity' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, DynamicMaterialInstance) == 0x000040, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_GetLightColor_ReturnValue) == 0x000050, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000060, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000070, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000074, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000078, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00007C, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000088, "Member 'BP_LightConeSpotlight_Component_C_SetAtmosphericMaterialValues::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");

// Function BP_LightConeSpotlight_Component.BP_LightConeSpotlight_Component_C.ScaleSpotlightConeMeshToFitSpotlight
// 0x0068 (0x0068 - 0x0000)
struct BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight final
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Spotlight_Cone_Mesh;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegTan_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegTan_A_ImplicitCast;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight) == 0x000008, "Wrong alignment on BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight");
static_assert(sizeof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight) == 0x000068, "Wrong size on BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, SpotLight) == 0x000000, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::SpotLight' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, Spotlight_Cone_Mesh) == 0x000008, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::Spotlight_Cone_Mesh' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_DegTan_ReturnValue) == 0x000018, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight, CallFunc_DegTan_A_ImplicitCast) == 0x000060, "Member 'BP_LightConeSpotlight_Component_C_ScaleSpotlightConeMeshToFitSpotlight::CallFunc_DegTan_A_ImplicitCast' has a wrong offset!");

}

